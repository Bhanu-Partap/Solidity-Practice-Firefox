{
	"id": "057a900c15a849d6575a5089a733c112",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"Tokeny Project/Compliance/modular/ModularCompliance.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.17;\r\n\r\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\r\nimport \"https://github.com/TokenySolutions/T-REX/blob/main/contracts/token/IToken.sol\";\r\nimport \"./IModularCompliance.sol\";\r\nimport \"./MCStorage.sol\";\r\nimport \"./Modules/IModule.sol\";\r\n\r\n\r\ncontract ModularCompliance is IModularCompliance, OwnableUpgradeable, MCStorage {\r\n\r\n// modifiers\r\n    modifier onlyToken() {\r\n        require(msg.sender == _tokenBound, \"error : this address is not a token bound to the compliance contract\");\r\n        _;\r\n    }\r\n\r\n    function init() external initializer {\r\n        __Ownable_init();\r\n    }\r\n\r\n    function bindToken(address _token) external override {\r\n        require(owner() == msg.sender || (_tokenBound == address(0) && msg.sender == _token),\r\n        \"only owner or token can call\");\r\n        require(_token != address(0), \"invalid argument - zero address\");\r\n        _tokenBound = _token; //here the _tokenBound is a variable that stores the address of the token w.r.t identity\r\n        emit TokenBound(_token);\r\n    }\r\n\r\n    function unbindToken(address _token) external override {\r\n        require(owner() == msg.sender || msg.sender == _token , \"only owner or token can call\");\r\n        require(_token == _tokenBound, \"This token is not bound\");\r\n        require(_token != address(0), \"invalid argument - zero address\");\r\n        delete _tokenBound;\r\n        emit TokenUnbound(_token);\r\n    }\r\n\r\n    function addModule(address _module) external override onlyOwner {\r\n        require(_module != address(0), \"invalid argument - zero address\");\r\n        require(!_moduleBound[_module], \"module already bound\");\r\n        require(_modules.length <= 24, \"cannot add more than 25 modules\");\r\n        IModule(_module).bindCompliance(address(this));\r\n        _modules.push(_module);\r\n        _moduleBound[_module] = true;\r\n        emit ModuleAdded(_module);\r\n    }\r\n\r\n    function removeModule(address _module) external override onlyOwner {\r\n        require(_module != address(0), \"invalid argument - zero address\");\r\n        require(_moduleBound[_module], \"module not bound\");\r\n        uint256 length = _modules.length;\r\n        for (uint256 i = 0; i < length; i++) {\r\n            if (_modules[i] == _module) {\r\n                IModule(_module).unbindCompliance(address(this));\r\n                _modules[i] = _modules[length - 1];\r\n                _modules.pop();\r\n                _moduleBound[_module] = false;\r\n                emit ModuleRemoved(_module);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    function transferred(address _from, address _to, uint256 _value) external onlyToken override {\r\n        require(\r\n            _from != address(0)\r\n            && _to != address(0)\r\n        , \"invalid argument - zero address\");\r\n        require(_value > 0, \"invalid argument - no value transfer\");\r\n        uint256 length = _modules.length;\r\n        for (uint256 i = 0; i < length; i++) {\r\n            IModule(_modules[i]).moduleTransferAction(_from, _to, _value);\r\n        }\r\n    }\r\n\r\n    function created(address _to, uint256 _value) external onlyToken override {\r\n        require(_to != address(0), \"invalid argument - zero address\");\r\n        require(_value > 0, \"invalid argument - no value mint\");\r\n        uint256 length = _modules.length;\r\n        for (uint256 i = 0; i < length; i++) {\r\n            IModule(_modules[i]).moduleMintAction(_to, _value);\r\n        }\r\n    }\r\n\r\n    function destroyed(address _from, uint256 _value) external onlyToken override {\r\n        require(_from != address(0), \"invalid argument - zero address\");\r\n        require(_value > 0, \"invalid argument - no value burn\");\r\n        uint256 length = _modules.length;\r\n        for (uint256 i = 0; i < length; i++) {\r\n            IModule(_modules[i]).moduleBurnAction(_from, _value);\r\n        }\r\n    }\r\n\r\n    function callModuleFunction(bytes calldata callData, address _module) external override onlyOwner {\r\n        require(_moduleBound[_module], \"call only on bound module\");\r\n        assembly {\r\n            let freeMemoryPointer := mload(0x40)\r\n            calldatacopy(freeMemoryPointer, callData.offset, callData.length)\r\n            if iszero(\r\n            call(\r\n            gas(),\r\n            _module,\r\n            0,\r\n            freeMemoryPointer,\r\n            callData.length,\r\n            0,\r\n            0\r\n            ))\r\n            {\r\n                returndatacopy(0, 0, returndatasize())\r\n                revert(0, returndatasize())\r\n            }\r\n        }\r\n\r\n        emit ModuleInteraction(_module, _selector(callData));\r\n\r\n    }\r\n\r\n    function isModuleBound(address _module) external view override returns (bool) {\r\n        return _moduleBound[_module];\r\n    }\r\n\r\n    function getModules() external view override returns (address[] memory) {\r\n        return _modules;\r\n    }\r\n\r\n    function getTokenBound() external view override returns (address) {\r\n        return _tokenBound;\r\n    }\r\n\r\n    function canTransfer(address _from, address _to, uint256 _value) external view override returns (bool) {\r\n        uint256 length = _modules.length;\r\n        for (uint256 i = 0; i < length; i++) {\r\n            if (!IModule(_modules[i]).moduleCheck(_from, _to, _value, address(this))) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function _selector(bytes calldata callData) internal pure returns (bytes4 result) {\r\n        if (callData.length >= 4) {\r\n            assembly {\r\n                result := calldataload(callData.offset)\r\n            }\r\n        }\r\n    }\r\n}"
			},
			"Tokeny Project/Compliance/modular/Modules/IModule.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.17;\r\n\r\ninterface IModule {\r\n\r\n// events\r\n    event ComplianceBound(address indexed _compliance);\r\n\r\n    event ComplianceUnbound(address indexed _compliance);\r\n\r\n// functions\r\n    function bindCompliance(address _compliance) external;\r\n\r\n    function unbindCompliance(address _compliance) external;\r\n\r\n    function moduleTransferAction(address _from, address _to, uint256 _value) external;\r\n\r\n    function moduleMintAction(address _to, uint256 _value) external;\r\n\r\n    function moduleBurnAction(address _from, uint256 _value) external;\r\n\r\n    function moduleCheck(address _from, address _to, uint256 _value, address _compliance) external view returns (bool);\r\n\r\n    function isComplianceBound(address _compliance) external view returns (bool);\r\n}"
			},
			"Tokeny Project/Compliance/modular/MCStorage.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.8.17;\r\n\r\ncontract MCStorage {\r\n    /// token linked to the compliance contract\r\n    address internal _tokenBound;\r\n\r\n    /// Array of modules bound to the compliance\r\n    address[] internal _modules;\r\n\r\n    /// Mapping of module binding status\r\n    mapping(address => bool) internal _moduleBound;\r\n    \r\n    uint256[49] private __gap;\r\n}"
			},
			"Tokeny Project/Compliance/modular/IModularCompliance.sol": {
				"content": "// SPDX-License-Identifier: MIT"
			},
			"https://github.com/TokenySolutions/T-REX/blob/main/contracts/token/IToken.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n//\n//                                             :+#####%%%%%%%%%%%%%%+\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\n//                                          +@@@@@. =@@@=  .+@@@@@*:\n//                                          #@@@@#:%@@#. :*@@@@#-\n//                                          @@@@@%@@@= :#@@@@+.\n//                                         :@@@@@@@#.:#@@@%-\n//                                         +@@@@@@-.*@@@*:\n//                                         #@@@@#.=@@@+.\n//                                         @@@@+-%@%=\n//                                        :@@@#%@%=\n//                                        +@@@@%-\n//                                        :#%%=\n//\n\n/**\n *     NOTICE\n *\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\n *     If you choose to receive it under the GPL v.3 license, the following applies:\n *     T-REX is a suite of smart contracts implementing the ERC-3643 standard and\n *     developed by Tokeny to manage and transfer financial assets on EVM blockchains\n *\n *     Copyright (C) 2023, Tokeny sàrl.\n *\n *     This program is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     This program is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\npragma solidity 0.8.17;\n\nimport \"../registry/interface/IIdentityRegistry.sol\";\nimport \"../compliance/modular/IModularCompliance.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/// @dev interface\ninterface IToken is IERC20 {\n\n    /// events\n\n    /**\n     *  this event is emitted when the token information is updated.\n     *  the event is emitted by the token init function and by the setTokenInformation function\n     *  `_newName` is the name of the token\n     *  `_newSymbol` is the symbol of the token\n     *  `_newDecimals` is the decimals of the token\n     *  `_newVersion` is the version of the token, current version is 3.0\n     *  `_newOnchainID` is the address of the onchainID of the token\n     */\n    event UpdatedTokenInformation(string indexed _newName, string indexed _newSymbol, uint8 _newDecimals, string\n    _newVersion, address indexed _newOnchainID);\n\n    /**\n     *  this event is emitted when the IdentityRegistry has been set for the token\n     *  the event is emitted by the token constructor and by the setIdentityRegistry function\n     *  `_identityRegistry` is the address of the Identity Registry of the token\n     */\n    event IdentityRegistryAdded(address indexed _identityRegistry);\n\n    /**\n     *  this event is emitted when the Compliance has been set for the token\n     *  the event is emitted by the token constructor and by the setCompliance function\n     *  `_compliance` is the address of the Compliance contract of the token\n     */\n    event ComplianceAdded(address indexed _compliance);\n\n    /**\n     *  this event is emitted when an investor successfully recovers his tokens\n     *  the event is emitted by the recoveryAddress function\n     *  `_lostWallet` is the address of the wallet that the investor lost access to\n     *  `_newWallet` is the address of the wallet that the investor provided for the recovery\n     *  `_investorOnchainID` is the address of the onchainID of the investor who asked for a recovery\n     */\n    event RecoverySuccess(address indexed _lostWallet, address indexed _newWallet, address indexed _investorOnchainID);\n\n    /**\n     *  this event is emitted when the wallet of an investor is frozen or unfrozen\n     *  the event is emitted by setAddressFrozen and batchSetAddressFrozen functions\n     *  `_userAddress` is the wallet of the investor that is concerned by the freezing status\n     *  `_isFrozen` is the freezing status of the wallet\n     *  if `_isFrozen` equals `true` the wallet is frozen after emission of the event\n     *  if `_isFrozen` equals `false` the wallet is unfrozen after emission of the event\n     *  `_owner` is the address of the agent who called the function to freeze the wallet\n     */\n    event AddressFrozen(address indexed _userAddress, bool indexed _isFrozen, address indexed _owner);\n\n    /**\n     *  this event is emitted when a certain amount of tokens is frozen on a wallet\n     *  the event is emitted by freezePartialTokens and batchFreezePartialTokens functions\n     *  `_userAddress` is the wallet of the investor that is concerned by the freezing status\n     *  `_amount` is the amount of tokens that are frozen\n     */\n    event TokensFrozen(address indexed _userAddress, uint256 _amount);\n\n    /**\n     *  this event is emitted when a certain amount of tokens is unfrozen on a wallet\n     *  the event is emitted by unfreezePartialTokens and batchUnfreezePartialTokens functions\n     *  `_userAddress` is the wallet of the investor that is concerned by the freezing status\n     *  `_amount` is the amount of tokens that are unfrozen\n     */\n    event TokensUnfrozen(address indexed _userAddress, uint256 _amount);\n\n    /**\n     *  this event is emitted when the token is paused\n     *  the event is emitted by the pause function\n     *  `_userAddress` is the address of the wallet that called the pause function\n     */\n    event Paused(address _userAddress);\n\n    /**\n     *  this event is emitted when the token is unpaused\n     *  the event is emitted by the unpause function\n     *  `_userAddress` is the address of the wallet that called the unpause function\n     */\n    event Unpaused(address _userAddress);\n\n    /// functions\n\n    /**\n     *  @dev sets the token name\n     *  @param _name the name of token to set\n     *  Only the owner of the token smart contract can call this function\n     *  emits a `UpdatedTokenInformation` event\n     */\n    function setName(string calldata _name) external;\n\n    /**\n     *  @dev sets the token symbol\n     *  @param _symbol the token symbol to set\n     *  Only the owner of the token smart contract can call this function\n     *  emits a `UpdatedTokenInformation` event\n     */\n    function setSymbol(string calldata _symbol) external;\n\n    /**\n     *  @dev sets the onchain ID of the token\n     *  @param _onchainID the address of the onchain ID to set\n     *  Only the owner of the token smart contract can call this function\n     *  emits a `UpdatedTokenInformation` event\n     */\n    function setOnchainID(address _onchainID) external;\n\n    /**\n     *  @dev pauses the token contract, when contract is paused investors cannot transfer tokens anymore\n     *  This function can only be called by a wallet set as agent of the token\n     *  emits a `Paused` event\n     */\n    function pause() external;\n\n    /**\n     *  @dev unpauses the token contract, when contract is unpaused investors can transfer tokens\n     *  if their wallet is not blocked & if the amount to transfer is <= to the amount of free tokens\n     *  This function can only be called by a wallet set as agent of the token\n     *  emits an `Unpaused` event\n     */\n    function unpause() external;\n\n    /**\n     *  @dev sets an address frozen status for this token.\n     *  @param _userAddress The address for which to update frozen status\n     *  @param _freeze Frozen status of the address\n     *  This function can only be called by a wallet set as agent of the token\n     *  emits an `AddressFrozen` event\n     */\n    function setAddressFrozen(address _userAddress, bool _freeze) external;\n\n    /**\n     *  @dev freezes token amount specified for given address.\n     *  @param _userAddress The address for which to update frozen tokens\n     *  @param _amount Amount of Tokens to be frozen\n     *  This function can only be called by a wallet set as agent of the token\n     *  emits a `TokensFrozen` event\n     */\n    function freezePartialTokens(address _userAddress, uint256 _amount) external;\n\n    /**\n     *  @dev unfreezes token amount specified for given address\n     *  @param _userAddress The address for which to update frozen tokens\n     *  @param _amount Amount of Tokens to be unfrozen\n     *  This function can only be called by a wallet set as agent of the token\n     *  emits a `TokensUnfrozen` event\n     */\n    function unfreezePartialTokens(address _userAddress, uint256 _amount) external;\n\n    /**\n     *  @dev sets the Identity Registry for the token\n     *  @param _identityRegistry the address of the Identity Registry to set\n     *  Only the owner of the token smart contract can call this function\n     *  emits an `IdentityRegistryAdded` event\n     */\n    function setIdentityRegistry(address _identityRegistry) external;\n\n    /**\n     *  @dev sets the compliance contract of the token\n     *  @param _compliance the address of the compliance contract to set\n     *  Only the owner of the token smart contract can call this function\n     *  calls bindToken on the compliance contract\n     *  emits a `ComplianceAdded` event\n     */\n    function setCompliance(address _compliance) external;\n\n    /**\n     *  @dev force a transfer of tokens between 2 whitelisted wallets\n     *  In case the `from` address has not enough free tokens (unfrozen tokens)\n     *  but has a total balance higher or equal to the `amount`\n     *  the amount of frozen tokens is reduced in order to have enough free tokens\n     *  to proceed the transfer, in such a case, the remaining balance on the `from`\n     *  account is 100% composed of frozen tokens post-transfer.\n     *  Require that the `to` address is a verified address,\n     *  @param _from The address of the sender\n     *  @param _to The address of the receiver\n     *  @param _amount The number of tokens to transfer\n     *  @return `true` if successful and revert if unsuccessful\n     *  This function can only be called by a wallet set as agent of the token\n     *  emits a `TokensUnfrozen` event if `_amount` is higher than the free balance of `_from`\n     *  emits a `Transfer` event\n     */\n    function forcedTransfer(\n        address _from,\n        address _to,\n        uint256 _amount\n    ) external returns (bool);\n\n    /**\n     *  @dev mint tokens on a wallet\n     *  Improved version of default mint method. Tokens can be minted\n     *  to an address if only it is a verified address as per the security token.\n     *  @param _to Address to mint the tokens to.\n     *  @param _amount Amount of tokens to mint.\n     *  This function can only be called by a wallet set as agent of the token\n     *  emits a `Transfer` event\n     */\n    function mint(address _to, uint256 _amount) external;\n\n    /**\n     *  @dev burn tokens on a wallet\n     *  In case the `account` address has not enough free tokens (unfrozen tokens)\n     *  but has a total balance higher or equal to the `value` amount\n     *  the amount of frozen tokens is reduced in order to have enough free tokens\n     *  to proceed the burn, in such a case, the remaining balance on the `account`\n     *  is 100% composed of frozen tokens post-transaction.\n     *  @param _userAddress Address to burn the tokens from.\n     *  @param _amount Amount of tokens to burn.\n     *  This function can only be called by a wallet set as agent of the token\n     *  emits a `TokensUnfrozen` event if `_amount` is higher than the free balance of `_userAddress`\n     *  emits a `Transfer` event\n     */\n    function burn(address _userAddress, uint256 _amount) external;\n\n    /**\n     *  @dev recovery function used to force transfer tokens from a\n     *  lost wallet to a new wallet for an investor.\n     *  @param _lostWallet the wallet that the investor lost\n     *  @param _newWallet the newly provided wallet on which tokens have to be transferred\n     *  @param _investorOnchainID the onchainID of the investor asking for a recovery\n     *  This function can only be called by a wallet set as agent of the token\n     *  emits a `TokensUnfrozen` event if there is some frozen tokens on the lost wallet if the recovery process is successful\n     *  emits a `Transfer` event if the recovery process is successful\n     *  emits a `RecoverySuccess` event if the recovery process is successful\n     *  emits a `RecoveryFails` event if the recovery process fails\n     */\n    function recoveryAddress(\n        address _lostWallet,\n        address _newWallet,\n        address _investorOnchainID\n    ) external returns (bool);\n\n    /**\n     *  @dev function allowing to issue transfers in batch\n     *  Require that the msg.sender and `to` addresses are not frozen.\n     *  Require that the total value should not exceed available balance.\n     *  Require that the `to` addresses are all verified addresses,\n     *  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_toList.length` IS TOO HIGH,\n     *  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \"OUT OF GAS\" TRANSACTION\n     *  @param _toList The addresses of the receivers\n     *  @param _amounts The number of tokens to transfer to the corresponding receiver\n     *  emits _toList.length `Transfer` events\n     */\n    function batchTransfer(address[] calldata _toList, uint256[] calldata _amounts) external;\n\n    /**\n     *  @dev function allowing to issue forced transfers in batch\n     *  Require that `_amounts[i]` should not exceed available balance of `_fromList[i]`.\n     *  Require that the `_toList` addresses are all verified addresses\n     *  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_fromList.length` IS TOO HIGH,\n     *  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \"OUT OF GAS\" TRANSACTION\n     *  @param _fromList The addresses of the senders\n     *  @param _toList The addresses of the receivers\n     *  @param _amounts The number of tokens to transfer to the corresponding receiver\n     *  This function can only be called by a wallet set as agent of the token\n     *  emits `TokensUnfrozen` events if `_amounts[i]` is higher than the free balance of `_fromList[i]`\n     *  emits _fromList.length `Transfer` events\n     */\n    function batchForcedTransfer(\n        address[] calldata _fromList,\n        address[] calldata _toList,\n        uint256[] calldata _amounts\n    ) external;\n\n    /**\n     *  @dev function allowing to mint tokens in batch\n     *  Require that the `_toList` addresses are all verified addresses\n     *  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_toList.length` IS TOO HIGH,\n     *  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \"OUT OF GAS\" TRANSACTION\n     *  @param _toList The addresses of the receivers\n     *  @param _amounts The number of tokens to mint to the corresponding receiver\n     *  This function can only be called by a wallet set as agent of the token\n     *  emits _toList.length `Transfer` events\n     */\n    function batchMint(address[] calldata _toList, uint256[] calldata _amounts) external;\n\n    /**\n     *  @dev function allowing to burn tokens in batch\n     *  Require that the `_userAddresses` addresses are all verified addresses\n     *  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_userAddresses.length` IS TOO HIGH,\n     *  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \"OUT OF GAS\" TRANSACTION\n     *  @param _userAddresses The addresses of the wallets concerned by the burn\n     *  @param _amounts The number of tokens to burn from the corresponding wallets\n     *  This function can only be called by a wallet set as agent of the token\n     *  emits _userAddresses.length `Transfer` events\n     */\n    function batchBurn(address[] calldata _userAddresses, uint256[] calldata _amounts) external;\n\n    /**\n     *  @dev function allowing to set frozen addresses in batch\n     *  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_userAddresses.length` IS TOO HIGH,\n     *  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \"OUT OF GAS\" TRANSACTION\n     *  @param _userAddresses The addresses for which to update frozen status\n     *  @param _freeze Frozen status of the corresponding address\n     *  This function can only be called by a wallet set as agent of the token\n     *  emits _userAddresses.length `AddressFrozen` events\n     */\n    function batchSetAddressFrozen(address[] calldata _userAddresses, bool[] calldata _freeze) external;\n\n    /**\n     *  @dev function allowing to freeze tokens partially in batch\n     *  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_userAddresses.length` IS TOO HIGH,\n     *  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \"OUT OF GAS\" TRANSACTION\n     *  @param _userAddresses The addresses on which tokens need to be frozen\n     *  @param _amounts the amount of tokens to freeze on the corresponding address\n     *  This function can only be called by a wallet set as agent of the token\n     *  emits _userAddresses.length `TokensFrozen` events\n     */\n    function batchFreezePartialTokens(address[] calldata _userAddresses, uint256[] calldata _amounts) external;\n\n    /**\n     *  @dev function allowing to unfreeze tokens partially in batch\n     *  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_userAddresses.length` IS TOO HIGH,\n     *  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \"OUT OF GAS\" TRANSACTION\n     *  @param _userAddresses The addresses on which tokens need to be unfrozen\n     *  @param _amounts the amount of tokens to unfreeze on the corresponding address\n     *  This function can only be called by a wallet set as agent of the token\n     *  emits _userAddresses.length `TokensUnfrozen` events\n     */\n    function batchUnfreezePartialTokens(address[] calldata _userAddresses, uint256[] calldata _amounts) external;\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 1 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * balanceOf() and transfer().\n     */\n    function decimals() external view returns (uint8);\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the address of the onchainID of the token.\n     * the onchainID of the token gives all the information available\n     * about the token and is managed by the token issuer or his agent.\n     */\n    function onchainID() external view returns (address);\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the TREX version of the token.\n     * current version is 3.0.0\n     */\n    function version() external view returns (string memory);\n\n    /**\n     *  @dev Returns the Identity Registry linked to the token\n     */\n    function identityRegistry() external view returns (IIdentityRegistry);\n\n    /**\n     *  @dev Returns the Compliance contract linked to the token\n     */\n    function compliance() external view returns (IModularCompliance);\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() external view returns (bool);\n\n    /**\n     *  @dev Returns the freezing status of a wallet\n     *  if isFrozen returns `true` the wallet is frozen\n     *  if isFrozen returns `false` the wallet is not frozen\n     *  isFrozen returning `true` doesn't mean that the balance is free, tokens could be blocked by\n     *  a partial freeze or the whole token could be blocked by pause\n     *  @param _userAddress the address of the wallet on which isFrozen is called\n     */\n    function isFrozen(address _userAddress) external view returns (bool);\n\n    /**\n     *  @dev Returns the amount of tokens that are partially frozen on a wallet\n     *  the amount of frozen tokens is always <= to the total balance of the wallet\n     *  @param _userAddress the address of the wallet on which getFrozenTokens is called\n     */\n    function getFrozenTokens(address _userAddress) external view returns (uint256);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function __Ownable_init() internal onlyInitializing {\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal onlyInitializing {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"https://github.com/TokenySolutions/T-REX/blob/main/contracts/compliance/modular/IModularCompliance.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n//\n//                                             :+#####%%%%%%%%%%%%%%+\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\n//                                          +@@@@@. =@@@=  .+@@@@@*:\n//                                          #@@@@#:%@@#. :*@@@@#-\n//                                          @@@@@%@@@= :#@@@@+.\n//                                         :@@@@@@@#.:#@@@%-\n//                                         +@@@@@@-.*@@@*:\n//                                         #@@@@#.=@@@+.\n//                                         @@@@+-%@%=\n//                                        :@@@#%@%=\n//                                        +@@@@%-\n//                                        :#%%=\n//\n/**\n *     NOTICE\n *\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\n *     If you choose to receive it under the GPL v.3 license, the following applies:\n *     T-REX is a suite of smart contracts implementing the ERC-3643 standard and\n *     developed by Tokeny to manage and transfer financial assets on EVM blockchains\n *\n *     Copyright (C) 2023, Tokeny sàrl.\n *\n *     This program is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     This program is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\npragma solidity 0.8.17;\n\ninterface IModularCompliance {\n\n    /// events\n\n    /**\n     *  @dev Event emitted for each executed interaction with a module contract.\n     *  For gas efficiency, only the interaction calldata selector (first 4\n     *  bytes) is included in the event. For interactions without calldata or\n     *  whose calldata is shorter than 4 bytes, the selector will be `0`.\n     */\n    event ModuleInteraction(address indexed target, bytes4 selector);\n\n    /**\n     *  this event is emitted when a token has been bound to the compliance contract\n     *  the event is emitted by the bindToken function\n     *  `_token` is the address of the token to bind\n     */\n    event TokenBound(address _token);\n\n    /**\n     *  this event is emitted when a token has been unbound from the compliance contract\n     *  the event is emitted by the unbindToken function\n     *  `_token` is the address of the token to unbind\n     */\n    event TokenUnbound(address _token);\n\n    /**\n     *  this event is emitted when a module has been added to the list of modules bound to the compliance contract\n     *  the event is emitted by the addModule function\n     *  `_module` is the address of the compliance module\n     */\n    event ModuleAdded(address indexed _module);\n\n    /**\n     *  this event is emitted when a module has been removed from the list of modules bound to the compliance contract\n     *  the event is emitted by the removeModule function\n     *  `_module` is the address of the compliance module\n     */\n    event ModuleRemoved(address indexed _module);\n\n    /// functions\n\n    /**\n     *  @dev binds a token to the compliance contract\n     *  @param _token address of the token to bind\n     *  This function can be called ONLY by the owner of the compliance contract\n     *  Emits a TokenBound event\n     */\n    function bindToken(address _token) external;\n\n    /**\n     *  @dev unbinds a token from the compliance contract\n     *  @param _token address of the token to unbind\n     *  This function can be called ONLY by the owner of the compliance contract\n     *  Emits a TokenUnbound event\n     */\n    function unbindToken(address _token) external;\n\n    /**\n     *  @dev adds a module to the list of compliance modules\n     *  @param _module address of the module to add\n     *  there cannot be more than 25 modules bound to the modular compliance for gas cost reasons\n     *  This function can be called ONLY by the owner of the compliance contract\n     *  Emits a ModuleAdded event\n     */\n    function addModule(address _module) external;\n\n    /**\n     *  @dev removes a module from the list of compliance modules\n     *  @param _module address of the module to remove\n     *  This function can be called ONLY by the owner of the compliance contract\n     *  Emits a ModuleRemoved event\n     */\n    function removeModule(address _module) external;\n\n    /**\n     *  @dev calls any function on bound modules\n     *  can be called only on bound modules\n     *  @param callData the bytecode for interaction with the module, abi encoded\n     *  @param _module The address of the module\n     *  This function can be called only by the modular compliance owner\n     *  emits a `ModuleInteraction` event\n     */\n    function callModuleFunction(bytes calldata callData, address _module) external;\n\n    /**\n     *  @dev function called whenever tokens are transferred\n     *  from one wallet to another\n     *  this function can update state variables in the modules bound to the compliance\n     *  these state variables being used by the module checks to decide if a transfer\n     *  is compliant or not depending on the values stored in these state variables and on\n     *  the parameters of the modules\n     *  This function can be called ONLY by the token contract bound to the compliance\n     *  @param _from The address of the sender\n     *  @param _to The address of the receiver\n     *  @param _amount The amount of tokens involved in the transfer\n     *  This function calls moduleTransferAction() on each module bound to the compliance contract\n     */\n    function transferred(\n        address _from,\n        address _to,\n        uint256 _amount\n    ) external;\n\n    /**\n     *  @dev function called whenever tokens are created on a wallet\n     *  this function can update state variables in the modules bound to the compliance\n     *  these state variables being used by the module checks to decide if a transfer\n     *  is compliant or not depending on the values stored in these state variables and on\n     *  the parameters of the modules\n     *  This function can be called ONLY by the token contract bound to the compliance\n     *  @param _to The address of the receiver\n     *  @param _amount The amount of tokens involved in the minting\n     *  This function calls moduleMintAction() on each module bound to the compliance contract\n     */\n    function created(address _to, uint256 _amount) external;\n\n    /**\n     *  @dev function called whenever tokens are destroyed from a wallet\n     *  this function can update state variables in the modules bound to the compliance\n     *  these state variables being used by the module checks to decide if a transfer\n     *  is compliant or not depending on the values stored in these state variables and on\n     *  the parameters of the modules\n     *  This function can be called ONLY by the token contract bound to the compliance\n     *  @param _from The address on which tokens are burnt\n     *  @param _amount The amount of tokens involved in the burn\n     *  This function calls moduleBurnAction() on each module bound to the compliance contract\n     */\n    function destroyed(address _from, uint256 _amount) external;\n\n    /**\n     *  @dev checks that the transfer is compliant.\n     *  default compliance always returns true\n     *  READ ONLY FUNCTION, this function cannot be used to increment\n     *  counters, emit events, ...\n     *  @param _from The address of the sender\n     *  @param _to The address of the receiver\n     *  @param _amount The amount of tokens involved in the transfer\n     *  This function will call moduleCheck() on every module bound to the compliance\n     *  If each of the module checks return TRUE, this function will return TRUE as well\n     *  returns FALSE otherwise\n     */\n    function canTransfer(\n        address _from,\n        address _to,\n        uint256 _amount\n    ) external view returns (bool);\n\n    /**\n     *  @dev getter for the modules bound to the compliance contract\n     *  returns address array of module contracts bound to the compliance\n     */\n    function getModules() external view returns (address[] memory);\n\n    /**\n     *  @dev getter for the address of the token bound\n     *  returns the address of the token\n     */\n    function getTokenBound() external view returns (address);\n\n    /**\n     *  @dev checks if a module is bound to the compliance contract\n     *  returns true if module is bound, false otherwise\n     */\n    function isModuleBound(address _module) external view returns (bool);\n}\n"
			},
			"https://github.com/TokenySolutions/T-REX/blob/main/contracts/registry/interface/IIdentityRegistry.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n//\n//                                             :+#####%%%%%%%%%%%%%%+\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\n//                                          +@@@@@. =@@@=  .+@@@@@*:\n//                                          #@@@@#:%@@#. :*@@@@#-\n//                                          @@@@@%@@@= :#@@@@+.\n//                                         :@@@@@@@#.:#@@@%-\n//                                         +@@@@@@-.*@@@*:\n//                                         #@@@@#.=@@@+.\n//                                         @@@@+-%@%=\n//                                        :@@@#%@%=\n//                                        +@@@@%-\n//                                        :#%%=\n//\n/**\n *     NOTICE\n *\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\n *     If you choose to receive it under the GPL v.3 license, the following applies:\n *     T-REX is a suite of smart contracts implementing the ERC-3643 standard and\n *     developed by Tokeny to manage and transfer financial assets on EVM blockchains\n *\n *     Copyright (C) 2023, Tokeny sàrl.\n *\n *     This program is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     This program is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\npragma solidity 0.8.17;\n\nimport \"./ITrustedIssuersRegistry.sol\";\nimport \"./IClaimTopicsRegistry.sol\";\nimport \"./IIdentityRegistryStorage.sol\";\n\nimport \"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\";\nimport \"@onchain-id/solidity/contracts/interface/IIdentity.sol\";\n\ninterface IIdentityRegistry {\n    /**\n     *  this event is emitted when the ClaimTopicsRegistry has been set for the IdentityRegistry\n     *  the event is emitted by the IdentityRegistry constructor\n     *  `claimTopicsRegistry` is the address of the Claim Topics Registry contract\n     */\n    event ClaimTopicsRegistrySet(address indexed claimTopicsRegistry);\n\n    /**\n     *  this event is emitted when the IdentityRegistryStorage has been set for the IdentityRegistry\n     *  the event is emitted by the IdentityRegistry constructor\n     *  `identityStorage` is the address of the Identity Registry Storage contract\n     */\n    event IdentityStorageSet(address indexed identityStorage);\n\n    /**\n     *  this event is emitted when the TrustedIssuersRegistry has been set for the IdentityRegistry\n     *  the event is emitted by the IdentityRegistry constructor\n     *  `trustedIssuersRegistry` is the address of the Trusted Issuers Registry contract\n     */\n    event TrustedIssuersRegistrySet(address indexed trustedIssuersRegistry);\n\n    /**\n     *  this event is emitted when an Identity is registered into the Identity Registry.\n     *  the event is emitted by the 'registerIdentity' function\n     *  `investorAddress` is the address of the investor's wallet\n     *  `identity` is the address of the Identity smart contract (onchainID)\n     */\n    event IdentityRegistered(address indexed investorAddress, IIdentity indexed identity);\n\n    /**\n     *  this event is emitted when an Identity is removed from the Identity Registry.\n     *  the event is emitted by the 'deleteIdentity' function\n     *  `investorAddress` is the address of the investor's wallet\n     *  `identity` is the address of the Identity smart contract (onchainID)\n     */\n    event IdentityRemoved(address indexed investorAddress, IIdentity indexed identity);\n\n    /**\n     *  this event is emitted when an Identity has been updated\n     *  the event is emitted by the 'updateIdentity' function\n     *  `oldIdentity` is the old Identity contract's address to update\n     *  `newIdentity` is the new Identity contract's\n     */\n    event IdentityUpdated(IIdentity indexed oldIdentity, IIdentity indexed newIdentity);\n\n    /**\n     *  this event is emitted when an Identity's country has been updated\n     *  the event is emitted by the 'updateCountry' function\n     *  `investorAddress` is the address on which the country has been updated\n     *  `country` is the numeric code (ISO 3166-1) of the new country\n     */\n    event CountryUpdated(address indexed investorAddress, uint16 indexed country);\n\n    /**\n     *  @dev Register an identity contract corresponding to a user address.\n     *  Requires that the user doesn't have an identity contract already registered.\n     *  This function can only be called by a wallet set as agent of the smart contract\n     *  @param _userAddress The address of the user\n     *  @param _identity The address of the user's identity contract\n     *  @param _country The country of the investor\n     *  emits `IdentityRegistered` event\n     */\n    function registerIdentity(\n        address _userAddress,\n        IIdentity _identity,\n        uint16 _country\n    ) external;\n\n    /**\n     *  @dev Removes an user from the identity registry.\n     *  Requires that the user have an identity contract already deployed that will be deleted.\n     *  This function can only be called by a wallet set as agent of the smart contract\n     *  @param _userAddress The address of the user to be removed\n     *  emits `IdentityRemoved` event\n     */\n    function deleteIdentity(address _userAddress) external;\n\n    /**\n     *  @dev Replace the actual identityRegistryStorage contract with a new one.\n     *  This function can only be called by the wallet set as owner of the smart contract\n     *  @param _identityRegistryStorage The address of the new Identity Registry Storage\n     *  emits `IdentityStorageSet` event\n     */\n    function setIdentityRegistryStorage(address _identityRegistryStorage) external;\n\n    /**\n     *  @dev Replace the actual claimTopicsRegistry contract with a new one.\n     *  This function can only be called by the wallet set as owner of the smart contract\n     *  @param _claimTopicsRegistry The address of the new claim Topics Registry\n     *  emits `ClaimTopicsRegistrySet` event\n     */\n    function setClaimTopicsRegistry(address _claimTopicsRegistry) external;\n\n    /**\n     *  @dev Replace the actual trustedIssuersRegistry contract with a new one.\n     *  This function can only be called by the wallet set as owner of the smart contract\n     *  @param _trustedIssuersRegistry The address of the new Trusted Issuers Registry\n     *  emits `TrustedIssuersRegistrySet` event\n     */\n    function setTrustedIssuersRegistry(address _trustedIssuersRegistry) external;\n\n    /**\n     *  @dev Updates the country corresponding to a user address.\n     *  Requires that the user should have an identity contract already deployed that will be replaced.\n     *  This function can only be called by a wallet set as agent of the smart contract\n     *  @param _userAddress The address of the user\n     *  @param _country The new country of the user\n     *  emits `CountryUpdated` event\n     */\n    function updateCountry(address _userAddress, uint16 _country) external;\n\n    /**\n     *  @dev Updates an identity contract corresponding to a user address.\n     *  Requires that the user address should be the owner of the identity contract.\n     *  Requires that the user should have an identity contract already deployed that will be replaced.\n     *  This function can only be called by a wallet set as agent of the smart contract\n     *  @param _userAddress The address of the user\n     *  @param _identity The address of the user's new identity contract\n     *  emits `IdentityUpdated` event\n     */\n    function updateIdentity(address _userAddress, IIdentity _identity) external;\n\n    /**\n     *  @dev function allowing to register identities in batch\n     *  This function can only be called by a wallet set as agent of the smart contract\n     *  Requires that none of the users has an identity contract already registered.\n     *  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_userAddresses.length` IS TOO HIGH,\n     *  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \"OUT OF GAS\" TRANSACTION\n     *  @param _userAddresses The addresses of the users\n     *  @param _identities The addresses of the corresponding identity contracts\n     *  @param _countries The countries of the corresponding investors\n     *  emits _userAddresses.length `IdentityRegistered` events\n     */\n    function batchRegisterIdentity(\n        address[] calldata _userAddresses,\n        IIdentity[] calldata _identities,\n        uint16[] calldata _countries\n    ) external;\n\n    /**\n     *  @dev This functions checks whether a wallet has its Identity registered or not\n     *  in the Identity Registry.\n     *  @param _userAddress The address of the user to be checked.\n     *  @return 'True' if the address is contained in the Identity Registry, 'false' if not.\n     */\n    function contains(address _userAddress) external view returns (bool);\n\n    /**\n     *  @dev This functions checks whether an identity contract\n     *  corresponding to the provided user address has the required claims or not based\n     *  on the data fetched from trusted issuers registry and from the claim topics registry\n     *  @param _userAddress The address of the user to be verified.\n     *  @return 'True' if the address is verified, 'false' if not.\n     */\n    function isVerified(address _userAddress) external view returns (bool);\n\n    /**\n     *  @dev Returns the onchainID of an investor.\n     *  @param _userAddress The wallet of the investor\n     */\n    function identity(address _userAddress) external view returns (IIdentity);\n\n    /**\n     *  @dev Returns the country code of an investor.\n     *  @param _userAddress The wallet of the investor\n     */\n    function investorCountry(address _userAddress) external view returns (uint16);\n\n    /**\n     *  @dev Returns the IdentityRegistryStorage linked to the current IdentityRegistry.\n     */\n    function identityStorage() external view returns (IIdentityRegistryStorage);\n\n    /**\n     *  @dev Returns the TrustedIssuersRegistry linked to the current IdentityRegistry.\n     */\n    function issuersRegistry() external view returns (ITrustedIssuersRegistry);\n\n    /**\n     *  @dev Returns the ClaimTopicsRegistry linked to the current IdentityRegistry.\n     */\n    function topicsRegistry() external view returns (IClaimTopicsRegistry);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized != type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"@onchain-id/solidity/contracts/interface/IIdentity.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.17;\n\nimport \"./IERC734.sol\";\nimport \"./IERC735.sol\";\n\n// solhint-disable-next-line no-empty-blocks\ninterface IIdentity is IERC734, IERC735 {}\n"
			},
			"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.17;\n\nimport \"./IIdentity.sol\";\n\ninterface IClaimIssuer is IIdentity {\n\n    /**\n     * @dev Emitted when a claim is revoked.\n     *\n     * Specification: MUST be triggered when revoking a claim.\n     */\n    event ClaimRevoked(bytes indexed signature);\n\n    /**\n     * @dev Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\n     * @notice will fetch the claim from the identity contract (unsafe).\n     * @param _claimId the id of the claim\n     * @param _identity the address of the identity contract\n     * @return isRevoked true when the claim is revoked\n     */\n    function revokeClaim(bytes32 _claimId, address _identity) external returns(bool);\n\n    /**\n     * @dev Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\n     * @param signature the signature of the claim\n     */\n    function revokeClaimBySignature(bytes calldata signature) external;\n\n    /**\n     * @dev Returns revocation status of a claim.\n     * @param _sig the signature of the claim\n     * @return isRevoked true if the claim is revoked and false otherwise\n     */\n    function isClaimRevoked(bytes calldata _sig) external view returns (bool);\n\n    /**\n     * @dev Checks if a claim is valid.\n     * @param _identity the identity contract related to the claim\n     * @param claimTopic the claim topic of the claim\n     * @param sig the signature of the claim\n     * @param data the data field of the claim\n     * @return claimValid true if the claim is valid, false otherwise\n     */\n    function isClaimValid(\n        IIdentity _identity,\n        uint256 claimTopic,\n        bytes calldata sig,\n        bytes calldata data)\n    external view returns (bool);\n\n    /**\n     * @dev returns the address that signed the given data\n     * @param sig the signature of the data\n     * @param dataHash the data that was signed\n     * returns the address that signed dataHash and created the signature sig\n     */\n    function getRecoveredAddress(bytes calldata sig, bytes32 dataHash) external pure returns (address);\n}\n"
			},
			"https://github.com/TokenySolutions/T-REX/blob/main/contracts/registry/interface/IIdentityRegistryStorage.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n//\n//                                             :+#####%%%%%%%%%%%%%%+\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\n//                                          +@@@@@. =@@@=  .+@@@@@*:\n//                                          #@@@@#:%@@#. :*@@@@#-\n//                                          @@@@@%@@@= :#@@@@+.\n//                                         :@@@@@@@#.:#@@@%-\n//                                         +@@@@@@-.*@@@*:\n//                                         #@@@@#.=@@@+.\n//                                         @@@@+-%@%=\n//                                        :@@@#%@%=\n//                                        +@@@@%-\n//                                        :#%%=\n//\n/**\n *     NOTICE\n *\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\n *     If you choose to receive it under the GPL v.3 license, the following applies:\n *     T-REX is a suite of smart contracts implementing the ERC-3643 standard and\n *     developed by Tokeny to manage and transfer financial assets on EVM blockchains\n *\n *     Copyright (C) 2023, Tokeny sàrl.\n *\n *     This program is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     This program is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\npragma solidity 0.8.17;\n\nimport \"@onchain-id/solidity/contracts/interface/IIdentity.sol\";\n\ninterface IIdentityRegistryStorage {\n\n    /// events\n\n    /**\n     *  this event is emitted when an Identity is registered into the storage contract.\n     *  the event is emitted by the 'registerIdentity' function\n     *  `investorAddress` is the address of the investor's wallet\n     *  `identity` is the address of the Identity smart contract (onchainID)\n     */\n    event IdentityStored(address indexed investorAddress, IIdentity indexed identity);\n\n    /**\n     *  this event is emitted when an Identity is removed from the storage contract.\n     *  the event is emitted by the 'deleteIdentity' function\n     *  `investorAddress` is the address of the investor's wallet\n     *  `identity` is the address of the Identity smart contract (onchainID)\n     */\n    event IdentityUnstored(address indexed investorAddress, IIdentity indexed identity);\n\n    /**\n     *  this event is emitted when an Identity has been updated\n     *  the event is emitted by the 'updateIdentity' function\n     *  `oldIdentity` is the old Identity contract's address to update\n     *  `newIdentity` is the new Identity contract's\n     */\n    event IdentityModified(IIdentity indexed oldIdentity, IIdentity indexed newIdentity);\n\n    /**\n     *  this event is emitted when an Identity's country has been updated\n     *  the event is emitted by the 'updateCountry' function\n     *  `investorAddress` is the address on which the country has been updated\n     *  `country` is the numeric code (ISO 3166-1) of the new country\n     */\n    event CountryModified(address indexed investorAddress, uint16 indexed country);\n\n    /**\n     *  this event is emitted when an Identity Registry is bound to the storage contract\n     *  the event is emitted by the 'addIdentityRegistry' function\n     *  `identityRegistry` is the address of the identity registry added\n     */\n    event IdentityRegistryBound(address indexed identityRegistry);\n\n    /**\n     *  this event is emitted when an Identity Registry is unbound from the storage contract\n     *  the event is emitted by the 'removeIdentityRegistry' function\n     *  `identityRegistry` is the address of the identity registry removed\n     */\n    event IdentityRegistryUnbound(address indexed identityRegistry);\n\n    /// functions\n\n    /**\n     *  @dev adds an identity contract corresponding to a user address in the storage.\n     *  Requires that the user doesn't have an identity contract already registered.\n     *  This function can only be called by an address set as agent of the smart contract\n     *  @param _userAddress The address of the user\n     *  @param _identity The address of the user's identity contract\n     *  @param _country The country of the investor\n     *  emits `IdentityStored` event\n     */\n    function addIdentityToStorage(\n        address _userAddress,\n        IIdentity _identity,\n        uint16 _country\n    ) external;\n\n    /**\n     *  @dev Removes an user from the storage.\n     *  Requires that the user have an identity contract already deployed that will be deleted.\n     *  This function can only be called by an address set as agent of the smart contract\n     *  @param _userAddress The address of the user to be removed\n     *  emits `IdentityUnstored` event\n     */\n    function removeIdentityFromStorage(address _userAddress) external;\n\n    /**\n     *  @dev Updates the country corresponding to a user address.\n     *  Requires that the user should have an identity contract already deployed that will be replaced.\n     *  This function can only be called by an address set as agent of the smart contract\n     *  @param _userAddress The address of the user\n     *  @param _country The new country of the user\n     *  emits `CountryModified` event\n     */\n    function modifyStoredInvestorCountry(address _userAddress, uint16 _country) external;\n\n    /**\n     *  @dev Updates an identity contract corresponding to a user address.\n     *  Requires that the user address should be the owner of the identity contract.\n     *  Requires that the user should have an identity contract already deployed that will be replaced.\n     *  This function can only be called by an address set as agent of the smart contract\n     *  @param _userAddress The address of the user\n     *  @param _identity The address of the user's new identity contract\n     *  emits `IdentityModified` event\n     */\n    function modifyStoredIdentity(address _userAddress, IIdentity _identity) external;\n\n    /**\n     *  @notice Adds an identity registry as agent of the Identity Registry Storage Contract.\n     *  This function can only be called by the wallet set as owner of the smart contract\n     *  This function adds the identity registry to the list of identityRegistries linked to the storage contract\n     *  cannot bind more than 300 IR to 1 IRS\n     *  @param _identityRegistry The identity registry address to add.\n     */\n    function bindIdentityRegistry(address _identityRegistry) external;\n\n    /**\n     *  @notice Removes an identity registry from being agent of the Identity Registry Storage Contract.\n     *  This function can only be called by the wallet set as owner of the smart contract\n     *  This function removes the identity registry from the list of identityRegistries linked to the storage contract\n     *  @param _identityRegistry The identity registry address to remove.\n     */\n    function unbindIdentityRegistry(address _identityRegistry) external;\n\n    /**\n     *  @dev Returns the identity registries linked to the storage contract\n     */\n    function linkedIdentityRegistries() external view returns (address[] memory);\n\n    /**\n     *  @dev Returns the onchainID of an investor.\n     *  @param _userAddress The wallet of the investor\n     */\n    function storedIdentity(address _userAddress) external view returns (IIdentity);\n\n    /**\n     *  @dev Returns the country code of an investor.\n     *  @param _userAddress The wallet of the investor\n     */\n    function storedInvestorCountry(address _userAddress) external view returns (uint16);\n}\n"
			},
			"https://github.com/TokenySolutions/T-REX/blob/main/contracts/registry/interface/IClaimTopicsRegistry.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n//\n//                                             :+#####%%%%%%%%%%%%%%+\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\n//                                          +@@@@@. =@@@=  .+@@@@@*:\n//                                          #@@@@#:%@@#. :*@@@@#-\n//                                          @@@@@%@@@= :#@@@@+.\n//                                         :@@@@@@@#.:#@@@%-\n//                                         +@@@@@@-.*@@@*:\n//                                         #@@@@#.=@@@+.\n//                                         @@@@+-%@%=\n//                                        :@@@#%@%=\n//                                        +@@@@%-\n//                                        :#%%=\n//\n/**\n *     NOTICE\n *\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\n *     If you choose to receive it under the GPL v.3 license, the following applies:\n *     T-REX is a suite of smart contracts implementing the ERC-3643 standard and\n *     developed by Tokeny to manage and transfer financial assets on EVM blockchains\n *\n *     Copyright (C) 2023, Tokeny sàrl.\n *\n *     This program is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     This program is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\npragma solidity 0.8.17;\n\ninterface IClaimTopicsRegistry {\n    /**\n     *  this event is emitted when a claim topic has been added to the ClaimTopicsRegistry\n     *  the event is emitted by the 'addClaimTopic' function\n     *  `claimTopic` is the required claim added to the Claim Topics Registry\n     */\n    event ClaimTopicAdded(uint256 indexed claimTopic);\n\n    /**\n     *  this event is emitted when a claim topic has been removed from the ClaimTopicsRegistry\n     *  the event is emitted by the 'removeClaimTopic' function\n     *  `claimTopic` is the required claim removed from the Claim Topics Registry\n     */\n    event ClaimTopicRemoved(uint256 indexed claimTopic);\n\n    /**\n     * @dev Add a trusted claim topic (For example: KYC=1, AML=2).\n     * Only owner can call.\n     * emits `ClaimTopicAdded` event\n     * cannot add more than 15 topics for 1 token as adding more could create gas issues\n     * @param _claimTopic The claim topic index\n     */\n    function addClaimTopic(uint256 _claimTopic) external;\n\n    /**\n     *  @dev Remove a trusted claim topic (For example: KYC=1, AML=2).\n     *  Only owner can call.\n     *  emits `ClaimTopicRemoved` event\n     *  @param _claimTopic The claim topic index\n     */\n    function removeClaimTopic(uint256 _claimTopic) external;\n\n    /**\n     *  @dev Get the trusted claim topics for the security token\n     *  @return Array of trusted claim topics\n     */\n    function getClaimTopics() external view returns (uint256[] memory);\n}\n"
			},
			"https://github.com/TokenySolutions/T-REX/blob/main/contracts/registry/interface/ITrustedIssuersRegistry.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n//\n//                                             :+#####%%%%%%%%%%%%%%+\n//                                         .-*@@@%+.:+%@@@@@%%#***%@@%=\n//                                     :=*%@@@#=.      :#@@%       *@@@%=\n//                       .-+*%@%*-.:+%@@@@@@+.     -*+:  .=#.       :%@@@%-\n//                   :=*@@@@%%@@@@@@@@@%@@@-   .=#@@@%@%=             =@@@@#.\n//             -=+#%@@%#*=:.  :%@@@@%.   -*@@#*@@@@@@@#=:-              *@@@@+\n//            =@@%=:.     :=:   *@@@@@%#-   =%*%@@@@#+-.        =+       :%@@@%-\n//           -@@%.     .+@@@     =+=-.         @@#-           +@@@%-       =@@@@%:\n//          :@@@.    .+@@#%:                   :    .=*=-::.-%@@@+*@@=       +@@@@#.\n//          %@@:    +@%%*                         =%@@@@@@@@@@@#.  .*@%-       +@@@@*.\n//         #@@=                                .+@@@@%:=*@@@@@-      :%@%:      .*@@@@+\n//        *@@*                                +@@@#-@@%-:%@@*          +@@#.      :%@@@@-\n//       -@@%           .:-=++*##%%%@@@@@@@@@@@@*. :@+.@@@%:            .#@@+       =@@@@#:\n//      .@@@*-+*#%%%@@@@@@@@@@@@@@@@%%#**@@%@@@.   *@=*@@#                :#@%=      .#@@@@#-\n//      -%@@@@@@@@@@@@@@@*+==-:-@@@=    *@# .#@*-=*@@@@%=                 -%@@@*       =@@@@@%-\n//         -+%@@@#.   %@%%=   -@@:+@: -@@*    *@@*-::                   -%@@%=.         .*@@@@@#\n//            *@@@*  +@* *@@##@@-  #@*@@+    -@@=          .         :+@@@#:           .-+@@@%+-\n//             +@@@%*@@:..=@@@@*   .@@@*   .#@#.       .=+-       .=%@@@*.         :+#@@@@*=:\n//              =@@@@%@@@@@@@@@@@@@@@@@@@@@@%-      :+#*.       :*@@@%=.       .=#@@@@%+:\n//               .%@@=                 .....    .=#@@+.       .#@@@*:       -*%@@@@%+.\n//                 +@@#+===---:::...         .=%@@*-         +@@@+.      -*@@@@@%+.\n//                  -@@@@@@@@@@@@@@@@@@@@@@%@@@@=          -@@@+      -#@@@@@#=.\n//                    ..:::---===+++***###%%%@@@#-       .#@@+     -*@@@@@#=.\n//                                           @@@@@@+.   +@@*.   .+@@@@@%=.\n//                                          -@@@@@=   =@@%:   -#@@@@%+.\n//                                          +@@@@@. =@@@=  .+@@@@@*:\n//                                          #@@@@#:%@@#. :*@@@@#-\n//                                          @@@@@%@@@= :#@@@@+.\n//                                         :@@@@@@@#.:#@@@%-\n//                                         +@@@@@@-.*@@@*:\n//                                         #@@@@#.=@@@+.\n//                                         @@@@+-%@%=\n//                                        :@@@#%@%=\n//                                        +@@@@%-\n//                                        :#%%=\n//\n\n/**\n *     NOTICE\n *\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\n *     If you choose to receive it under the GPL v.3 license, the following applies:\n *     T-REX is a suite of smart contracts implementing the ERC-3643 standard and\n *     developed by Tokeny to manage and transfer financial assets on EVM blockchains\n *\n *     Copyright (C) 2023, Tokeny sàrl.\n *\n *     This program is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     This program is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\npragma solidity 0.8.17;\n\nimport \"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\";\n\ninterface ITrustedIssuersRegistry {\n    /**\n     *  this event is emitted when a trusted issuer is added in the registry.\n     *  the event is emitted by the addTrustedIssuer function\n     *  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract\n     *  `claimTopics` is the set of claims that the trusted issuer is allowed to emit\n     */\n    event TrustedIssuerAdded(IClaimIssuer indexed trustedIssuer, uint256[] claimTopics);\n\n    /**\n     *  this event is emitted when a trusted issuer is removed from the registry.\n     *  the event is emitted by the removeTrustedIssuer function\n     *  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract\n     */\n    event TrustedIssuerRemoved(IClaimIssuer indexed trustedIssuer);\n\n    /**\n     *  this event is emitted when the set of claim topics is changed for a given trusted issuer.\n     *  the event is emitted by the updateIssuerClaimTopics function\n     *  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract\n     *  `claimTopics` is the set of claims that the trusted issuer is allowed to emit\n     */\n    event ClaimTopicsUpdated(IClaimIssuer indexed trustedIssuer, uint256[] claimTopics);\n\n    /**\n     *  @dev registers a ClaimIssuer contract as trusted claim issuer.\n     *  Requires that a ClaimIssuer contract doesn't already exist\n     *  Requires that the claimTopics set is not empty\n     *  Requires that there is no more than 15 claimTopics\n     *  Requires that there is no more than 50 Trusted issuers\n     *  @param _trustedIssuer The ClaimIssuer contract address of the trusted claim issuer.\n     *  @param _claimTopics the set of claim topics that the trusted issuer is allowed to emit\n     *  This function can only be called by the owner of the Trusted Issuers Registry contract\n     *  emits a `TrustedIssuerAdded` event\n     */\n    function addTrustedIssuer(IClaimIssuer _trustedIssuer, uint256[] calldata _claimTopics) external;\n\n    /**\n     *  @dev Removes the ClaimIssuer contract of a trusted claim issuer.\n     *  Requires that the claim issuer contract to be registered first\n     *  @param _trustedIssuer the claim issuer to remove.\n     *  This function can only be called by the owner of the Trusted Issuers Registry contract\n     *  emits a `TrustedIssuerRemoved` event\n     */\n    function removeTrustedIssuer(IClaimIssuer _trustedIssuer) external;\n\n    /**\n     *  @dev Updates the set of claim topics that a trusted issuer is allowed to emit.\n     *  Requires that this ClaimIssuer contract already exists in the registry\n     *  Requires that the provided claimTopics set is not empty\n     *  Requires that there is no more than 15 claimTopics\n     *  @param _trustedIssuer the claim issuer to update.\n     *  @param _claimTopics the set of claim topics that the trusted issuer is allowed to emit\n     *  This function can only be called by the owner of the Trusted Issuers Registry contract\n     *  emits a `ClaimTopicsUpdated` event\n     */\n    function updateIssuerClaimTopics(IClaimIssuer _trustedIssuer, uint256[] calldata _claimTopics) external;\n\n    /**\n     *  @dev Function for getting all the trusted claim issuers stored.\n     *  @return array of all claim issuers registered.\n     */\n    function getTrustedIssuers() external view returns (IClaimIssuer[] memory);\n\n    /**\n     *  @dev Function for getting all the trusted issuer allowed for a given claim topic.\n     *  @param claimTopic the claim topic to get the trusted issuers for.\n     *  @return array of all claim issuer addresses that are allowed for the given claim topic.\n     */\n    function getTrustedIssuersForClaimTopic(uint256 claimTopic) external view returns (IClaimIssuer[] memory);\n\n    /**\n     *  @dev Checks if the ClaimIssuer contract is trusted\n     *  @param _issuer the address of the ClaimIssuer contract\n     *  @return true if the issuer is trusted, false otherwise.\n     */\n    function isTrustedIssuer(address _issuer) external view returns (bool);\n\n    /**\n     *  @dev Function for getting all the claim topic of trusted claim issuer\n     *  Requires the provided ClaimIssuer contract to be registered in the trusted issuers registry.\n     *  @param _trustedIssuer the trusted issuer concerned.\n     *  @return The set of claim topics that the trusted issuer is allowed to emit\n     */\n    function getTrustedIssuerClaimTopics(IClaimIssuer _trustedIssuer) external view returns (uint256[] memory);\n\n    /**\n     *  @dev Function for checking if the trusted claim issuer is allowed\n     *  to emit a certain claim topic\n     *  @param _issuer the address of the trusted issuer's ClaimIssuer contract\n     *  @param _claimTopic the Claim Topic that has to be checked to know if the `issuer` is allowed to emit it\n     *  @return true if the issuer is trusted for this claim topic.\n     */\n    function hasClaimTopic(address _issuer, uint256 _claimTopic) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@onchain-id/solidity/contracts/interface/IERC735.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.17;\n\n/**\n * @dev interface of the ERC735 (Claim Holder) standard as defined in the EIP.\n */\ninterface IERC735 {\n\n    /**\n     * @dev Emitted when a claim was added.\n     *\n     * Specification: MUST be triggered when a claim was successfully added.\n     */\n    event ClaimAdded(\n        bytes32 indexed claimId,\n        uint256 indexed topic,\n        uint256 scheme,\n        address indexed issuer,\n        bytes signature,\n        bytes data,\n        string uri);\n\n    /**\n     * @dev Emitted when a claim was removed.\n     *\n     * Specification: MUST be triggered when removeClaim was successfully called.\n     */\n    event ClaimRemoved(\n        bytes32 indexed claimId,\n        uint256 indexed topic,\n        uint256 scheme,\n        address indexed issuer,\n        bytes signature,\n        bytes data,\n        string uri);\n\n    /**\n     * @dev Emitted when a claim was changed.\n     *\n     * Specification: MUST be triggered when addClaim was successfully called on an existing claimId.\n     */\n    event ClaimChanged(\n        bytes32 indexed claimId,\n        uint256 indexed topic,\n        uint256 scheme,\n        address indexed issuer,\n        bytes signature,\n        bytes data,\n        string uri);\n\n    /**\n     * @dev Add or update a claim.\n     *\n     * Triggers Event: `ClaimAdded`, `ClaimChanged`\n     *\n     * Specification: Add or update a claim from an issuer.\n     *\n     * _signature is a signed message of the following structure:\n     * `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`.\n     * Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`.\n     */\n    function addClaim(\n        uint256 _topic,\n        uint256 _scheme,\n        address issuer,\n        bytes calldata _signature,\n        bytes calldata _data,\n        string calldata _uri)\n    external returns (bytes32 claimRequestId);\n\n    /**\n     * @dev Removes a claim.\n     *\n     * Triggers Event: `ClaimRemoved`\n     *\n     * Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\n     */\n    function removeClaim(bytes32 _claimId) external returns (bool success);\n\n    /**\n     * @dev Get a claim by its ID.\n     *\n     * Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\n     */\n    function getClaim(bytes32 _claimId)\n    external view returns(\n        uint256 topic,\n        uint256 scheme,\n        address issuer,\n        bytes memory signature,\n        bytes memory data,\n        string memory uri);\n\n    /**\n     * @dev Returns an array of claim IDs by topic.\n     */\n    function getClaimIdsByTopic(uint256 _topic) external view returns(bytes32[] memory claimIds);\n}\n"
			},
			"@onchain-id/solidity/contracts/interface/IERC734.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.17;\n\n/**\n * @dev interface of the ERC734 (Key Holder) standard as defined in the EIP.\n */\ninterface IERC734 {\n\n    /**\n     * @dev Emitted when an execution request was approved.\n     *\n     * Specification: MUST be triggered when approve was successfully called.\n     */\n    event Approved(uint256 indexed executionId, bool approved);\n\n    /**\n     * @dev Emitted when an execute operation was approved and successfully performed.\n     *\n     * Specification: MUST be triggered when approve was called and the execution was successfully approved.\n     */\n    event Executed(uint256 indexed executionId, address indexed to, uint256 indexed value, bytes data);\n\n    /**\n     * @dev Emitted when an execution request was performed via `execute`.\n     *\n     * Specification: MUST be triggered when execute was successfully called.\n     */\n    event ExecutionRequested(uint256 indexed executionId, address indexed to, uint256 indexed value, bytes data);\n\n    /**\n     * @dev Emitted when an execute operation was called and failed\n     *\n     * Specification: MUST be triggered when execute call failed\n     */\n    event ExecutionFailed(uint256 indexed executionId, address indexed to, uint256 indexed value, bytes data);\n\n    /**\n     * @dev Emitted when a key was added to the Identity.\n     *\n     * Specification: MUST be triggered when addKey was successfully called.\n     */\n    event KeyAdded(bytes32 indexed key, uint256 indexed purpose, uint256 indexed keyType);\n\n    /**\n     * @dev Emitted when a key was removed from the Identity.\n     *\n     * Specification: MUST be triggered when removeKey was successfully called.\n     */\n    event KeyRemoved(bytes32 indexed key, uint256 indexed purpose, uint256 indexed keyType);\n\n    /**\n     * @dev Adds a _key to the identity. The _purpose specifies the purpose of the key.\n     *\n     * Triggers Event: `KeyAdded`\n     *\n     * Specification: MUST only be done by keys of purpose 1, or the identity\n     * itself. If it's the identity itself, the approval process will determine its approval.\n     */\n    function addKey(bytes32 _key, uint256 _purpose, uint256 _keyType) external returns (bool success);\n\n    /**\n    * @dev Approves an execution.\n    *\n    * Triggers Event: `Approved`\n    * Triggers on execution successful Event: `Executed`\n    * Triggers on execution failure Event: `ExecutionFailed`\n    */\n    function approve(uint256 _id, bool _approve) external returns (bool success);\n\n    /**\n     * @dev Removes _purpose for _key from the identity.\n     *\n     * Triggers Event: `KeyRemoved`\n     *\n     * Specification: MUST only be done by keys of purpose 1, or the identity itself.\n     * If it's the identity itself, the approval process will determine its approval.\n     */\n    function removeKey(bytes32 _key, uint256 _purpose) external returns (bool success);\n\n    /**\n     * @dev Passes an execution instruction to an ERC734 identity.\n     * How the execution is handled is up to the identity implementation:\n     * An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to\n     * approve this execution.\n     * Execute COULD be used as the only accessor for `addKey` and `removeKey`.\n     *\n     * Triggers Event: ExecutionRequested\n     * Triggers on direct execution Event: Executed\n     */\n    function execute(address _to, uint256 _value, bytes calldata _data) external payable returns (uint256 executionId);\n\n    /**\n     * @dev Returns the full key data, if present in the identity.\n     */\n    function getKey(bytes32 _key) external view returns (uint256[] memory purposes, uint256 keyType, bytes32 key);\n\n    /**\n     * @dev Returns the list of purposes associated with a key.\n     */\n    function getKeyPurposes(bytes32 _key) external view returns(uint256[] memory _purposes);\n\n    /**\n     * @dev Returns an array of public key bytes32 held by this identity.\n     */\n    function getKeysByPurpose(uint256 _purpose) external view returns (bytes32[] memory keys);\n\n    /**\n     * @dev Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE.\n     */\n    function keyHasPurpose(bytes32 _key, uint256 _purpose) external view returns (bool exists);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol": {
				"IClaimIssuer": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "Approved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "ClaimRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "Executed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "ExecutionFailed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "ExecutionRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "purpose",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								}
							],
							"name": "KeyAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "purpose",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								}
							],
							"name": "KeyRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_topic",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_scheme",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "string",
									"name": "_uri",
									"type": "string"
								}
							],
							"name": "addClaim",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "claimRequestId",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_keyType",
									"type": "uint256"
								}
							],
							"name": "addKey",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_approve",
									"type": "bool"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "execute",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_claimId",
									"type": "bytes32"
								}
							],
							"name": "getClaim",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_topic",
									"type": "uint256"
								}
							],
							"name": "getClaimIdsByTopic",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "claimIds",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								}
							],
							"name": "getKey",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "purposes",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								}
							],
							"name": "getKeyPurposes",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "_purposes",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "getKeysByPurpose",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "keys",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "sig",
									"type": "bytes"
								},
								{
									"internalType": "bytes32",
									"name": "dataHash",
									"type": "bytes32"
								}
							],
							"name": "getRecoveredAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_sig",
									"type": "bytes"
								}
							],
							"name": "isClaimRevoked",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IIdentity",
									"name": "_identity",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "claimTopic",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "sig",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "isClaimValid",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "keyHasPurpose",
							"outputs": [
								{
									"internalType": "bool",
									"name": "exists",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_claimId",
									"type": "bytes32"
								}
							],
							"name": "removeClaim",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "removeKey",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_claimId",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "_identity",
									"type": "address"
								}
							],
							"name": "revokeClaim",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "revokeClaimBySignature",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"ClaimRevoked(bytes)": {
								"details": "Emitted when a claim is revoked. Specification: MUST be triggered when revoking a claim."
							}
						},
						"kind": "dev",
						"methods": {
							"addClaim(uint256,uint256,address,bytes,bytes,string)": {
								"details": "Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`."
							},
							"addKey(bytes32,uint256,uint256)": {
								"details": "Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."
							},
							"approve(uint256,bool)": {
								"details": "Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`"
							},
							"execute(address,uint256,bytes)": {
								"details": "Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed"
							},
							"getClaim(bytes32)": {
								"details": "Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
							},
							"getClaimIdsByTopic(uint256)": {
								"details": "Returns an array of claim IDs by topic."
							},
							"getKey(bytes32)": {
								"details": "Returns the full key data, if present in the identity."
							},
							"getKeyPurposes(bytes32)": {
								"details": "Returns the list of purposes associated with a key."
							},
							"getKeysByPurpose(uint256)": {
								"details": "Returns an array of public key bytes32 held by this identity."
							},
							"getRecoveredAddress(bytes,bytes32)": {
								"details": "returns the address that signed the given data",
								"params": {
									"dataHash": "the data that was signed returns the address that signed dataHash and created the signature sig",
									"sig": "the signature of the data"
								}
							},
							"isClaimRevoked(bytes)": {
								"details": "Returns revocation status of a claim.",
								"params": {
									"_sig": "the signature of the claim"
								},
								"returns": {
									"_0": "isRevoked true if the claim is revoked and false otherwise"
								}
							},
							"isClaimValid(address,uint256,bytes,bytes)": {
								"details": "Checks if a claim is valid.",
								"params": {
									"_identity": "the identity contract related to the claim",
									"claimTopic": "the claim topic of the claim",
									"data": "the data field of the claim",
									"sig": "the signature of the claim"
								},
								"returns": {
									"_0": "claimValid true if the claim is valid, false otherwise"
								}
							},
							"keyHasPurpose(bytes32,uint256)": {
								"details": "Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE."
							},
							"removeClaim(bytes32)": {
								"details": "Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
							},
							"removeKey(bytes32,uint256)": {
								"details": "Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."
							},
							"revokeClaim(bytes32,address)": {
								"details": "Revoke a claim previously issued, the claim is no longer considered as valid after revocation.",
								"params": {
									"_claimId": "the id of the claim",
									"_identity": "the address of the identity contract"
								},
								"returns": {
									"_0": "isRevoked true when the claim is revoked"
								}
							},
							"revokeClaimBySignature(bytes)": {
								"details": "Revoke a claim previously issued, the claim is no longer considered as valid after revocation.",
								"params": {
									"signature": "the signature of the claim"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addClaim(uint256,uint256,address,bytes,bytes,string)": "b1a34e0d",
							"addKey(bytes32,uint256,uint256)": "1d381240",
							"approve(uint256,bool)": "747442d3",
							"execute(address,uint256,bytes)": "b61d27f6",
							"getClaim(bytes32)": "c9100bcb",
							"getClaimIdsByTopic(uint256)": "80e9e9e1",
							"getKey(bytes32)": "12aaac70",
							"getKeyPurposes(bytes32)": "fb307b34",
							"getKeysByPurpose(uint256)": "9010f726",
							"getRecoveredAddress(bytes,bytes32)": "c3b129e3",
							"isClaimRevoked(bytes)": "2646b264",
							"isClaimValid(address,uint256,bytes,bytes)": "c0969a6e",
							"keyHasPurpose(bytes32,uint256)": "d202158d",
							"removeClaim(bytes32)": "4eee424a",
							"removeKey(bytes32,uint256)": "53d413c5",
							"revokeClaim(bytes32,address)": "73c33708",
							"revokeClaimBySignature(bytes)": "9f7f9edd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"Approved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"ClaimRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"addClaim\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"claimRequestId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_keyType\",\"type\":\"uint256\"}],\"name\":\"addKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_approve\",\"type\":\"bool\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"getClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"}],\"name\":\"getClaimIdsByTopic\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"claimIds\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKey\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"purposes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKeyPurposes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_purposes\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"getKeysByPurpose\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"keys\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"dataHash\",\"type\":\"bytes32\"}],\"name\":\"getRecoveredAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_sig\",\"type\":\"bytes\"}],\"name\":\"isClaimRevoked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IIdentity\",\"name\":\"_identity\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"isClaimValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"keyHasPurpose\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"removeClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"removeKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_identity\",\"type\":\"address\"}],\"name\":\"revokeClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"revokeClaimBySignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ClaimRevoked(bytes)\":{\"details\":\"Emitted when a claim is revoked. Specification: MUST be triggered when revoking a claim.\"}},\"kind\":\"dev\",\"methods\":{\"addClaim(uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`.\"},\"addKey(bytes32,uint256,uint256)\":{\"details\":\"Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"},\"approve(uint256,bool)\":{\"details\":\"Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`\"},\"execute(address,uint256,bytes)\":{\"details\":\"Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed\"},\"getClaim(bytes32)\":{\"details\":\"Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"},\"getClaimIdsByTopic(uint256)\":{\"details\":\"Returns an array of claim IDs by topic.\"},\"getKey(bytes32)\":{\"details\":\"Returns the full key data, if present in the identity.\"},\"getKeyPurposes(bytes32)\":{\"details\":\"Returns the list of purposes associated with a key.\"},\"getKeysByPurpose(uint256)\":{\"details\":\"Returns an array of public key bytes32 held by this identity.\"},\"getRecoveredAddress(bytes,bytes32)\":{\"details\":\"returns the address that signed the given data\",\"params\":{\"dataHash\":\"the data that was signed returns the address that signed dataHash and created the signature sig\",\"sig\":\"the signature of the data\"}},\"isClaimRevoked(bytes)\":{\"details\":\"Returns revocation status of a claim.\",\"params\":{\"_sig\":\"the signature of the claim\"},\"returns\":{\"_0\":\"isRevoked true if the claim is revoked and false otherwise\"}},\"isClaimValid(address,uint256,bytes,bytes)\":{\"details\":\"Checks if a claim is valid.\",\"params\":{\"_identity\":\"the identity contract related to the claim\",\"claimTopic\":\"the claim topic of the claim\",\"data\":\"the data field of the claim\",\"sig\":\"the signature of the claim\"},\"returns\":{\"_0\":\"claimValid true if the claim is valid, false otherwise\"}},\"keyHasPurpose(bytes32,uint256)\":{\"details\":\"Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE.\"},\"removeClaim(bytes32)\":{\"details\":\"Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"},\"removeKey(bytes32,uint256)\":{\"details\":\"Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"},\"revokeClaim(bytes32,address)\":{\"details\":\"Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\",\"params\":{\"_claimId\":\"the id of the claim\",\"_identity\":\"the address of the identity contract\"},\"returns\":{\"_0\":\"isRevoked true when the claim is revoked\"}},\"revokeClaimBySignature(bytes)\":{\"details\":\"Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\",\"params\":{\"signature\":\"the signature of the claim\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"revokeClaim(bytes32,address)\":{\"notice\":\"will fetch the claim from the identity contract (unsafe).\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\":\"IClaimIssuer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\":{\"keccak256\":\"0xa7372faa967bc7eaedf66ec51907a21ca789123ad8a6fd371b32f2d2a6f27817\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dcf7cf65c7aff1f78a9071c47b05865c0fbce9d7c965430e8438ba7a451a2ba4\",\"dweb:/ipfs/QmViSrFA2KQpFeWssbJWQtdpa62A9MeEWaxqgs8dyPssga\"]},\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x419198390ae57e3a090a454452931ac8a6605acfd296809c43d4966c9cea2d19\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8f8c7d8d74a6e7dff2858abd7f10aefe1cc88bb629ec6a0c164e4043e2c70eb7\",\"dweb:/ipfs/QmRg2WFW8T2YEt1zJ7PGSAFxcu1L46pNWxm6MZbuN7M4Qc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"revokeClaim(bytes32,address)": {
								"notice": "will fetch the claim from the identity contract (unsafe)."
							}
						},
						"version": 1
					}
				}
			},
			"@onchain-id/solidity/contracts/interface/IERC734.sol": {
				"IERC734": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "Approved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "Executed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "ExecutionFailed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "ExecutionRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "purpose",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								}
							],
							"name": "KeyAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "purpose",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								}
							],
							"name": "KeyRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_keyType",
									"type": "uint256"
								}
							],
							"name": "addKey",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_approve",
									"type": "bool"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "execute",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								}
							],
							"name": "getKey",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "purposes",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								}
							],
							"name": "getKeyPurposes",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "_purposes",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "getKeysByPurpose",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "keys",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "keyHasPurpose",
							"outputs": [
								{
									"internalType": "bool",
									"name": "exists",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "removeKey",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "interface of the ERC734 (Key Holder) standard as defined in the EIP.",
						"events": {
							"Approved(uint256,bool)": {
								"details": "Emitted when an execution request was approved. Specification: MUST be triggered when approve was successfully called."
							},
							"Executed(uint256,address,uint256,bytes)": {
								"details": "Emitted when an execute operation was approved and successfully performed. Specification: MUST be triggered when approve was called and the execution was successfully approved."
							},
							"ExecutionFailed(uint256,address,uint256,bytes)": {
								"details": "Emitted when an execute operation was called and failed Specification: MUST be triggered when execute call failed"
							},
							"ExecutionRequested(uint256,address,uint256,bytes)": {
								"details": "Emitted when an execution request was performed via `execute`. Specification: MUST be triggered when execute was successfully called."
							},
							"KeyAdded(bytes32,uint256,uint256)": {
								"details": "Emitted when a key was added to the Identity. Specification: MUST be triggered when addKey was successfully called."
							},
							"KeyRemoved(bytes32,uint256,uint256)": {
								"details": "Emitted when a key was removed from the Identity. Specification: MUST be triggered when removeKey was successfully called."
							}
						},
						"kind": "dev",
						"methods": {
							"addKey(bytes32,uint256,uint256)": {
								"details": "Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."
							},
							"approve(uint256,bool)": {
								"details": "Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`"
							},
							"execute(address,uint256,bytes)": {
								"details": "Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed"
							},
							"getKey(bytes32)": {
								"details": "Returns the full key data, if present in the identity."
							},
							"getKeyPurposes(bytes32)": {
								"details": "Returns the list of purposes associated with a key."
							},
							"getKeysByPurpose(uint256)": {
								"details": "Returns an array of public key bytes32 held by this identity."
							},
							"keyHasPurpose(bytes32,uint256)": {
								"details": "Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE."
							},
							"removeKey(bytes32,uint256)": {
								"details": "Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addKey(bytes32,uint256,uint256)": "1d381240",
							"approve(uint256,bool)": "747442d3",
							"execute(address,uint256,bytes)": "b61d27f6",
							"getKey(bytes32)": "12aaac70",
							"getKeyPurposes(bytes32)": "fb307b34",
							"getKeysByPurpose(uint256)": "9010f726",
							"keyHasPurpose(bytes32,uint256)": "d202158d",
							"removeKey(bytes32,uint256)": "53d413c5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"Approved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_keyType\",\"type\":\"uint256\"}],\"name\":\"addKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_approve\",\"type\":\"bool\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKey\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"purposes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKeyPurposes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_purposes\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"getKeysByPurpose\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"keys\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"keyHasPurpose\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"removeKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"interface of the ERC734 (Key Holder) standard as defined in the EIP.\",\"events\":{\"Approved(uint256,bool)\":{\"details\":\"Emitted when an execution request was approved. Specification: MUST be triggered when approve was successfully called.\"},\"Executed(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execute operation was approved and successfully performed. Specification: MUST be triggered when approve was called and the execution was successfully approved.\"},\"ExecutionFailed(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execute operation was called and failed Specification: MUST be triggered when execute call failed\"},\"ExecutionRequested(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execution request was performed via `execute`. Specification: MUST be triggered when execute was successfully called.\"},\"KeyAdded(bytes32,uint256,uint256)\":{\"details\":\"Emitted when a key was added to the Identity. Specification: MUST be triggered when addKey was successfully called.\"},\"KeyRemoved(bytes32,uint256,uint256)\":{\"details\":\"Emitted when a key was removed from the Identity. Specification: MUST be triggered when removeKey was successfully called.\"}},\"kind\":\"dev\",\"methods\":{\"addKey(bytes32,uint256,uint256)\":{\"details\":\"Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"},\"approve(uint256,bool)\":{\"details\":\"Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`\"},\"execute(address,uint256,bytes)\":{\"details\":\"Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed\"},\"getKey(bytes32)\":{\"details\":\"Returns the full key data, if present in the identity.\"},\"getKeyPurposes(bytes32)\":{\"details\":\"Returns the list of purposes associated with a key.\"},\"getKeysByPurpose(uint256)\":{\"details\":\"Returns an array of public key bytes32 held by this identity.\"},\"keyHasPurpose(bytes32,uint256)\":{\"details\":\"Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE.\"},\"removeKey(bytes32,uint256)\":{\"details\":\"Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@onchain-id/solidity/contracts/interface/IERC734.sol\":\"IERC734\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@onchain-id/solidity/contracts/interface/IERC735.sol": {
				"IERC735": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_topic",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_scheme",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "string",
									"name": "_uri",
									"type": "string"
								}
							],
							"name": "addClaim",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "claimRequestId",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_claimId",
									"type": "bytes32"
								}
							],
							"name": "getClaim",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_topic",
									"type": "uint256"
								}
							],
							"name": "getClaimIdsByTopic",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "claimIds",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_claimId",
									"type": "bytes32"
								}
							],
							"name": "removeClaim",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "interface of the ERC735 (Claim Holder) standard as defined in the EIP.",
						"events": {
							"ClaimAdded(bytes32,uint256,uint256,address,bytes,bytes,string)": {
								"details": "Emitted when a claim was added. Specification: MUST be triggered when a claim was successfully added."
							},
							"ClaimChanged(bytes32,uint256,uint256,address,bytes,bytes,string)": {
								"details": "Emitted when a claim was changed. Specification: MUST be triggered when addClaim was successfully called on an existing claimId."
							},
							"ClaimRemoved(bytes32,uint256,uint256,address,bytes,bytes,string)": {
								"details": "Emitted when a claim was removed. Specification: MUST be triggered when removeClaim was successfully called."
							}
						},
						"kind": "dev",
						"methods": {
							"addClaim(uint256,uint256,address,bytes,bytes,string)": {
								"details": "Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`."
							},
							"getClaim(bytes32)": {
								"details": "Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
							},
							"getClaimIdsByTopic(uint256)": {
								"details": "Returns an array of claim IDs by topic."
							},
							"removeClaim(bytes32)": {
								"details": "Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addClaim(uint256,uint256,address,bytes,bytes,string)": "b1a34e0d",
							"getClaim(bytes32)": "c9100bcb",
							"getClaimIdsByTopic(uint256)": "80e9e9e1",
							"removeClaim(bytes32)": "4eee424a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"addClaim\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"claimRequestId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"getClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"}],\"name\":\"getClaimIdsByTopic\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"claimIds\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"removeClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"interface of the ERC735 (Claim Holder) standard as defined in the EIP.\",\"events\":{\"ClaimAdded(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was added. Specification: MUST be triggered when a claim was successfully added.\"},\"ClaimChanged(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was changed. Specification: MUST be triggered when addClaim was successfully called on an existing claimId.\"},\"ClaimRemoved(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was removed. Specification: MUST be triggered when removeClaim was successfully called.\"}},\"kind\":\"dev\",\"methods\":{\"addClaim(uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`.\"},\"getClaim(bytes32)\":{\"details\":\"Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"},\"getClaimIdsByTopic(uint256)\":{\"details\":\"Returns an array of claim IDs by topic.\"},\"removeClaim(bytes32)\":{\"details\":\"Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@onchain-id/solidity/contracts/interface/IERC735.sol\":\"IERC735\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@onchain-id/solidity/contracts/interface/IIdentity.sol": {
				"IIdentity": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "Approved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "Executed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "ExecutionFailed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "ExecutionRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "purpose",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								}
							],
							"name": "KeyAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "purpose",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								}
							],
							"name": "KeyRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_topic",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_scheme",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "string",
									"name": "_uri",
									"type": "string"
								}
							],
							"name": "addClaim",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "claimRequestId",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_keyType",
									"type": "uint256"
								}
							],
							"name": "addKey",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_approve",
									"type": "bool"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "execute",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_claimId",
									"type": "bytes32"
								}
							],
							"name": "getClaim",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_topic",
									"type": "uint256"
								}
							],
							"name": "getClaimIdsByTopic",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "claimIds",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								}
							],
							"name": "getKey",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "purposes",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								}
							],
							"name": "getKeyPurposes",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "_purposes",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "getKeysByPurpose",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "keys",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "keyHasPurpose",
							"outputs": [
								{
									"internalType": "bool",
									"name": "exists",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_claimId",
									"type": "bytes32"
								}
							],
							"name": "removeClaim",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "removeKey",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"addClaim(uint256,uint256,address,bytes,bytes,string)": {
								"details": "Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`."
							},
							"addKey(bytes32,uint256,uint256)": {
								"details": "Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."
							},
							"approve(uint256,bool)": {
								"details": "Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`"
							},
							"execute(address,uint256,bytes)": {
								"details": "Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed"
							},
							"getClaim(bytes32)": {
								"details": "Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
							},
							"getClaimIdsByTopic(uint256)": {
								"details": "Returns an array of claim IDs by topic."
							},
							"getKey(bytes32)": {
								"details": "Returns the full key data, if present in the identity."
							},
							"getKeyPurposes(bytes32)": {
								"details": "Returns the list of purposes associated with a key."
							},
							"getKeysByPurpose(uint256)": {
								"details": "Returns an array of public key bytes32 held by this identity."
							},
							"keyHasPurpose(bytes32,uint256)": {
								"details": "Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE."
							},
							"removeClaim(bytes32)": {
								"details": "Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
							},
							"removeKey(bytes32,uint256)": {
								"details": "Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addClaim(uint256,uint256,address,bytes,bytes,string)": "b1a34e0d",
							"addKey(bytes32,uint256,uint256)": "1d381240",
							"approve(uint256,bool)": "747442d3",
							"execute(address,uint256,bytes)": "b61d27f6",
							"getClaim(bytes32)": "c9100bcb",
							"getClaimIdsByTopic(uint256)": "80e9e9e1",
							"getKey(bytes32)": "12aaac70",
							"getKeyPurposes(bytes32)": "fb307b34",
							"getKeysByPurpose(uint256)": "9010f726",
							"keyHasPurpose(bytes32,uint256)": "d202158d",
							"removeClaim(bytes32)": "4eee424a",
							"removeKey(bytes32,uint256)": "53d413c5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"Approved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"addClaim\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"claimRequestId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_keyType\",\"type\":\"uint256\"}],\"name\":\"addKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_approve\",\"type\":\"bool\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"getClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"}],\"name\":\"getClaimIdsByTopic\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"claimIds\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKey\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"purposes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKeyPurposes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_purposes\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"getKeysByPurpose\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"keys\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"keyHasPurpose\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"removeClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"removeKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addClaim(uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`.\"},\"addKey(bytes32,uint256,uint256)\":{\"details\":\"Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"},\"approve(uint256,bool)\":{\"details\":\"Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`\"},\"execute(address,uint256,bytes)\":{\"details\":\"Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed\"},\"getClaim(bytes32)\":{\"details\":\"Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"},\"getClaimIdsByTopic(uint256)\":{\"details\":\"Returns an array of claim IDs by topic.\"},\"getKey(bytes32)\":{\"details\":\"Returns the full key data, if present in the identity.\"},\"getKeyPurposes(bytes32)\":{\"details\":\"Returns the list of purposes associated with a key.\"},\"getKeysByPurpose(uint256)\":{\"details\":\"Returns an array of public key bytes32 held by this identity.\"},\"keyHasPurpose(bytes32,uint256)\":{\"details\":\"Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE.\"},\"removeClaim(bytes32)\":{\"details\":\"Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"},\"removeKey(bytes32,uint256)\":{\"details\":\"Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":\"IIdentity\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x419198390ae57e3a090a454452931ac8a6605acfd296809c43d4966c9cea2d19\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8f8c7d8d74a6e7dff2858abd7f10aefe1cc88bb629ec6a0c164e4043e2c70eb7\",\"dweb:/ipfs/QmRg2WFW8T2YEt1zJ7PGSAFxcu1L46pNWxm6MZbuN7M4Qc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 462,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 465,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 995,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 334,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_owner",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 454,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_initialized": {
								"custom:oz-retyped-from": "bool",
								"details": "Indicates that the contract has been initialized."
							},
							"_initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 462,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 465,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"AddressUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:9374  library AddressUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:9374  library AddressUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220406c02da6ea54c727fe88902c530e9f5f7806f0ab57e7f2579e3fced1b9ea07264736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220406c02da6ea54c727fe88902c530e9f5f7806f0ab57e7f2579e3fced1b9ea07264736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH PUSH13 0x2DA6EA54C727FE88902C530E9 CREATE2 0xF7 DUP1 PUSH16 0xAB57E7F2579E3FCED1B9EA07264736F PUSH13 0x63430008110033000000000000 ",
							"sourceMap": "194:9180:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220406c02da6ea54c727fe88902c530e9f5f7806f0ab57e7f2579e3fced1b9ea07264736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH PUSH13 0x2DA6EA54C727FE88902C530E9 CREATE2 0xF7 DUP1 PUSH16 0xAB57E7F2579E3FCED1B9EA07264736F PUSH13 0x63430008110033000000000000 ",
							"sourceMap": "194:9180:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220406c02da6ea54c727fe88902c530e9f5f7806f0ab57e7f2579e3fced1b9ea07264736f6c63430008110033",
									".code": [
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
								"@onchain-id/solidity/contracts/interface/IERC734.sol",
								"@onchain-id/solidity/contracts/interface/IERC735.sol",
								"@onchain-id/solidity/contracts/interface/IIdentity.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"Tokeny Project/Compliance/modular/IModularCompliance.sol",
								"Tokeny Project/Compliance/modular/MCStorage.sol",
								"Tokeny Project/Compliance/modular/ModularCompliance.sol",
								"Tokeny Project/Compliance/modular/Modules/IModule.sol",
								"https://github.com/TokenySolutions/T-REX/blob/main/contracts/compliance/modular/IModularCompliance.sol",
								"https://github.com/TokenySolutions/T-REX/blob/main/contracts/registry/interface/IClaimTopicsRegistry.sol",
								"https://github.com/TokenySolutions/T-REX/blob/main/contracts/registry/interface/IIdentityRegistry.sol",
								"https://github.com/TokenySolutions/T-REX/blob/main/contracts/registry/interface/IIdentityRegistryStorage.sol",
								"https://github.com/TokenySolutions/T-REX/blob/main/contracts/registry/interface/ITrustedIssuersRegistry.sol",
								"https://github.com/TokenySolutions/T-REX/blob/main/contracts/token/IToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 462,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 465,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 995,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Tokeny Project/Compliance/modular/MCStorage.sol": {
				"MCStorage": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Tokeny Project/Compliance/modular/MCStorage.sol\":62:390  contract MCStorage {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Tokeny Project/Compliance/modular/MCStorage.sol\":62:390  contract MCStorage {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205ea5e2401f4c10fb3f980f2674665ff3d966d2fd95d412e63f39f5cf03b4a82864736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212205ea5e2401f4c10fb3f980f2674665ff3d966d2fd95d412e63f39f5cf03b4a82864736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E 0xA5 0xE2 BLOCKHASH 0x1F 0x4C LT 0xFB EXTCODEHASH SWAP9 0xF 0x26 PUSH21 0x665FF3D966D2FD95D412E63F39F5CF03B4A8286473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "62:328:10:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212205ea5e2401f4c10fb3f980f2674665ff3d966d2fd95d412e63f39f5cf03b4a82864736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E 0xA5 0xE2 BLOCKHASH 0x1F 0x4C LT 0xFB EXTCODEHASH SWAP9 0xF 0x26 PUSH21 0x665FF3D966D2FD95D412E63F39F5CF03B4A8286473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "62:328:10:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 62,
									"end": 390,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 62,
									"end": 390,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 62,
									"end": 390,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 62,
									"end": 390,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 62,
									"end": 390,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 62,
									"end": 390,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 62,
									"end": 390,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 62,
									"end": 390,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 62,
									"end": 390,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 390,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 62,
									"end": 390,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 62,
									"end": 390,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 62,
									"end": 390,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 62,
									"end": 390,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 62,
									"end": 390,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 390,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 62,
									"end": 390,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 390,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 390,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 62,
									"end": 390,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 390,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205ea5e2401f4c10fb3f980f2674665ff3d966d2fd95d412e63f39f5cf03b4a82864736f6c63430008110033",
									".code": [
										{
											"begin": 62,
											"end": 390,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 62,
											"end": 390,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 62,
											"end": 390,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 62,
											"end": 390,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 62,
											"end": 390,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 62,
											"end": 390,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
								"@onchain-id/solidity/contracts/interface/IERC734.sol",
								"@onchain-id/solidity/contracts/interface/IERC735.sol",
								"@onchain-id/solidity/contracts/interface/IIdentity.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"Tokeny Project/Compliance/modular/IModularCompliance.sol",
								"Tokeny Project/Compliance/modular/MCStorage.sol",
								"Tokeny Project/Compliance/modular/ModularCompliance.sol",
								"Tokeny Project/Compliance/modular/Modules/IModule.sol",
								"https://github.com/TokenySolutions/T-REX/blob/main/contracts/compliance/modular/IModularCompliance.sol",
								"https://github.com/TokenySolutions/T-REX/blob/main/contracts/registry/interface/IClaimTopicsRegistry.sol",
								"https://github.com/TokenySolutions/T-REX/blob/main/contracts/registry/interface/IIdentityRegistry.sol",
								"https://github.com/TokenySolutions/T-REX/blob/main/contracts/registry/interface/IIdentityRegistryStorage.sol",
								"https://github.com/TokenySolutions/T-REX/blob/main/contracts/registry/interface/ITrustedIssuersRegistry.sol",
								"https://github.com/TokenySolutions/T-REX/blob/main/contracts/token/IToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Tokeny Project/Compliance/modular/MCStorage.sol\":\"MCStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Tokeny Project/Compliance/modular/MCStorage.sol\":{\"keccak256\":\"0xc2f7353ffd1544ed9a32a686f08e19638cc8565ed11a813d82bb06b592cf1825\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1de12e376bc9dcbb70119a351a7b0d752b9554f8c3536bcfc07cee9a3e8462\",\"dweb:/ipfs/QmU46tA1a2c58kTv5J1XMCKutcQ6NotVSLLNGkzPgwwn4a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1080,
								"contract": "Tokeny Project/Compliance/modular/MCStorage.sol:MCStorage",
								"label": "_tokenBound",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1084,
								"contract": "Tokeny Project/Compliance/modular/MCStorage.sol:MCStorage",
								"label": "_modules",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 1089,
								"contract": "Tokeny Project/Compliance/modular/MCStorage.sol:MCStorage",
								"label": "_moduleBound",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1093,
								"contract": "Tokeny Project/Compliance/modular/MCStorage.sol:MCStorage",
								"label": "__gap",
								"offset": 0,
								"slot": "3",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Tokeny Project/Compliance/modular/ModularCompliance.sol": {
				"ModularCompliance": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_module",
									"type": "address"
								}
							],
							"name": "ModuleAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes4",
									"name": "selector",
									"type": "bytes4"
								}
							],
							"name": "ModuleInteraction",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_module",
									"type": "address"
								}
							],
							"name": "ModuleRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "TokenBound",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "TokenUnbound",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_module",
									"type": "address"
								}
							],
							"name": "addModule",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "bindToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "callData",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "_module",
									"type": "address"
								}
							],
							"name": "callModuleFunction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "canTransfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "created",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "destroyed",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getModules",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTokenBound",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "init",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_module",
									"type": "address"
								}
							],
							"name": "isModuleBound",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_module",
									"type": "address"
								}
							],
							"name": "removeModule",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferred",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "unbindToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"addModule(address)": {
								"details": "adds a module to the list of compliance modules",
								"params": {
									"_module": "address of the module to add  there cannot be more than 25 modules bound to the modular compliance for gas cost reasons  This function can be called ONLY by the owner of the compliance contract  Emits a ModuleAdded event"
								}
							},
							"bindToken(address)": {
								"details": "binds a token to the compliance contract",
								"params": {
									"_token": "address of the token to bind  This function can be called ONLY by the owner of the compliance contract  Emits a TokenBound event"
								}
							},
							"callModuleFunction(bytes,address)": {
								"details": "calls any function on bound modules  can be called only on bound modules",
								"params": {
									"_module": "The address of the module  This function can be called only by the modular compliance owner  emits a `ModuleInteraction` event",
									"callData": "the bytecode for interaction with the module, abi encoded"
								}
							},
							"getModules()": {
								"details": "getter for the modules bound to the compliance contract  returns address array of module contracts bound to the compliance"
							},
							"getTokenBound()": {
								"details": "getter for the address of the token bound  returns the address of the token"
							},
							"isModuleBound(address)": {
								"details": "checks if a module is bound to the compliance contract  returns true if module is bound, false otherwise"
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"removeModule(address)": {
								"details": "removes a module from the list of compliance modules",
								"params": {
									"_module": "address of the module to remove  This function can be called ONLY by the owner of the compliance contract  Emits a ModuleRemoved event"
								}
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"unbindToken(address)": {
								"details": "unbinds a token from the compliance contract",
								"params": {
									"_token": "address of the token to unbind  This function can be called ONLY by the owner of the compliance contract  Emits a TokenUnbound event"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":326:5613  contract ModularCompliance is IModularCompliance, OwnableUpgradeable, MCStorage {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":326:5613  contract ModularCompliance is IModularCompliance, OwnableUpgradeable, MCStorage {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xe1c7392a\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xe1c7392a\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xe46638e6\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xefb22d33\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa0632461\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa446d49f\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xb2494df3\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x6a3edf28\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x6a3edf28\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8baf29b4\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8d2ea772\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x1ed86f19\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3ff5aa02\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x40db3b50\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x5f8dead3\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1487:1942  function addModule(address _module) external override onlyOwner {... */\n    tag_3:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      stop\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":675:1102  function bindToken(address _token) external override {... */\n    tag_4:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_27:\n      tag_28\n      jump\t// in\n    tag_26:\n      stop\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1110:1479  function unbindToken(address _token) external override {... */\n    tag_5:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_30:\n      tag_31\n      jump\t// in\n    tag_29:\n      stop\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3090:3477  function created(address _to, uint256 _value) external onlyToken override {... */\n    tag_6:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      stop\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":4887:4990  function getTokenBound() external view override returns (address) {... */\n    tag_7:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2064:2165  function renounceOwnership() public virtual onlyOwner {... */\n    tag_8:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      stop\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2601:3082  function transferred(address _from, address _to, uint256 _value) external onlyToken override {... */\n    tag_9:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      stop\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3485:3880  function destroyed(address _from, uint256 _value) external onlyToken override {... */\n    tag_10:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_47:\n      tag_48\n      jump\t// in\n    tag_46:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1441:1526  function owner() public view virtual returns (address) {... */\n    tag_11:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1950:2593  function removeModule(address _module) external override onlyOwner {... */\n    tag_12:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n    tag_52:\n      stop\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":4640:4765  function isModuleBound(address _module) external view override returns (bool) {... */\n    tag_13:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":4773:4879  function getModules() external view override returns (address[] memory) {... */\n    tag_14:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":595:667  function init() external initializer {... */\n    tag_15:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      stop\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":4998:5368  function canTransfer(address _from, address _to, uint256 _value) external view override returns (bool) {... */\n    tag_16:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3888:4632  function callModuleFunction(bytes calldata callData, address _module) external override onlyOwner {... */\n    tag_17:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n    tag_70:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2314:2512  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_18:\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n    tag_74:\n      stop\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1487:1942  function addModule(address _module) external override onlyOwner {... */\n    tag_25:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_78\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_79\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_78:\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1589:1590  0 */\n      0x00\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1570:1591  _module != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1570:1577  _module */\n      dup2\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1570:1591  _module != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1562:1627  require(_module != address(0), \"invalid argument - zero address\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_81:\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1647:1659  _moduleBound */\n      0x67\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1647:1668  _moduleBound[_module] */\n      0x00\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1660:1667  _module */\n      dup3\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1647:1668  _moduleBound[_module] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1646:1668  !_moduleBound[_module] */\n      iszero\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1638:1693  require(!_moduleBound[_module], \"module already bound\") */\n      tag_84\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_84:\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1731:1733  24 */\n      0x18\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1712:1720  _modules */\n      0x66\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1712:1727  _modules.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1712:1733  _modules.length <= 24 */\n      gt\n      iszero\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1704:1769  require(_modules.length <= 24, \"cannot add more than 25 modules\") */\n      tag_87\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_88\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_87:\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1788:1795  _module */\n      dup1\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1780:1811  IModule(_module).bindCompliance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4a932544\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1820:1824  this */\n      address\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1780:1826  IModule(_module).bindCompliance(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_90:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_93\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1837:1845  _modules */\n      0x66\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1851:1858  _module */\n      dup2\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1837:1859  _modules.push(_module) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1894:1898  true */\n      0x01\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1870:1882  _moduleBound */\n      0x67\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1870:1891  _moduleBound[_module] */\n      0x00\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1883:1890  _module */\n      dup4\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1870:1891  _moduleBound[_module] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1870:1898  _moduleBound[_module] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1926:1933  _module */\n      dup1\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1914:1934  ModuleAdded(_module) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xead6a006345da1073a106d5f32372d2d2204f46cb0b4bca8f5ebafcbbed12b8a\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1487:1942  function addModule(address _module) external override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":675:1102  function bindToken(address _token) external override {... */\n    tag_28:\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":758:768  msg.sender */\n      caller\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":747:768  owner() == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":747:754  owner() */\n      tag_96\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":747:752  owner */\n      tag_50\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":747:754  owner() */\n      jump\t// in\n    tag_96:\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":747:768  owner() == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":747:823  owner() == msg.sender || (_tokenBound == address(0) && msg.sender == _token) */\n      dup1\n      tag_97\n      jumpi\n      pop\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":796:797  0 */\n      0x00\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":773:798  _tokenBound == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":773:784  _tokenBound */\n      0x65\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":773:798  _tokenBound == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":773:822  _tokenBound == address(0) && msg.sender == _token */\n      dup1\n      iszero\n      tag_98\n      jumpi\n      pop\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":816:822  _token */\n      dup1\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":802:822  msg.sender == _token */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":802:812  msg.sender */\n      caller\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":802:822  msg.sender == _token */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":773:822  _tokenBound == address(0) && msg.sender == _token */\n    tag_98:\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":747:823  owner() == msg.sender || (_tokenBound == address(0) && msg.sender == _token) */\n    tag_97:\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":739:865  require(owner() == msg.sender || (_tokenBound == address(0) && msg.sender == _token),... */\n      tag_99\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":902:903  0 */\n      0x00\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":884:904  _token != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":884:890  _token */\n      dup2\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":884:904  _token != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":876:940  require(_token != address(0), \"invalid argument - zero address\") */\n      tag_102\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_103\n      swap1\n      tag_83\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_102:\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":965:971  _token */\n      dup1\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":951:962  _tokenBound */\n      0x65\n      0x00\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":951:971  _tokenBound = _token */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1076:1094  TokenBound(_token) */\n      0x2de35142b19ed5a07796cf30791959c592018f70b1d2d7c460eef8ffe713692b\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1087:1093  _token */\n      dup2\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1076:1094  TokenBound(_token) */\n      mload(0x40)\n      tag_104\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":675:1102  function bindToken(address _token) external override {... */\n      pop\n      jump\t// out\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1110:1479  function unbindToken(address _token) external override {... */\n    tag_31:\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1195:1205  msg.sender */\n      caller\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1184:1205  owner() == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1184:1191  owner() */\n      tag_106\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1184:1189  owner */\n      tag_50\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1184:1191  owner() */\n      jump\t// in\n    tag_106:\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1184:1205  owner() == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1184:1229  owner() == msg.sender || msg.sender == _token */\n      dup1\n      tag_107\n      jumpi\n      pop\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1223:1229  _token */\n      dup1\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1209:1229  msg.sender == _token */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1209:1219  msg.sender */\n      caller\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1209:1229  msg.sender == _token */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1184:1229  owner() == msg.sender || msg.sender == _token */\n    tag_107:\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1176:1263  require(owner() == msg.sender || msg.sender == _token , \"only owner or token can call\") */\n      tag_108\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap1\n      tag_101\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_108:\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1292:1303  _tokenBound */\n      0x65\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1282:1303  _token == _tokenBound */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1282:1288  _token */\n      dup2\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1282:1303  _token == _tokenBound */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1274:1331  require(_token == _tokenBound, \"This token is not bound\") */\n      tag_110\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_111\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_110:\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1368:1369  0 */\n      0x00\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1350:1370  _token != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1350:1356  _token */\n      dup2\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1350:1370  _token != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1342:1406  require(_token != address(0), \"invalid argument - zero address\") */\n      tag_113\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap1\n      tag_83\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_113:\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1424:1435  _tokenBound */\n      0x65\n      0x00\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1417:1435  delete _tokenBound */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1451:1471  TokenUnbound(_token) */\n      0x28a4ca7134a3b3f9aff286e79ad3daadb4a06d1b43d037a3a98bdc074edd9b7a\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1464:1470  _token */\n      dup2\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1451:1471  TokenUnbound(_token) */\n      mload(0x40)\n      tag_115\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1110:1479  function unbindToken(address _token) external override {... */\n      pop\n      jump\t// out\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3090:3477  function created(address _to, uint256 _value) external onlyToken override {... */\n    tag_35:\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":483:494  _tokenBound */\n      0x65\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":469:494  msg.sender == _tokenBound */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":469:479  msg.sender */\n      caller\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":469:494  msg.sender == _tokenBound */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":461:567  require(msg.sender == _tokenBound, \"error : this address is not a token bound to the compliance contract\") */\n      tag_117\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_118\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_117:\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3198:3199  0 */\n      0x00\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3183:3200  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3183:3186  _to */\n      dup3\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3183:3200  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3175:3236  require(_to != address(0), \"invalid argument - zero address\") */\n      tag_121\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap1\n      tag_83\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_121:\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3264:3265  0 */\n      0x00\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3255:3261  _value */\n      dup2\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3255:3265  _value > 0 */\n      gt\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3247:3302  require(_value > 0, \"invalid argument - no value mint\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_124\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_123:\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3313:3327  uint256 length */\n      0x00\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3330:3338  _modules */\n      0x66\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3330:3345  _modules.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3313:3345  uint256 length = _modules.length */\n      swap1\n      pop\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3361:3370  uint256 i */\n      0x00\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3356:3470  for (uint256 i = 0; i < length; i++) {... */\n    tag_126:\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3380:3386  length */\n      dup2\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3376:3377  i */\n      dup2\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3376:3386  i < length */\n      lt\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3356:3470  for (uint256 i = 0; i < length; i++) {... */\n      iszero\n      tag_127\n      jumpi\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3416:3424  _modules */\n      0x66\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3425:3426  i */\n      dup2\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3416:3427  _modules[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_129\n      jumpi\n      tag_130\n      tag_131\n      jump\t// in\n    tag_130:\n    tag_129:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3408:3445  IModule(_modules[i]).moduleMintAction */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf104a8c9\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3446:3449  _to */\n      dup6\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3451:3457  _value */\n      dup6\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3408:3458  IModule(_modules[i]).moduleMintAction(_to, _value) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap3\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_135\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_135:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_137\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_137:\n      pop\n      pop\n      pop\n      pop\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3388:3391  i++ */\n      dup1\n      dup1\n      tag_138\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n      swap2\n      pop\n      pop\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3356:3470  for (uint256 i = 0; i < length; i++) {... */\n      jump(tag_126)\n    tag_127:\n      pop\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3164:3477  {... */\n      pop\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3090:3477  function created(address _to, uint256 _value) external onlyToken override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":4887:4990  function getTokenBound() external view override returns (address) {... */\n    tag_37:\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":4944:4951  address */\n      0x00\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":4971:4982  _tokenBound */\n      0x65\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":4964:4982  return _tokenBound */\n      swap1\n      pop\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":4887:4990  function getTokenBound() external view override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2064:2165  function renounceOwnership() public virtual onlyOwner {... */\n    tag_41:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_142\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_79\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_142:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2128:2158  _transferOwnership(address(0)) */\n      tag_144\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2155:2156  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2128:2146  _transferOwnership */\n      tag_145\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2128:2158  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2064:2165  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2601:3082  function transferred(address _from, address _to, uint256 _value) external onlyToken override {... */\n    tag_45:\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":483:494  _tokenBound */\n      0x65\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":469:494  msg.sender == _tokenBound */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":469:479  msg.sender */\n      caller\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":469:494  msg.sender == _tokenBound */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":461:567  require(msg.sender == _tokenBound, \"error : this address is not a token bound to the compliance contract\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_148\n      swap1\n      tag_119\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_147:\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2744:2745  0 */\n      0x00\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2727:2746  _from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2727:2732  _from */\n      dup4\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2727:2746  _from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2727:2780  _from != address(0)... */\n      dup1\n      iszero\n      tag_150\n      jumpi\n      pop\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2778:2779  0 */\n      0x00\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2763:2780  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2763:2766  _to */\n      dup3\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2763:2780  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2727:2780  _from != address(0)... */\n    tag_150:\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2705:2826  require(... */\n      tag_151\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_152\n      swap1\n      tag_83\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_151:\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2854:2855  0 */\n      0x00\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2845:2851  _value */\n      dup2\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2845:2855  _value > 0 */\n      gt\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2837:2896  require(_value > 0, \"invalid argument - no value transfer\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_153:\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2907:2921  uint256 length */\n      0x00\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2924:2932  _modules */\n      0x66\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2924:2939  _modules.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2907:2939  uint256 length = _modules.length */\n      swap1\n      pop\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2955:2964  uint256 i */\n      0x00\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2950:3075  for (uint256 i = 0; i < length; i++) {... */\n    tag_156:\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2974:2980  length */\n      dup2\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2970:2971  i */\n      dup2\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2970:2980  i < length */\n      lt\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2950:3075  for (uint256 i = 0; i < length; i++) {... */\n      iszero\n      tag_157\n      jumpi\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3010:3018  _modules */\n      0x66\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3019:3020  i */\n      dup2\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3010:3021  _modules[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_159\n      jumpi\n      tag_160\n      tag_131\n      jump\t// in\n    tag_160:\n    tag_159:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3002:3043  IModule(_modules[i]).moduleTransferAction */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x2cb7e1ec\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3044:3049  _from */\n      dup7\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3051:3054  _to */\n      dup7\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3056:3062  _value */\n      dup7\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3002:3063  IModule(_modules[i]).moduleTransferAction(_from, _to, _value) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_162:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_164\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_164:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_166\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_166:\n      pop\n      pop\n      pop\n      pop\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2982:2985  i++ */\n      dup1\n      dup1\n      tag_167\n      swap1\n      tag_139\n      jump\t// in\n    tag_167:\n      swap2\n      pop\n      pop\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2950:3075  for (uint256 i = 0; i < length; i++) {... */\n      jump(tag_156)\n    tag_157:\n      pop\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2694:3082  {... */\n      pop\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2601:3082  function transferred(address _from, address _to, uint256 _value) external onlyToken override {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3485:3880  function destroyed(address _from, uint256 _value) external onlyToken override {... */\n    tag_48:\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":483:494  _tokenBound */\n      0x65\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":469:494  msg.sender == _tokenBound */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":469:479  msg.sender */\n      caller\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":469:494  msg.sender == _tokenBound */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":461:567  require(msg.sender == _tokenBound, \"error : this address is not a token bound to the compliance contract\") */\n      tag_169\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_170\n      swap1\n      tag_119\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_169:\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3599:3600  0 */\n      0x00\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3582:3601  _from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3582:3587  _from */\n      dup3\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3582:3601  _from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3574:3637  require(_from != address(0), \"invalid argument - zero address\") */\n      tag_172\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap1\n      tag_83\n      jump\t// in\n    tag_173:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_172:\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3665:3666  0 */\n      0x00\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3656:3662  _value */\n      dup2\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3656:3666  _value > 0 */\n      gt\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3648:3703  require(_value > 0, \"invalid argument - no value burn\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_174:\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3714:3728  uint256 length */\n      0x00\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3731:3739  _modules */\n      0x66\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3731:3746  _modules.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3714:3746  uint256 length = _modules.length */\n      swap1\n      pop\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3762:3771  uint256 i */\n      0x00\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3757:3873  for (uint256 i = 0; i < length; i++) {... */\n    tag_177:\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3781:3787  length */\n      dup2\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3777:3778  i */\n      dup2\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3777:3787  i < length */\n      lt\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3757:3873  for (uint256 i = 0; i < length; i++) {... */\n      iszero\n      tag_178\n      jumpi\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3817:3825  _modules */\n      0x66\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3826:3827  i */\n      dup2\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3817:3828  _modules[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_180\n      jumpi\n      tag_181\n      tag_131\n      jump\t// in\n    tag_181:\n    tag_180:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3809:3846  IModule(_modules[i]).moduleBurnAction */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x372491a2\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3847:3852  _from */\n      dup6\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3854:3860  _value */\n      dup6\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3809:3861  IModule(_modules[i]).moduleBurnAction(_from, _value) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_183\n      swap3\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_183:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_184\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_184:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_186\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_186:\n      pop\n      pop\n      pop\n      pop\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3789:3792  i++ */\n      dup1\n      dup1\n      tag_187\n      swap1\n      tag_139\n      jump\t// in\n    tag_187:\n      swap2\n      pop\n      pop\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3757:3873  for (uint256 i = 0; i < length; i++) {... */\n      jump(tag_177)\n    tag_178:\n      pop\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3563:3880  {... */\n      pop\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3485:3880  function destroyed(address _from, uint256 _value) external onlyToken override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1441:1526  function owner() public view virtual returns (address) {... */\n    tag_50:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1487:1494  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1513:1519  _owner */\n      0x33\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1519  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1441:1526  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1950:2593  function removeModule(address _module) external override onlyOwner {... */\n    tag_54:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_190\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_79\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_190:\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2055:2056  0 */\n      0x00\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2036:2057  _module != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2036:2043  _module */\n      dup2\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2036:2057  _module != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2028:2093  require(_module != address(0), \"invalid argument - zero address\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_83\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_192:\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2112:2124  _moduleBound */\n      0x67\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2112:2133  _moduleBound[_module] */\n      0x00\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2125:2132  _module */\n      dup3\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2112:2133  _moduleBound[_module] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2104:2154  require(_moduleBound[_module], \"module not bound\") */\n      tag_194\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap1\n      tag_196\n      jump\t// in\n    tag_195:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_194:\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2165:2179  uint256 length */\n      0x00\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2182:2190  _modules */\n      0x66\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2182:2197  _modules.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2165:2197  uint256 length = _modules.length */\n      swap1\n      pop\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2213:2222  uint256 i */\n      0x00\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2208:2586  for (uint256 i = 0; i < length; i++) {... */\n    tag_197:\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2232:2238  length */\n      dup2\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2228:2229  i */\n      dup2\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2228:2238  i < length */\n      lt\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2208:2586  for (uint256 i = 0; i < length; i++) {... */\n      iszero\n      tag_198\n      jumpi\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2279:2286  _module */\n      dup3\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2264:2286  _modules[i] == _module */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2264:2272  _modules */\n      0x66\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2273:2274  i */\n      dup3\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2264:2275  _modules[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_200\n      jumpi\n      tag_201\n      tag_131\n      jump\t// in\n    tag_201:\n    tag_200:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2264:2286  _modules[i] == _module */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2260:2575  if (_modules[i] == _module) {... */\n      tag_203\n      jumpi\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2315:2322  _module */\n      dup3\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2307:2340  IModule(_module).unbindCompliance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0694a5fb\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2349:2353  this */\n      address\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2307:2355  IModule(_module).unbindCompliance(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_204:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_205\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_205:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_207\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_207:\n      pop\n      pop\n      pop\n      pop\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2388:2396  _modules */\n      0x66\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2406:2407  1 */\n      0x01\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2397:2403  length */\n      dup4\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2397:2407  length - 1 */\n      tag_208\n      swap2\n      swap1\n      tag_209\n      jump\t// in\n    tag_208:\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2388:2408  _modules[length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_210\n      jumpi\n      tag_211\n      tag_131\n      jump\t// in\n    tag_211:\n    tag_210:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2374:2382  _modules */\n      0x66\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2383:2384  i */\n      dup3\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2374:2385  _modules[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_213\n      jumpi\n      tag_214\n      tag_131\n      jump\t// in\n    tag_214:\n    tag_213:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2374:2408  _modules[i] = _modules[length - 1] */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2427:2435  _modules */\n      0x66\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2427:2441  _modules.pop() */\n      dup1\n      sload\n      dup1\n      tag_216\n      jumpi\n      tag_217\n      tag_218\n      jump\t// in\n    tag_217:\n    tag_216:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2484:2489  false */\n      0x00\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2460:2472  _moduleBound */\n      0x67\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2460:2481  _moduleBound[_module] */\n      0x00\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2473:2480  _module */\n      dup6\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2460:2481  _moduleBound[_module] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2460:2489  _moduleBound[_module] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2527:2534  _module */\n      dup3\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2513:2535  ModuleRemoved(_module) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0a1ee69f55c33d8467c69ca59ce2007a737a88603d75392972520bf67cb513b8\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2554:2559  break */\n      jump(tag_198)\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2260:2575  if (_modules[i] == _module) {... */\n    tag_203:\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2240:2243  i++ */\n      dup1\n      dup1\n      tag_220\n      swap1\n      tag_139\n      jump\t// in\n    tag_220:\n      swap2\n      pop\n      pop\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2208:2586  for (uint256 i = 0; i < length; i++) {... */\n      jump(tag_197)\n    tag_198:\n      pop\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":2017:2593  {... */\n      pop\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":1950:2593  function removeModule(address _module) external override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":4640:4765  function isModuleBound(address _module) external view override returns (bool) {... */\n    tag_57:\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":4712:4716  bool */\n      0x00\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":4736:4748  _moduleBound */\n      0x67\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":4736:4757  _moduleBound[_module] */\n      0x00\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":4749:4756  _module */\n      dup4\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":4736:4757  _moduleBound[_module] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":4729:4757  return _moduleBound[_module] */\n      swap1\n      pop\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":4640:4765  function isModuleBound(address _module) external view override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":4773:4879  function getModules() external view override returns (address[] memory) {... */\n    tag_61:\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":4827:4843  address[] memory */\n      0x60\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":4863:4871  _modules */\n      0x66\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":4856:4871  return _modules */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_223\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_224:\n      dup2\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_224\n      jumpi\n    tag_223:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":4773:4879  function getModules() external view override returns (address[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":595:667  function init() external initializer {... */\n    tag_65:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3279:3298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3302:3315  _initializing */\n      dup1\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3301:3315  !_initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3279:3315  bool isTopLevelCall = !_initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3347:3361  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3347:3381  isTopLevelCall && _initialized < 1 */\n      dup1\n      iszero\n      tag_226\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3380:3381  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3365:3377  _initialized */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3365:3381  _initialized < 1 */\n      0xff\n      and\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3347:3381  isTopLevelCall && _initialized < 1 */\n    tag_226:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3346:3454  (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1) */\n      dup1\n      tag_227\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3388:3432  AddressUpgradeable.isContract(address(this)) */\n      tag_228\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3426:3430  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3388:3417  AddressUpgradeable.isContract */\n      tag_229\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3388:3432  AddressUpgradeable.isContract(address(this)) */\n      jump\t// in\n    tag_228:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3387:3432  !AddressUpgradeable.isContract(address(this)) */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3387:3453  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n      dup1\n      iszero\n      tag_230\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3452:3453  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3436:3448  _initialized */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3436:3453  _initialized == 1 */\n      0xff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3387:3453  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n    tag_230:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3346:3454  (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1) */\n    tag_227:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3325:3526  require(... */\n      tag_231\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_232\n      swap1\n      tag_233\n      jump\t// in\n    tag_232:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_231:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3551:3552  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3536:3548  _initialized */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3536:3552  _initialized = 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3566:3580  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3562:3627  if (isTopLevelCall) {... */\n      iszero\n      tag_234\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3612:3616  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3596:3609  _initializing */\n      0x00\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3596:3616  _initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3562:3627  if (isTopLevelCall) {... */\n    tag_234:\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":643:659  __Ownable_init() */\n      tag_236\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":643:657  __Ownable_init */\n      tag_237\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":643:659  __Ownable_init() */\n      jump\t// in\n    tag_236:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3651:3665  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3647:3746  if (isTopLevelCall) {... */\n      iszero\n      tag_238\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3697:3702  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3681:3694  _initializing */\n      dup1\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3681:3702  _initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3721:3735  Initialized(1) */\n      0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3733:3734  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3721:3735  Initialized(1) */\n      mload(0x40)\n      tag_239\n      swap2\n      swap1\n      tag_240\n      jump\t// in\n    tag_239:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3647:3746  if (isTopLevelCall) {... */\n    tag_238:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3269:3752  {... */\n      pop\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":595:667  function init() external initializer {... */\n      jump\t// out\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":4998:5368  function canTransfer(address _from, address _to, uint256 _value) external view override returns (bool) {... */\n    tag_68:\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":5095:5099  bool */\n      0x00\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":5112:5126  uint256 length */\n      dup1\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":5129:5137  _modules */\n      0x66\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":5129:5144  _modules.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":5112:5144  uint256 length = _modules.length */\n      swap1\n      pop\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":5160:5169  uint256 i */\n      0x00\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":5155:5339  for (uint256 i = 0; i < length; i++) {... */\n    tag_242:\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":5179:5185  length */\n      dup2\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":5175:5176  i */\n      dup2\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":5175:5185  i < length */\n      lt\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":5155:5339  for (uint256 i = 0; i < length; i++) {... */\n      iszero\n      tag_243\n      jumpi\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":5220:5228  _modules */\n      0x66\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":5229:5230  i */\n      dup2\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":5220:5231  _modules[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_245\n      jumpi\n      tag_246\n      tag_131\n      jump\t// in\n    tag_246:\n    tag_245:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":5212:5244  IModule(_modules[i]).moduleCheck */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x013b7ce4\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":5245:5250  _from */\n      dup8\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":5252:5255  _to */\n      dup8\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":5257:5263  _value */\n      dup8\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":5273:5277  this */\n      address\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":5212:5279  IModule(_modules[i]).moduleCheck(_from, _to, _value, address(this)) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_248\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_249\n      jump\t// in\n    tag_248:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_251\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_251:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_252\n      swap2\n      swap1\n      tag_253\n      jump\t// in\n    tag_252:\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":5207:5328  if (!IModule(_modules[i]).moduleCheck(_from, _to, _value, address(this))) {... */\n      tag_254\n      jumpi\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":5307:5312  false */\n      0x00\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":5300:5312  return false */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_241)\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":5207:5328  if (!IModule(_modules[i]).moduleCheck(_from, _to, _value, address(this))) {... */\n    tag_254:\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":5187:5190  i++ */\n      dup1\n      dup1\n      tag_255\n      swap1\n      tag_139\n      jump\t// in\n    tag_255:\n      swap2\n      pop\n      pop\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":5155:5339  for (uint256 i = 0; i < length; i++) {... */\n      jump(tag_242)\n    tag_243:\n      pop\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":5356:5360  true */\n      0x01\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":5349:5360  return true */\n      swap2\n      pop\n      pop\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":4998:5368  function canTransfer(address _from, address _to, uint256 _value) external view override returns (bool) {... */\n    tag_241:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3888:4632  function callModuleFunction(bytes calldata callData, address _module) external override onlyOwner {... */\n    tag_73:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_257\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_79\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_257:\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":4005:4017  _moduleBound */\n      0x67\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":4005:4026  _moduleBound[_module] */\n      0x00\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":4018:4025  _module */\n      dup3\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":4005:4026  _moduleBound[_module] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3997:4056  require(_moduleBound[_module], \"call only on bound module\") */\n      tag_259\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_260\n      swap1\n      tag_261\n      jump\t// in\n    tag_260:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_259:\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":4122:4126  0x40 */\n      0x40\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":4116:4127  mload(0x40) */\n      mload\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":4190:4205  callData.length */\n      dup3\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":4173:4188  callData.offset */\n      dup5\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":4154:4171  freeMemoryPointer */\n      dup3\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":4141:4206  calldatacopy(freeMemoryPointer, callData.offset, callData.length) */\n      calldatacopy\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":4399:4400  0 */\n      0x00\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":4383:4384  0 */\n      dup1\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":4353:4368  callData.length */\n      dup5\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":4321:4338  freeMemoryPointer */\n      dup4\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":4305:4306  0 */\n      0x00\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":4283:4290  _module */\n      dup7\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":4263:4268  gas() */\n      gas\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":4244:4415  call(... */\n      call\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":4220:4547  if iszero(... */\n      tag_262\n      jumpi\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":4470:4486  returndatasize() */\n      returndatasize\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":4467:4468  0 */\n      0x00\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":4464:4465  0 */\n      dup1\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":4449:4487  returndatacopy(0, 0, returndatasize()) */\n      returndatacopy\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":4515:4531  returndatasize() */\n      returndatasize\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":4512:4513  0 */\n      0x00\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":4505:4532  revert(0, returndatasize()) */\n      revert\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":4220:4547  if iszero(... */\n    tag_262:\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":4076:4558  {... */\n      pop\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":4593:4600  _module */\n      dup1\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":4575:4622  ModuleInteraction(_module, _selector(callData)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x20d79de70adcc6e9353d8a9a5646b46dc352710d0a310b1ad1f67faeca7ef891\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":4602:4621  _selector(callData) */\n      tag_263\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":4612:4620  callData */\n      dup6\n      dup6\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":4602:4611  _selector */\n      tag_264\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":4602:4621  _selector(callData) */\n      jump\t// in\n    tag_263:\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":4575:4622  ModuleInteraction(_module, _selector(callData)) */\n      mload(0x40)\n      tag_265\n      swap2\n      swap1\n      tag_266\n      jump\t// in\n    tag_265:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":3888:4632  function callModuleFunction(bytes calldata callData, address _module) external override onlyOwner {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2314:2512  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_76:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_268\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_79\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_268:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2422:2423  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2402:2424  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2402:2410  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2402:2424  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2394:2467  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_270\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_271\n      swap1\n      tag_272\n      jump\t// in\n    tag_271:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_270:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2477:2505  _transferOwnership(newOwner) */\n      tag_273\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2496:2504  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2477:2495  _transferOwnership */\n      tag_145\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2477:2505  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_273:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2314:2512  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1599:1729  function _checkOwner() internal view virtual {... */\n    tag_79:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1673:1685  _msgSender() */\n      tag_275\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1673:1683  _msgSender */\n      tag_276\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1673:1685  _msgSender() */\n      jump\t// in\n    tag_275:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1662:1685  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1662:1669  owner() */\n      tag_277\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1662:1667  owner */\n      tag_50\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1662:1669  owner() */\n      jump\t// in\n    tag_277:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1662:1685  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1654:1722  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_278\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_279\n      swap1\n      tag_280\n      jump\t// in\n    tag_279:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_278:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1599:1729  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2666:2853  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_145:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2739:2755  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2758:2764  _owner */\n      0x33\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2739:2764  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2783:2791  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2774:2780  _owner */\n      0x33\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2774:2791  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2837:2845  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2806:2846  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2827:2835  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2806:2846  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2729:2853  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2666:2853  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1423:1743  function isContract(address account) internal view returns (bool) {... */\n    tag_229:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1483:1487  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1735:1736  0 */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1713:1720  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1713:1732  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1713:1736  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1706:1736  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1423:1743  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1003:1098  function __Ownable_init() internal onlyInitializing {... */\n    tag_237:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5374:5387  _initializing */\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5366:5435  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_284\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_285\n      swap1\n      tag_286\n      jump\t// in\n    tag_285:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_284:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1065:1091  __Ownable_init_unchained() */\n      tag_288\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1065:1089  __Ownable_init_unchained */\n      tag_289\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1065:1091  __Ownable_init_unchained() */\n      jump\t// in\n    tag_288:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1003:1098  function __Ownable_init() internal onlyInitializing {... */\n      jump\t// out\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":5376:5610  function _selector(bytes calldata callData) internal pure returns (bytes4 result) {... */\n    tag_264:\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":5443:5456  bytes4 result */\n      0x00\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":5492:5493  4 */\n      0x04\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":5473:5481  callData */\n      dup4\n      dup4\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":5473:5488  callData.length */\n      swap1\n      pop\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":5473:5493  callData.length >= 4 */\n      lt\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":5469:5603  if (callData.length >= 4) {... */\n      tag_291\n      jumpi\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":5561:5576  callData.offset */\n      dup3\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":5548:5577  calldataload(callData.offset) */\n      calldataload\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":5538:5577  result := calldataload(callData.offset) */\n      swap1\n      pop\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":5469:5603  if (callData.length >= 4) {... */\n    tag_291:\n        /* \"Tokeny Project/Compliance/modular/ModularCompliance.sol\":5376:5610  function _selector(bytes calldata callData) internal pure returns (bytes4 result) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":850:946  function _msgSender() internal view virtual returns (address) {... */\n    tag_276:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":903:910  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":922:939  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":850:946  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1104:1215  function __Ownable_init_unchained() internal onlyInitializing {... */\n    tag_289:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5374:5387  _initializing */\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5366:5435  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_294\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_295\n      swap1\n      tag_286\n      jump\t// in\n    tag_295:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_294:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1176:1208  _transferOwnership(_msgSender()) */\n      tag_297\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1195:1207  _msgSender() */\n      tag_298\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1195:1205  _msgSender */\n      tag_276\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1195:1207  _msgSender() */\n      jump\t// in\n    tag_298:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1176:1194  _transferOwnership */\n      tag_145\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1176:1208  _transferOwnership(_msgSender()) */\n      jump\t// in\n    tag_297:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1104:1215  function __Ownable_init_unchained() internal onlyInitializing {... */\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_300:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_301:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_302:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_303:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_371\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_302\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_304:\n        /* \"#utility.yul\":641:665   */\n      tag_373\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_303\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_374\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_374:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_305:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_376\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_304\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_24:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_378\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_379\n      tag_300\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":917:1036   */\n    tag_378:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_380\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_305\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_306:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1381   */\n    tag_307:\n        /* \"#utility.yul\":1332:1356   */\n      tag_383\n        /* \"#utility.yul\":1350:1355   */\n      dup2\n        /* \"#utility.yul\":1332:1356   */\n      tag_306\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":1325:1330   */\n      dup2\n        /* \"#utility.yul\":1322:1357   */\n      eq\n        /* \"#utility.yul\":1312:1375   */\n      tag_384\n      jumpi\n        /* \"#utility.yul\":1371:1372   */\n      0x00\n        /* \"#utility.yul\":1368:1369   */\n      dup1\n        /* \"#utility.yul\":1361:1373   */\n      revert\n        /* \"#utility.yul\":1312:1375   */\n    tag_384:\n        /* \"#utility.yul\":1259:1381   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1387:1526   */\n    tag_308:\n        /* \"#utility.yul\":1433:1438   */\n      0x00\n        /* \"#utility.yul\":1471:1477   */\n      dup2\n        /* \"#utility.yul\":1458:1478   */\n      calldataload\n        /* \"#utility.yul\":1449:1478   */\n      swap1\n      pop\n        /* \"#utility.yul\":1487:1520   */\n      tag_386\n        /* \"#utility.yul\":1514:1519   */\n      dup2\n        /* \"#utility.yul\":1487:1520   */\n      tag_307\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":1387:1526   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1532:2006   */\n    tag_34:\n        /* \"#utility.yul\":1600:1606   */\n      0x00\n        /* \"#utility.yul\":1608:1614   */\n      dup1\n        /* \"#utility.yul\":1657:1659   */\n      0x40\n        /* \"#utility.yul\":1645:1654   */\n      dup4\n        /* \"#utility.yul\":1636:1643   */\n      dup6\n        /* \"#utility.yul\":1632:1655   */\n      sub\n        /* \"#utility.yul\":1628:1660   */\n      slt\n        /* \"#utility.yul\":1625:1744   */\n      iszero\n      tag_388\n      jumpi\n        /* \"#utility.yul\":1663:1742   */\n      tag_389\n      tag_300\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":1625:1744   */\n    tag_388:\n        /* \"#utility.yul\":1783:1784   */\n      0x00\n        /* \"#utility.yul\":1808:1861   */\n      tag_390\n        /* \"#utility.yul\":1853:1860   */\n      dup6\n        /* \"#utility.yul\":1844:1850   */\n      dup3\n        /* \"#utility.yul\":1833:1842   */\n      dup7\n        /* \"#utility.yul\":1829:1851   */\n      add\n        /* \"#utility.yul\":1808:1861   */\n      tag_305\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":1798:1861   */\n      swap3\n      pop\n        /* \"#utility.yul\":1754:1871   */\n      pop\n        /* \"#utility.yul\":1910:1912   */\n      0x20\n        /* \"#utility.yul\":1936:1989   */\n      tag_391\n        /* \"#utility.yul\":1981:1988   */\n      dup6\n        /* \"#utility.yul\":1972:1978   */\n      dup3\n        /* \"#utility.yul\":1961:1970   */\n      dup7\n        /* \"#utility.yul\":1957:1979   */\n      add\n        /* \"#utility.yul\":1936:1989   */\n      tag_308\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":1926:1989   */\n      swap2\n      pop\n        /* \"#utility.yul\":1881:1999   */\n      pop\n        /* \"#utility.yul\":1532:2006   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2012:2130   */\n    tag_309:\n        /* \"#utility.yul\":2099:2123   */\n      tag_393\n        /* \"#utility.yul\":2117:2122   */\n      dup2\n        /* \"#utility.yul\":2099:2123   */\n      tag_303\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":2094:2097   */\n      dup3\n        /* \"#utility.yul\":2087:2124   */\n      mstore\n        /* \"#utility.yul\":2012:2130   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2136:2358   */\n    tag_39:\n        /* \"#utility.yul\":2229:2233   */\n      0x00\n        /* \"#utility.yul\":2267:2269   */\n      0x20\n        /* \"#utility.yul\":2256:2265   */\n      dup3\n        /* \"#utility.yul\":2252:2270   */\n      add\n        /* \"#utility.yul\":2244:2270   */\n      swap1\n      pop\n        /* \"#utility.yul\":2280:2351   */\n      tag_395\n        /* \"#utility.yul\":2348:2349   */\n      0x00\n        /* \"#utility.yul\":2337:2346   */\n      dup4\n        /* \"#utility.yul\":2333:2350   */\n      add\n        /* \"#utility.yul\":2324:2330   */\n      dup5\n        /* \"#utility.yul\":2280:2351   */\n      tag_309\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":2136:2358   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2364:2983   */\n    tag_44:\n        /* \"#utility.yul\":2441:2447   */\n      0x00\n        /* \"#utility.yul\":2449:2455   */\n      dup1\n        /* \"#utility.yul\":2457:2463   */\n      0x00\n        /* \"#utility.yul\":2506:2508   */\n      0x60\n        /* \"#utility.yul\":2494:2503   */\n      dup5\n        /* \"#utility.yul\":2485:2492   */\n      dup7\n        /* \"#utility.yul\":2481:2504   */\n      sub\n        /* \"#utility.yul\":2477:2509   */\n      slt\n        /* \"#utility.yul\":2474:2593   */\n      iszero\n      tag_397\n      jumpi\n        /* \"#utility.yul\":2512:2591   */\n      tag_398\n      tag_300\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":2474:2593   */\n    tag_397:\n        /* \"#utility.yul\":2632:2633   */\n      0x00\n        /* \"#utility.yul\":2657:2710   */\n      tag_399\n        /* \"#utility.yul\":2702:2709   */\n      dup7\n        /* \"#utility.yul\":2693:2699   */\n      dup3\n        /* \"#utility.yul\":2682:2691   */\n      dup8\n        /* \"#utility.yul\":2678:2700   */\n      add\n        /* \"#utility.yul\":2657:2710   */\n      tag_305\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":2647:2710   */\n      swap4\n      pop\n        /* \"#utility.yul\":2603:2720   */\n      pop\n        /* \"#utility.yul\":2759:2761   */\n      0x20\n        /* \"#utility.yul\":2785:2838   */\n      tag_400\n        /* \"#utility.yul\":2830:2837   */\n      dup7\n        /* \"#utility.yul\":2821:2827   */\n      dup3\n        /* \"#utility.yul\":2810:2819   */\n      dup8\n        /* \"#utility.yul\":2806:2828   */\n      add\n        /* \"#utility.yul\":2785:2838   */\n      tag_305\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":2775:2838   */\n      swap3\n      pop\n        /* \"#utility.yul\":2730:2848   */\n      pop\n        /* \"#utility.yul\":2887:2889   */\n      0x40\n        /* \"#utility.yul\":2913:2966   */\n      tag_401\n        /* \"#utility.yul\":2958:2965   */\n      dup7\n        /* \"#utility.yul\":2949:2955   */\n      dup3\n        /* \"#utility.yul\":2938:2947   */\n      dup8\n        /* \"#utility.yul\":2934:2956   */\n      add\n        /* \"#utility.yul\":2913:2966   */\n      tag_308\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":2903:2966   */\n      swap2\n      pop\n        /* \"#utility.yul\":2858:2976   */\n      pop\n        /* \"#utility.yul\":2364:2983   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2989:3079   */\n    tag_310:\n        /* \"#utility.yul\":3023:3030   */\n      0x00\n        /* \"#utility.yul\":3066:3071   */\n      dup2\n        /* \"#utility.yul\":3059:3072   */\n      iszero\n        /* \"#utility.yul\":3052:3073   */\n      iszero\n        /* \"#utility.yul\":3041:3073   */\n      swap1\n      pop\n        /* \"#utility.yul\":2989:3079   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3085:3194   */\n    tag_311:\n        /* \"#utility.yul\":3166:3187   */\n      tag_404\n        /* \"#utility.yul\":3181:3186   */\n      dup2\n        /* \"#utility.yul\":3166:3187   */\n      tag_310\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":3161:3164   */\n      dup3\n        /* \"#utility.yul\":3154:3188   */\n      mstore\n        /* \"#utility.yul\":3085:3194   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3200:3410   */\n    tag_59:\n        /* \"#utility.yul\":3287:3291   */\n      0x00\n        /* \"#utility.yul\":3325:3327   */\n      0x20\n        /* \"#utility.yul\":3314:3323   */\n      dup3\n        /* \"#utility.yul\":3310:3328   */\n      add\n        /* \"#utility.yul\":3302:3328   */\n      swap1\n      pop\n        /* \"#utility.yul\":3338:3403   */\n      tag_406\n        /* \"#utility.yul\":3400:3401   */\n      0x00\n        /* \"#utility.yul\":3389:3398   */\n      dup4\n        /* \"#utility.yul\":3385:3402   */\n      add\n        /* \"#utility.yul\":3376:3382   */\n      dup5\n        /* \"#utility.yul\":3338:3403   */\n      tag_311\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":3200:3410   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3416:3530   */\n    tag_312:\n        /* \"#utility.yul\":3483:3489   */\n      0x00\n        /* \"#utility.yul\":3517:3522   */\n      dup2\n        /* \"#utility.yul\":3511:3523   */\n      mload\n        /* \"#utility.yul\":3501:3523   */\n      swap1\n      pop\n        /* \"#utility.yul\":3416:3530   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3536:3720   */\n    tag_313:\n        /* \"#utility.yul\":3635:3646   */\n      0x00\n        /* \"#utility.yul\":3669:3675   */\n      dup3\n        /* \"#utility.yul\":3664:3667   */\n      dup3\n        /* \"#utility.yul\":3657:3676   */\n      mstore\n        /* \"#utility.yul\":3709:3713   */\n      0x20\n        /* \"#utility.yul\":3704:3707   */\n      dup3\n        /* \"#utility.yul\":3700:3714   */\n      add\n        /* \"#utility.yul\":3685:3714   */\n      swap1\n      pop\n        /* \"#utility.yul\":3536:3720   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3726:3858   */\n    tag_314:\n        /* \"#utility.yul\":3793:3797   */\n      0x00\n        /* \"#utility.yul\":3816:3819   */\n      dup2\n        /* \"#utility.yul\":3808:3819   */\n      swap1\n      pop\n        /* \"#utility.yul\":3846:3850   */\n      0x20\n        /* \"#utility.yul\":3841:3844   */\n      dup3\n        /* \"#utility.yul\":3837:3851   */\n      add\n        /* \"#utility.yul\":3829:3851   */\n      swap1\n      pop\n        /* \"#utility.yul\":3726:3858   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3864:3972   */\n    tag_315:\n        /* \"#utility.yul\":3941:3965   */\n      tag_411\n        /* \"#utility.yul\":3959:3964   */\n      dup2\n        /* \"#utility.yul\":3941:3965   */\n      tag_303\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":3936:3939   */\n      dup3\n        /* \"#utility.yul\":3929:3966   */\n      mstore\n        /* \"#utility.yul\":3864:3972   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3978:4157   */\n    tag_316:\n        /* \"#utility.yul\":4047:4057   */\n      0x00\n        /* \"#utility.yul\":4068:4114   */\n      tag_413\n        /* \"#utility.yul\":4110:4113   */\n      dup4\n        /* \"#utility.yul\":4102:4108   */\n      dup4\n        /* \"#utility.yul\":4068:4114   */\n      tag_315\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":4146:4150   */\n      0x20\n        /* \"#utility.yul\":4141:4144   */\n      dup4\n        /* \"#utility.yul\":4137:4151   */\n      add\n        /* \"#utility.yul\":4123:4151   */\n      swap1\n      pop\n        /* \"#utility.yul\":3978:4157   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4163:4276   */\n    tag_317:\n        /* \"#utility.yul\":4233:4237   */\n      0x00\n        /* \"#utility.yul\":4265:4269   */\n      0x20\n        /* \"#utility.yul\":4260:4263   */\n      dup3\n        /* \"#utility.yul\":4256:4270   */\n      add\n        /* \"#utility.yul\":4248:4270   */\n      swap1\n      pop\n        /* \"#utility.yul\":4163:4276   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4312:5044   */\n    tag_318:\n        /* \"#utility.yul\":4431:4434   */\n      0x00\n        /* \"#utility.yul\":4460:4514   */\n      tag_416\n        /* \"#utility.yul\":4508:4513   */\n      dup3\n        /* \"#utility.yul\":4460:4514   */\n      tag_312\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":4530:4616   */\n      tag_417\n        /* \"#utility.yul\":4609:4615   */\n      dup2\n        /* \"#utility.yul\":4604:4607   */\n      dup6\n        /* \"#utility.yul\":4530:4616   */\n      tag_313\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":4523:4616   */\n      swap4\n      pop\n        /* \"#utility.yul\":4640:4696   */\n      tag_418\n        /* \"#utility.yul\":4690:4695   */\n      dup4\n        /* \"#utility.yul\":4640:4696   */\n      tag_314\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":4719:4726   */\n      dup1\n        /* \"#utility.yul\":4750:4751   */\n      0x00\n        /* \"#utility.yul\":4735:5019   */\n    tag_419:\n        /* \"#utility.yul\":4760:4766   */\n      dup4\n        /* \"#utility.yul\":4757:4758   */\n      dup2\n        /* \"#utility.yul\":4754:4767   */\n      lt\n        /* \"#utility.yul\":4735:5019   */\n      iszero\n      tag_421\n      jumpi\n        /* \"#utility.yul\":4836:4842   */\n      dup2\n        /* \"#utility.yul\":4830:4843   */\n      mload\n        /* \"#utility.yul\":4863:4926   */\n      tag_422\n        /* \"#utility.yul\":4922:4925   */\n      dup9\n        /* \"#utility.yul\":4907:4920   */\n      dup3\n        /* \"#utility.yul\":4863:4926   */\n      tag_316\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":4856:4926   */\n      swap8\n      pop\n        /* \"#utility.yul\":4949:5009   */\n      tag_423\n        /* \"#utility.yul\":5002:5008   */\n      dup4\n        /* \"#utility.yul\":4949:5009   */\n      tag_317\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":4939:5009   */\n      swap3\n      pop\n        /* \"#utility.yul\":4795:5019   */\n      pop\n        /* \"#utility.yul\":4782:4783   */\n      0x01\n        /* \"#utility.yul\":4779:4780   */\n      dup2\n        /* \"#utility.yul\":4775:4784   */\n      add\n        /* \"#utility.yul\":4770:4784   */\n      swap1\n      pop\n        /* \"#utility.yul\":4735:5019   */\n      jump(tag_419)\n    tag_421:\n        /* \"#utility.yul\":4739:4753   */\n      pop\n        /* \"#utility.yul\":5035:5038   */\n      dup6\n        /* \"#utility.yul\":5028:5038   */\n      swap4\n      pop\n        /* \"#utility.yul\":4436:5044   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4312:5044   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5050:5423   */\n    tag_63:\n        /* \"#utility.yul\":5193:5197   */\n      0x00\n        /* \"#utility.yul\":5231:5233   */\n      0x20\n        /* \"#utility.yul\":5220:5229   */\n      dup3\n        /* \"#utility.yul\":5216:5234   */\n      add\n        /* \"#utility.yul\":5208:5234   */\n      swap1\n      pop\n        /* \"#utility.yul\":5280:5289   */\n      dup2\n        /* \"#utility.yul\":5274:5278   */\n      dup2\n        /* \"#utility.yul\":5270:5290   */\n      sub\n        /* \"#utility.yul\":5266:5267   */\n      0x00\n        /* \"#utility.yul\":5255:5264   */\n      dup4\n        /* \"#utility.yul\":5251:5268   */\n      add\n        /* \"#utility.yul\":5244:5291   */\n      mstore\n        /* \"#utility.yul\":5308:5416   */\n      tag_425\n        /* \"#utility.yul\":5411:5415   */\n      dup2\n        /* \"#utility.yul\":5402:5408   */\n      dup5\n        /* \"#utility.yul\":5308:5416   */\n      tag_318\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":5300:5416   */\n      swap1\n      pop\n        /* \"#utility.yul\":5050:5423   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5429:5546   */\n    tag_319:\n        /* \"#utility.yul\":5538:5539   */\n      0x00\n        /* \"#utility.yul\":5535:5536   */\n      dup1\n        /* \"#utility.yul\":5528:5540   */\n      revert\n        /* \"#utility.yul\":5552:5669   */\n    tag_320:\n        /* \"#utility.yul\":5661:5662   */\n      0x00\n        /* \"#utility.yul\":5658:5659   */\n      dup1\n        /* \"#utility.yul\":5651:5663   */\n      revert\n        /* \"#utility.yul\":5675:5792   */\n    tag_321:\n        /* \"#utility.yul\":5784:5785   */\n      0x00\n        /* \"#utility.yul\":5781:5782   */\n      dup1\n        /* \"#utility.yul\":5774:5786   */\n      revert\n        /* \"#utility.yul\":5811:6363   */\n    tag_322:\n        /* \"#utility.yul\":5868:5876   */\n      0x00\n        /* \"#utility.yul\":5878:5884   */\n      dup1\n        /* \"#utility.yul\":5928:5931   */\n      dup4\n        /* \"#utility.yul\":5921:5925   */\n      0x1f\n        /* \"#utility.yul\":5913:5919   */\n      dup5\n        /* \"#utility.yul\":5909:5926   */\n      add\n        /* \"#utility.yul\":5905:5932   */\n      slt\n        /* \"#utility.yul\":5895:6017   */\n      tag_430\n      jumpi\n        /* \"#utility.yul\":5936:6015   */\n      tag_431\n      tag_319\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":5895:6017   */\n    tag_430:\n        /* \"#utility.yul\":6049:6055   */\n      dup3\n        /* \"#utility.yul\":6036:6056   */\n      calldataload\n        /* \"#utility.yul\":6026:6056   */\n      swap1\n      pop\n        /* \"#utility.yul\":6079:6097   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6071:6077   */\n      dup2\n        /* \"#utility.yul\":6068:6098   */\n      gt\n        /* \"#utility.yul\":6065:6182   */\n      iszero\n      tag_432\n      jumpi\n        /* \"#utility.yul\":6101:6180   */\n      tag_433\n      tag_320\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":6065:6182   */\n    tag_432:\n        /* \"#utility.yul\":6215:6219   */\n      0x20\n        /* \"#utility.yul\":6207:6213   */\n      dup4\n        /* \"#utility.yul\":6203:6220   */\n      add\n        /* \"#utility.yul\":6191:6220   */\n      swap2\n      pop\n        /* \"#utility.yul\":6269:6272   */\n      dup4\n        /* \"#utility.yul\":6261:6265   */\n      0x01\n        /* \"#utility.yul\":6253:6259   */\n      dup3\n        /* \"#utility.yul\":6249:6266   */\n      mul\n        /* \"#utility.yul\":6239:6247   */\n      dup4\n        /* \"#utility.yul\":6235:6267   */\n      add\n        /* \"#utility.yul\":6232:6273   */\n      gt\n        /* \"#utility.yul\":6229:6357   */\n      iszero\n      tag_434\n      jumpi\n        /* \"#utility.yul\":6276:6355   */\n      tag_435\n      tag_321\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":6229:6357   */\n    tag_434:\n        /* \"#utility.yul\":5811:6363   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6369:7041   */\n    tag_72:\n        /* \"#utility.yul\":6448:6454   */\n      0x00\n        /* \"#utility.yul\":6456:6462   */\n      dup1\n        /* \"#utility.yul\":6464:6470   */\n      0x00\n        /* \"#utility.yul\":6513:6515   */\n      0x40\n        /* \"#utility.yul\":6501:6510   */\n      dup5\n        /* \"#utility.yul\":6492:6499   */\n      dup7\n        /* \"#utility.yul\":6488:6511   */\n      sub\n        /* \"#utility.yul\":6484:6516   */\n      slt\n        /* \"#utility.yul\":6481:6600   */\n      iszero\n      tag_437\n      jumpi\n        /* \"#utility.yul\":6519:6598   */\n      tag_438\n      tag_300\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":6481:6600   */\n    tag_437:\n        /* \"#utility.yul\":6667:6668   */\n      0x00\n        /* \"#utility.yul\":6656:6665   */\n      dup5\n        /* \"#utility.yul\":6652:6669   */\n      add\n        /* \"#utility.yul\":6639:6670   */\n      calldataload\n        /* \"#utility.yul\":6697:6715   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6689:6695   */\n      dup2\n        /* \"#utility.yul\":6686:6716   */\n      gt\n        /* \"#utility.yul\":6683:6800   */\n      iszero\n      tag_439\n      jumpi\n        /* \"#utility.yul\":6719:6798   */\n      tag_440\n      tag_301\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":6683:6800   */\n    tag_439:\n        /* \"#utility.yul\":6832:6896   */\n      tag_441\n        /* \"#utility.yul\":6888:6895   */\n      dup7\n        /* \"#utility.yul\":6879:6885   */\n      dup3\n        /* \"#utility.yul\":6868:6877   */\n      dup8\n        /* \"#utility.yul\":6864:6886   */\n      add\n        /* \"#utility.yul\":6832:6896   */\n      tag_322\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":6814:6896   */\n      swap4\n      pop\n      swap4\n      pop\n        /* \"#utility.yul\":6610:6906   */\n      pop\n        /* \"#utility.yul\":6945:6947   */\n      0x20\n        /* \"#utility.yul\":6971:7024   */\n      tag_442\n        /* \"#utility.yul\":7016:7023   */\n      dup7\n        /* \"#utility.yul\":7007:7013   */\n      dup3\n        /* \"#utility.yul\":6996:7005   */\n      dup8\n        /* \"#utility.yul\":6992:7014   */\n      add\n        /* \"#utility.yul\":6971:7024   */\n      tag_305\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":6961:7024   */\n      swap2\n      pop\n        /* \"#utility.yul\":6916:7034   */\n      pop\n        /* \"#utility.yul\":6369:7041   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":7047:7216   */\n    tag_323:\n        /* \"#utility.yul\":7131:7142   */\n      0x00\n        /* \"#utility.yul\":7165:7171   */\n      dup3\n        /* \"#utility.yul\":7160:7163   */\n      dup3\n        /* \"#utility.yul\":7153:7172   */\n      mstore\n        /* \"#utility.yul\":7205:7209   */\n      0x20\n        /* \"#utility.yul\":7200:7203   */\n      dup3\n        /* \"#utility.yul\":7196:7210   */\n      add\n        /* \"#utility.yul\":7181:7210   */\n      swap1\n      pop\n        /* \"#utility.yul\":7047:7216   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7222:7403   */\n    tag_324:\n        /* \"#utility.yul\":7362:7395   */\n      0x696e76616c696420617267756d656e74202d207a65726f206164647265737300\n        /* \"#utility.yul\":7358:7359   */\n      0x00\n        /* \"#utility.yul\":7350:7356   */\n      dup3\n        /* \"#utility.yul\":7346:7360   */\n      add\n        /* \"#utility.yul\":7339:7396   */\n      mstore\n        /* \"#utility.yul\":7222:7403   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7409:7775   */\n    tag_325:\n        /* \"#utility.yul\":7551:7554   */\n      0x00\n        /* \"#utility.yul\":7572:7639   */\n      tag_446\n        /* \"#utility.yul\":7636:7638   */\n      0x1f\n        /* \"#utility.yul\":7631:7634   */\n      dup4\n        /* \"#utility.yul\":7572:7639   */\n      tag_323\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":7565:7639   */\n      swap2\n      pop\n        /* \"#utility.yul\":7648:7741   */\n      tag_447\n        /* \"#utility.yul\":7737:7740   */\n      dup3\n        /* \"#utility.yul\":7648:7741   */\n      tag_324\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":7766:7768   */\n      0x20\n        /* \"#utility.yul\":7761:7764   */\n      dup3\n        /* \"#utility.yul\":7757:7769   */\n      add\n        /* \"#utility.yul\":7750:7769   */\n      swap1\n      pop\n        /* \"#utility.yul\":7409:7775   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7781:8200   */\n    tag_83:\n        /* \"#utility.yul\":7947:7951   */\n      0x00\n        /* \"#utility.yul\":7985:7987   */\n      0x20\n        /* \"#utility.yul\":7974:7983   */\n      dup3\n        /* \"#utility.yul\":7970:7988   */\n      add\n        /* \"#utility.yul\":7962:7988   */\n      swap1\n      pop\n        /* \"#utility.yul\":8034:8043   */\n      dup2\n        /* \"#utility.yul\":8028:8032   */\n      dup2\n        /* \"#utility.yul\":8024:8044   */\n      sub\n        /* \"#utility.yul\":8020:8021   */\n      0x00\n        /* \"#utility.yul\":8009:8018   */\n      dup4\n        /* \"#utility.yul\":8005:8022   */\n      add\n        /* \"#utility.yul\":7998:8045   */\n      mstore\n        /* \"#utility.yul\":8062:8193   */\n      tag_449\n        /* \"#utility.yul\":8188:8192   */\n      dup2\n        /* \"#utility.yul\":8062:8193   */\n      tag_325\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":8054:8193   */\n      swap1\n      pop\n        /* \"#utility.yul\":7781:8200   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8206:8376   */\n    tag_326:\n        /* \"#utility.yul\":8346:8368   */\n      0x6d6f64756c6520616c726561647920626f756e64000000000000000000000000\n        /* \"#utility.yul\":8342:8343   */\n      0x00\n        /* \"#utility.yul\":8334:8340   */\n      dup3\n        /* \"#utility.yul\":8330:8344   */\n      add\n        /* \"#utility.yul\":8323:8369   */\n      mstore\n        /* \"#utility.yul\":8206:8376   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8382:8748   */\n    tag_327:\n        /* \"#utility.yul\":8524:8527   */\n      0x00\n        /* \"#utility.yul\":8545:8612   */\n      tag_452\n        /* \"#utility.yul\":8609:8611   */\n      0x14\n        /* \"#utility.yul\":8604:8607   */\n      dup4\n        /* \"#utility.yul\":8545:8612   */\n      tag_323\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":8538:8612   */\n      swap2\n      pop\n        /* \"#utility.yul\":8621:8714   */\n      tag_453\n        /* \"#utility.yul\":8710:8713   */\n      dup3\n        /* \"#utility.yul\":8621:8714   */\n      tag_326\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":8739:8741   */\n      0x20\n        /* \"#utility.yul\":8734:8737   */\n      dup3\n        /* \"#utility.yul\":8730:8742   */\n      add\n        /* \"#utility.yul\":8723:8742   */\n      swap1\n      pop\n        /* \"#utility.yul\":8382:8748   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8754:9173   */\n    tag_86:\n        /* \"#utility.yul\":8920:8924   */\n      0x00\n        /* \"#utility.yul\":8958:8960   */\n      0x20\n        /* \"#utility.yul\":8947:8956   */\n      dup3\n        /* \"#utility.yul\":8943:8961   */\n      add\n        /* \"#utility.yul\":8935:8961   */\n      swap1\n      pop\n        /* \"#utility.yul\":9007:9016   */\n      dup2\n        /* \"#utility.yul\":9001:9005   */\n      dup2\n        /* \"#utility.yul\":8997:9017   */\n      sub\n        /* \"#utility.yul\":8993:8994   */\n      0x00\n        /* \"#utility.yul\":8982:8991   */\n      dup4\n        /* \"#utility.yul\":8978:8995   */\n      add\n        /* \"#utility.yul\":8971:9018   */\n      mstore\n        /* \"#utility.yul\":9035:9166   */\n      tag_455\n        /* \"#utility.yul\":9161:9165   */\n      dup2\n        /* \"#utility.yul\":9035:9166   */\n      tag_327\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":9027:9166   */\n      swap1\n      pop\n        /* \"#utility.yul\":8754:9173   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9179:9360   */\n    tag_328:\n        /* \"#utility.yul\":9319:9352   */\n      0x63616e6e6f7420616464206d6f7265207468616e203235206d6f64756c657300\n        /* \"#utility.yul\":9315:9316   */\n      0x00\n        /* \"#utility.yul\":9307:9313   */\n      dup3\n        /* \"#utility.yul\":9303:9317   */\n      add\n        /* \"#utility.yul\":9296:9353   */\n      mstore\n        /* \"#utility.yul\":9179:9360   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9366:9732   */\n    tag_329:\n        /* \"#utility.yul\":9508:9511   */\n      0x00\n        /* \"#utility.yul\":9529:9596   */\n      tag_458\n        /* \"#utility.yul\":9593:9595   */\n      0x1f\n        /* \"#utility.yul\":9588:9591   */\n      dup4\n        /* \"#utility.yul\":9529:9596   */\n      tag_323\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":9522:9596   */\n      swap2\n      pop\n        /* \"#utility.yul\":9605:9698   */\n      tag_459\n        /* \"#utility.yul\":9694:9697   */\n      dup3\n        /* \"#utility.yul\":9605:9698   */\n      tag_328\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":9723:9725   */\n      0x20\n        /* \"#utility.yul\":9718:9721   */\n      dup3\n        /* \"#utility.yul\":9714:9726   */\n      add\n        /* \"#utility.yul\":9707:9726   */\n      swap1\n      pop\n        /* \"#utility.yul\":9366:9732   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9738:10157   */\n    tag_89:\n        /* \"#utility.yul\":9904:9908   */\n      0x00\n        /* \"#utility.yul\":9942:9944   */\n      0x20\n        /* \"#utility.yul\":9931:9940   */\n      dup3\n        /* \"#utility.yul\":9927:9945   */\n      add\n        /* \"#utility.yul\":9919:9945   */\n      swap1\n      pop\n        /* \"#utility.yul\":9991:10000   */\n      dup2\n        /* \"#utility.yul\":9985:9989   */\n      dup2\n        /* \"#utility.yul\":9981:10001   */\n      sub\n        /* \"#utility.yul\":9977:9978   */\n      0x00\n        /* \"#utility.yul\":9966:9975   */\n      dup4\n        /* \"#utility.yul\":9962:9979   */\n      add\n        /* \"#utility.yul\":9955:10002   */\n      mstore\n        /* \"#utility.yul\":10019:10150   */\n      tag_461\n        /* \"#utility.yul\":10145:10149   */\n      dup2\n        /* \"#utility.yul\":10019:10150   */\n      tag_329\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":10011:10150   */\n      swap1\n      pop\n        /* \"#utility.yul\":9738:10157   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10163:10341   */\n    tag_330:\n        /* \"#utility.yul\":10303:10333   */\n      0x6f6e6c79206f776e6572206f7220746f6b656e2063616e2063616c6c00000000\n        /* \"#utility.yul\":10299:10300   */\n      0x00\n        /* \"#utility.yul\":10291:10297   */\n      dup3\n        /* \"#utility.yul\":10287:10301   */\n      add\n        /* \"#utility.yul\":10280:10334   */\n      mstore\n        /* \"#utility.yul\":10163:10341   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10347:10713   */\n    tag_331:\n        /* \"#utility.yul\":10489:10492   */\n      0x00\n        /* \"#utility.yul\":10510:10577   */\n      tag_464\n        /* \"#utility.yul\":10574:10576   */\n      0x1c\n        /* \"#utility.yul\":10569:10572   */\n      dup4\n        /* \"#utility.yul\":10510:10577   */\n      tag_323\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":10503:10577   */\n      swap2\n      pop\n        /* \"#utility.yul\":10586:10679   */\n      tag_465\n        /* \"#utility.yul\":10675:10678   */\n      dup3\n        /* \"#utility.yul\":10586:10679   */\n      tag_330\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":10704:10706   */\n      0x20\n        /* \"#utility.yul\":10699:10702   */\n      dup3\n        /* \"#utility.yul\":10695:10707   */\n      add\n        /* \"#utility.yul\":10688:10707   */\n      swap1\n      pop\n        /* \"#utility.yul\":10347:10713   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10719:11138   */\n    tag_101:\n        /* \"#utility.yul\":10885:10889   */\n      0x00\n        /* \"#utility.yul\":10923:10925   */\n      0x20\n        /* \"#utility.yul\":10912:10921   */\n      dup3\n        /* \"#utility.yul\":10908:10926   */\n      add\n        /* \"#utility.yul\":10900:10926   */\n      swap1\n      pop\n        /* \"#utility.yul\":10972:10981   */\n      dup2\n        /* \"#utility.yul\":10966:10970   */\n      dup2\n        /* \"#utility.yul\":10962:10982   */\n      sub\n        /* \"#utility.yul\":10958:10959   */\n      0x00\n        /* \"#utility.yul\":10947:10956   */\n      dup4\n        /* \"#utility.yul\":10943:10960   */\n      add\n        /* \"#utility.yul\":10936:10983   */\n      mstore\n        /* \"#utility.yul\":11000:11131   */\n      tag_467\n        /* \"#utility.yul\":11126:11130   */\n      dup2\n        /* \"#utility.yul\":11000:11131   */\n      tag_331\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":10992:11131   */\n      swap1\n      pop\n        /* \"#utility.yul\":10719:11138   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11144:11317   */\n    tag_332:\n        /* \"#utility.yul\":11284:11309   */\n      0x5468697320746f6b656e206973206e6f7420626f756e64000000000000000000\n        /* \"#utility.yul\":11280:11281   */\n      0x00\n        /* \"#utility.yul\":11272:11278   */\n      dup3\n        /* \"#utility.yul\":11268:11282   */\n      add\n        /* \"#utility.yul\":11261:11310   */\n      mstore\n        /* \"#utility.yul\":11144:11317   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11323:11689   */\n    tag_333:\n        /* \"#utility.yul\":11465:11468   */\n      0x00\n        /* \"#utility.yul\":11486:11553   */\n      tag_470\n        /* \"#utility.yul\":11550:11552   */\n      0x17\n        /* \"#utility.yul\":11545:11548   */\n      dup4\n        /* \"#utility.yul\":11486:11553   */\n      tag_323\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":11479:11553   */\n      swap2\n      pop\n        /* \"#utility.yul\":11562:11655   */\n      tag_471\n        /* \"#utility.yul\":11651:11654   */\n      dup3\n        /* \"#utility.yul\":11562:11655   */\n      tag_332\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":11680:11682   */\n      0x20\n        /* \"#utility.yul\":11675:11678   */\n      dup3\n        /* \"#utility.yul\":11671:11683   */\n      add\n        /* \"#utility.yul\":11664:11683   */\n      swap1\n      pop\n        /* \"#utility.yul\":11323:11689   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11695:12114   */\n    tag_112:\n        /* \"#utility.yul\":11861:11865   */\n      0x00\n        /* \"#utility.yul\":11899:11901   */\n      0x20\n        /* \"#utility.yul\":11888:11897   */\n      dup3\n        /* \"#utility.yul\":11884:11902   */\n      add\n        /* \"#utility.yul\":11876:11902   */\n      swap1\n      pop\n        /* \"#utility.yul\":11948:11957   */\n      dup2\n        /* \"#utility.yul\":11942:11946   */\n      dup2\n        /* \"#utility.yul\":11938:11958   */\n      sub\n        /* \"#utility.yul\":11934:11935   */\n      0x00\n        /* \"#utility.yul\":11923:11932   */\n      dup4\n        /* \"#utility.yul\":11919:11936   */\n      add\n        /* \"#utility.yul\":11912:11959   */\n      mstore\n        /* \"#utility.yul\":11976:12107   */\n      tag_473\n        /* \"#utility.yul\":12102:12106   */\n      dup2\n        /* \"#utility.yul\":11976:12107   */\n      tag_333\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":11968:12107   */\n      swap1\n      pop\n        /* \"#utility.yul\":11695:12114   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12120:12412   */\n    tag_334:\n        /* \"#utility.yul\":12260:12294   */\n      0x6572726f72203a20746869732061646472657373206973206e6f74206120746f\n        /* \"#utility.yul\":12256:12257   */\n      0x00\n        /* \"#utility.yul\":12248:12254   */\n      dup3\n        /* \"#utility.yul\":12244:12258   */\n      add\n        /* \"#utility.yul\":12237:12295   */\n      mstore\n        /* \"#utility.yul\":12329:12363   */\n      0x6b656e20626f756e6420746f2074686520636f6d706c69616e636520636f6e74\n        /* \"#utility.yul\":12324:12326   */\n      0x20\n        /* \"#utility.yul\":12316:12322   */\n      dup3\n        /* \"#utility.yul\":12312:12327   */\n      add\n        /* \"#utility.yul\":12305:12364   */\n      mstore\n        /* \"#utility.yul\":12398:12404   */\n      0x7261637400000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12393:12395   */\n      0x40\n        /* \"#utility.yul\":12385:12391   */\n      dup3\n        /* \"#utility.yul\":12381:12396   */\n      add\n        /* \"#utility.yul\":12374:12405   */\n      mstore\n        /* \"#utility.yul\":12120:12412   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12418:12784   */\n    tag_335:\n        /* \"#utility.yul\":12560:12563   */\n      0x00\n        /* \"#utility.yul\":12581:12648   */\n      tag_476\n        /* \"#utility.yul\":12645:12647   */\n      0x44\n        /* \"#utility.yul\":12640:12643   */\n      dup4\n        /* \"#utility.yul\":12581:12648   */\n      tag_323\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":12574:12648   */\n      swap2\n      pop\n        /* \"#utility.yul\":12657:12750   */\n      tag_477\n        /* \"#utility.yul\":12746:12749   */\n      dup3\n        /* \"#utility.yul\":12657:12750   */\n      tag_334\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":12775:12777   */\n      0x60\n        /* \"#utility.yul\":12770:12773   */\n      dup3\n        /* \"#utility.yul\":12766:12778   */\n      add\n        /* \"#utility.yul\":12759:12778   */\n      swap1\n      pop\n        /* \"#utility.yul\":12418:12784   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12790:13209   */\n    tag_119:\n        /* \"#utility.yul\":12956:12960   */\n      0x00\n        /* \"#utility.yul\":12994:12996   */\n      0x20\n        /* \"#utility.yul\":12983:12992   */\n      dup3\n        /* \"#utility.yul\":12979:12997   */\n      add\n        /* \"#utility.yul\":12971:12997   */\n      swap1\n      pop\n        /* \"#utility.yul\":13043:13052   */\n      dup2\n        /* \"#utility.yul\":13037:13041   */\n      dup2\n        /* \"#utility.yul\":13033:13053   */\n      sub\n        /* \"#utility.yul\":13029:13030   */\n      0x00\n        /* \"#utility.yul\":13018:13027   */\n      dup4\n        /* \"#utility.yul\":13014:13031   */\n      add\n        /* \"#utility.yul\":13007:13054   */\n      mstore\n        /* \"#utility.yul\":13071:13202   */\n      tag_479\n        /* \"#utility.yul\":13197:13201   */\n      dup2\n        /* \"#utility.yul\":13071:13202   */\n      tag_335\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":13063:13202   */\n      swap1\n      pop\n        /* \"#utility.yul\":12790:13209   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13215:13397   */\n    tag_336:\n        /* \"#utility.yul\":13355:13389   */\n      0x696e76616c696420617267756d656e74202d206e6f2076616c7565206d696e74\n        /* \"#utility.yul\":13351:13352   */\n      0x00\n        /* \"#utility.yul\":13343:13349   */\n      dup3\n        /* \"#utility.yul\":13339:13353   */\n      add\n        /* \"#utility.yul\":13332:13390   */\n      mstore\n        /* \"#utility.yul\":13215:13397   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13403:13769   */\n    tag_337:\n        /* \"#utility.yul\":13545:13548   */\n      0x00\n        /* \"#utility.yul\":13566:13633   */\n      tag_482\n        /* \"#utility.yul\":13630:13632   */\n      0x20\n        /* \"#utility.yul\":13625:13628   */\n      dup4\n        /* \"#utility.yul\":13566:13633   */\n      tag_323\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":13559:13633   */\n      swap2\n      pop\n        /* \"#utility.yul\":13642:13735   */\n      tag_483\n        /* \"#utility.yul\":13731:13734   */\n      dup3\n        /* \"#utility.yul\":13642:13735   */\n      tag_336\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":13760:13762   */\n      0x20\n        /* \"#utility.yul\":13755:13758   */\n      dup3\n        /* \"#utility.yul\":13751:13763   */\n      add\n        /* \"#utility.yul\":13744:13763   */\n      swap1\n      pop\n        /* \"#utility.yul\":13403:13769   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13775:14194   */\n    tag_125:\n        /* \"#utility.yul\":13941:13945   */\n      0x00\n        /* \"#utility.yul\":13979:13981   */\n      0x20\n        /* \"#utility.yul\":13968:13977   */\n      dup3\n        /* \"#utility.yul\":13964:13982   */\n      add\n        /* \"#utility.yul\":13956:13982   */\n      swap1\n      pop\n        /* \"#utility.yul\":14028:14037   */\n      dup2\n        /* \"#utility.yul\":14022:14026   */\n      dup2\n        /* \"#utility.yul\":14018:14038   */\n      sub\n        /* \"#utility.yul\":14014:14015   */\n      0x00\n        /* \"#utility.yul\":14003:14012   */\n      dup4\n        /* \"#utility.yul\":13999:14016   */\n      add\n        /* \"#utility.yul\":13992:14039   */\n      mstore\n        /* \"#utility.yul\":14056:14187   */\n      tag_485\n        /* \"#utility.yul\":14182:14186   */\n      dup2\n        /* \"#utility.yul\":14056:14187   */\n      tag_337\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":14048:14187   */\n      swap1\n      pop\n        /* \"#utility.yul\":13775:14194   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14200:14380   */\n    tag_131:\n        /* \"#utility.yul\":14248:14325   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14245:14246   */\n      0x00\n        /* \"#utility.yul\":14238:14326   */\n      mstore\n        /* \"#utility.yul\":14345:14349   */\n      0x32\n        /* \"#utility.yul\":14342:14343   */\n      0x04\n        /* \"#utility.yul\":14335:14350   */\n      mstore\n        /* \"#utility.yul\":14369:14373   */\n      0x24\n        /* \"#utility.yul\":14366:14367   */\n      0x00\n        /* \"#utility.yul\":14359:14374   */\n      revert\n        /* \"#utility.yul\":14386:14504   */\n    tag_338:\n        /* \"#utility.yul\":14473:14497   */\n      tag_488\n        /* \"#utility.yul\":14491:14496   */\n      dup2\n        /* \"#utility.yul\":14473:14497   */\n      tag_306\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":14468:14471   */\n      dup3\n        /* \"#utility.yul\":14461:14498   */\n      mstore\n        /* \"#utility.yul\":14386:14504   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14510:14842   */\n    tag_134:\n        /* \"#utility.yul\":14631:14635   */\n      0x00\n        /* \"#utility.yul\":14669:14671   */\n      0x40\n        /* \"#utility.yul\":14658:14667   */\n      dup3\n        /* \"#utility.yul\":14654:14672   */\n      add\n        /* \"#utility.yul\":14646:14672   */\n      swap1\n      pop\n        /* \"#utility.yul\":14682:14753   */\n      tag_490\n        /* \"#utility.yul\":14750:14751   */\n      0x00\n        /* \"#utility.yul\":14739:14748   */\n      dup4\n        /* \"#utility.yul\":14735:14752   */\n      add\n        /* \"#utility.yul\":14726:14732   */\n      dup6\n        /* \"#utility.yul\":14682:14753   */\n      tag_309\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":14763:14835   */\n      tag_491\n        /* \"#utility.yul\":14831:14833   */\n      0x20\n        /* \"#utility.yul\":14820:14829   */\n      dup4\n        /* \"#utility.yul\":14816:14834   */\n      add\n        /* \"#utility.yul\":14807:14813   */\n      dup5\n        /* \"#utility.yul\":14763:14835   */\n      tag_338\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":14510:14842   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14848:15028   */\n    tag_339:\n        /* \"#utility.yul\":14896:14973   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14893:14894   */\n      0x00\n        /* \"#utility.yul\":14886:14974   */\n      mstore\n        /* \"#utility.yul\":14993:14997   */\n      0x11\n        /* \"#utility.yul\":14990:14991   */\n      0x04\n        /* \"#utility.yul\":14983:14998   */\n      mstore\n        /* \"#utility.yul\":15017:15021   */\n      0x24\n        /* \"#utility.yul\":15014:15015   */\n      0x00\n        /* \"#utility.yul\":15007:15022   */\n      revert\n        /* \"#utility.yul\":15034:15267   */\n    tag_139:\n        /* \"#utility.yul\":15073:15076   */\n      0x00\n        /* \"#utility.yul\":15096:15120   */\n      tag_494\n        /* \"#utility.yul\":15114:15119   */\n      dup3\n        /* \"#utility.yul\":15096:15120   */\n      tag_306\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":15087:15120   */\n      swap2\n      pop\n        /* \"#utility.yul\":15142:15208   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":15135:15140   */\n      dup3\n        /* \"#utility.yul\":15132:15209   */\n      sub\n        /* \"#utility.yul\":15129:15232   */\n      tag_495\n      jumpi\n        /* \"#utility.yul\":15212:15230   */\n      tag_496\n      tag_339\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":15129:15232   */\n    tag_495:\n        /* \"#utility.yul\":15259:15260   */\n      0x01\n        /* \"#utility.yul\":15252:15257   */\n      dup3\n        /* \"#utility.yul\":15248:15261   */\n      add\n        /* \"#utility.yul\":15241:15261   */\n      swap1\n      pop\n        /* \"#utility.yul\":15034:15267   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15273:15496   */\n    tag_340:\n        /* \"#utility.yul\":15413:15447   */\n      0x696e76616c696420617267756d656e74202d206e6f2076616c7565207472616e\n        /* \"#utility.yul\":15409:15410   */\n      0x00\n        /* \"#utility.yul\":15401:15407   */\n      dup3\n        /* \"#utility.yul\":15397:15411   */\n      add\n        /* \"#utility.yul\":15390:15448   */\n      mstore\n        /* \"#utility.yul\":15482:15488   */\n      0x7366657200000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15477:15479   */\n      0x20\n        /* \"#utility.yul\":15469:15475   */\n      dup3\n        /* \"#utility.yul\":15465:15480   */\n      add\n        /* \"#utility.yul\":15458:15489   */\n      mstore\n        /* \"#utility.yul\":15273:15496   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15502:15868   */\n    tag_341:\n        /* \"#utility.yul\":15644:15647   */\n      0x00\n        /* \"#utility.yul\":15665:15732   */\n      tag_499\n        /* \"#utility.yul\":15729:15731   */\n      0x24\n        /* \"#utility.yul\":15724:15727   */\n      dup4\n        /* \"#utility.yul\":15665:15732   */\n      tag_323\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":15658:15732   */\n      swap2\n      pop\n        /* \"#utility.yul\":15741:15834   */\n      tag_500\n        /* \"#utility.yul\":15830:15833   */\n      dup3\n        /* \"#utility.yul\":15741:15834   */\n      tag_340\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":15859:15861   */\n      0x40\n        /* \"#utility.yul\":15854:15857   */\n      dup3\n        /* \"#utility.yul\":15850:15862   */\n      add\n        /* \"#utility.yul\":15843:15862   */\n      swap1\n      pop\n        /* \"#utility.yul\":15502:15868   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15874:16293   */\n    tag_155:\n        /* \"#utility.yul\":16040:16044   */\n      0x00\n        /* \"#utility.yul\":16078:16080   */\n      0x20\n        /* \"#utility.yul\":16067:16076   */\n      dup3\n        /* \"#utility.yul\":16063:16081   */\n      add\n        /* \"#utility.yul\":16055:16081   */\n      swap1\n      pop\n        /* \"#utility.yul\":16127:16136   */\n      dup2\n        /* \"#utility.yul\":16121:16125   */\n      dup2\n        /* \"#utility.yul\":16117:16137   */\n      sub\n        /* \"#utility.yul\":16113:16114   */\n      0x00\n        /* \"#utility.yul\":16102:16111   */\n      dup4\n        /* \"#utility.yul\":16098:16115   */\n      add\n        /* \"#utility.yul\":16091:16138   */\n      mstore\n        /* \"#utility.yul\":16155:16286   */\n      tag_502\n        /* \"#utility.yul\":16281:16285   */\n      dup2\n        /* \"#utility.yul\":16155:16286   */\n      tag_341\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":16147:16286   */\n      swap1\n      pop\n        /* \"#utility.yul\":15874:16293   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16299:16741   */\n    tag_163:\n        /* \"#utility.yul\":16448:16452   */\n      0x00\n        /* \"#utility.yul\":16486:16488   */\n      0x60\n        /* \"#utility.yul\":16475:16484   */\n      dup3\n        /* \"#utility.yul\":16471:16489   */\n      add\n        /* \"#utility.yul\":16463:16489   */\n      swap1\n      pop\n        /* \"#utility.yul\":16499:16570   */\n      tag_504\n        /* \"#utility.yul\":16567:16568   */\n      0x00\n        /* \"#utility.yul\":16556:16565   */\n      dup4\n        /* \"#utility.yul\":16552:16569   */\n      add\n        /* \"#utility.yul\":16543:16549   */\n      dup7\n        /* \"#utility.yul\":16499:16570   */\n      tag_309\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":16580:16652   */\n      tag_505\n        /* \"#utility.yul\":16648:16650   */\n      0x20\n        /* \"#utility.yul\":16637:16646   */\n      dup4\n        /* \"#utility.yul\":16633:16651   */\n      add\n        /* \"#utility.yul\":16624:16630   */\n      dup6\n        /* \"#utility.yul\":16580:16652   */\n      tag_309\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":16662:16734   */\n      tag_506\n        /* \"#utility.yul\":16730:16732   */\n      0x40\n        /* \"#utility.yul\":16719:16728   */\n      dup4\n        /* \"#utility.yul\":16715:16733   */\n      add\n        /* \"#utility.yul\":16706:16712   */\n      dup5\n        /* \"#utility.yul\":16662:16734   */\n      tag_338\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":16299:16741   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16747:16929   */\n    tag_342:\n        /* \"#utility.yul\":16887:16921   */\n      0x696e76616c696420617267756d656e74202d206e6f2076616c7565206275726e\n        /* \"#utility.yul\":16883:16884   */\n      0x00\n        /* \"#utility.yul\":16875:16881   */\n      dup3\n        /* \"#utility.yul\":16871:16885   */\n      add\n        /* \"#utility.yul\":16864:16922   */\n      mstore\n        /* \"#utility.yul\":16747:16929   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16935:17301   */\n    tag_343:\n        /* \"#utility.yul\":17077:17080   */\n      0x00\n        /* \"#utility.yul\":17098:17165   */\n      tag_509\n        /* \"#utility.yul\":17162:17164   */\n      0x20\n        /* \"#utility.yul\":17157:17160   */\n      dup4\n        /* \"#utility.yul\":17098:17165   */\n      tag_323\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":17091:17165   */\n      swap2\n      pop\n        /* \"#utility.yul\":17174:17267   */\n      tag_510\n        /* \"#utility.yul\":17263:17266   */\n      dup3\n        /* \"#utility.yul\":17174:17267   */\n      tag_342\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":17292:17294   */\n      0x20\n        /* \"#utility.yul\":17287:17290   */\n      dup3\n        /* \"#utility.yul\":17283:17295   */\n      add\n        /* \"#utility.yul\":17276:17295   */\n      swap1\n      pop\n        /* \"#utility.yul\":16935:17301   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17307:17726   */\n    tag_176:\n        /* \"#utility.yul\":17473:17477   */\n      0x00\n        /* \"#utility.yul\":17511:17513   */\n      0x20\n        /* \"#utility.yul\":17500:17509   */\n      dup3\n        /* \"#utility.yul\":17496:17514   */\n      add\n        /* \"#utility.yul\":17488:17514   */\n      swap1\n      pop\n        /* \"#utility.yul\":17560:17569   */\n      dup2\n        /* \"#utility.yul\":17554:17558   */\n      dup2\n        /* \"#utility.yul\":17550:17570   */\n      sub\n        /* \"#utility.yul\":17546:17547   */\n      0x00\n        /* \"#utility.yul\":17535:17544   */\n      dup4\n        /* \"#utility.yul\":17531:17548   */\n      add\n        /* \"#utility.yul\":17524:17571   */\n      mstore\n        /* \"#utility.yul\":17588:17719   */\n      tag_512\n        /* \"#utility.yul\":17714:17718   */\n      dup2\n        /* \"#utility.yul\":17588:17719   */\n      tag_343\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":17580:17719   */\n      swap1\n      pop\n        /* \"#utility.yul\":17307:17726   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17732:17898   */\n    tag_344:\n        /* \"#utility.yul\":17872:17890   */\n      0x6d6f64756c65206e6f7420626f756e6400000000000000000000000000000000\n        /* \"#utility.yul\":17868:17869   */\n      0x00\n        /* \"#utility.yul\":17860:17866   */\n      dup3\n        /* \"#utility.yul\":17856:17870   */\n      add\n        /* \"#utility.yul\":17849:17891   */\n      mstore\n        /* \"#utility.yul\":17732:17898   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17904:18270   */\n    tag_345:\n        /* \"#utility.yul\":18046:18049   */\n      0x00\n        /* \"#utility.yul\":18067:18134   */\n      tag_515\n        /* \"#utility.yul\":18131:18133   */\n      0x10\n        /* \"#utility.yul\":18126:18129   */\n      dup4\n        /* \"#utility.yul\":18067:18134   */\n      tag_323\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":18060:18134   */\n      swap2\n      pop\n        /* \"#utility.yul\":18143:18236   */\n      tag_516\n        /* \"#utility.yul\":18232:18235   */\n      dup3\n        /* \"#utility.yul\":18143:18236   */\n      tag_344\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":18261:18263   */\n      0x20\n        /* \"#utility.yul\":18256:18259   */\n      dup3\n        /* \"#utility.yul\":18252:18264   */\n      add\n        /* \"#utility.yul\":18245:18264   */\n      swap1\n      pop\n        /* \"#utility.yul\":17904:18270   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18276:18695   */\n    tag_196:\n        /* \"#utility.yul\":18442:18446   */\n      0x00\n        /* \"#utility.yul\":18480:18482   */\n      0x20\n        /* \"#utility.yul\":18469:18478   */\n      dup3\n        /* \"#utility.yul\":18465:18483   */\n      add\n        /* \"#utility.yul\":18457:18483   */\n      swap1\n      pop\n        /* \"#utility.yul\":18529:18538   */\n      dup2\n        /* \"#utility.yul\":18523:18527   */\n      dup2\n        /* \"#utility.yul\":18519:18539   */\n      sub\n        /* \"#utility.yul\":18515:18516   */\n      0x00\n        /* \"#utility.yul\":18504:18513   */\n      dup4\n        /* \"#utility.yul\":18500:18517   */\n      add\n        /* \"#utility.yul\":18493:18540   */\n      mstore\n        /* \"#utility.yul\":18557:18688   */\n      tag_518\n        /* \"#utility.yul\":18683:18687   */\n      dup2\n        /* \"#utility.yul\":18557:18688   */\n      tag_345\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":18549:18688   */\n      swap1\n      pop\n        /* \"#utility.yul\":18276:18695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18701:18895   */\n    tag_209:\n        /* \"#utility.yul\":18741:18745   */\n      0x00\n        /* \"#utility.yul\":18761:18781   */\n      tag_520\n        /* \"#utility.yul\":18779:18780   */\n      dup3\n        /* \"#utility.yul\":18761:18781   */\n      tag_306\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":18756:18781   */\n      swap2\n      pop\n        /* \"#utility.yul\":18795:18815   */\n      tag_521\n        /* \"#utility.yul\":18813:18814   */\n      dup4\n        /* \"#utility.yul\":18795:18815   */\n      tag_306\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":18790:18815   */\n      swap3\n      pop\n        /* \"#utility.yul\":18839:18840   */\n      dup3\n        /* \"#utility.yul\":18836:18837   */\n      dup3\n        /* \"#utility.yul\":18832:18841   */\n      sub\n        /* \"#utility.yul\":18824:18841   */\n      swap1\n      pop\n        /* \"#utility.yul\":18863:18864   */\n      dup2\n        /* \"#utility.yul\":18857:18861   */\n      dup2\n        /* \"#utility.yul\":18854:18865   */\n      gt\n        /* \"#utility.yul\":18851:18888   */\n      iszero\n      tag_522\n      jumpi\n        /* \"#utility.yul\":18868:18886   */\n      tag_523\n      tag_339\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":18851:18888   */\n    tag_522:\n        /* \"#utility.yul\":18701:18895   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18901:19081   */\n    tag_218:\n        /* \"#utility.yul\":18949:19026   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18946:18947   */\n      0x00\n        /* \"#utility.yul\":18939:19027   */\n      mstore\n        /* \"#utility.yul\":19046:19050   */\n      0x31\n        /* \"#utility.yul\":19043:19044   */\n      0x04\n        /* \"#utility.yul\":19036:19051   */\n      mstore\n        /* \"#utility.yul\":19070:19074   */\n      0x24\n        /* \"#utility.yul\":19067:19068   */\n      0x00\n        /* \"#utility.yul\":19060:19075   */\n      revert\n        /* \"#utility.yul\":19087:19320   */\n    tag_346:\n        /* \"#utility.yul\":19227:19261   */\n      0x496e697469616c697a61626c653a20636f6e747261637420697320616c726561\n        /* \"#utility.yul\":19223:19224   */\n      0x00\n        /* \"#utility.yul\":19215:19221   */\n      dup3\n        /* \"#utility.yul\":19211:19225   */\n      add\n        /* \"#utility.yul\":19204:19262   */\n      mstore\n        /* \"#utility.yul\":19296:19312   */\n      0x647920696e697469616c697a6564000000000000000000000000000000000000\n        /* \"#utility.yul\":19291:19293   */\n      0x20\n        /* \"#utility.yul\":19283:19289   */\n      dup3\n        /* \"#utility.yul\":19279:19294   */\n      add\n        /* \"#utility.yul\":19272:19313   */\n      mstore\n        /* \"#utility.yul\":19087:19320   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19326:19692   */\n    tag_347:\n        /* \"#utility.yul\":19468:19471   */\n      0x00\n        /* \"#utility.yul\":19489:19556   */\n      tag_527\n        /* \"#utility.yul\":19553:19555   */\n      0x2e\n        /* \"#utility.yul\":19548:19551   */\n      dup4\n        /* \"#utility.yul\":19489:19556   */\n      tag_323\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":19482:19556   */\n      swap2\n      pop\n        /* \"#utility.yul\":19565:19658   */\n      tag_528\n        /* \"#utility.yul\":19654:19657   */\n      dup3\n        /* \"#utility.yul\":19565:19658   */\n      tag_346\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":19683:19685   */\n      0x40\n        /* \"#utility.yul\":19678:19681   */\n      dup3\n        /* \"#utility.yul\":19674:19686   */\n      add\n        /* \"#utility.yul\":19667:19686   */\n      swap1\n      pop\n        /* \"#utility.yul\":19326:19692   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19698:20117   */\n    tag_233:\n        /* \"#utility.yul\":19864:19868   */\n      0x00\n        /* \"#utility.yul\":19902:19904   */\n      0x20\n        /* \"#utility.yul\":19891:19900   */\n      dup3\n        /* \"#utility.yul\":19887:19905   */\n      add\n        /* \"#utility.yul\":19879:19905   */\n      swap1\n      pop\n        /* \"#utility.yul\":19951:19960   */\n      dup2\n        /* \"#utility.yul\":19945:19949   */\n      dup2\n        /* \"#utility.yul\":19941:19961   */\n      sub\n        /* \"#utility.yul\":19937:19938   */\n      0x00\n        /* \"#utility.yul\":19926:19935   */\n      dup4\n        /* \"#utility.yul\":19922:19939   */\n      add\n        /* \"#utility.yul\":19915:19962   */\n      mstore\n        /* \"#utility.yul\":19979:20110   */\n      tag_530\n        /* \"#utility.yul\":20105:20109   */\n      dup2\n        /* \"#utility.yul\":19979:20110   */\n      tag_347\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":19971:20110   */\n      swap1\n      pop\n        /* \"#utility.yul\":19698:20117   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20123:20208   */\n    tag_348:\n        /* \"#utility.yul\":20168:20175   */\n      0x00\n        /* \"#utility.yul\":20197:20202   */\n      dup2\n        /* \"#utility.yul\":20186:20202   */\n      swap1\n      pop\n        /* \"#utility.yul\":20123:20208   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20214:20300   */\n    tag_349:\n        /* \"#utility.yul\":20249:20256   */\n      0x00\n        /* \"#utility.yul\":20289:20293   */\n      0xff\n        /* \"#utility.yul\":20282:20287   */\n      dup3\n        /* \"#utility.yul\":20278:20294   */\n      and\n        /* \"#utility.yul\":20267:20294   */\n      swap1\n      pop\n        /* \"#utility.yul\":20214:20300   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20306:20366   */\n    tag_350:\n        /* \"#utility.yul\":20334:20337   */\n      0x00\n        /* \"#utility.yul\":20355:20360   */\n      dup2\n        /* \"#utility.yul\":20348:20360   */\n      swap1\n      pop\n        /* \"#utility.yul\":20306:20366   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20372:20526   */\n    tag_351:\n        /* \"#utility.yul\":20428:20437   */\n      0x00\n        /* \"#utility.yul\":20461:20520   */\n      tag_535\n        /* \"#utility.yul\":20477:20519   */\n      tag_536\n        /* \"#utility.yul\":20486:20518   */\n      tag_537\n        /* \"#utility.yul\":20512:20517   */\n      dup5\n        /* \"#utility.yul\":20486:20518   */\n      tag_348\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":20477:20519   */\n      tag_350\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":20461:20520   */\n      tag_349\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":20448:20520   */\n      swap1\n      pop\n        /* \"#utility.yul\":20372:20526   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20532:20675   */\n    tag_352:\n        /* \"#utility.yul\":20625:20668   */\n      tag_539\n        /* \"#utility.yul\":20662:20667   */\n      dup2\n        /* \"#utility.yul\":20625:20668   */\n      tag_351\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":20620:20623   */\n      dup3\n        /* \"#utility.yul\":20613:20669   */\n      mstore\n        /* \"#utility.yul\":20532:20675   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20681:20915   */\n    tag_240:\n        /* \"#utility.yul\":20780:20784   */\n      0x00\n        /* \"#utility.yul\":20818:20820   */\n      0x20\n        /* \"#utility.yul\":20807:20816   */\n      dup3\n        /* \"#utility.yul\":20803:20821   */\n      add\n        /* \"#utility.yul\":20795:20821   */\n      swap1\n      pop\n        /* \"#utility.yul\":20831:20908   */\n      tag_541\n        /* \"#utility.yul\":20905:20906   */\n      0x00\n        /* \"#utility.yul\":20894:20903   */\n      dup4\n        /* \"#utility.yul\":20890:20907   */\n      add\n        /* \"#utility.yul\":20881:20887   */\n      dup5\n        /* \"#utility.yul\":20831:20908   */\n      tag_352\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":20681:20915   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20921:21474   */\n    tag_249:\n        /* \"#utility.yul\":21098:21102   */\n      0x00\n        /* \"#utility.yul\":21136:21139   */\n      0x80\n        /* \"#utility.yul\":21125:21134   */\n      dup3\n        /* \"#utility.yul\":21121:21140   */\n      add\n        /* \"#utility.yul\":21113:21140   */\n      swap1\n      pop\n        /* \"#utility.yul\":21150:21221   */\n      tag_543\n        /* \"#utility.yul\":21218:21219   */\n      0x00\n        /* \"#utility.yul\":21207:21216   */\n      dup4\n        /* \"#utility.yul\":21203:21220   */\n      add\n        /* \"#utility.yul\":21194:21200   */\n      dup8\n        /* \"#utility.yul\":21150:21221   */\n      tag_309\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":21231:21303   */\n      tag_544\n        /* \"#utility.yul\":21299:21301   */\n      0x20\n        /* \"#utility.yul\":21288:21297   */\n      dup4\n        /* \"#utility.yul\":21284:21302   */\n      add\n        /* \"#utility.yul\":21275:21281   */\n      dup7\n        /* \"#utility.yul\":21231:21303   */\n      tag_309\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":21313:21385   */\n      tag_545\n        /* \"#utility.yul\":21381:21383   */\n      0x40\n        /* \"#utility.yul\":21370:21379   */\n      dup4\n        /* \"#utility.yul\":21366:21384   */\n      add\n        /* \"#utility.yul\":21357:21363   */\n      dup6\n        /* \"#utility.yul\":21313:21385   */\n      tag_338\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":21395:21467   */\n      tag_546\n        /* \"#utility.yul\":21463:21465   */\n      0x60\n        /* \"#utility.yul\":21452:21461   */\n      dup4\n        /* \"#utility.yul\":21448:21466   */\n      add\n        /* \"#utility.yul\":21439:21445   */\n      dup5\n        /* \"#utility.yul\":21395:21467   */\n      tag_309\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":20921:21474   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21480:21596   */\n    tag_353:\n        /* \"#utility.yul\":21550:21571   */\n      tag_548\n        /* \"#utility.yul\":21565:21570   */\n      dup2\n        /* \"#utility.yul\":21550:21571   */\n      tag_310\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":21543:21548   */\n      dup2\n        /* \"#utility.yul\":21540:21572   */\n      eq\n        /* \"#utility.yul\":21530:21590   */\n      tag_549\n      jumpi\n        /* \"#utility.yul\":21586:21587   */\n      0x00\n        /* \"#utility.yul\":21583:21584   */\n      dup1\n        /* \"#utility.yul\":21576:21588   */\n      revert\n        /* \"#utility.yul\":21530:21590   */\n    tag_549:\n        /* \"#utility.yul\":21480:21596   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21602:21739   */\n    tag_354:\n        /* \"#utility.yul\":21656:21661   */\n      0x00\n        /* \"#utility.yul\":21687:21693   */\n      dup2\n        /* \"#utility.yul\":21681:21694   */\n      mload\n        /* \"#utility.yul\":21672:21694   */\n      swap1\n      pop\n        /* \"#utility.yul\":21703:21733   */\n      tag_551\n        /* \"#utility.yul\":21727:21732   */\n      dup2\n        /* \"#utility.yul\":21703:21733   */\n      tag_353\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":21602:21739   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21745:22090   */\n    tag_253:\n        /* \"#utility.yul\":21812:21818   */\n      0x00\n        /* \"#utility.yul\":21861:21863   */\n      0x20\n        /* \"#utility.yul\":21849:21858   */\n      dup3\n        /* \"#utility.yul\":21840:21847   */\n      dup5\n        /* \"#utility.yul\":21836:21859   */\n      sub\n        /* \"#utility.yul\":21832:21864   */\n      slt\n        /* \"#utility.yul\":21829:21948   */\n      iszero\n      tag_553\n      jumpi\n        /* \"#utility.yul\":21867:21946   */\n      tag_554\n      tag_300\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":21829:21948   */\n    tag_553:\n        /* \"#utility.yul\":21987:21988   */\n      0x00\n        /* \"#utility.yul\":22012:22073   */\n      tag_555\n        /* \"#utility.yul\":22065:22072   */\n      dup5\n        /* \"#utility.yul\":22056:22062   */\n      dup3\n        /* \"#utility.yul\":22045:22054   */\n      dup6\n        /* \"#utility.yul\":22041:22063   */\n      add\n        /* \"#utility.yul\":22012:22073   */\n      tag_354\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":22002:22073   */\n      swap2\n      pop\n        /* \"#utility.yul\":21958:22083   */\n      pop\n        /* \"#utility.yul\":21745:22090   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22096:22271   */\n    tag_355:\n        /* \"#utility.yul\":22236:22263   */\n      0x63616c6c206f6e6c79206f6e20626f756e64206d6f64756c6500000000000000\n        /* \"#utility.yul\":22232:22233   */\n      0x00\n        /* \"#utility.yul\":22224:22230   */\n      dup3\n        /* \"#utility.yul\":22220:22234   */\n      add\n        /* \"#utility.yul\":22213:22264   */\n      mstore\n        /* \"#utility.yul\":22096:22271   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22277:22643   */\n    tag_356:\n        /* \"#utility.yul\":22419:22422   */\n      0x00\n        /* \"#utility.yul\":22440:22507   */\n      tag_558\n        /* \"#utility.yul\":22504:22506   */\n      0x19\n        /* \"#utility.yul\":22499:22502   */\n      dup4\n        /* \"#utility.yul\":22440:22507   */\n      tag_323\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":22433:22507   */\n      swap2\n      pop\n        /* \"#utility.yul\":22516:22609   */\n      tag_559\n        /* \"#utility.yul\":22605:22608   */\n      dup3\n        /* \"#utility.yul\":22516:22609   */\n      tag_355\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":22634:22636   */\n      0x20\n        /* \"#utility.yul\":22629:22632   */\n      dup3\n        /* \"#utility.yul\":22625:22637   */\n      add\n        /* \"#utility.yul\":22618:22637   */\n      swap1\n      pop\n        /* \"#utility.yul\":22277:22643   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22649:23068   */\n    tag_261:\n        /* \"#utility.yul\":22815:22819   */\n      0x00\n        /* \"#utility.yul\":22853:22855   */\n      0x20\n        /* \"#utility.yul\":22842:22851   */\n      dup3\n        /* \"#utility.yul\":22838:22856   */\n      add\n        /* \"#utility.yul\":22830:22856   */\n      swap1\n      pop\n        /* \"#utility.yul\":22902:22911   */\n      dup2\n        /* \"#utility.yul\":22896:22900   */\n      dup2\n        /* \"#utility.yul\":22892:22912   */\n      sub\n        /* \"#utility.yul\":22888:22889   */\n      0x00\n        /* \"#utility.yul\":22877:22886   */\n      dup4\n        /* \"#utility.yul\":22873:22890   */\n      add\n        /* \"#utility.yul\":22866:22913   */\n      mstore\n        /* \"#utility.yul\":22930:23061   */\n      tag_561\n        /* \"#utility.yul\":23056:23060   */\n      dup2\n        /* \"#utility.yul\":22930:23061   */\n      tag_356\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":22922:23061   */\n      swap1\n      pop\n        /* \"#utility.yul\":22649:23068   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23074:23223   */\n    tag_357:\n        /* \"#utility.yul\":23110:23117   */\n      0x00\n        /* \"#utility.yul\":23150:23216   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":23143:23148   */\n      dup3\n        /* \"#utility.yul\":23139:23217   */\n      and\n        /* \"#utility.yul\":23128:23217   */\n      swap1\n      pop\n        /* \"#utility.yul\":23074:23223   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23229:23344   */\n    tag_358:\n        /* \"#utility.yul\":23314:23337   */\n      tag_564\n        /* \"#utility.yul\":23331:23336   */\n      dup2\n        /* \"#utility.yul\":23314:23337   */\n      tag_357\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":23309:23312   */\n      dup3\n        /* \"#utility.yul\":23302:23338   */\n      mstore\n        /* \"#utility.yul\":23229:23344   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23350:23568   */\n    tag_266:\n        /* \"#utility.yul\":23441:23445   */\n      0x00\n        /* \"#utility.yul\":23479:23481   */\n      0x20\n        /* \"#utility.yul\":23468:23477   */\n      dup3\n        /* \"#utility.yul\":23464:23482   */\n      add\n        /* \"#utility.yul\":23456:23482   */\n      swap1\n      pop\n        /* \"#utility.yul\":23492:23561   */\n      tag_566\n        /* \"#utility.yul\":23558:23559   */\n      0x00\n        /* \"#utility.yul\":23547:23556   */\n      dup4\n        /* \"#utility.yul\":23543:23560   */\n      add\n        /* \"#utility.yul\":23534:23540   */\n      dup5\n        /* \"#utility.yul\":23492:23561   */\n      tag_358\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":23350:23568   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23574:23799   */\n    tag_359:\n        /* \"#utility.yul\":23714:23748   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":23710:23711   */\n      0x00\n        /* \"#utility.yul\":23702:23708   */\n      dup3\n        /* \"#utility.yul\":23698:23712   */\n      add\n        /* \"#utility.yul\":23691:23749   */\n      mstore\n        /* \"#utility.yul\":23783:23791   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":23778:23780   */\n      0x20\n        /* \"#utility.yul\":23770:23776   */\n      dup3\n        /* \"#utility.yul\":23766:23781   */\n      add\n        /* \"#utility.yul\":23759:23792   */\n      mstore\n        /* \"#utility.yul\":23574:23799   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23805:24171   */\n    tag_360:\n        /* \"#utility.yul\":23947:23950   */\n      0x00\n        /* \"#utility.yul\":23968:24035   */\n      tag_569\n        /* \"#utility.yul\":24032:24034   */\n      0x26\n        /* \"#utility.yul\":24027:24030   */\n      dup4\n        /* \"#utility.yul\":23968:24035   */\n      tag_323\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":23961:24035   */\n      swap2\n      pop\n        /* \"#utility.yul\":24044:24137   */\n      tag_570\n        /* \"#utility.yul\":24133:24136   */\n      dup3\n        /* \"#utility.yul\":24044:24137   */\n      tag_359\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":24162:24164   */\n      0x40\n        /* \"#utility.yul\":24157:24160   */\n      dup3\n        /* \"#utility.yul\":24153:24165   */\n      add\n        /* \"#utility.yul\":24146:24165   */\n      swap1\n      pop\n        /* \"#utility.yul\":23805:24171   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24177:24596   */\n    tag_272:\n        /* \"#utility.yul\":24343:24347   */\n      0x00\n        /* \"#utility.yul\":24381:24383   */\n      0x20\n        /* \"#utility.yul\":24370:24379   */\n      dup3\n        /* \"#utility.yul\":24366:24384   */\n      add\n        /* \"#utility.yul\":24358:24384   */\n      swap1\n      pop\n        /* \"#utility.yul\":24430:24439   */\n      dup2\n        /* \"#utility.yul\":24424:24428   */\n      dup2\n        /* \"#utility.yul\":24420:24440   */\n      sub\n        /* \"#utility.yul\":24416:24417   */\n      0x00\n        /* \"#utility.yul\":24405:24414   */\n      dup4\n        /* \"#utility.yul\":24401:24418   */\n      add\n        /* \"#utility.yul\":24394:24441   */\n      mstore\n        /* \"#utility.yul\":24458:24589   */\n      tag_572\n        /* \"#utility.yul\":24584:24588   */\n      dup2\n        /* \"#utility.yul\":24458:24589   */\n      tag_360\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":24450:24589   */\n      swap1\n      pop\n        /* \"#utility.yul\":24177:24596   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24602:24784   */\n    tag_361:\n        /* \"#utility.yul\":24742:24776   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":24738:24739   */\n      0x00\n        /* \"#utility.yul\":24730:24736   */\n      dup3\n        /* \"#utility.yul\":24726:24740   */\n      add\n        /* \"#utility.yul\":24719:24777   */\n      mstore\n        /* \"#utility.yul\":24602:24784   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24790:25156   */\n    tag_362:\n        /* \"#utility.yul\":24932:24935   */\n      0x00\n        /* \"#utility.yul\":24953:25020   */\n      tag_575\n        /* \"#utility.yul\":25017:25019   */\n      0x20\n        /* \"#utility.yul\":25012:25015   */\n      dup4\n        /* \"#utility.yul\":24953:25020   */\n      tag_323\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":24946:25020   */\n      swap2\n      pop\n        /* \"#utility.yul\":25029:25122   */\n      tag_576\n        /* \"#utility.yul\":25118:25121   */\n      dup3\n        /* \"#utility.yul\":25029:25122   */\n      tag_361\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":25147:25149   */\n      0x20\n        /* \"#utility.yul\":25142:25145   */\n      dup3\n        /* \"#utility.yul\":25138:25150   */\n      add\n        /* \"#utility.yul\":25131:25150   */\n      swap1\n      pop\n        /* \"#utility.yul\":24790:25156   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25162:25581   */\n    tag_280:\n        /* \"#utility.yul\":25328:25332   */\n      0x00\n        /* \"#utility.yul\":25366:25368   */\n      0x20\n        /* \"#utility.yul\":25355:25364   */\n      dup3\n        /* \"#utility.yul\":25351:25369   */\n      add\n        /* \"#utility.yul\":25343:25369   */\n      swap1\n      pop\n        /* \"#utility.yul\":25415:25424   */\n      dup2\n        /* \"#utility.yul\":25409:25413   */\n      dup2\n        /* \"#utility.yul\":25405:25425   */\n      sub\n        /* \"#utility.yul\":25401:25402   */\n      0x00\n        /* \"#utility.yul\":25390:25399   */\n      dup4\n        /* \"#utility.yul\":25386:25403   */\n      add\n        /* \"#utility.yul\":25379:25426   */\n      mstore\n        /* \"#utility.yul\":25443:25574   */\n      tag_578\n        /* \"#utility.yul\":25569:25573   */\n      dup2\n        /* \"#utility.yul\":25443:25574   */\n      tag_362\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":25435:25574   */\n      swap1\n      pop\n        /* \"#utility.yul\":25162:25581   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25587:25817   */\n    tag_363:\n        /* \"#utility.yul\":25727:25761   */\n      0x496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069\n        /* \"#utility.yul\":25723:25724   */\n      0x00\n        /* \"#utility.yul\":25715:25721   */\n      dup3\n        /* \"#utility.yul\":25711:25725   */\n      add\n        /* \"#utility.yul\":25704:25762   */\n      mstore\n        /* \"#utility.yul\":25796:25809   */\n      0x6e697469616c697a696e67000000000000000000000000000000000000000000\n        /* \"#utility.yul\":25791:25793   */\n      0x20\n        /* \"#utility.yul\":25783:25789   */\n      dup3\n        /* \"#utility.yul\":25779:25794   */\n      add\n        /* \"#utility.yul\":25772:25810   */\n      mstore\n        /* \"#utility.yul\":25587:25817   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25823:26189   */\n    tag_364:\n        /* \"#utility.yul\":25965:25968   */\n      0x00\n        /* \"#utility.yul\":25986:26053   */\n      tag_581\n        /* \"#utility.yul\":26050:26052   */\n      0x2b\n        /* \"#utility.yul\":26045:26048   */\n      dup4\n        /* \"#utility.yul\":25986:26053   */\n      tag_323\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":25979:26053   */\n      swap2\n      pop\n        /* \"#utility.yul\":26062:26155   */\n      tag_582\n        /* \"#utility.yul\":26151:26154   */\n      dup3\n        /* \"#utility.yul\":26062:26155   */\n      tag_363\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":26180:26182   */\n      0x40\n        /* \"#utility.yul\":26175:26178   */\n      dup3\n        /* \"#utility.yul\":26171:26183   */\n      add\n        /* \"#utility.yul\":26164:26183   */\n      swap1\n      pop\n        /* \"#utility.yul\":25823:26189   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26195:26614   */\n    tag_286:\n        /* \"#utility.yul\":26361:26365   */\n      0x00\n        /* \"#utility.yul\":26399:26401   */\n      0x20\n        /* \"#utility.yul\":26388:26397   */\n      dup3\n        /* \"#utility.yul\":26384:26402   */\n      add\n        /* \"#utility.yul\":26376:26402   */\n      swap1\n      pop\n        /* \"#utility.yul\":26448:26457   */\n      dup2\n        /* \"#utility.yul\":26442:26446   */\n      dup2\n        /* \"#utility.yul\":26438:26458   */\n      sub\n        /* \"#utility.yul\":26434:26435   */\n      0x00\n        /* \"#utility.yul\":26423:26432   */\n      dup4\n        /* \"#utility.yul\":26419:26436   */\n      add\n        /* \"#utility.yul\":26412:26459   */\n      mstore\n        /* \"#utility.yul\":26476:26607   */\n      tag_584\n        /* \"#utility.yul\":26602:26606   */\n      dup2\n        /* \"#utility.yul\":26476:26607   */\n      tag_364\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":26468:26607   */\n      swap1\n      pop\n        /* \"#utility.yul\":26195:26614   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c41bd18e8839c10f231112c8dab38e7542361698242bbc7605f39cfbc3c5075e64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506128c5806100206000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80638da5cb5b11610097578063e1c7392a11610066578063e1c7392a1461025d578063e46638e614610267578063efb22d3314610297578063f2fde38b146102b357610100565b80638da5cb5b146101d5578063a0632461146101f3578063a446d49f1461020f578063b2494df31461023f57610100565b80636a3edf28116100d35780636a3edf2814610175578063715018a6146101935780638baf29b41461019d5780638d2ea772146101b957610100565b80631ed86f19146101055780633ff5aa021461012157806340db3b501461013d5780635f8dead314610159575b600080fd5b61011f600480360381019061011a9190611b72565b6102cf565b005b61013b60048036038101906101369190611b72565b610588565b005b61015760048036038101906101529190611b72565b610777565b005b610173600480360381019061016e9190611bd5565b610980565b005b61017d610b9b565b60405161018a9190611c24565b60405180910390f35b61019b610bc5565b005b6101b760048036038101906101b29190611c3f565b610bd9565b005b6101d360048036038101906101ce9190611bd5565b610e31565b005b6101dd61104c565b6040516101ea9190611c24565b60405180910390f35b61020d60048036038101906102089190611b72565b611076565b005b61022960048036038101906102249190611b72565b611410565b6040516102369190611cad565b60405180910390f35b610247611466565b6040516102549190611d86565b60405180910390f35b6102656114f4565b005b610281600480360381019061027c9190611c3f565b611632565b60405161028e9190611cad565b60405180910390f35b6102b160048036038101906102ac9190611e0d565b611736565b005b6102cd60048036038101906102c89190611b72565b611846565b005b6102d76118c9565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610346576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033d90611eca565b60405180910390fd5b606760008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156103d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ca90611f36565b60405180910390fd5b6018606680549050111561041c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041390611fa2565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16634a932544306040518263ffffffff1660e01b81526004016104559190611c24565b600060405180830381600087803b15801561046f57600080fd5b505af1158015610483573d6000803e3d6000fd5b505050506066819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001606760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167fead6a006345da1073a106d5f32372d2d2204f46cb0b4bca8f5ebafcbbed12b8a60405160405180910390a250565b3373ffffffffffffffffffffffffffffffffffffffff166105a761104c565b73ffffffffffffffffffffffffffffffffffffffff16148061064e5750600073ffffffffffffffffffffffffffffffffffffffff16606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614801561064d57508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b5b61068d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106849061200e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f390611eca565b60405180910390fd5b80606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f2de35142b19ed5a07796cf30791959c592018f70b1d2d7c460eef8ffe713692b8160405161076c9190611c24565b60405180910390a150565b3373ffffffffffffffffffffffffffffffffffffffff1661079661104c565b73ffffffffffffffffffffffffffffffffffffffff1614806107e357508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610822576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108199061200e565b60405180910390fd5b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146108b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a99061207a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610921576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091890611eca565b60405180910390fd5b606560006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690557f28a4ca7134a3b3f9aff286e79ad3daadb4a06d1b43d037a3a98bdc074edd9b7a816040516109759190611c24565b60405180910390a150565b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a10576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0790612132565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a7f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7690611eca565b60405180910390fd5b60008111610ac2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab99061219e565b60405180910390fd5b6000606680549050905060005b81811015610b955760668181548110610aeb57610aea6121be565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f104a8c985856040518363ffffffff1660e01b8152600401610b509291906121fc565b600060405180830381600087803b158015610b6a57600080fd5b505af1158015610b7e573d6000803e3d6000fd5b505050508080610b8d90612254565b915050610acf565b50505050565b6000606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610bcd6118c9565b610bd76000611947565b565b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c69576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6090612132565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015610cd35750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b610d12576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0990611eca565b60405180910390fd5b60008111610d55576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4c9061230e565b60405180910390fd5b6000606680549050905060005b81811015610e2a5760668181548110610d7e57610d7d6121be565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632cb7e1ec8686866040518463ffffffff1660e01b8152600401610de59392919061232e565b600060405180830381600087803b158015610dff57600080fd5b505af1158015610e13573d6000803e3d6000fd5b505050508080610e2290612254565b915050610d62565b5050505050565b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ec1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eb890612132565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2790611eca565b60405180910390fd5b60008111610f73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6a906123b1565b60405180910390fd5b6000606680549050905060005b818110156110465760668181548110610f9c57610f9b6121be565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663372491a285856040518363ffffffff1660e01b81526004016110019291906121fc565b600060405180830381600087803b15801561101b57600080fd5b505af115801561102f573d6000803e3d6000fd5b50505050808061103e90612254565b915050610f80565b50505050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61107e6118c9565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036110ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110e490611eca565b60405180910390fd5b606760008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16611179576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111709061241d565b60405180910390fd5b6000606680549050905060005b8181101561140b578273ffffffffffffffffffffffffffffffffffffffff16606682815481106111b9576111b86121be565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036113f8578273ffffffffffffffffffffffffffffffffffffffff16630694a5fb306040518263ffffffff1660e01b81526004016112389190611c24565b600060405180830381600087803b15801561125257600080fd5b505af1158015611266573d6000803e3d6000fd5b505050506066600183611279919061243d565b8154811061128a576112896121be565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16606682815481106112c9576112c86121be565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606680548061132357611322612471565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590556000606760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff167f0a1ee69f55c33d8467c69ca59ce2007a737a88603d75392972520bf67cb513b860405160405180910390a261140b565b808061140390612254565b915050611186565b505050565b6000606760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b606060668054806020026020016040519081016040528092919081815260200182805480156114ea57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116114a0575b5050505050905090565b60008060019054906101000a900460ff161590508080156115255750600160008054906101000a900460ff1660ff16105b80611552575061153430611a0d565b1580156115515750600160008054906101000a900460ff1660ff16145b5b611591576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161158890612512565b60405180910390fd5b60016000806101000a81548160ff021916908360ff16021790555080156115ce576001600060016101000a81548160ff0219169083151502179055505b6115d6611a30565b801561162f5760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516116269190612584565b60405180910390a15b50565b600080606680549050905060005b81811015611728576066818154811061165c5761165b6121be565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663013b7ce4878787306040518563ffffffff1660e01b81526004016116c5949392919061259f565b602060405180830381865afa1580156116e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117069190612610565b6117155760009250505061172f565b808061172090612254565b915050611640565b5060019150505b9392505050565b61173e6118c9565b606760008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166117ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117c190612689565b60405180910390fd5b6040518284823760008084836000865af16117e9573d6000803e3d6000fd5b508073ffffffffffffffffffffffffffffffffffffffff167f20d79de70adcc6e9353d8a9a5646b46dc352710d0a310b1ad1f67faeca7ef89161182c8585611a89565b60405161183991906126e4565b60405180910390a2505050565b61184e6118c9565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036118bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118b490612771565b60405180910390fd5b6118c681611947565b50565b6118d1611aa1565b73ffffffffffffffffffffffffffffffffffffffff166118ef61104c565b73ffffffffffffffffffffffffffffffffffffffff1614611945576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161193c906127dd565b60405180910390fd5b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff16611a7f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a769061286f565b60405180910390fd5b611a87611aa9565b565b600060048383905010611a9b57823590505b92915050565b600033905090565b600060019054906101000a900460ff16611af8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611aef9061286f565b60405180910390fd5b611b08611b03611aa1565b611947565b565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611b3f82611b14565b9050919050565b611b4f81611b34565b8114611b5a57600080fd5b50565b600081359050611b6c81611b46565b92915050565b600060208284031215611b8857611b87611b0a565b5b6000611b9684828501611b5d565b91505092915050565b6000819050919050565b611bb281611b9f565b8114611bbd57600080fd5b50565b600081359050611bcf81611ba9565b92915050565b60008060408385031215611bec57611beb611b0a565b5b6000611bfa85828601611b5d565b9250506020611c0b85828601611bc0565b9150509250929050565b611c1e81611b34565b82525050565b6000602082019050611c396000830184611c15565b92915050565b600080600060608486031215611c5857611c57611b0a565b5b6000611c6686828701611b5d565b9350506020611c7786828701611b5d565b9250506040611c8886828701611bc0565b9150509250925092565b60008115159050919050565b611ca781611c92565b82525050565b6000602082019050611cc26000830184611c9e565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611cfd81611b34565b82525050565b6000611d0f8383611cf4565b60208301905092915050565b6000602082019050919050565b6000611d3382611cc8565b611d3d8185611cd3565b9350611d4883611ce4565b8060005b83811015611d79578151611d608882611d03565b9750611d6b83611d1b565b925050600181019050611d4c565b5085935050505092915050565b60006020820190508181036000830152611da08184611d28565b905092915050565b600080fd5b600080fd5b600080fd5b60008083601f840112611dcd57611dcc611da8565b5b8235905067ffffffffffffffff811115611dea57611de9611dad565b5b602083019150836001820283011115611e0657611e05611db2565b5b9250929050565b600080600060408486031215611e2657611e25611b0a565b5b600084013567ffffffffffffffff811115611e4457611e43611b0f565b5b611e5086828701611db7565b93509350506020611e6386828701611b5d565b9150509250925092565b600082825260208201905092915050565b7f696e76616c696420617267756d656e74202d207a65726f206164647265737300600082015250565b6000611eb4601f83611e6d565b9150611ebf82611e7e565b602082019050919050565b60006020820190508181036000830152611ee381611ea7565b9050919050565b7f6d6f64756c6520616c726561647920626f756e64000000000000000000000000600082015250565b6000611f20601483611e6d565b9150611f2b82611eea565b602082019050919050565b60006020820190508181036000830152611f4f81611f13565b9050919050565b7f63616e6e6f7420616464206d6f7265207468616e203235206d6f64756c657300600082015250565b6000611f8c601f83611e6d565b9150611f9782611f56565b602082019050919050565b60006020820190508181036000830152611fbb81611f7f565b9050919050565b7f6f6e6c79206f776e6572206f7220746f6b656e2063616e2063616c6c00000000600082015250565b6000611ff8601c83611e6d565b915061200382611fc2565b602082019050919050565b6000602082019050818103600083015261202781611feb565b9050919050565b7f5468697320746f6b656e206973206e6f7420626f756e64000000000000000000600082015250565b6000612064601783611e6d565b915061206f8261202e565b602082019050919050565b6000602082019050818103600083015261209381612057565b9050919050565b7f6572726f72203a20746869732061646472657373206973206e6f74206120746f60008201527f6b656e20626f756e6420746f2074686520636f6d706c69616e636520636f6e7460208201527f7261637400000000000000000000000000000000000000000000000000000000604082015250565b600061211c604483611e6d565b91506121278261209a565b606082019050919050565b6000602082019050818103600083015261214b8161210f565b9050919050565b7f696e76616c696420617267756d656e74202d206e6f2076616c7565206d696e74600082015250565b6000612188602083611e6d565b915061219382612152565b602082019050919050565b600060208201905081810360008301526121b78161217b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6121f681611b9f565b82525050565b60006040820190506122116000830185611c15565b61221e60208301846121ed565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061225f82611b9f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361229157612290612225565b5b600182019050919050565b7f696e76616c696420617267756d656e74202d206e6f2076616c7565207472616e60008201527f7366657200000000000000000000000000000000000000000000000000000000602082015250565b60006122f8602483611e6d565b91506123038261229c565b604082019050919050565b60006020820190508181036000830152612327816122eb565b9050919050565b60006060820190506123436000830186611c15565b6123506020830185611c15565b61235d60408301846121ed565b949350505050565b7f696e76616c696420617267756d656e74202d206e6f2076616c7565206275726e600082015250565b600061239b602083611e6d565b91506123a682612365565b602082019050919050565b600060208201905081810360008301526123ca8161238e565b9050919050565b7f6d6f64756c65206e6f7420626f756e6400000000000000000000000000000000600082015250565b6000612407601083611e6d565b9150612412826123d1565b602082019050919050565b60006020820190508181036000830152612436816123fa565b9050919050565b600061244882611b9f565b915061245383611b9f565b925082820390508181111561246b5761246a612225565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b60006124fc602e83611e6d565b9150612507826124a0565b604082019050919050565b6000602082019050818103600083015261252b816124ef565b9050919050565b6000819050919050565b600060ff82169050919050565b6000819050919050565b600061256e61256961256484612532565b612549565b61253c565b9050919050565b61257e81612553565b82525050565b60006020820190506125996000830184612575565b92915050565b60006080820190506125b46000830187611c15565b6125c16020830186611c15565b6125ce60408301856121ed565b6125db6060830184611c15565b95945050505050565b6125ed81611c92565b81146125f857600080fd5b50565b60008151905061260a816125e4565b92915050565b60006020828403121561262657612625611b0a565b5b6000612634848285016125fb565b91505092915050565b7f63616c6c206f6e6c79206f6e20626f756e64206d6f64756c6500000000000000600082015250565b6000612673601983611e6d565b915061267e8261263d565b602082019050919050565b600060208201905081810360008301526126a281612666565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6126de816126a9565b82525050565b60006020820190506126f960008301846126d5565b92915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061275b602683611e6d565b9150612766826126ff565b604082019050919050565b6000602082019050818103600083015261278a8161274e565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006127c7602083611e6d565b91506127d282612791565b602082019050919050565b600060208201905081810360008301526127f6816127ba565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b6000612859602b83611e6d565b9150612864826127fd565b604082019050919050565b600060208201905081810360008301526128888161284c565b905091905056fea2646970667358221220c41bd18e8839c10f231112c8dab38e7542361698242bbc7605f39cfbc3c5075e64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28C5 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE1C7392A GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xE1C7392A EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0xE46638E6 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0xEFB22D33 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2B3 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0xA0632461 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0xA446D49F EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0xB2494DF3 EQ PUSH2 0x23F JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x6A3EDF28 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x6A3EDF28 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x8BAF29B4 EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x8D2EA772 EQ PUSH2 0x1B9 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x1ED86F19 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x3FF5AA02 EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x40DB3B50 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x5F8DEAD3 EQ PUSH2 0x159 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x1B72 JUMP JUMPDEST PUSH2 0x2CF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x136 SWAP2 SWAP1 PUSH2 0x1B72 JUMP JUMPDEST PUSH2 0x588 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x1B72 JUMP JUMPDEST PUSH2 0x777 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x1BD5 JUMP JUMPDEST PUSH2 0x980 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17D PUSH2 0xB9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x1C24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19B PUSH2 0xBC5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x1C3F JUMP JUMPDEST PUSH2 0xBD9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0x1BD5 JUMP JUMPDEST PUSH2 0xE31 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DD PUSH2 0x104C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x1C24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x1B72 JUMP JUMPDEST PUSH2 0x1076 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x229 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x1B72 JUMP JUMPDEST PUSH2 0x1410 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x1CAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH2 0x1466 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x1D86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x265 PUSH2 0x14F4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x281 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x1C3F JUMP JUMPDEST PUSH2 0x1632 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x1CAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0x1E0D JUMP JUMPDEST PUSH2 0x1736 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x1B72 JUMP JUMPDEST PUSH2 0x1846 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D7 PUSH2 0x18C9 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x346 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33D SWAP1 PUSH2 0x1ECA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x67 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CA SWAP1 PUSH2 0x1F36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x18 PUSH1 0x66 DUP1 SLOAD SWAP1 POP GT ISZERO PUSH2 0x41C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x413 SWAP1 PUSH2 0x1FA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4A932544 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x455 SWAP2 SWAP1 PUSH2 0x1C24 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x46F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x483 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x66 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x67 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEAD6A006345DA1073A106D5F32372D2D2204F46CB0B4BCA8F5EBAFCBBED12B8A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5A7 PUSH2 0x104C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x64E JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x65 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x64D JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST PUSH2 0x68D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x684 SWAP1 PUSH2 0x200E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6FC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F3 SWAP1 PUSH2 0x1ECA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x65 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x2DE35142B19ED5A07796CF30791959C592018F70B1D2D7C460EEF8FFE713692B DUP2 PUSH1 0x40 MLOAD PUSH2 0x76C SWAP2 SWAP1 PUSH2 0x1C24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x796 PUSH2 0x104C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x7E3 JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x822 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x819 SWAP1 PUSH2 0x200E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x65 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A9 SWAP1 PUSH2 0x207A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x921 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x918 SWAP1 PUSH2 0x1ECA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x65 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH32 0x28A4CA7134A3B3F9AFF286E79AD3DAADB4A06D1B43D037A3A98BDC074EDD9B7A DUP2 PUSH1 0x40 MLOAD PUSH2 0x975 SWAP2 SWAP1 PUSH2 0x1C24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x65 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA10 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA07 SWAP1 PUSH2 0x2132 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA7F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA76 SWAP1 PUSH2 0x1ECA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xAC2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAB9 SWAP1 PUSH2 0x219E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x66 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB95 JUMPI PUSH1 0x66 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xAEB JUMPI PUSH2 0xAEA PUSH2 0x21BE JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF104A8C9 DUP6 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB50 SWAP3 SWAP2 SWAP1 PUSH2 0x21FC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB7E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0xB8D SWAP1 PUSH2 0x2254 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xACF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xBCD PUSH2 0x18C9 JUMP JUMPDEST PUSH2 0xBD7 PUSH1 0x0 PUSH2 0x1947 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x65 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC69 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC60 SWAP1 PUSH2 0x2132 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xCD3 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0xD12 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD09 SWAP1 PUSH2 0x1ECA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xD55 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD4C SWAP1 PUSH2 0x230E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x66 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE2A JUMPI PUSH1 0x66 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xD7E JUMPI PUSH2 0xD7D PUSH2 0x21BE JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2CB7E1EC DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDE5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x232E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE13 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0xE22 SWAP1 PUSH2 0x2254 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD62 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x65 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEC1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEB8 SWAP1 PUSH2 0x2132 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF30 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF27 SWAP1 PUSH2 0x1ECA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xF73 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF6A SWAP1 PUSH2 0x23B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x66 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1046 JUMPI PUSH1 0x66 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xF9C JUMPI PUSH2 0xF9B PUSH2 0x21BE JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x372491A2 DUP6 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1001 SWAP3 SWAP2 SWAP1 PUSH2 0x21FC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x101B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x102F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x103E SWAP1 PUSH2 0x2254 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xF80 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x107E PUSH2 0x18C9 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10ED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E4 SWAP1 PUSH2 0x1ECA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x67 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1179 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1170 SWAP1 PUSH2 0x241D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x66 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x140B JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x66 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x11B9 JUMPI PUSH2 0x11B8 PUSH2 0x21BE JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13F8 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x694A5FB ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1238 SWAP2 SWAP1 PUSH2 0x1C24 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1252 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1266 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x66 PUSH1 0x1 DUP4 PUSH2 0x1279 SWAP2 SWAP1 PUSH2 0x243D JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x128A JUMPI PUSH2 0x1289 PUSH2 0x21BE JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x66 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x12C9 JUMPI PUSH2 0x12C8 PUSH2 0x21BE JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x66 DUP1 SLOAD DUP1 PUSH2 0x1323 JUMPI PUSH2 0x1322 PUSH2 0x2471 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE PUSH1 0x0 PUSH1 0x67 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA1EE69F55C33D8467C69CA59CE2007A737A88603D75392972520BF67CB513B8 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x140B JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1403 SWAP1 PUSH2 0x2254 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1186 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x67 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x66 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x14EA JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x14A0 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 DUP1 ISZERO PUSH2 0x1525 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND LT JUMPDEST DUP1 PUSH2 0x1552 JUMPI POP PUSH2 0x1534 ADDRESS PUSH2 0x1A0D JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x1551 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ JUMPDEST JUMPDEST PUSH2 0x1591 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1588 SWAP1 PUSH2 0x2512 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x15CE JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x15D6 PUSH2 0x1A30 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x162F JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x1626 SWAP2 SWAP1 PUSH2 0x2584 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x66 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1728 JUMPI PUSH1 0x66 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x165C JUMPI PUSH2 0x165B PUSH2 0x21BE JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x13B7CE4 DUP8 DUP8 DUP8 ADDRESS PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16C5 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x259F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16E2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1706 SWAP2 SWAP1 PUSH2 0x2610 JUMP JUMPDEST PUSH2 0x1715 JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x172F JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1720 SWAP1 PUSH2 0x2254 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1640 JUMP JUMPDEST POP PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x173E PUSH2 0x18C9 JUMP JUMPDEST PUSH1 0x67 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x17CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17C1 SWAP1 PUSH2 0x2689 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP5 DUP3 CALLDATACOPY PUSH1 0x0 DUP1 DUP5 DUP4 PUSH1 0x0 DUP7 GAS CALL PUSH2 0x17E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x20D79DE70ADCC6E9353D8A9A5646B46DC352710D0A310B1AD1F67FAECA7EF891 PUSH2 0x182C DUP6 DUP6 PUSH2 0x1A89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1839 SWAP2 SWAP1 PUSH2 0x26E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x184E PUSH2 0x18C9 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B4 SWAP1 PUSH2 0x2771 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18C6 DUP2 PUSH2 0x1947 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x18D1 PUSH2 0x1AA1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x18EF PUSH2 0x104C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1945 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x193C SWAP1 PUSH2 0x27DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x33 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1A7F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A76 SWAP1 PUSH2 0x286F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A87 PUSH2 0x1AA9 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP4 DUP4 SWAP1 POP LT PUSH2 0x1A9B JUMPI DUP3 CALLDATALOAD SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1AF8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AEF SWAP1 PUSH2 0x286F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B08 PUSH2 0x1B03 PUSH2 0x1AA1 JUMP JUMPDEST PUSH2 0x1947 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B3F DUP3 PUSH2 0x1B14 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B4F DUP2 PUSH2 0x1B34 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B6C DUP2 PUSH2 0x1B46 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B88 JUMPI PUSH2 0x1B87 PUSH2 0x1B0A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B96 DUP5 DUP3 DUP6 ADD PUSH2 0x1B5D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BB2 DUP2 PUSH2 0x1B9F JUMP JUMPDEST DUP2 EQ PUSH2 0x1BBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BCF DUP2 PUSH2 0x1BA9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BEC JUMPI PUSH2 0x1BEB PUSH2 0x1B0A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BFA DUP6 DUP3 DUP7 ADD PUSH2 0x1B5D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C0B DUP6 DUP3 DUP7 ADD PUSH2 0x1BC0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C1E DUP2 PUSH2 0x1B34 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C39 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C15 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C58 JUMPI PUSH2 0x1C57 PUSH2 0x1B0A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C66 DUP7 DUP3 DUP8 ADD PUSH2 0x1B5D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1C77 DUP7 DUP3 DUP8 ADD PUSH2 0x1B5D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1C88 DUP7 DUP3 DUP8 ADD PUSH2 0x1BC0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CA7 DUP2 PUSH2 0x1C92 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CC2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C9E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CFD DUP2 PUSH2 0x1B34 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D0F DUP4 DUP4 PUSH2 0x1CF4 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D33 DUP3 PUSH2 0x1CC8 JUMP JUMPDEST PUSH2 0x1D3D DUP2 DUP6 PUSH2 0x1CD3 JUMP JUMPDEST SWAP4 POP PUSH2 0x1D48 DUP4 PUSH2 0x1CE4 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D79 JUMPI DUP2 MLOAD PUSH2 0x1D60 DUP9 DUP3 PUSH2 0x1D03 JUMP JUMPDEST SWAP8 POP PUSH2 0x1D6B DUP4 PUSH2 0x1D1B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1D4C JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DA0 DUP2 DUP5 PUSH2 0x1D28 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1DCD JUMPI PUSH2 0x1DCC PUSH2 0x1DA8 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DEA JUMPI PUSH2 0x1DE9 PUSH2 0x1DAD JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1E06 JUMPI PUSH2 0x1E05 PUSH2 0x1DB2 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E26 JUMPI PUSH2 0x1E25 PUSH2 0x1B0A JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E44 JUMPI PUSH2 0x1E43 PUSH2 0x1B0F JUMP JUMPDEST JUMPDEST PUSH2 0x1E50 DUP7 DUP3 DUP8 ADD PUSH2 0x1DB7 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x20 PUSH2 0x1E63 DUP7 DUP3 DUP8 ADD PUSH2 0x1B5D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x696E76616C696420617267756D656E74202D207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EB4 PUSH1 0x1F DUP4 PUSH2 0x1E6D JUMP JUMPDEST SWAP2 POP PUSH2 0x1EBF DUP3 PUSH2 0x1E7E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EE3 DUP2 PUSH2 0x1EA7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6D6F64756C6520616C726561647920626F756E64000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F20 PUSH1 0x14 DUP4 PUSH2 0x1E6D JUMP JUMPDEST SWAP2 POP PUSH2 0x1F2B DUP3 PUSH2 0x1EEA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F4F DUP2 PUSH2 0x1F13 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x63616E6E6F7420616464206D6F7265207468616E203235206D6F64756C657300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F8C PUSH1 0x1F DUP4 PUSH2 0x1E6D JUMP JUMPDEST SWAP2 POP PUSH2 0x1F97 DUP3 PUSH2 0x1F56 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FBB DUP2 PUSH2 0x1F7F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6F6E6C79206F776E6572206F7220746F6B656E2063616E2063616C6C00000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FF8 PUSH1 0x1C DUP4 PUSH2 0x1E6D JUMP JUMPDEST SWAP2 POP PUSH2 0x2003 DUP3 PUSH2 0x1FC2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2027 DUP2 PUSH2 0x1FEB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5468697320746F6B656E206973206E6F7420626F756E64000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2064 PUSH1 0x17 DUP4 PUSH2 0x1E6D JUMP JUMPDEST SWAP2 POP PUSH2 0x206F DUP3 PUSH2 0x202E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2093 DUP2 PUSH2 0x2057 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6572726F72203A20746869732061646472657373206973206E6F74206120746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E20626F756E6420746F2074686520636F6D706C69616E636520636F6E74 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x7261637400000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x211C PUSH1 0x44 DUP4 PUSH2 0x1E6D JUMP JUMPDEST SWAP2 POP PUSH2 0x2127 DUP3 PUSH2 0x209A JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x214B DUP2 PUSH2 0x210F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E76616C696420617267756D656E74202D206E6F2076616C7565206D696E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2188 PUSH1 0x20 DUP4 PUSH2 0x1E6D JUMP JUMPDEST SWAP2 POP PUSH2 0x2193 DUP3 PUSH2 0x2152 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21B7 DUP2 PUSH2 0x217B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x21F6 DUP2 PUSH2 0x1B9F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2211 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1C15 JUMP JUMPDEST PUSH2 0x221E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x21ED JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x225F DUP3 PUSH2 0x1B9F JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2291 JUMPI PUSH2 0x2290 PUSH2 0x2225 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E76616C696420617267756D656E74202D206E6F2076616C7565207472616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7366657200000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22F8 PUSH1 0x24 DUP4 PUSH2 0x1E6D JUMP JUMPDEST SWAP2 POP PUSH2 0x2303 DUP3 PUSH2 0x229C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2327 DUP2 PUSH2 0x22EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2343 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1C15 JUMP JUMPDEST PUSH2 0x2350 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1C15 JUMP JUMPDEST PUSH2 0x235D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x21ED JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x696E76616C696420617267756D656E74202D206E6F2076616C7565206275726E PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x239B PUSH1 0x20 DUP4 PUSH2 0x1E6D JUMP JUMPDEST SWAP2 POP PUSH2 0x23A6 DUP3 PUSH2 0x2365 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23CA DUP2 PUSH2 0x238E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6D6F64756C65206E6F7420626F756E6400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2407 PUSH1 0x10 DUP4 PUSH2 0x1E6D JUMP JUMPDEST SWAP2 POP PUSH2 0x2412 DUP3 PUSH2 0x23D1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2436 DUP2 PUSH2 0x23FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2448 DUP3 PUSH2 0x1B9F JUMP JUMPDEST SWAP2 POP PUSH2 0x2453 DUP4 PUSH2 0x1B9F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x246B JUMPI PUSH2 0x246A PUSH2 0x2225 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24FC PUSH1 0x2E DUP4 PUSH2 0x1E6D JUMP JUMPDEST SWAP2 POP PUSH2 0x2507 DUP3 PUSH2 0x24A0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x252B DUP2 PUSH2 0x24EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x256E PUSH2 0x2569 PUSH2 0x2564 DUP5 PUSH2 0x2532 JUMP JUMPDEST PUSH2 0x2549 JUMP JUMPDEST PUSH2 0x253C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x257E DUP2 PUSH2 0x2553 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2599 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2575 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x25B4 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1C15 JUMP JUMPDEST PUSH2 0x25C1 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1C15 JUMP JUMPDEST PUSH2 0x25CE PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x21ED JUMP JUMPDEST PUSH2 0x25DB PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1C15 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x25ED DUP2 PUSH2 0x1C92 JUMP JUMPDEST DUP2 EQ PUSH2 0x25F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x260A DUP2 PUSH2 0x25E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2626 JUMPI PUSH2 0x2625 PUSH2 0x1B0A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2634 DUP5 DUP3 DUP6 ADD PUSH2 0x25FB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x63616C6C206F6E6C79206F6E20626F756E64206D6F64756C6500000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2673 PUSH1 0x19 DUP4 PUSH2 0x1E6D JUMP JUMPDEST SWAP2 POP PUSH2 0x267E DUP3 PUSH2 0x263D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26A2 DUP2 PUSH2 0x2666 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26DE DUP2 PUSH2 0x26A9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x26F9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x26D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x275B PUSH1 0x26 DUP4 PUSH2 0x1E6D JUMP JUMPDEST SWAP2 POP PUSH2 0x2766 DUP3 PUSH2 0x26FF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x278A DUP2 PUSH2 0x274E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27C7 PUSH1 0x20 DUP4 PUSH2 0x1E6D JUMP JUMPDEST SWAP2 POP PUSH2 0x27D2 DUP3 PUSH2 0x2791 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x27F6 DUP2 PUSH2 0x27BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2859 PUSH1 0x2B DUP4 PUSH2 0x1E6D JUMP JUMPDEST SWAP2 POP PUSH2 0x2864 DUP3 PUSH2 0x27FD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2888 DUP2 PUSH2 0x284C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 SHL 0xD1 DUP15 DUP9 CODECOPY 0xC1 0xF 0x23 GT SLT 0xC8 0xDA 0xB3 DUP15 PUSH22 0x42361698242BBC7605F39CFBC3C5075E64736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "326:5287:11:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@__Ownable_init_350": {
									"entryPoint": 6704,
									"id": 350,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_361": {
									"entryPoint": 6825,
									"id": 361,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_392": {
									"entryPoint": 6345,
									"id": 392,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_981": {
									"entryPoint": 6817,
									"id": 981,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_selector_1666": {
									"entryPoint": 6793,
									"id": 1666,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_transferOwnership_449": {
									"entryPoint": 6471,
									"id": 449,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addModule_1281": {
									"entryPoint": 719,
									"id": 1281,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@bindToken_1175": {
									"entryPoint": 1416,
									"id": 1175,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@callModuleFunction_1568": {
									"entryPoint": 5942,
									"id": 1568,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@canTransfer_1651": {
									"entryPoint": 5682,
									"id": 1651,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@created_1487": {
									"entryPoint": 2432,
									"id": 1487,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@destroyed_1542": {
									"entryPoint": 3633,
									"id": 1542,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@getModules_1591": {
									"entryPoint": 5222,
									"id": 1591,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTokenBound_1600": {
									"entryPoint": 2971,
									"id": 1600,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@init_1128": {
									"entryPoint": 5364,
									"id": 1128,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isContract_642": {
									"entryPoint": 6669,
									"id": 642,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isModuleBound_1581": {
									"entryPoint": 5136,
									"id": 1581,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_378": {
									"entryPoint": 4172,
									"id": 378,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeModule_1367": {
									"entryPoint": 4214,
									"id": 1367,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_406": {
									"entryPoint": 3013,
									"id": 406,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_429": {
									"entryPoint": 6214,
									"id": 429,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferred_1432": {
									"entryPoint": 3033,
									"id": 1432,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@unbindToken_1220": {
									"entryPoint": 1911,
									"id": 1220,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 7005,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 9723,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_calldata_ptr": {
									"entryPoint": 7607,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7104,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7026,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7231,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7125,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 9744,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes_calldata_ptrt_address": {
									"entryPoint": 7693,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encodeUpdatedPos_t_address_to_t_address": {
									"entryPoint": 7427,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 7412,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7189,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 7464,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7326,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 9941,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack": {
									"entryPoint": 9589,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0de045b53a2696c4c58a2dd6a960eacc1f1718f54ec66cb0ba5f399ae9d1fb9e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8571,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10062,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3f029d9821dc476c0705c03fff9255d333d5235fef87cba00cede4d1409cd713_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9210,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_49f5e4419f8a1741d107c52289d66583a4bd31e41918484b4780f719774ab10e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7955,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5a00bd734c7992f377cbeced90f5c16f281fb6575139ae7312aa5e8718ec4a06_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9102,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5a68ed2bc0002f6d7777b41be5e0fbfbfe715cdad34adee170beb7e99ea964f1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8463,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9455,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_85ebbeb661b177a20113638bf35f6faae6d63a8b8162625e2d2ab0a760e9b8cf_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8171,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10170,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7847,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_bc637b520028211bbc531d42bfcff19a7cfbd2d183c129d537e63c33437371db_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8279,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c1dee6581c6aebc50da002deed9e99d1ce1dab6a498f29e5915ed31feaae5830_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8063,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10316,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_db4dc5d7747dd41cae264893a34d079922ab272ca9cb8b8764be76354fbf8396_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9830,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e9c7f121b6da7dac929ed2e7ad1b1b43e75c240016a001387d6d3f264c6c87e7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8939,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8685,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7204,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9006,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_address__to_t_address_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 9631,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8700,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 7558,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7341,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 9956,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed": {
									"entryPoint": 9604,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0de045b53a2696c4c58a2dd6a960eacc1f1718f54ec66cb0ba5f399ae9d1fb9e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8606,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10097,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3f029d9821dc476c0705c03fff9255d333d5235fef87cba00cede4d1409cd713__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9245,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_49f5e4419f8a1741d107c52289d66583a4bd31e41918484b4780f719774ab10e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7990,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5a00bd734c7992f377cbeced90f5c16f281fb6575139ae7312aa5e8718ec4a06__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9137,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5a68ed2bc0002f6d7777b41be5e0fbfbfe715cdad34adee170beb7e99ea964f1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8498,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9490,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_85ebbeb661b177a20113638bf35f6faae6d63a8b8162625e2d2ab0a760e9b8cf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8206,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10205,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bc637b520028211bbc531d42bfcff19a7cfbd2d183c129d537e63c33437371db__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8314,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c1dee6581c6aebc50da002deed9e99d1ce1dab6a498f29e5915ed31feaae5830__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8098,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10351,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_db4dc5d7747dd41cae264893a34d079922ab272ca9cb8b8764be76354fbf8396__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9865,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e9c7f121b6da7dac929ed2e7ad1b1b43e75c240016a001387d6d3f264c6c87e7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8974,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 7396,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 7368,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 7451,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 7379,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7789,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 9277,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6964,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7314,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 9897,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 9522,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6932,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7071,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 9532,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_1_by_1_to_t_uint8": {
									"entryPoint": 9555,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 9545,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 8788,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8741,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 9329,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 8638,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 7597,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 7592,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 7602,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 6927,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6922,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_0de045b53a2696c4c58a2dd6a960eacc1f1718f54ec66cb0ba5f399ae9d1fb9e": {
									"entryPoint": 8530,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 9983,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3f029d9821dc476c0705c03fff9255d333d5235fef87cba00cede4d1409cd713": {
									"entryPoint": 9169,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_49f5e4419f8a1741d107c52289d66583a4bd31e41918484b4780f719774ab10e": {
									"entryPoint": 7914,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5a00bd734c7992f377cbeced90f5c16f281fb6575139ae7312aa5e8718ec4a06": {
									"entryPoint": 9061,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5a68ed2bc0002f6d7777b41be5e0fbfbfe715cdad34adee170beb7e99ea964f1": {
									"entryPoint": 8346,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759": {
									"entryPoint": 9376,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_85ebbeb661b177a20113638bf35f6faae6d63a8b8162625e2d2ab0a760e9b8cf": {
									"entryPoint": 8130,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 10129,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543": {
									"entryPoint": 7806,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_bc637b520028211bbc531d42bfcff19a7cfbd2d183c129d537e63c33437371db": {
									"entryPoint": 8238,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c1dee6581c6aebc50da002deed9e99d1ce1dab6a498f29e5915ed31feaae5830": {
									"entryPoint": 8022,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b": {
									"entryPoint": 10237,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_db4dc5d7747dd41cae264893a34d079922ab272ca9cb8b8764be76354fbf8396": {
									"entryPoint": 9789,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e9c7f121b6da7dac929ed2e7ad1b1b43e75c240016a001387d6d3f264c6c87e7": {
									"entryPoint": 8860,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6982,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 9700,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7081,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:26617:19",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:19"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:19"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:19",
														"type": ""
													}
												],
												"src": "7:75:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:19"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:19"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:19",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:19",
														"type": ""
													}
												],
												"src": "334:126:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:19",
														"type": ""
													}
												],
												"src": "466:96:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:19"
															},
															"nodeType": "YulIf",
															"src": "621:63:19"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:19",
														"type": ""
													}
												],
												"src": "568:122:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:19"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:19",
														"type": ""
													}
												],
												"src": "696:139:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:263:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:19"
															},
															"nodeType": "YulIf",
															"src": "917:119:19"
														},
														{
															"nodeType": "YulBlock",
															"src": "1046:117:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:19",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1090:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:19"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "877:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "888:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:19",
														"type": ""
													}
												],
												"src": "841:329:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1221:32:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1231:16:19",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1242:5:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1203:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1213:7:19",
														"type": ""
													}
												],
												"src": "1176:77:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1302:79:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1359:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1368:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1371:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1361:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1361:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1361:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1325:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1350:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1332:17:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1332:24:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1322:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1322:35:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1315:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1315:43:19"
															},
															"nodeType": "YulIf",
															"src": "1312:63:19"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1295:5:19",
														"type": ""
													}
												],
												"src": "1259:122:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1439:87:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1449:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1471:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1458:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1458:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1449:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1514:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1487:26:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1487:33:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1487:33:19"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1417:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1425:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1433:5:19",
														"type": ""
													}
												],
												"src": "1387:139:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1615:391:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1661:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1663:77:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1663:79:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1663:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1636:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1645:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1632:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1632:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1657:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1628:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1628:32:19"
															},
															"nodeType": "YulIf",
															"src": "1625:119:19"
														},
														{
															"nodeType": "YulBlock",
															"src": "1754:117:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1769:15:19",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1783:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1773:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1798:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1833:9:19"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1844:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1829:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1829:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1853:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1808:20:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1808:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1798:6:19"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1881:118:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1896:16:19",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1910:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1900:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1926:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1961:9:19"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1972:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1957:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1957:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1981:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1936:20:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1936:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1926:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1577:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1588:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1600:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1608:6:19",
														"type": ""
													}
												],
												"src": "1532:474:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2077:53:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2094:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2117:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2099:17:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2099:24:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2087:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2087:37:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2087:37:19"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2065:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2072:3:19",
														"type": ""
													}
												],
												"src": "2012:118:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2234:124:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2244:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2256:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2267:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2252:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2252:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2244:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2324:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2337:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2348:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2333:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2333:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2280:43:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2280:71:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2280:71:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2206:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2218:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2229:4:19",
														"type": ""
													}
												],
												"src": "2136:222:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2464:519:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2510:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2512:77:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2512:79:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2512:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2485:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2494:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2481:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2481:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2506:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2477:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2477:32:19"
															},
															"nodeType": "YulIf",
															"src": "2474:119:19"
														},
														{
															"nodeType": "YulBlock",
															"src": "2603:117:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2618:15:19",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2632:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2622:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2647:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2682:9:19"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2693:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2678:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2678:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2702:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2657:20:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2657:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2647:6:19"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2730:118:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2745:16:19",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2759:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2749:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2775:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2810:9:19"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2821:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2806:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2806:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2830:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2785:20:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2785:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2775:6:19"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2858:118:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2873:16:19",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2887:2:19",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2877:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2903:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2938:9:19"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2949:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2934:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2934:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2958:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2913:20:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2913:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "2903:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2418:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2429:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2441:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2449:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2457:6:19",
														"type": ""
													}
												],
												"src": "2364:619:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3031:48:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3041:32:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3066:5:19"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3059:6:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3059:13:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3052:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3052:21:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3041:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3013:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3023:7:19",
														"type": ""
													}
												],
												"src": "2989:90:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3144:50:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3161:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3181:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3166:14:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3166:21:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3154:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3154:34:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3154:34:19"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3132:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3139:3:19",
														"type": ""
													}
												],
												"src": "3085:109:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3292:118:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3302:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3314:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3325:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3310:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3310:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3302:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3376:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3389:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3400:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3385:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3385:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3338:37:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3338:65:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3338:65:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3264:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3276:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3287:4:19",
														"type": ""
													}
												],
												"src": "3200:210:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3490:40:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3501:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3517:5:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3511:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3511:12:19"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3501:6:19"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3473:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3483:6:19",
														"type": ""
													}
												],
												"src": "3416:114:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3647:73:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3664:3:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3669:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3657:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3657:19:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3657:19:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3685:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3704:3:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3709:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3700:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3700:14:19"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3685:11:19"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3619:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3624:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3635:11:19",
														"type": ""
													}
												],
												"src": "3536:184:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3798:60:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3808:11:19",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "3816:3:19"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "3808:4:19"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3829:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "3841:3:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3846:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3837:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3837:14:19"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "3829:4:19"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "3785:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3793:4:19",
														"type": ""
													}
												],
												"src": "3726:132:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3919:53:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3936:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3959:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3941:17:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3941:24:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3929:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3929:37:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3929:37:19"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3907:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3914:3:19",
														"type": ""
													}
												],
												"src": "3864:108:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4058:99:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4102:6:19"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4110:3:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4068:33:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4068:46:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4068:46:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4123:28:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4141:3:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4146:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4137:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4137:14:19"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "4123:10:19"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4031:6:19",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4039:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "4047:10:19",
														"type": ""
													}
												],
												"src": "3978:179:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4238:38:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4248:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "4260:3:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4265:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4256:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4256:14:19"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "4248:4:19"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "4225:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "4233:4:19",
														"type": ""
													}
												],
												"src": "4163:113:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4436:608:19",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4446:68:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4508:5:19"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4460:47:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4460:54:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4450:6:19",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4523:93:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4604:3:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4609:6:19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4530:73:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4530:86:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4523:3:19"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4625:71:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4690:5:19"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4640:49:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4640:56:19"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "4629:7:19",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4705:21:19",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "4719:7:19"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "4709:6:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4795:224:19",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4809:34:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "4836:6:19"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "4830:5:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4830:13:19"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "4813:13:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4856:70:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "4907:13:19"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "4922:3:19"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_address_to_t_address",
																				"nodeType": "YulIdentifier",
																				"src": "4863:43:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4863:63:19"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4856:3:19"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4939:70:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "5002:6:19"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "4949:52:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4949:60:19"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4939:6:19"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4757:1:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4760:6:19"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4754:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4754:13:19"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4768:18:19",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4770:14:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "4779:1:19"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4782:1:19",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4775:3:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4775:9:19"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "4770:1:19"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4739:14:19",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4741:10:19",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "4750:1:19",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "4745:1:19",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "4735:284:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5028:10:19",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "5035:3:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5028:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4415:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4422:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4431:3:19",
														"type": ""
													}
												],
												"src": "4312:732:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5198:225:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5208:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5220:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5231:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5216:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5216:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5208:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5255:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5266:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5251:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5251:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5274:4:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5280:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5270:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5270:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5244:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5244:47:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5244:47:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5300:116:19",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5402:6:19"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5411:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5308:93:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5308:108:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5300:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5170:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5182:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5193:4:19",
														"type": ""
													}
												],
												"src": "5050:373:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5518:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5535:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5538:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5528:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5528:12:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5528:12:19"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "5429:117:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5641:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5658:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5661:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5651:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5651:12:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5651:12:19"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nodeType": "YulFunctionDefinition",
												"src": "5552:117:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5764:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5781:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5784:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5774:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5774:12:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5774:12:19"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "5675:117:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5885:478:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5934:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "5936:77:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5936:79:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5936:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5913:6:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5921:4:19",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5909:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5909:17:19"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "5928:3:19"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "5905:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5905:27:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5898:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5898:35:19"
															},
															"nodeType": "YulIf",
															"src": "5895:122:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6026:30:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6049:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6036:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6036:20:19"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6026:6:19"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6099:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nodeType": "YulIdentifier",
																				"src": "6101:77:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6101:79:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6101:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6071:6:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6079:18:19",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6068:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6068:30:19"
															},
															"nodeType": "YulIf",
															"src": "6065:117:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6191:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6207:6:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6215:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6203:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6203:17:19"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "6191:8:19"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6274:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "6276:77:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6276:79:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6276:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nodeType": "YulIdentifier",
																				"src": "6239:8:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "6253:6:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6261:4:19",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "6249:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6249:17:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6235:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6235:32:19"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "6269:3:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6232:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6232:41:19"
															},
															"nodeType": "YulIf",
															"src": "6229:128:19"
														}
													]
												},
												"name": "abi_decode_t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5852:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5860:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "5868:8:19",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5878:6:19",
														"type": ""
													}
												],
												"src": "5811:552:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6471:570:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6517:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6519:77:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6519:79:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6519:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6492:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6501:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6488:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6488:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6513:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6484:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6484:32:19"
															},
															"nodeType": "YulIf",
															"src": "6481:119:19"
														},
														{
															"nodeType": "YulBlock",
															"src": "6610:296:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6625:45:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6656:9:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6667:1:19",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6652:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6652:17:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "6639:12:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6639:31:19"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6629:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6717:83:19",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "6719:77:19"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6719:79:19"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6719:79:19"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6689:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6697:18:19",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6686:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6686:30:19"
																	},
																	"nodeType": "YulIf",
																	"src": "6683:117:19"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6814:82:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6868:9:19"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6879:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6864:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6864:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6888:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "6832:31:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6832:64:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6814:6:19"
																		},
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6822:6:19"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6916:118:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6931:16:19",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6945:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6935:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6961:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6996:9:19"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7007:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6992:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6992:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7016:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6971:20:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6971:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "6961:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_calldata_ptrt_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6425:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6436:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6448:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6456:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6464:6:19",
														"type": ""
													}
												],
												"src": "6369:672:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7143:73:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7160:3:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7165:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7153:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7153:19:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7153:19:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7181:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7200:3:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7205:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7196:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7196:14:19"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "7181:11:19"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7115:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7120:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "7131:11:19",
														"type": ""
													}
												],
												"src": "7047:169:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7328:75:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7350:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7358:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7346:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7346:14:19"
																	},
																	{
																		"hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7362:33:19",
																		"type": "",
																		"value": "invalid argument - zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7339:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7339:57:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7339:57:19"
														}
													]
												},
												"name": "store_literal_in_memory_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7320:6:19",
														"type": ""
													}
												],
												"src": "7222:181:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7555:220:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7565:74:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7631:3:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7636:2:19",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7572:58:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7572:67:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7565:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7737:3:19"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																	"nodeType": "YulIdentifier",
																	"src": "7648:88:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7648:93:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7648:93:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7750:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7761:3:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7766:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7757:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7757:12:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7750:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7543:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7551:3:19",
														"type": ""
													}
												],
												"src": "7409:366:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7952:248:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7962:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7974:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7985:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7970:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7970:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7962:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8009:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8020:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8005:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8005:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8028:4:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8034:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8024:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8024:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7998:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7998:47:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7998:47:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8054:139:19",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8188:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8062:124:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "8062:131:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8054:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7932:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7947:4:19",
														"type": ""
													}
												],
												"src": "7781:419:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8312:64:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8334:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8342:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8330:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8330:14:19"
																	},
																	{
																		"hexValue": "6d6f64756c6520616c726561647920626f756e64",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8346:22:19",
																		"type": "",
																		"value": "module already bound"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8323:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "8323:46:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8323:46:19"
														}
													]
												},
												"name": "store_literal_in_memory_49f5e4419f8a1741d107c52289d66583a4bd31e41918484b4780f719774ab10e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8304:6:19",
														"type": ""
													}
												],
												"src": "8206:170:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8528:220:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8538:74:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8604:3:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8609:2:19",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8545:58:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "8545:67:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8538:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8710:3:19"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_49f5e4419f8a1741d107c52289d66583a4bd31e41918484b4780f719774ab10e",
																	"nodeType": "YulIdentifier",
																	"src": "8621:88:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "8621:93:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8621:93:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8723:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8734:3:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8739:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8730:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "8730:12:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8723:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_49f5e4419f8a1741d107c52289d66583a4bd31e41918484b4780f719774ab10e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8516:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8524:3:19",
														"type": ""
													}
												],
												"src": "8382:366:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8925:248:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8935:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8947:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8958:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8943:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "8943:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8935:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8982:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8993:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8978:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8978:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9001:4:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9007:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8997:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8997:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8971:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "8971:47:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8971:47:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9027:139:19",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9161:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_49f5e4419f8a1741d107c52289d66583a4bd31e41918484b4780f719774ab10e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9035:124:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "9035:131:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9027:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_49f5e4419f8a1741d107c52289d66583a4bd31e41918484b4780f719774ab10e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8905:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8920:4:19",
														"type": ""
													}
												],
												"src": "8754:419:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9285:75:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9307:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9315:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9303:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9303:14:19"
																	},
																	{
																		"hexValue": "63616e6e6f7420616464206d6f7265207468616e203235206d6f64756c6573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9319:33:19",
																		"type": "",
																		"value": "cannot add more than 25 modules"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9296:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "9296:57:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9296:57:19"
														}
													]
												},
												"name": "store_literal_in_memory_c1dee6581c6aebc50da002deed9e99d1ce1dab6a498f29e5915ed31feaae5830",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9277:6:19",
														"type": ""
													}
												],
												"src": "9179:181:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9512:220:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9522:74:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9588:3:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9593:2:19",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9529:58:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "9529:67:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9522:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9694:3:19"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c1dee6581c6aebc50da002deed9e99d1ce1dab6a498f29e5915ed31feaae5830",
																	"nodeType": "YulIdentifier",
																	"src": "9605:88:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "9605:93:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9605:93:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9707:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9718:3:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9723:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9714:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "9714:12:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9707:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c1dee6581c6aebc50da002deed9e99d1ce1dab6a498f29e5915ed31feaae5830_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9500:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9508:3:19",
														"type": ""
													}
												],
												"src": "9366:366:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9909:248:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9919:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9931:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9942:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9927:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "9927:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9919:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9966:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9977:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9962:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9962:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9985:4:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9991:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9981:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9981:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9955:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "9955:47:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9955:47:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10011:139:19",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10145:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c1dee6581c6aebc50da002deed9e99d1ce1dab6a498f29e5915ed31feaae5830_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10019:124:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10019:131:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10011:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c1dee6581c6aebc50da002deed9e99d1ce1dab6a498f29e5915ed31feaae5830__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9889:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9904:4:19",
														"type": ""
													}
												],
												"src": "9738:419:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10269:72:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10291:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10299:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10287:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10287:14:19"
																	},
																	{
																		"hexValue": "6f6e6c79206f776e6572206f7220746f6b656e2063616e2063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10303:30:19",
																		"type": "",
																		"value": "only owner or token can call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10280:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10280:54:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10280:54:19"
														}
													]
												},
												"name": "store_literal_in_memory_85ebbeb661b177a20113638bf35f6faae6d63a8b8162625e2d2ab0a760e9b8cf",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10261:6:19",
														"type": ""
													}
												],
												"src": "10163:178:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10493:220:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10503:74:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10569:3:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10574:2:19",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10510:58:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10510:67:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10503:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10675:3:19"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_85ebbeb661b177a20113638bf35f6faae6d63a8b8162625e2d2ab0a760e9b8cf",
																	"nodeType": "YulIdentifier",
																	"src": "10586:88:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10586:93:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10586:93:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10688:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10699:3:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10704:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10695:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10695:12:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10688:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_85ebbeb661b177a20113638bf35f6faae6d63a8b8162625e2d2ab0a760e9b8cf_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10481:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10489:3:19",
														"type": ""
													}
												],
												"src": "10347:366:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10890:248:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10900:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10912:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10923:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10908:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10908:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10900:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10947:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10958:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10943:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10943:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10966:4:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10972:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10962:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10962:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10936:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10936:47:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10936:47:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10992:139:19",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11126:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_85ebbeb661b177a20113638bf35f6faae6d63a8b8162625e2d2ab0a760e9b8cf_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11000:124:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "11000:131:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10992:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_85ebbeb661b177a20113638bf35f6faae6d63a8b8162625e2d2ab0a760e9b8cf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10870:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10885:4:19",
														"type": ""
													}
												],
												"src": "10719:419:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11250:67:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11272:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11280:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11268:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11268:14:19"
																	},
																	{
																		"hexValue": "5468697320746f6b656e206973206e6f7420626f756e64",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11284:25:19",
																		"type": "",
																		"value": "This token is not bound"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11261:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "11261:49:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11261:49:19"
														}
													]
												},
												"name": "store_literal_in_memory_bc637b520028211bbc531d42bfcff19a7cfbd2d183c129d537e63c33437371db",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11242:6:19",
														"type": ""
													}
												],
												"src": "11144:173:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11469:220:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11479:74:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11545:3:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11550:2:19",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11486:58:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "11486:67:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11479:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11651:3:19"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_bc637b520028211bbc531d42bfcff19a7cfbd2d183c129d537e63c33437371db",
																	"nodeType": "YulIdentifier",
																	"src": "11562:88:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "11562:93:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11562:93:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11664:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11675:3:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11680:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11671:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "11671:12:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11664:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_bc637b520028211bbc531d42bfcff19a7cfbd2d183c129d537e63c33437371db_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11457:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11465:3:19",
														"type": ""
													}
												],
												"src": "11323:366:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11866:248:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11876:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11888:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11899:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11884:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "11884:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11876:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11923:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11934:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11919:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11919:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11942:4:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11948:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11938:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11938:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11912:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "11912:47:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11912:47:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11968:139:19",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12102:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_bc637b520028211bbc531d42bfcff19a7cfbd2d183c129d537e63c33437371db_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11976:124:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "11976:131:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11968:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bc637b520028211bbc531d42bfcff19a7cfbd2d183c129d537e63c33437371db__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11846:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11861:4:19",
														"type": ""
													}
												],
												"src": "11695:419:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12226:186:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12248:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12256:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12244:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12244:14:19"
																	},
																	{
																		"hexValue": "6572726f72203a20746869732061646472657373206973206e6f74206120746f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12260:34:19",
																		"type": "",
																		"value": "error : this address is not a to"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12237:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "12237:58:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12237:58:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12316:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12324:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12312:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12312:15:19"
																	},
																	{
																		"hexValue": "6b656e20626f756e6420746f2074686520636f6d706c69616e636520636f6e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12329:34:19",
																		"type": "",
																		"value": "ken bound to the compliance cont"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12305:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "12305:59:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12305:59:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12385:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12393:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12381:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12381:15:19"
																	},
																	{
																		"hexValue": "72616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12398:6:19",
																		"type": "",
																		"value": "ract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12374:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "12374:31:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12374:31:19"
														}
													]
												},
												"name": "store_literal_in_memory_5a68ed2bc0002f6d7777b41be5e0fbfbfe715cdad34adee170beb7e99ea964f1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12218:6:19",
														"type": ""
													}
												],
												"src": "12120:292:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12564:220:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12574:74:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12640:3:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12645:2:19",
																		"type": "",
																		"value": "68"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12581:58:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "12581:67:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12574:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12746:3:19"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5a68ed2bc0002f6d7777b41be5e0fbfbfe715cdad34adee170beb7e99ea964f1",
																	"nodeType": "YulIdentifier",
																	"src": "12657:88:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "12657:93:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12657:93:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12759:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12770:3:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12775:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12766:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "12766:12:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12759:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5a68ed2bc0002f6d7777b41be5e0fbfbfe715cdad34adee170beb7e99ea964f1_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12552:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12560:3:19",
														"type": ""
													}
												],
												"src": "12418:366:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12961:248:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12971:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12983:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12994:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12979:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "12979:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12971:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13018:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13029:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13014:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13014:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13037:4:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13043:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13033:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13033:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13007:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13007:47:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13007:47:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13063:139:19",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13197:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5a68ed2bc0002f6d7777b41be5e0fbfbfe715cdad34adee170beb7e99ea964f1_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13071:124:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13071:131:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13063:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5a68ed2bc0002f6d7777b41be5e0fbfbfe715cdad34adee170beb7e99ea964f1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12941:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12956:4:19",
														"type": ""
													}
												],
												"src": "12790:419:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13321:76:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13343:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13351:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13339:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13339:14:19"
																	},
																	{
																		"hexValue": "696e76616c696420617267756d656e74202d206e6f2076616c7565206d696e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13355:34:19",
																		"type": "",
																		"value": "invalid argument - no value mint"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13332:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13332:58:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13332:58:19"
														}
													]
												},
												"name": "store_literal_in_memory_0de045b53a2696c4c58a2dd6a960eacc1f1718f54ec66cb0ba5f399ae9d1fb9e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13313:6:19",
														"type": ""
													}
												],
												"src": "13215:182:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13549:220:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13559:74:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13625:3:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13630:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13566:58:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13566:67:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13559:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13731:3:19"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0de045b53a2696c4c58a2dd6a960eacc1f1718f54ec66cb0ba5f399ae9d1fb9e",
																	"nodeType": "YulIdentifier",
																	"src": "13642:88:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13642:93:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13642:93:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13744:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13755:3:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13760:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13751:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13751:12:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13744:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0de045b53a2696c4c58a2dd6a960eacc1f1718f54ec66cb0ba5f399ae9d1fb9e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13537:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13545:3:19",
														"type": ""
													}
												],
												"src": "13403:366:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13946:248:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13956:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13968:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13979:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13964:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13964:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13956:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14003:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14014:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13999:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13999:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14022:4:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14028:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14018:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14018:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13992:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13992:47:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13992:47:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14048:139:19",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14182:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0de045b53a2696c4c58a2dd6a960eacc1f1718f54ec66cb0ba5f399ae9d1fb9e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14056:124:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14056:131:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14048:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0de045b53a2696c4c58a2dd6a960eacc1f1718f54ec66cb0ba5f399ae9d1fb9e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13926:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13941:4:19",
														"type": ""
													}
												],
												"src": "13775:419:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14228:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14245:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14248:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14238:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14238:88:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14238:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14342:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14345:4:19",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14335:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14335:15:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14335:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14366:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14369:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14359:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14359:15:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14359:15:19"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "14200:180:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14451:53:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14468:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14491:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "14473:17:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14473:24:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14461:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14461:37:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14461:37:19"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14439:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14446:3:19",
														"type": ""
													}
												],
												"src": "14386:118:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14636:206:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14646:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14658:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14669:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14654:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14654:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14646:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14726:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14739:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14750:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14735:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14735:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14682:43:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14682:71:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14682:71:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14807:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14820:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14831:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14816:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14816:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14763:43:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14763:72:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14763:72:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14600:9:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14612:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14620:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14631:4:19",
														"type": ""
													}
												],
												"src": "14510:332:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14876:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14893:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14896:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14886:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14886:88:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14886:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14990:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14993:4:19",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14983:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14983:15:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14983:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15014:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15017:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15007:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "15007:15:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15007:15:19"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "14848:180:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15077:190:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15087:33:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15114:5:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15096:17:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "15096:24:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "15087:5:19"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15210:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15212:16:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15212:18:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15212:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15135:5:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15142:66:19",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "15132:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "15132:77:19"
															},
															"nodeType": "YulIf",
															"src": "15129:103:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15241:20:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15252:5:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15259:1:19",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15248:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "15248:13:19"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "15241:3:19"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15063:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "15073:3:19",
														"type": ""
													}
												],
												"src": "15034:233:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15379:117:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15401:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15409:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15397:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15397:14:19"
																	},
																	{
																		"hexValue": "696e76616c696420617267756d656e74202d206e6f2076616c7565207472616e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15413:34:19",
																		"type": "",
																		"value": "invalid argument - no value tran"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15390:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "15390:58:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15390:58:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15469:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15477:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15465:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15465:15:19"
																	},
																	{
																		"hexValue": "73666572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15482:6:19",
																		"type": "",
																		"value": "sfer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15458:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "15458:31:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15458:31:19"
														}
													]
												},
												"name": "store_literal_in_memory_e9c7f121b6da7dac929ed2e7ad1b1b43e75c240016a001387d6d3f264c6c87e7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15371:6:19",
														"type": ""
													}
												],
												"src": "15273:223:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15648:220:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15658:74:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15724:3:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15729:2:19",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15665:58:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "15665:67:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15658:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15830:3:19"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e9c7f121b6da7dac929ed2e7ad1b1b43e75c240016a001387d6d3f264c6c87e7",
																	"nodeType": "YulIdentifier",
																	"src": "15741:88:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "15741:93:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15741:93:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15843:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15854:3:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15859:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15850:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "15850:12:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15843:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e9c7f121b6da7dac929ed2e7ad1b1b43e75c240016a001387d6d3f264c6c87e7_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15636:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15644:3:19",
														"type": ""
													}
												],
												"src": "15502:366:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16045:248:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16055:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16067:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16078:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16063:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "16063:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16055:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16102:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16113:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16098:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16098:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16121:4:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16127:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16117:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16117:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16091:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "16091:47:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16091:47:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16147:139:19",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16281:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e9c7f121b6da7dac929ed2e7ad1b1b43e75c240016a001387d6d3f264c6c87e7_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16155:124:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "16155:131:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16147:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e9c7f121b6da7dac929ed2e7ad1b1b43e75c240016a001387d6d3f264c6c87e7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16025:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16040:4:19",
														"type": ""
													}
												],
												"src": "15874:419:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16453:288:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16463:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16475:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16486:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16471:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "16471:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16463:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16543:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16556:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16567:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16552:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16552:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16499:43:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "16499:71:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16499:71:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16624:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16637:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16648:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16633:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16633:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16580:43:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "16580:72:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16580:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "16706:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16719:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16730:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16715:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16715:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16662:43:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "16662:72:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16662:72:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16409:9:19",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "16421:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16429:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16437:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16448:4:19",
														"type": ""
													}
												],
												"src": "16299:442:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16853:76:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16875:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16883:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16871:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16871:14:19"
																	},
																	{
																		"hexValue": "696e76616c696420617267756d656e74202d206e6f2076616c7565206275726e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16887:34:19",
																		"type": "",
																		"value": "invalid argument - no value burn"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16864:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "16864:58:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16864:58:19"
														}
													]
												},
												"name": "store_literal_in_memory_5a00bd734c7992f377cbeced90f5c16f281fb6575139ae7312aa5e8718ec4a06",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16845:6:19",
														"type": ""
													}
												],
												"src": "16747:182:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17081:220:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17091:74:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17157:3:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17162:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17098:58:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "17098:67:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17091:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17263:3:19"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5a00bd734c7992f377cbeced90f5c16f281fb6575139ae7312aa5e8718ec4a06",
																	"nodeType": "YulIdentifier",
																	"src": "17174:88:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "17174:93:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17174:93:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17276:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17287:3:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17292:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17283:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "17283:12:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17276:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5a00bd734c7992f377cbeced90f5c16f281fb6575139ae7312aa5e8718ec4a06_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17069:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17077:3:19",
														"type": ""
													}
												],
												"src": "16935:366:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17478:248:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17488:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17500:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17511:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17496:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "17496:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17488:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17535:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17546:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17531:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17531:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17554:4:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17560:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17550:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17550:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17524:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "17524:47:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17524:47:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17580:139:19",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17714:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5a00bd734c7992f377cbeced90f5c16f281fb6575139ae7312aa5e8718ec4a06_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17588:124:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "17588:131:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17580:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5a00bd734c7992f377cbeced90f5c16f281fb6575139ae7312aa5e8718ec4a06__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17458:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17473:4:19",
														"type": ""
													}
												],
												"src": "17307:419:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17838:60:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17860:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17868:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17856:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17856:14:19"
																	},
																	{
																		"hexValue": "6d6f64756c65206e6f7420626f756e64",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17872:18:19",
																		"type": "",
																		"value": "module not bound"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17849:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "17849:42:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17849:42:19"
														}
													]
												},
												"name": "store_literal_in_memory_3f029d9821dc476c0705c03fff9255d333d5235fef87cba00cede4d1409cd713",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17830:6:19",
														"type": ""
													}
												],
												"src": "17732:166:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18050:220:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18060:74:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18126:3:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18131:2:19",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18067:58:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "18067:67:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18060:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18232:3:19"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3f029d9821dc476c0705c03fff9255d333d5235fef87cba00cede4d1409cd713",
																	"nodeType": "YulIdentifier",
																	"src": "18143:88:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "18143:93:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18143:93:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18245:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18256:3:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18261:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18252:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "18252:12:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18245:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3f029d9821dc476c0705c03fff9255d333d5235fef87cba00cede4d1409cd713_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18038:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18046:3:19",
														"type": ""
													}
												],
												"src": "17904:366:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18447:248:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18457:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18469:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18480:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18465:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "18465:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18457:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18504:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18515:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18500:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18500:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18523:4:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18529:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18519:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18519:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18493:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "18493:47:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18493:47:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18549:139:19",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18683:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3f029d9821dc476c0705c03fff9255d333d5235fef87cba00cede4d1409cd713_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18557:124:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "18557:131:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18549:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3f029d9821dc476c0705c03fff9255d333d5235fef87cba00cede4d1409cd713__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18427:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18442:4:19",
														"type": ""
													}
												],
												"src": "18276:419:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18746:149:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18756:25:19",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18779:1:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "18761:17:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "18761:20:19"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "18756:1:19"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18790:25:19",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18813:1:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "18795:17:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "18795:20:19"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "18790:1:19"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18824:17:19",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18836:1:19"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18839:1:19"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "18832:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "18832:9:19"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "18824:4:19"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18866:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "18868:16:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18868:18:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18868:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "18857:4:19"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18863:1:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "18854:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "18854:11:19"
															},
															"nodeType": "YulIf",
															"src": "18851:37:19"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "18732:1:19",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "18735:1:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "18741:4:19",
														"type": ""
													}
												],
												"src": "18701:194:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18929:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18946:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18949:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18939:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "18939:88:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18939:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19043:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19046:4:19",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19036:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "19036:15:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19036:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19067:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19070:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "19060:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "19060:15:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19060:15:19"
														}
													]
												},
												"name": "panic_error_0x31",
												"nodeType": "YulFunctionDefinition",
												"src": "18901:180:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19193:127:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19215:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19223:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19211:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19211:14:19"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19227:34:19",
																		"type": "",
																		"value": "Initializable: contract is alrea"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19204:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "19204:58:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19204:58:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19283:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19291:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19279:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19279:15:19"
																	},
																	{
																		"hexValue": "647920696e697469616c697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19296:16:19",
																		"type": "",
																		"value": "dy initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19272:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "19272:41:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19272:41:19"
														}
													]
												},
												"name": "store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19185:6:19",
														"type": ""
													}
												],
												"src": "19087:233:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19472:220:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19482:74:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19548:3:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19553:2:19",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19489:58:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "19489:67:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19482:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19654:3:19"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																	"nodeType": "YulIdentifier",
																	"src": "19565:88:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "19565:93:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19565:93:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19667:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19678:3:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19683:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19674:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "19674:12:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19667:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19460:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19468:3:19",
														"type": ""
													}
												],
												"src": "19326:366:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19869:248:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19879:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19891:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19902:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19887:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "19887:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19879:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19926:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19937:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19922:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19922:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19945:4:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19951:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19941:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19941:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19915:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "19915:47:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19915:47:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19971:139:19",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20105:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19979:124:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "19979:131:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19971:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19849:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19864:4:19",
														"type": ""
													}
												],
												"src": "19698:419:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20176:32:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20186:16:19",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "20197:5:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "20186:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20158:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "20168:7:19",
														"type": ""
													}
												],
												"src": "20123:85:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20257:43:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20267:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20282:5:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20289:4:19",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "20278:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "20278:16:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "20267:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20239:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "20249:7:19",
														"type": ""
													}
												],
												"src": "20214:86:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20338:28:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20348:12:19",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "20355:5:19"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "20348:3:19"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20324:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "20334:3:19",
														"type": ""
													}
												],
												"src": "20306:60:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20438:88:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20448:72:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "20512:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nodeType": "YulIdentifier",
																					"src": "20486:25:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20486:32:19"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "20477:8:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20477:42:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "20461:15:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "20461:59:19"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "20448:9:19"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20418:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "20428:9:19",
														"type": ""
													}
												],
												"src": "20372:154:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20603:72:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20620:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "20662:5:19"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "20625:36:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20625:43:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20613:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "20613:56:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20613:56:19"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20591:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20598:3:19",
														"type": ""
													}
												],
												"src": "20532:143:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20785:130:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20795:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20807:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20818:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20803:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "20803:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20795:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "20881:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20894:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20905:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20890:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20890:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20831:49:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "20831:77:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20831:77:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20757:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20769:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20780:4:19",
														"type": ""
													}
												],
												"src": "20681:234:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21103:371:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21113:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21125:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21136:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21121:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "21121:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21113:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "21194:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21207:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21218:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21203:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21203:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21150:43:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "21150:71:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21150:71:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "21275:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21288:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21299:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21284:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21284:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21231:43:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "21231:72:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21231:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "21357:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21370:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21381:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21366:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21366:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21313:43:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "21313:72:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21313:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "21439:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21452:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21463:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21448:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21448:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21395:43:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "21395:72:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21395:72:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_address__to_t_address_t_address_t_uint256_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21051:9:19",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "21063:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "21071:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "21079:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "21087:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21098:4:19",
														"type": ""
													}
												],
												"src": "20921:553:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21520:76:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21574:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21583:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21586:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "21576:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21576:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21576:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "21543:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "21565:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "21550:14:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21550:21:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "21540:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21540:32:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "21533:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "21533:40:19"
															},
															"nodeType": "YulIf",
															"src": "21530:60:19"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21513:5:19",
														"type": ""
													}
												],
												"src": "21480:116:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21662:77:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21672:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "21687:6:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "21681:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "21681:13:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "21672:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21727:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "21703:23:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "21703:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21703:30:19"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "21640:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21648:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21656:5:19",
														"type": ""
													}
												],
												"src": "21602:137:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21819:271:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21865:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "21867:77:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21867:79:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21867:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "21840:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21849:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21836:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21836:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21861:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "21832:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "21832:32:19"
															},
															"nodeType": "YulIf",
															"src": "21829:119:19"
														},
														{
															"nodeType": "YulBlock",
															"src": "21958:125:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "21973:15:19",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21987:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "21977:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "22002:71:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "22045:9:19"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "22056:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "22041:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "22041:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "22065:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "22012:28:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22012:61:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "22002:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21789:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "21800:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "21812:6:19",
														"type": ""
													}
												],
												"src": "21745:345:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22202:69:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22224:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22232:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22220:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22220:14:19"
																	},
																	{
																		"hexValue": "63616c6c206f6e6c79206f6e20626f756e64206d6f64756c65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22236:27:19",
																		"type": "",
																		"value": "call only on bound module"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22213:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "22213:51:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22213:51:19"
														}
													]
												},
												"name": "store_literal_in_memory_db4dc5d7747dd41cae264893a34d079922ab272ca9cb8b8764be76354fbf8396",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22194:6:19",
														"type": ""
													}
												],
												"src": "22096:175:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22423:220:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22433:74:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22499:3:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22504:2:19",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22440:58:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "22440:67:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22433:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22605:3:19"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_db4dc5d7747dd41cae264893a34d079922ab272ca9cb8b8764be76354fbf8396",
																	"nodeType": "YulIdentifier",
																	"src": "22516:88:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "22516:93:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22516:93:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22618:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22629:3:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22634:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22625:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "22625:12:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "22618:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_db4dc5d7747dd41cae264893a34d079922ab272ca9cb8b8764be76354fbf8396_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22411:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22419:3:19",
														"type": ""
													}
												],
												"src": "22277:366:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22820:248:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22830:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22842:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22853:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22838:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "22838:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22830:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22877:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22888:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22873:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22873:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22896:4:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22902:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22892:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22892:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22866:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "22866:47:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22866:47:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22922:139:19",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23056:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_db4dc5d7747dd41cae264893a34d079922ab272ca9cb8b8764be76354fbf8396_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22930:124:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "22930:131:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22922:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_db4dc5d7747dd41cae264893a34d079922ab272ca9cb8b8764be76354fbf8396__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22800:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22815:4:19",
														"type": ""
													}
												],
												"src": "22649:419:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23118:105:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23128:89:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23143:5:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23150:66:19",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "23139:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "23139:78:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "23128:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23100:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "23110:7:19",
														"type": ""
													}
												],
												"src": "23074:149:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23292:52:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23309:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "23331:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "23314:16:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23314:23:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23302:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "23302:36:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23302:36:19"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23280:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23287:3:19",
														"type": ""
													}
												],
												"src": "23229:115:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23446:122:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23456:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23468:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23479:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23464:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "23464:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23456:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "23534:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23547:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23558:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23543:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23543:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23492:41:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "23492:69:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23492:69:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23418:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "23430:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23441:4:19",
														"type": ""
													}
												],
												"src": "23350:218:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23680:119:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23702:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23710:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23698:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23698:14:19"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23714:34:19",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23691:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "23691:58:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23691:58:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23770:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23778:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23766:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23766:15:19"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23783:8:19",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23759:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "23759:33:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23759:33:19"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23672:6:19",
														"type": ""
													}
												],
												"src": "23574:225:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23951:220:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23961:74:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24027:3:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24032:2:19",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23968:58:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "23968:67:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "23961:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24133:3:19"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "24044:88:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "24044:93:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24044:93:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24146:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24157:3:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24162:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24153:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "24153:12:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "24146:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23939:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23947:3:19",
														"type": ""
													}
												],
												"src": "23805:366:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24348:248:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24358:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24370:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24381:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24366:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "24366:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24358:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24405:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24416:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24401:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24401:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "24424:4:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24430:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24420:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24420:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24394:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "24394:47:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24394:47:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24450:139:19",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "24584:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24458:124:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "24458:131:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24450:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24328:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24343:4:19",
														"type": ""
													}
												],
												"src": "24177:419:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24708:76:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24730:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24738:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24726:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24726:14:19"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24742:34:19",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24719:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "24719:58:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24719:58:19"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24700:6:19",
														"type": ""
													}
												],
												"src": "24602:182:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24936:220:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24946:74:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25012:3:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25017:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24953:58:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "24953:67:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "24946:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25118:3:19"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "25029:88:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "25029:93:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25029:93:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25131:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25142:3:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25147:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25138:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "25138:12:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "25131:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24924:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "24932:3:19",
														"type": ""
													}
												],
												"src": "24790:366:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25333:248:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25343:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25355:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25366:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25351:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "25351:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25343:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25390:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25401:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25386:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25386:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "25409:4:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25415:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25405:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25405:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25379:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "25379:47:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25379:47:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25435:139:19",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "25569:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25443:124:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "25443:131:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25435:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25313:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "25328:4:19",
														"type": ""
													}
												],
												"src": "25162:419:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25693:124:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "25715:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25723:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25711:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25711:14:19"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "25727:34:19",
																		"type": "",
																		"value": "Initializable: contract is not i"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25704:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "25704:58:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25704:58:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "25783:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25791:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25779:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25779:15:19"
																	},
																	{
																		"hexValue": "6e697469616c697a696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "25796:13:19",
																		"type": "",
																		"value": "nitializing"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25772:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "25772:38:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25772:38:19"
														}
													]
												},
												"name": "store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "25685:6:19",
														"type": ""
													}
												],
												"src": "25587:230:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25969:220:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25979:74:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26045:3:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26050:2:19",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25986:58:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "25986:67:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "25979:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26151:3:19"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																	"nodeType": "YulIdentifier",
																	"src": "26062:88:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "26062:93:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26062:93:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26164:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26175:3:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26180:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26171:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "26171:12:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "26164:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25957:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "25965:3:19",
														"type": ""
													}
												],
												"src": "25823:366:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26366:248:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26376:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "26388:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26399:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26384:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "26384:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26376:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26423:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26434:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26419:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26419:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "26442:4:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26448:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "26438:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26438:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26412:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "26412:47:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26412:47:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26468:139:19",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "26602:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26476:124:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "26476:131:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26468:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "26346:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "26361:4:19",
														"type": ""
													}
												],
												"src": "26195:419:19"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_bytes_calldata_ptrt_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543(memPtr) {\n\n        mstore(add(memPtr, 0), \"invalid argument - zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_49f5e4419f8a1741d107c52289d66583a4bd31e41918484b4780f719774ab10e(memPtr) {\n\n        mstore(add(memPtr, 0), \"module already bound\")\n\n    }\n\n    function abi_encode_t_stringliteral_49f5e4419f8a1741d107c52289d66583a4bd31e41918484b4780f719774ab10e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_49f5e4419f8a1741d107c52289d66583a4bd31e41918484b4780f719774ab10e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_49f5e4419f8a1741d107c52289d66583a4bd31e41918484b4780f719774ab10e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_49f5e4419f8a1741d107c52289d66583a4bd31e41918484b4780f719774ab10e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c1dee6581c6aebc50da002deed9e99d1ce1dab6a498f29e5915ed31feaae5830(memPtr) {\n\n        mstore(add(memPtr, 0), \"cannot add more than 25 modules\")\n\n    }\n\n    function abi_encode_t_stringliteral_c1dee6581c6aebc50da002deed9e99d1ce1dab6a498f29e5915ed31feaae5830_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_c1dee6581c6aebc50da002deed9e99d1ce1dab6a498f29e5915ed31feaae5830(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c1dee6581c6aebc50da002deed9e99d1ce1dab6a498f29e5915ed31feaae5830__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c1dee6581c6aebc50da002deed9e99d1ce1dab6a498f29e5915ed31feaae5830_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_85ebbeb661b177a20113638bf35f6faae6d63a8b8162625e2d2ab0a760e9b8cf(memPtr) {\n\n        mstore(add(memPtr, 0), \"only owner or token can call\")\n\n    }\n\n    function abi_encode_t_stringliteral_85ebbeb661b177a20113638bf35f6faae6d63a8b8162625e2d2ab0a760e9b8cf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_85ebbeb661b177a20113638bf35f6faae6d63a8b8162625e2d2ab0a760e9b8cf(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_85ebbeb661b177a20113638bf35f6faae6d63a8b8162625e2d2ab0a760e9b8cf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_85ebbeb661b177a20113638bf35f6faae6d63a8b8162625e2d2ab0a760e9b8cf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_bc637b520028211bbc531d42bfcff19a7cfbd2d183c129d537e63c33437371db(memPtr) {\n\n        mstore(add(memPtr, 0), \"This token is not bound\")\n\n    }\n\n    function abi_encode_t_stringliteral_bc637b520028211bbc531d42bfcff19a7cfbd2d183c129d537e63c33437371db_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_bc637b520028211bbc531d42bfcff19a7cfbd2d183c129d537e63c33437371db(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bc637b520028211bbc531d42bfcff19a7cfbd2d183c129d537e63c33437371db__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bc637b520028211bbc531d42bfcff19a7cfbd2d183c129d537e63c33437371db_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5a68ed2bc0002f6d7777b41be5e0fbfbfe715cdad34adee170beb7e99ea964f1(memPtr) {\n\n        mstore(add(memPtr, 0), \"error : this address is not a to\")\n\n        mstore(add(memPtr, 32), \"ken bound to the compliance cont\")\n\n        mstore(add(memPtr, 64), \"ract\")\n\n    }\n\n    function abi_encode_t_stringliteral_5a68ed2bc0002f6d7777b41be5e0fbfbfe715cdad34adee170beb7e99ea964f1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 68)\n        store_literal_in_memory_5a68ed2bc0002f6d7777b41be5e0fbfbfe715cdad34adee170beb7e99ea964f1(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5a68ed2bc0002f6d7777b41be5e0fbfbfe715cdad34adee170beb7e99ea964f1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5a68ed2bc0002f6d7777b41be5e0fbfbfe715cdad34adee170beb7e99ea964f1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0de045b53a2696c4c58a2dd6a960eacc1f1718f54ec66cb0ba5f399ae9d1fb9e(memPtr) {\n\n        mstore(add(memPtr, 0), \"invalid argument - no value mint\")\n\n    }\n\n    function abi_encode_t_stringliteral_0de045b53a2696c4c58a2dd6a960eacc1f1718f54ec66cb0ba5f399ae9d1fb9e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_0de045b53a2696c4c58a2dd6a960eacc1f1718f54ec66cb0ba5f399ae9d1fb9e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0de045b53a2696c4c58a2dd6a960eacc1f1718f54ec66cb0ba5f399ae9d1fb9e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0de045b53a2696c4c58a2dd6a960eacc1f1718f54ec66cb0ba5f399ae9d1fb9e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_e9c7f121b6da7dac929ed2e7ad1b1b43e75c240016a001387d6d3f264c6c87e7(memPtr) {\n\n        mstore(add(memPtr, 0), \"invalid argument - no value tran\")\n\n        mstore(add(memPtr, 32), \"sfer\")\n\n    }\n\n    function abi_encode_t_stringliteral_e9c7f121b6da7dac929ed2e7ad1b1b43e75c240016a001387d6d3f264c6c87e7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_e9c7f121b6da7dac929ed2e7ad1b1b43e75c240016a001387d6d3f264c6c87e7(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e9c7f121b6da7dac929ed2e7ad1b1b43e75c240016a001387d6d3f264c6c87e7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e9c7f121b6da7dac929ed2e7ad1b1b43e75c240016a001387d6d3f264c6c87e7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_5a00bd734c7992f377cbeced90f5c16f281fb6575139ae7312aa5e8718ec4a06(memPtr) {\n\n        mstore(add(memPtr, 0), \"invalid argument - no value burn\")\n\n    }\n\n    function abi_encode_t_stringliteral_5a00bd734c7992f377cbeced90f5c16f281fb6575139ae7312aa5e8718ec4a06_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_5a00bd734c7992f377cbeced90f5c16f281fb6575139ae7312aa5e8718ec4a06(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5a00bd734c7992f377cbeced90f5c16f281fb6575139ae7312aa5e8718ec4a06__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5a00bd734c7992f377cbeced90f5c16f281fb6575139ae7312aa5e8718ec4a06_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3f029d9821dc476c0705c03fff9255d333d5235fef87cba00cede4d1409cd713(memPtr) {\n\n        mstore(add(memPtr, 0), \"module not bound\")\n\n    }\n\n    function abi_encode_t_stringliteral_3f029d9821dc476c0705c03fff9255d333d5235fef87cba00cede4d1409cd713_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_3f029d9821dc476c0705c03fff9255d333d5235fef87cba00cede4d1409cd713(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3f029d9821dc476c0705c03fff9255d333d5235fef87cba00cede4d1409cd713__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3f029d9821dc476c0705c03fff9255d333d5235fef87cba00cede4d1409cd713_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759(memPtr) {\n\n        mstore(add(memPtr, 0), \"Initializable: contract is alrea\")\n\n        mstore(add(memPtr, 32), \"dy initialized\")\n\n    }\n\n    function abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint8(value) -> converted {\n        converted := cleanup_t_uint8(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_address__to_t_address_t_address_t_uint256_t_address__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_db4dc5d7747dd41cae264893a34d079922ab272ca9cb8b8764be76354fbf8396(memPtr) {\n\n        mstore(add(memPtr, 0), \"call only on bound module\")\n\n    }\n\n    function abi_encode_t_stringliteral_db4dc5d7747dd41cae264893a34d079922ab272ca9cb8b8764be76354fbf8396_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_db4dc5d7747dd41cae264893a34d079922ab272ca9cb8b8764be76354fbf8396(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_db4dc5d7747dd41cae264893a34d079922ab272ca9cb8b8764be76354fbf8396__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_db4dc5d7747dd41cae264893a34d079922ab272ca9cb8b8764be76354fbf8396_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Initializable: contract is not i\")\n\n        mstore(add(memPtr, 32), \"nitializing\")\n\n    }\n\n    function abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 19,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101005760003560e01c80638da5cb5b11610097578063e1c7392a11610066578063e1c7392a1461025d578063e46638e614610267578063efb22d3314610297578063f2fde38b146102b357610100565b80638da5cb5b146101d5578063a0632461146101f3578063a446d49f1461020f578063b2494df31461023f57610100565b80636a3edf28116100d35780636a3edf2814610175578063715018a6146101935780638baf29b41461019d5780638d2ea772146101b957610100565b80631ed86f19146101055780633ff5aa021461012157806340db3b501461013d5780635f8dead314610159575b600080fd5b61011f600480360381019061011a9190611b72565b6102cf565b005b61013b60048036038101906101369190611b72565b610588565b005b61015760048036038101906101529190611b72565b610777565b005b610173600480360381019061016e9190611bd5565b610980565b005b61017d610b9b565b60405161018a9190611c24565b60405180910390f35b61019b610bc5565b005b6101b760048036038101906101b29190611c3f565b610bd9565b005b6101d360048036038101906101ce9190611bd5565b610e31565b005b6101dd61104c565b6040516101ea9190611c24565b60405180910390f35b61020d60048036038101906102089190611b72565b611076565b005b61022960048036038101906102249190611b72565b611410565b6040516102369190611cad565b60405180910390f35b610247611466565b6040516102549190611d86565b60405180910390f35b6102656114f4565b005b610281600480360381019061027c9190611c3f565b611632565b60405161028e9190611cad565b60405180910390f35b6102b160048036038101906102ac9190611e0d565b611736565b005b6102cd60048036038101906102c89190611b72565b611846565b005b6102d76118c9565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610346576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033d90611eca565b60405180910390fd5b606760008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156103d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ca90611f36565b60405180910390fd5b6018606680549050111561041c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041390611fa2565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16634a932544306040518263ffffffff1660e01b81526004016104559190611c24565b600060405180830381600087803b15801561046f57600080fd5b505af1158015610483573d6000803e3d6000fd5b505050506066819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001606760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167fead6a006345da1073a106d5f32372d2d2204f46cb0b4bca8f5ebafcbbed12b8a60405160405180910390a250565b3373ffffffffffffffffffffffffffffffffffffffff166105a761104c565b73ffffffffffffffffffffffffffffffffffffffff16148061064e5750600073ffffffffffffffffffffffffffffffffffffffff16606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614801561064d57508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b5b61068d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106849061200e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f390611eca565b60405180910390fd5b80606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f2de35142b19ed5a07796cf30791959c592018f70b1d2d7c460eef8ffe713692b8160405161076c9190611c24565b60405180910390a150565b3373ffffffffffffffffffffffffffffffffffffffff1661079661104c565b73ffffffffffffffffffffffffffffffffffffffff1614806107e357508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610822576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108199061200e565b60405180910390fd5b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146108b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a99061207a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610921576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091890611eca565b60405180910390fd5b606560006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690557f28a4ca7134a3b3f9aff286e79ad3daadb4a06d1b43d037a3a98bdc074edd9b7a816040516109759190611c24565b60405180910390a150565b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a10576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0790612132565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a7f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7690611eca565b60405180910390fd5b60008111610ac2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab99061219e565b60405180910390fd5b6000606680549050905060005b81811015610b955760668181548110610aeb57610aea6121be565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f104a8c985856040518363ffffffff1660e01b8152600401610b509291906121fc565b600060405180830381600087803b158015610b6a57600080fd5b505af1158015610b7e573d6000803e3d6000fd5b505050508080610b8d90612254565b915050610acf565b50505050565b6000606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610bcd6118c9565b610bd76000611947565b565b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c69576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6090612132565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015610cd35750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b610d12576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0990611eca565b60405180910390fd5b60008111610d55576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4c9061230e565b60405180910390fd5b6000606680549050905060005b81811015610e2a5760668181548110610d7e57610d7d6121be565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632cb7e1ec8686866040518463ffffffff1660e01b8152600401610de59392919061232e565b600060405180830381600087803b158015610dff57600080fd5b505af1158015610e13573d6000803e3d6000fd5b505050508080610e2290612254565b915050610d62565b5050505050565b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ec1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eb890612132565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2790611eca565b60405180910390fd5b60008111610f73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6a906123b1565b60405180910390fd5b6000606680549050905060005b818110156110465760668181548110610f9c57610f9b6121be565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663372491a285856040518363ffffffff1660e01b81526004016110019291906121fc565b600060405180830381600087803b15801561101b57600080fd5b505af115801561102f573d6000803e3d6000fd5b50505050808061103e90612254565b915050610f80565b50505050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61107e6118c9565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036110ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110e490611eca565b60405180910390fd5b606760008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16611179576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111709061241d565b60405180910390fd5b6000606680549050905060005b8181101561140b578273ffffffffffffffffffffffffffffffffffffffff16606682815481106111b9576111b86121be565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036113f8578273ffffffffffffffffffffffffffffffffffffffff16630694a5fb306040518263ffffffff1660e01b81526004016112389190611c24565b600060405180830381600087803b15801561125257600080fd5b505af1158015611266573d6000803e3d6000fd5b505050506066600183611279919061243d565b8154811061128a576112896121be565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16606682815481106112c9576112c86121be565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606680548061132357611322612471565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590556000606760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff167f0a1ee69f55c33d8467c69ca59ce2007a737a88603d75392972520bf67cb513b860405160405180910390a261140b565b808061140390612254565b915050611186565b505050565b6000606760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b606060668054806020026020016040519081016040528092919081815260200182805480156114ea57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116114a0575b5050505050905090565b60008060019054906101000a900460ff161590508080156115255750600160008054906101000a900460ff1660ff16105b80611552575061153430611a0d565b1580156115515750600160008054906101000a900460ff1660ff16145b5b611591576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161158890612512565b60405180910390fd5b60016000806101000a81548160ff021916908360ff16021790555080156115ce576001600060016101000a81548160ff0219169083151502179055505b6115d6611a30565b801561162f5760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516116269190612584565b60405180910390a15b50565b600080606680549050905060005b81811015611728576066818154811061165c5761165b6121be565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663013b7ce4878787306040518563ffffffff1660e01b81526004016116c5949392919061259f565b602060405180830381865afa1580156116e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117069190612610565b6117155760009250505061172f565b808061172090612254565b915050611640565b5060019150505b9392505050565b61173e6118c9565b606760008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166117ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117c190612689565b60405180910390fd5b6040518284823760008084836000865af16117e9573d6000803e3d6000fd5b508073ffffffffffffffffffffffffffffffffffffffff167f20d79de70adcc6e9353d8a9a5646b46dc352710d0a310b1ad1f67faeca7ef89161182c8585611a89565b60405161183991906126e4565b60405180910390a2505050565b61184e6118c9565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036118bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118b490612771565b60405180910390fd5b6118c681611947565b50565b6118d1611aa1565b73ffffffffffffffffffffffffffffffffffffffff166118ef61104c565b73ffffffffffffffffffffffffffffffffffffffff1614611945576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161193c906127dd565b60405180910390fd5b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff16611a7f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a769061286f565b60405180910390fd5b611a87611aa9565b565b600060048383905010611a9b57823590505b92915050565b600033905090565b600060019054906101000a900460ff16611af8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611aef9061286f565b60405180910390fd5b611b08611b03611aa1565b611947565b565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611b3f82611b14565b9050919050565b611b4f81611b34565b8114611b5a57600080fd5b50565b600081359050611b6c81611b46565b92915050565b600060208284031215611b8857611b87611b0a565b5b6000611b9684828501611b5d565b91505092915050565b6000819050919050565b611bb281611b9f565b8114611bbd57600080fd5b50565b600081359050611bcf81611ba9565b92915050565b60008060408385031215611bec57611beb611b0a565b5b6000611bfa85828601611b5d565b9250506020611c0b85828601611bc0565b9150509250929050565b611c1e81611b34565b82525050565b6000602082019050611c396000830184611c15565b92915050565b600080600060608486031215611c5857611c57611b0a565b5b6000611c6686828701611b5d565b9350506020611c7786828701611b5d565b9250506040611c8886828701611bc0565b9150509250925092565b60008115159050919050565b611ca781611c92565b82525050565b6000602082019050611cc26000830184611c9e565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611cfd81611b34565b82525050565b6000611d0f8383611cf4565b60208301905092915050565b6000602082019050919050565b6000611d3382611cc8565b611d3d8185611cd3565b9350611d4883611ce4565b8060005b83811015611d79578151611d608882611d03565b9750611d6b83611d1b565b925050600181019050611d4c565b5085935050505092915050565b60006020820190508181036000830152611da08184611d28565b905092915050565b600080fd5b600080fd5b600080fd5b60008083601f840112611dcd57611dcc611da8565b5b8235905067ffffffffffffffff811115611dea57611de9611dad565b5b602083019150836001820283011115611e0657611e05611db2565b5b9250929050565b600080600060408486031215611e2657611e25611b0a565b5b600084013567ffffffffffffffff811115611e4457611e43611b0f565b5b611e5086828701611db7565b93509350506020611e6386828701611b5d565b9150509250925092565b600082825260208201905092915050565b7f696e76616c696420617267756d656e74202d207a65726f206164647265737300600082015250565b6000611eb4601f83611e6d565b9150611ebf82611e7e565b602082019050919050565b60006020820190508181036000830152611ee381611ea7565b9050919050565b7f6d6f64756c6520616c726561647920626f756e64000000000000000000000000600082015250565b6000611f20601483611e6d565b9150611f2b82611eea565b602082019050919050565b60006020820190508181036000830152611f4f81611f13565b9050919050565b7f63616e6e6f7420616464206d6f7265207468616e203235206d6f64756c657300600082015250565b6000611f8c601f83611e6d565b9150611f9782611f56565b602082019050919050565b60006020820190508181036000830152611fbb81611f7f565b9050919050565b7f6f6e6c79206f776e6572206f7220746f6b656e2063616e2063616c6c00000000600082015250565b6000611ff8601c83611e6d565b915061200382611fc2565b602082019050919050565b6000602082019050818103600083015261202781611feb565b9050919050565b7f5468697320746f6b656e206973206e6f7420626f756e64000000000000000000600082015250565b6000612064601783611e6d565b915061206f8261202e565b602082019050919050565b6000602082019050818103600083015261209381612057565b9050919050565b7f6572726f72203a20746869732061646472657373206973206e6f74206120746f60008201527f6b656e20626f756e6420746f2074686520636f6d706c69616e636520636f6e7460208201527f7261637400000000000000000000000000000000000000000000000000000000604082015250565b600061211c604483611e6d565b91506121278261209a565b606082019050919050565b6000602082019050818103600083015261214b8161210f565b9050919050565b7f696e76616c696420617267756d656e74202d206e6f2076616c7565206d696e74600082015250565b6000612188602083611e6d565b915061219382612152565b602082019050919050565b600060208201905081810360008301526121b78161217b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6121f681611b9f565b82525050565b60006040820190506122116000830185611c15565b61221e60208301846121ed565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061225f82611b9f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361229157612290612225565b5b600182019050919050565b7f696e76616c696420617267756d656e74202d206e6f2076616c7565207472616e60008201527f7366657200000000000000000000000000000000000000000000000000000000602082015250565b60006122f8602483611e6d565b91506123038261229c565b604082019050919050565b60006020820190508181036000830152612327816122eb565b9050919050565b60006060820190506123436000830186611c15565b6123506020830185611c15565b61235d60408301846121ed565b949350505050565b7f696e76616c696420617267756d656e74202d206e6f2076616c7565206275726e600082015250565b600061239b602083611e6d565b91506123a682612365565b602082019050919050565b600060208201905081810360008301526123ca8161238e565b9050919050565b7f6d6f64756c65206e6f7420626f756e6400000000000000000000000000000000600082015250565b6000612407601083611e6d565b9150612412826123d1565b602082019050919050565b60006020820190508181036000830152612436816123fa565b9050919050565b600061244882611b9f565b915061245383611b9f565b925082820390508181111561246b5761246a612225565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b60006124fc602e83611e6d565b9150612507826124a0565b604082019050919050565b6000602082019050818103600083015261252b816124ef565b9050919050565b6000819050919050565b600060ff82169050919050565b6000819050919050565b600061256e61256961256484612532565b612549565b61253c565b9050919050565b61257e81612553565b82525050565b60006020820190506125996000830184612575565b92915050565b60006080820190506125b46000830187611c15565b6125c16020830186611c15565b6125ce60408301856121ed565b6125db6060830184611c15565b95945050505050565b6125ed81611c92565b81146125f857600080fd5b50565b60008151905061260a816125e4565b92915050565b60006020828403121561262657612625611b0a565b5b6000612634848285016125fb565b91505092915050565b7f63616c6c206f6e6c79206f6e20626f756e64206d6f64756c6500000000000000600082015250565b6000612673601983611e6d565b915061267e8261263d565b602082019050919050565b600060208201905081810360008301526126a281612666565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6126de816126a9565b82525050565b60006020820190506126f960008301846126d5565b92915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061275b602683611e6d565b9150612766826126ff565b604082019050919050565b6000602082019050818103600083015261278a8161274e565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006127c7602083611e6d565b91506127d282612791565b602082019050919050565b600060208201905081810360008301526127f6816127ba565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b6000612859602b83611e6d565b9150612864826127fd565b604082019050919050565b600060208201905081810360008301526128888161284c565b905091905056fea2646970667358221220c41bd18e8839c10f231112c8dab38e7542361698242bbc7605f39cfbc3c5075e64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE1C7392A GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xE1C7392A EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0xE46638E6 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0xEFB22D33 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2B3 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0xA0632461 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0xA446D49F EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0xB2494DF3 EQ PUSH2 0x23F JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x6A3EDF28 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x6A3EDF28 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x8BAF29B4 EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x8D2EA772 EQ PUSH2 0x1B9 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x1ED86F19 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x3FF5AA02 EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x40DB3B50 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x5F8DEAD3 EQ PUSH2 0x159 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x1B72 JUMP JUMPDEST PUSH2 0x2CF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x136 SWAP2 SWAP1 PUSH2 0x1B72 JUMP JUMPDEST PUSH2 0x588 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x1B72 JUMP JUMPDEST PUSH2 0x777 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x1BD5 JUMP JUMPDEST PUSH2 0x980 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17D PUSH2 0xB9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x1C24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19B PUSH2 0xBC5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x1C3F JUMP JUMPDEST PUSH2 0xBD9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0x1BD5 JUMP JUMPDEST PUSH2 0xE31 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DD PUSH2 0x104C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x1C24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x1B72 JUMP JUMPDEST PUSH2 0x1076 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x229 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x1B72 JUMP JUMPDEST PUSH2 0x1410 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x1CAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH2 0x1466 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x1D86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x265 PUSH2 0x14F4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x281 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x1C3F JUMP JUMPDEST PUSH2 0x1632 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x1CAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0x1E0D JUMP JUMPDEST PUSH2 0x1736 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x1B72 JUMP JUMPDEST PUSH2 0x1846 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D7 PUSH2 0x18C9 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x346 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33D SWAP1 PUSH2 0x1ECA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x67 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CA SWAP1 PUSH2 0x1F36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x18 PUSH1 0x66 DUP1 SLOAD SWAP1 POP GT ISZERO PUSH2 0x41C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x413 SWAP1 PUSH2 0x1FA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4A932544 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x455 SWAP2 SWAP1 PUSH2 0x1C24 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x46F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x483 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x66 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x67 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEAD6A006345DA1073A106D5F32372D2D2204F46CB0B4BCA8F5EBAFCBBED12B8A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5A7 PUSH2 0x104C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x64E JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x65 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x64D JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST PUSH2 0x68D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x684 SWAP1 PUSH2 0x200E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6FC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F3 SWAP1 PUSH2 0x1ECA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x65 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x2DE35142B19ED5A07796CF30791959C592018F70B1D2D7C460EEF8FFE713692B DUP2 PUSH1 0x40 MLOAD PUSH2 0x76C SWAP2 SWAP1 PUSH2 0x1C24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x796 PUSH2 0x104C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x7E3 JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x822 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x819 SWAP1 PUSH2 0x200E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x65 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A9 SWAP1 PUSH2 0x207A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x921 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x918 SWAP1 PUSH2 0x1ECA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x65 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH32 0x28A4CA7134A3B3F9AFF286E79AD3DAADB4A06D1B43D037A3A98BDC074EDD9B7A DUP2 PUSH1 0x40 MLOAD PUSH2 0x975 SWAP2 SWAP1 PUSH2 0x1C24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x65 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA10 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA07 SWAP1 PUSH2 0x2132 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA7F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA76 SWAP1 PUSH2 0x1ECA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xAC2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAB9 SWAP1 PUSH2 0x219E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x66 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB95 JUMPI PUSH1 0x66 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xAEB JUMPI PUSH2 0xAEA PUSH2 0x21BE JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF104A8C9 DUP6 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB50 SWAP3 SWAP2 SWAP1 PUSH2 0x21FC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB7E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0xB8D SWAP1 PUSH2 0x2254 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xACF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xBCD PUSH2 0x18C9 JUMP JUMPDEST PUSH2 0xBD7 PUSH1 0x0 PUSH2 0x1947 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x65 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC69 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC60 SWAP1 PUSH2 0x2132 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xCD3 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0xD12 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD09 SWAP1 PUSH2 0x1ECA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xD55 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD4C SWAP1 PUSH2 0x230E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x66 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE2A JUMPI PUSH1 0x66 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xD7E JUMPI PUSH2 0xD7D PUSH2 0x21BE JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2CB7E1EC DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDE5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x232E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE13 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0xE22 SWAP1 PUSH2 0x2254 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD62 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x65 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEC1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEB8 SWAP1 PUSH2 0x2132 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF30 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF27 SWAP1 PUSH2 0x1ECA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xF73 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF6A SWAP1 PUSH2 0x23B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x66 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1046 JUMPI PUSH1 0x66 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xF9C JUMPI PUSH2 0xF9B PUSH2 0x21BE JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x372491A2 DUP6 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1001 SWAP3 SWAP2 SWAP1 PUSH2 0x21FC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x101B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x102F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x103E SWAP1 PUSH2 0x2254 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xF80 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x107E PUSH2 0x18C9 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10ED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E4 SWAP1 PUSH2 0x1ECA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x67 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1179 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1170 SWAP1 PUSH2 0x241D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x66 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x140B JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x66 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x11B9 JUMPI PUSH2 0x11B8 PUSH2 0x21BE JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13F8 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x694A5FB ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1238 SWAP2 SWAP1 PUSH2 0x1C24 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1252 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1266 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x66 PUSH1 0x1 DUP4 PUSH2 0x1279 SWAP2 SWAP1 PUSH2 0x243D JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x128A JUMPI PUSH2 0x1289 PUSH2 0x21BE JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x66 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x12C9 JUMPI PUSH2 0x12C8 PUSH2 0x21BE JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x66 DUP1 SLOAD DUP1 PUSH2 0x1323 JUMPI PUSH2 0x1322 PUSH2 0x2471 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE PUSH1 0x0 PUSH1 0x67 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA1EE69F55C33D8467C69CA59CE2007A737A88603D75392972520BF67CB513B8 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x140B JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1403 SWAP1 PUSH2 0x2254 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1186 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x67 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x66 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x14EA JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x14A0 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 DUP1 ISZERO PUSH2 0x1525 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND LT JUMPDEST DUP1 PUSH2 0x1552 JUMPI POP PUSH2 0x1534 ADDRESS PUSH2 0x1A0D JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x1551 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ JUMPDEST JUMPDEST PUSH2 0x1591 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1588 SWAP1 PUSH2 0x2512 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x15CE JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x15D6 PUSH2 0x1A30 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x162F JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x1626 SWAP2 SWAP1 PUSH2 0x2584 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x66 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1728 JUMPI PUSH1 0x66 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x165C JUMPI PUSH2 0x165B PUSH2 0x21BE JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x13B7CE4 DUP8 DUP8 DUP8 ADDRESS PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16C5 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x259F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16E2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1706 SWAP2 SWAP1 PUSH2 0x2610 JUMP JUMPDEST PUSH2 0x1715 JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x172F JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1720 SWAP1 PUSH2 0x2254 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1640 JUMP JUMPDEST POP PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x173E PUSH2 0x18C9 JUMP JUMPDEST PUSH1 0x67 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x17CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17C1 SWAP1 PUSH2 0x2689 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP5 DUP3 CALLDATACOPY PUSH1 0x0 DUP1 DUP5 DUP4 PUSH1 0x0 DUP7 GAS CALL PUSH2 0x17E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x20D79DE70ADCC6E9353D8A9A5646B46DC352710D0A310B1AD1F67FAECA7EF891 PUSH2 0x182C DUP6 DUP6 PUSH2 0x1A89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1839 SWAP2 SWAP1 PUSH2 0x26E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x184E PUSH2 0x18C9 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B4 SWAP1 PUSH2 0x2771 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18C6 DUP2 PUSH2 0x1947 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x18D1 PUSH2 0x1AA1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x18EF PUSH2 0x104C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1945 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x193C SWAP1 PUSH2 0x27DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x33 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1A7F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A76 SWAP1 PUSH2 0x286F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A87 PUSH2 0x1AA9 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP4 DUP4 SWAP1 POP LT PUSH2 0x1A9B JUMPI DUP3 CALLDATALOAD SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1AF8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AEF SWAP1 PUSH2 0x286F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B08 PUSH2 0x1B03 PUSH2 0x1AA1 JUMP JUMPDEST PUSH2 0x1947 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B3F DUP3 PUSH2 0x1B14 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B4F DUP2 PUSH2 0x1B34 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B6C DUP2 PUSH2 0x1B46 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B88 JUMPI PUSH2 0x1B87 PUSH2 0x1B0A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B96 DUP5 DUP3 DUP6 ADD PUSH2 0x1B5D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BB2 DUP2 PUSH2 0x1B9F JUMP JUMPDEST DUP2 EQ PUSH2 0x1BBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BCF DUP2 PUSH2 0x1BA9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BEC JUMPI PUSH2 0x1BEB PUSH2 0x1B0A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BFA DUP6 DUP3 DUP7 ADD PUSH2 0x1B5D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C0B DUP6 DUP3 DUP7 ADD PUSH2 0x1BC0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C1E DUP2 PUSH2 0x1B34 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C39 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C15 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C58 JUMPI PUSH2 0x1C57 PUSH2 0x1B0A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C66 DUP7 DUP3 DUP8 ADD PUSH2 0x1B5D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1C77 DUP7 DUP3 DUP8 ADD PUSH2 0x1B5D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1C88 DUP7 DUP3 DUP8 ADD PUSH2 0x1BC0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CA7 DUP2 PUSH2 0x1C92 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CC2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C9E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CFD DUP2 PUSH2 0x1B34 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D0F DUP4 DUP4 PUSH2 0x1CF4 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D33 DUP3 PUSH2 0x1CC8 JUMP JUMPDEST PUSH2 0x1D3D DUP2 DUP6 PUSH2 0x1CD3 JUMP JUMPDEST SWAP4 POP PUSH2 0x1D48 DUP4 PUSH2 0x1CE4 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D79 JUMPI DUP2 MLOAD PUSH2 0x1D60 DUP9 DUP3 PUSH2 0x1D03 JUMP JUMPDEST SWAP8 POP PUSH2 0x1D6B DUP4 PUSH2 0x1D1B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1D4C JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DA0 DUP2 DUP5 PUSH2 0x1D28 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1DCD JUMPI PUSH2 0x1DCC PUSH2 0x1DA8 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DEA JUMPI PUSH2 0x1DE9 PUSH2 0x1DAD JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1E06 JUMPI PUSH2 0x1E05 PUSH2 0x1DB2 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E26 JUMPI PUSH2 0x1E25 PUSH2 0x1B0A JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E44 JUMPI PUSH2 0x1E43 PUSH2 0x1B0F JUMP JUMPDEST JUMPDEST PUSH2 0x1E50 DUP7 DUP3 DUP8 ADD PUSH2 0x1DB7 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x20 PUSH2 0x1E63 DUP7 DUP3 DUP8 ADD PUSH2 0x1B5D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x696E76616C696420617267756D656E74202D207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EB4 PUSH1 0x1F DUP4 PUSH2 0x1E6D JUMP JUMPDEST SWAP2 POP PUSH2 0x1EBF DUP3 PUSH2 0x1E7E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EE3 DUP2 PUSH2 0x1EA7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6D6F64756C6520616C726561647920626F756E64000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F20 PUSH1 0x14 DUP4 PUSH2 0x1E6D JUMP JUMPDEST SWAP2 POP PUSH2 0x1F2B DUP3 PUSH2 0x1EEA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F4F DUP2 PUSH2 0x1F13 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x63616E6E6F7420616464206D6F7265207468616E203235206D6F64756C657300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F8C PUSH1 0x1F DUP4 PUSH2 0x1E6D JUMP JUMPDEST SWAP2 POP PUSH2 0x1F97 DUP3 PUSH2 0x1F56 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FBB DUP2 PUSH2 0x1F7F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6F6E6C79206F776E6572206F7220746F6B656E2063616E2063616C6C00000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FF8 PUSH1 0x1C DUP4 PUSH2 0x1E6D JUMP JUMPDEST SWAP2 POP PUSH2 0x2003 DUP3 PUSH2 0x1FC2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2027 DUP2 PUSH2 0x1FEB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5468697320746F6B656E206973206E6F7420626F756E64000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2064 PUSH1 0x17 DUP4 PUSH2 0x1E6D JUMP JUMPDEST SWAP2 POP PUSH2 0x206F DUP3 PUSH2 0x202E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2093 DUP2 PUSH2 0x2057 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6572726F72203A20746869732061646472657373206973206E6F74206120746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E20626F756E6420746F2074686520636F6D706C69616E636520636F6E74 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x7261637400000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x211C PUSH1 0x44 DUP4 PUSH2 0x1E6D JUMP JUMPDEST SWAP2 POP PUSH2 0x2127 DUP3 PUSH2 0x209A JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x214B DUP2 PUSH2 0x210F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E76616C696420617267756D656E74202D206E6F2076616C7565206D696E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2188 PUSH1 0x20 DUP4 PUSH2 0x1E6D JUMP JUMPDEST SWAP2 POP PUSH2 0x2193 DUP3 PUSH2 0x2152 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21B7 DUP2 PUSH2 0x217B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x21F6 DUP2 PUSH2 0x1B9F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2211 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1C15 JUMP JUMPDEST PUSH2 0x221E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x21ED JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x225F DUP3 PUSH2 0x1B9F JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2291 JUMPI PUSH2 0x2290 PUSH2 0x2225 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E76616C696420617267756D656E74202D206E6F2076616C7565207472616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7366657200000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22F8 PUSH1 0x24 DUP4 PUSH2 0x1E6D JUMP JUMPDEST SWAP2 POP PUSH2 0x2303 DUP3 PUSH2 0x229C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2327 DUP2 PUSH2 0x22EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2343 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1C15 JUMP JUMPDEST PUSH2 0x2350 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1C15 JUMP JUMPDEST PUSH2 0x235D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x21ED JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x696E76616C696420617267756D656E74202D206E6F2076616C7565206275726E PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x239B PUSH1 0x20 DUP4 PUSH2 0x1E6D JUMP JUMPDEST SWAP2 POP PUSH2 0x23A6 DUP3 PUSH2 0x2365 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23CA DUP2 PUSH2 0x238E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6D6F64756C65206E6F7420626F756E6400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2407 PUSH1 0x10 DUP4 PUSH2 0x1E6D JUMP JUMPDEST SWAP2 POP PUSH2 0x2412 DUP3 PUSH2 0x23D1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2436 DUP2 PUSH2 0x23FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2448 DUP3 PUSH2 0x1B9F JUMP JUMPDEST SWAP2 POP PUSH2 0x2453 DUP4 PUSH2 0x1B9F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x246B JUMPI PUSH2 0x246A PUSH2 0x2225 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24FC PUSH1 0x2E DUP4 PUSH2 0x1E6D JUMP JUMPDEST SWAP2 POP PUSH2 0x2507 DUP3 PUSH2 0x24A0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x252B DUP2 PUSH2 0x24EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x256E PUSH2 0x2569 PUSH2 0x2564 DUP5 PUSH2 0x2532 JUMP JUMPDEST PUSH2 0x2549 JUMP JUMPDEST PUSH2 0x253C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x257E DUP2 PUSH2 0x2553 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2599 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2575 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x25B4 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1C15 JUMP JUMPDEST PUSH2 0x25C1 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1C15 JUMP JUMPDEST PUSH2 0x25CE PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x21ED JUMP JUMPDEST PUSH2 0x25DB PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1C15 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x25ED DUP2 PUSH2 0x1C92 JUMP JUMPDEST DUP2 EQ PUSH2 0x25F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x260A DUP2 PUSH2 0x25E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2626 JUMPI PUSH2 0x2625 PUSH2 0x1B0A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2634 DUP5 DUP3 DUP6 ADD PUSH2 0x25FB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x63616C6C206F6E6C79206F6E20626F756E64206D6F64756C6500000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2673 PUSH1 0x19 DUP4 PUSH2 0x1E6D JUMP JUMPDEST SWAP2 POP PUSH2 0x267E DUP3 PUSH2 0x263D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26A2 DUP2 PUSH2 0x2666 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26DE DUP2 PUSH2 0x26A9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x26F9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x26D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x275B PUSH1 0x26 DUP4 PUSH2 0x1E6D JUMP JUMPDEST SWAP2 POP PUSH2 0x2766 DUP3 PUSH2 0x26FF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x278A DUP2 PUSH2 0x274E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27C7 PUSH1 0x20 DUP4 PUSH2 0x1E6D JUMP JUMPDEST SWAP2 POP PUSH2 0x27D2 DUP3 PUSH2 0x2791 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x27F6 DUP2 PUSH2 0x27BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2859 PUSH1 0x2B DUP4 PUSH2 0x1E6D JUMP JUMPDEST SWAP2 POP PUSH2 0x2864 DUP3 PUSH2 0x27FD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2888 DUP2 PUSH2 0x284C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 SHL 0xD1 DUP15 DUP9 CODECOPY 0xC1 0xF 0x23 GT SLT 0xC8 0xDA 0xB3 DUP15 PUSH22 0x42361698242BBC7605F39CFBC3C5075E64736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "326:5287:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1487:455;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;675:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1110:369;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3090:387;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4887:103;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2064:101:4;;;:::i;:::-;;2601:481:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3485:395;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1441:85:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1950:643:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4640:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4773:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;595:72;;;:::i;:::-;;4998:370;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3888:744;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2314:198:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1487:455:11;1334:13:4;:11;:13::i;:::-;1589:1:11::1;1570:21;;:7;:21;;::::0;1562:65:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1647:12;:21;1660:7;1647:21;;;;;;;;;;;;;;;;;;;;;;;;;1646:22;1638:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;1731:2;1712:8;:15;;;;:21;;1704:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;1788:7;1780:31;;;1820:4;1780:46;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1837:8;1851:7;1837:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1894:4;1870:12;:21;1883:7;1870:21;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;1926:7;1914:20;;;;;;;;;;;;1487:455:::0;:::o;675:427::-;758:10;747:21;;:7;:5;:7::i;:::-;:21;;;:76;;;;796:1;773:25;;:11;;;;;;;;;;;:25;;;:49;;;;;816:6;802:20;;:10;:20;;;773:49;747:76;739:126;;;;;;;;;;;;:::i;:::-;;;;;;;;;902:1;884:20;;:6;:20;;;876:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;965:6;951:11;;:20;;;;;;;;;;;;;;;;;;1076:18;1087:6;1076:18;;;;;;:::i;:::-;;;;;;;;675:427;:::o;1110:369::-;1195:10;1184:21;;:7;:5;:7::i;:::-;:21;;;:45;;;;1223:6;1209:20;;:10;:20;;;1184:45;1176:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;1292:11;;;;;;;;;;;1282:21;;:6;:21;;;1274:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;1368:1;1350:20;;:6;:20;;;1342:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;1424:11;;1417:18;;;;;;;;;;;1451:20;1464:6;1451:20;;;;;;:::i;:::-;;;;;;;;1110:369;:::o;3090:387::-;483:11;;;;;;;;;;;469:25;;:10;:25;;;461:106;;;;;;;;;;;;:::i;:::-;;;;;;;;;3198:1:::1;3183:17;;:3;:17;;::::0;3175:61:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;3264:1;3255:6;:10;3247:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;3313:14;3330:8;:15;;;;3313:32;;3361:9;3356:114;3380:6;3376:1;:10;3356:114;;;3416:8;3425:1;3416:11;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3408:37;;;3446:3;3451:6;3408:50;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3388:3;;;;;:::i;:::-;;;;3356:114;;;;3164:313;3090:387:::0;;:::o;4887:103::-;4944:7;4971:11;;;;;;;;;;;4964:18;;4887:103;:::o;2064:101:4:-;1334:13;:11;:13::i;:::-;2128:30:::1;2155:1;2128:18;:30::i;:::-;2064:101::o:0;2601:481:11:-;483:11;;;;;;;;;;;469:25;;:10;:25;;;461:106;;;;;;;;;;;;:::i;:::-;;;;;;;;;2744:1:::1;2727:19;;:5;:19;;;;:53;;;;;2778:1;2763:17;;:3;:17;;;;2727:53;2705:121;;;;;;;;;;;;:::i;:::-;;;;;;;;;2854:1;2845:6;:10;2837:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;2907:14;2924:8;:15;;;;2907:32;;2955:9;2950:125;2974:6;2970:1;:10;2950:125;;;3010:8;3019:1;3010:11;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3002:41;;;3044:5;3051:3;3056:6;3002:61;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2982:3;;;;;:::i;:::-;;;;2950:125;;;;2694:388;2601:481:::0;;;:::o;3485:395::-;483:11;;;;;;;;;;;469:25;;:10;:25;;;461:106;;;;;;;;;;;;:::i;:::-;;;;;;;;;3599:1:::1;3582:19;;:5;:19;;::::0;3574:63:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;3665:1;3656:6;:10;3648:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;3714:14;3731:8;:15;;;;3714:32;;3762:9;3757:116;3781:6;3777:1;:10;3757:116;;;3817:8;3826:1;3817:11;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3809:37;;;3847:5;3854:6;3809:52;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3789:3;;;;;:::i;:::-;;;;3757:116;;;;3563:317;3485:395:::0;;:::o;1441:85:4:-;1487:7;1513:6;;;;;;;;;;;1506:13;;1441:85;:::o;1950:643:11:-;1334:13:4;:11;:13::i;:::-;2055:1:11::1;2036:21;;:7;:21;;::::0;2028:65:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2112:12;:21;2125:7;2112:21;;;;;;;;;;;;;;;;;;;;;;;;;2104:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;2165:14;2182:8;:15;;;;2165:32;;2213:9;2208:378;2232:6;2228:1;:10;2208:378;;;2279:7;2264:22;;:8;2273:1;2264:11;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:22;;::::0;2260:315:::1;;2315:7;2307:33;;;2349:4;2307:48;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2388:8;2406:1;2397:6;:10;;;;:::i;:::-;2388:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2374:8;2383:1;2374:11;;;;;;;;:::i;:::-;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;2427:8;:14;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;2484:5;2460:12;:21;2473:7;2460:21;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;2527:7;2513:22;;;;;;;;;;;;2554:5;;2260:315;2240:3;;;;;:::i;:::-;;;;2208:378;;;;2017:576;1950:643:::0;:::o;4640:125::-;4712:4;4736:12;:21;4749:7;4736:21;;;;;;;;;;;;;;;;;;;;;;;;;4729:28;;4640:125;;;:::o;4773:106::-;4827:16;4863:8;4856:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4773:106;:::o;595:72::-;3279:19:5;3302:13;;;;;;;;;;;3301:14;3279:36;;3347:14;:34;;;;;3380:1;3365:12;;;;;;;;;;:16;;;3347:34;3346:108;;;;3388:44;3426:4;3388:29;:44::i;:::-;3387:45;:66;;;;;3452:1;3436:12;;;;;;;;;;:17;;;3387:66;3346:108;3325:201;;;;;;;;;;;;:::i;:::-;;;;;;;;;3551:1;3536:12;;:16;;;;;;;;;;;;;;;;;;3566:14;3562:65;;;3612:4;3596:13;;:20;;;;;;;;;;;;;;;;;;3562:65;643:16:11::1;:14;:16::i;:::-;3651:14:5::0;3647:99;;;3697:5;3681:13;;:21;;;;;;;;;;;;;;;;;;3721:14;3733:1;3721:14;;;;;;:::i;:::-;;;;;;;;3647:99;3269:483;595:72:11:o;4998:370::-;5095:4;5112:14;5129:8;:15;;;;5112:32;;5160:9;5155:184;5179:6;5175:1;:10;5155:184;;;5220:8;5229:1;5220:11;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5212:32;;;5245:5;5252:3;5257:6;5273:4;5212:67;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5207:121;;5307:5;5300:12;;;;;;5207:121;5187:3;;;;;:::i;:::-;;;;5155:184;;;;5356:4;5349:11;;;4998:370;;;;;;:::o;3888:744::-;1334:13:4;:11;:13::i;:::-;4005:12:11::1;:21;4018:7;4005:21;;;;;;;;;;;;;;;;;;;;;;;;;3997:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;4122:4;4116:11;4190:15;4173;4154:17;4141:65;4399:1;4383::::0;4353:15:::1;4321:17;4305:1;4283:7;4263:5;4244:171;4220:327;;4470:16;4467:1;4464::::0;4449:38:::1;4515:16;4512:1;4505:27;4220:327;4076:482;4593:7;4575:47;;;4602:19;4612:8;;4602:9;:19::i;:::-;4575:47;;;;;;:::i;:::-;;;;;;;;3888:744:::0;;;:::o;2314:198:4:-;1334:13;:11;:13::i;:::-;2422:1:::1;2402:22;;:8;:22;;::::0;2394:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2477:28;2496:8;2477:18;:28::i;:::-;2314:198:::0;:::o;1599:130::-;1673:12;:10;:12::i;:::-;1662:23;;:7;:5;:7::i;:::-;:23;;;1654:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1599:130::o;2666:187::-;2739:16;2758:6;;;;;;;;;;;2739:25;;2783:8;2774:6;;:17;;;;;;;;;;;;;;;;;;2837:8;2806:40;;2827:8;2806:40;;;;;;;;;;;;2729:124;2666:187;:::o;1423:320:6:-;1483:4;1735:1;1713:7;:19;;;:23;1706:30;;1423:320;;;:::o;1003:95:4:-;5374:13:5;;;;;;;;;;;5366:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1065:26:4::1;:24;:26::i;:::-;1003:95::o:0;5376:234:11:-;5443:13;5492:1;5473:8;;:15;;:20;5469:134;;5561:15;5548:29;5538:39;;5469:134;5376:234;;;;:::o;850:96:7:-;903:7;929:10;922:17;;850:96;:::o;1104:111:4:-;5374:13:5;;;;;;;;;;;5366:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1176:32:4::1;1195:12;:10;:12::i;:::-;1176:18;:32::i;:::-;1104:111::o:0;88:117:19:-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:122::-;1332:24;1350:5;1332:24;:::i;:::-;1325:5;1322:35;1312:63;;1371:1;1368;1361:12;1312:63;1259:122;:::o;1387:139::-;1433:5;1471:6;1458:20;1449:29;;1487:33;1514:5;1487:33;:::i;:::-;1387:139;;;;:::o;1532:474::-;1600:6;1608;1657:2;1645:9;1636:7;1632:23;1628:32;1625:119;;;1663:79;;:::i;:::-;1625:119;1783:1;1808:53;1853:7;1844:6;1833:9;1829:22;1808:53;:::i;:::-;1798:63;;1754:117;1910:2;1936:53;1981:7;1972:6;1961:9;1957:22;1936:53;:::i;:::-;1926:63;;1881:118;1532:474;;;;;:::o;2012:118::-;2099:24;2117:5;2099:24;:::i;:::-;2094:3;2087:37;2012:118;;:::o;2136:222::-;2229:4;2267:2;2256:9;2252:18;2244:26;;2280:71;2348:1;2337:9;2333:17;2324:6;2280:71;:::i;:::-;2136:222;;;;:::o;2364:619::-;2441:6;2449;2457;2506:2;2494:9;2485:7;2481:23;2477:32;2474:119;;;2512:79;;:::i;:::-;2474:119;2632:1;2657:53;2702:7;2693:6;2682:9;2678:22;2657:53;:::i;:::-;2647:63;;2603:117;2759:2;2785:53;2830:7;2821:6;2810:9;2806:22;2785:53;:::i;:::-;2775:63;;2730:118;2887:2;2913:53;2958:7;2949:6;2938:9;2934:22;2913:53;:::i;:::-;2903:63;;2858:118;2364:619;;;;;:::o;2989:90::-;3023:7;3066:5;3059:13;3052:21;3041:32;;2989:90;;;:::o;3085:109::-;3166:21;3181:5;3166:21;:::i;:::-;3161:3;3154:34;3085:109;;:::o;3200:210::-;3287:4;3325:2;3314:9;3310:18;3302:26;;3338:65;3400:1;3389:9;3385:17;3376:6;3338:65;:::i;:::-;3200:210;;;;:::o;3416:114::-;3483:6;3517:5;3511:12;3501:22;;3416:114;;;:::o;3536:184::-;3635:11;3669:6;3664:3;3657:19;3709:4;3704:3;3700:14;3685:29;;3536:184;;;;:::o;3726:132::-;3793:4;3816:3;3808:11;;3846:4;3841:3;3837:14;3829:22;;3726:132;;;:::o;3864:108::-;3941:24;3959:5;3941:24;:::i;:::-;3936:3;3929:37;3864:108;;:::o;3978:179::-;4047:10;4068:46;4110:3;4102:6;4068:46;:::i;:::-;4146:4;4141:3;4137:14;4123:28;;3978:179;;;;:::o;4163:113::-;4233:4;4265;4260:3;4256:14;4248:22;;4163:113;;;:::o;4312:732::-;4431:3;4460:54;4508:5;4460:54;:::i;:::-;4530:86;4609:6;4604:3;4530:86;:::i;:::-;4523:93;;4640:56;4690:5;4640:56;:::i;:::-;4719:7;4750:1;4735:284;4760:6;4757:1;4754:13;4735:284;;;4836:6;4830:13;4863:63;4922:3;4907:13;4863:63;:::i;:::-;4856:70;;4949:60;5002:6;4949:60;:::i;:::-;4939:70;;4795:224;4782:1;4779;4775:9;4770:14;;4735:284;;;4739:14;5035:3;5028:10;;4436:608;;;4312:732;;;;:::o;5050:373::-;5193:4;5231:2;5220:9;5216:18;5208:26;;5280:9;5274:4;5270:20;5266:1;5255:9;5251:17;5244:47;5308:108;5411:4;5402:6;5308:108;:::i;:::-;5300:116;;5050:373;;;;:::o;5429:117::-;5538:1;5535;5528:12;5552:117;5661:1;5658;5651:12;5675:117;5784:1;5781;5774:12;5811:552;5868:8;5878:6;5928:3;5921:4;5913:6;5909:17;5905:27;5895:122;;5936:79;;:::i;:::-;5895:122;6049:6;6036:20;6026:30;;6079:18;6071:6;6068:30;6065:117;;;6101:79;;:::i;:::-;6065:117;6215:4;6207:6;6203:17;6191:29;;6269:3;6261:4;6253:6;6249:17;6239:8;6235:32;6232:41;6229:128;;;6276:79;;:::i;:::-;6229:128;5811:552;;;;;:::o;6369:672::-;6448:6;6456;6464;6513:2;6501:9;6492:7;6488:23;6484:32;6481:119;;;6519:79;;:::i;:::-;6481:119;6667:1;6656:9;6652:17;6639:31;6697:18;6689:6;6686:30;6683:117;;;6719:79;;:::i;:::-;6683:117;6832:64;6888:7;6879:6;6868:9;6864:22;6832:64;:::i;:::-;6814:82;;;;6610:296;6945:2;6971:53;7016:7;7007:6;6996:9;6992:22;6971:53;:::i;:::-;6961:63;;6916:118;6369:672;;;;;:::o;7047:169::-;7131:11;7165:6;7160:3;7153:19;7205:4;7200:3;7196:14;7181:29;;7047:169;;;;:::o;7222:181::-;7362:33;7358:1;7350:6;7346:14;7339:57;7222:181;:::o;7409:366::-;7551:3;7572:67;7636:2;7631:3;7572:67;:::i;:::-;7565:74;;7648:93;7737:3;7648:93;:::i;:::-;7766:2;7761:3;7757:12;7750:19;;7409:366;;;:::o;7781:419::-;7947:4;7985:2;7974:9;7970:18;7962:26;;8034:9;8028:4;8024:20;8020:1;8009:9;8005:17;7998:47;8062:131;8188:4;8062:131;:::i;:::-;8054:139;;7781:419;;;:::o;8206:170::-;8346:22;8342:1;8334:6;8330:14;8323:46;8206:170;:::o;8382:366::-;8524:3;8545:67;8609:2;8604:3;8545:67;:::i;:::-;8538:74;;8621:93;8710:3;8621:93;:::i;:::-;8739:2;8734:3;8730:12;8723:19;;8382:366;;;:::o;8754:419::-;8920:4;8958:2;8947:9;8943:18;8935:26;;9007:9;9001:4;8997:20;8993:1;8982:9;8978:17;8971:47;9035:131;9161:4;9035:131;:::i;:::-;9027:139;;8754:419;;;:::o;9179:181::-;9319:33;9315:1;9307:6;9303:14;9296:57;9179:181;:::o;9366:366::-;9508:3;9529:67;9593:2;9588:3;9529:67;:::i;:::-;9522:74;;9605:93;9694:3;9605:93;:::i;:::-;9723:2;9718:3;9714:12;9707:19;;9366:366;;;:::o;9738:419::-;9904:4;9942:2;9931:9;9927:18;9919:26;;9991:9;9985:4;9981:20;9977:1;9966:9;9962:17;9955:47;10019:131;10145:4;10019:131;:::i;:::-;10011:139;;9738:419;;;:::o;10163:178::-;10303:30;10299:1;10291:6;10287:14;10280:54;10163:178;:::o;10347:366::-;10489:3;10510:67;10574:2;10569:3;10510:67;:::i;:::-;10503:74;;10586:93;10675:3;10586:93;:::i;:::-;10704:2;10699:3;10695:12;10688:19;;10347:366;;;:::o;10719:419::-;10885:4;10923:2;10912:9;10908:18;10900:26;;10972:9;10966:4;10962:20;10958:1;10947:9;10943:17;10936:47;11000:131;11126:4;11000:131;:::i;:::-;10992:139;;10719:419;;;:::o;11144:173::-;11284:25;11280:1;11272:6;11268:14;11261:49;11144:173;:::o;11323:366::-;11465:3;11486:67;11550:2;11545:3;11486:67;:::i;:::-;11479:74;;11562:93;11651:3;11562:93;:::i;:::-;11680:2;11675:3;11671:12;11664:19;;11323:366;;;:::o;11695:419::-;11861:4;11899:2;11888:9;11884:18;11876:26;;11948:9;11942:4;11938:20;11934:1;11923:9;11919:17;11912:47;11976:131;12102:4;11976:131;:::i;:::-;11968:139;;11695:419;;;:::o;12120:292::-;12260:34;12256:1;12248:6;12244:14;12237:58;12329:34;12324:2;12316:6;12312:15;12305:59;12398:6;12393:2;12385:6;12381:15;12374:31;12120:292;:::o;12418:366::-;12560:3;12581:67;12645:2;12640:3;12581:67;:::i;:::-;12574:74;;12657:93;12746:3;12657:93;:::i;:::-;12775:2;12770:3;12766:12;12759:19;;12418:366;;;:::o;12790:419::-;12956:4;12994:2;12983:9;12979:18;12971:26;;13043:9;13037:4;13033:20;13029:1;13018:9;13014:17;13007:47;13071:131;13197:4;13071:131;:::i;:::-;13063:139;;12790:419;;;:::o;13215:182::-;13355:34;13351:1;13343:6;13339:14;13332:58;13215:182;:::o;13403:366::-;13545:3;13566:67;13630:2;13625:3;13566:67;:::i;:::-;13559:74;;13642:93;13731:3;13642:93;:::i;:::-;13760:2;13755:3;13751:12;13744:19;;13403:366;;;:::o;13775:419::-;13941:4;13979:2;13968:9;13964:18;13956:26;;14028:9;14022:4;14018:20;14014:1;14003:9;13999:17;13992:47;14056:131;14182:4;14056:131;:::i;:::-;14048:139;;13775:419;;;:::o;14200:180::-;14248:77;14245:1;14238:88;14345:4;14342:1;14335:15;14369:4;14366:1;14359:15;14386:118;14473:24;14491:5;14473:24;:::i;:::-;14468:3;14461:37;14386:118;;:::o;14510:332::-;14631:4;14669:2;14658:9;14654:18;14646:26;;14682:71;14750:1;14739:9;14735:17;14726:6;14682:71;:::i;:::-;14763:72;14831:2;14820:9;14816:18;14807:6;14763:72;:::i;:::-;14510:332;;;;;:::o;14848:180::-;14896:77;14893:1;14886:88;14993:4;14990:1;14983:15;15017:4;15014:1;15007:15;15034:233;15073:3;15096:24;15114:5;15096:24;:::i;:::-;15087:33;;15142:66;15135:5;15132:77;15129:103;;15212:18;;:::i;:::-;15129:103;15259:1;15252:5;15248:13;15241:20;;15034:233;;;:::o;15273:223::-;15413:34;15409:1;15401:6;15397:14;15390:58;15482:6;15477:2;15469:6;15465:15;15458:31;15273:223;:::o;15502:366::-;15644:3;15665:67;15729:2;15724:3;15665:67;:::i;:::-;15658:74;;15741:93;15830:3;15741:93;:::i;:::-;15859:2;15854:3;15850:12;15843:19;;15502:366;;;:::o;15874:419::-;16040:4;16078:2;16067:9;16063:18;16055:26;;16127:9;16121:4;16117:20;16113:1;16102:9;16098:17;16091:47;16155:131;16281:4;16155:131;:::i;:::-;16147:139;;15874:419;;;:::o;16299:442::-;16448:4;16486:2;16475:9;16471:18;16463:26;;16499:71;16567:1;16556:9;16552:17;16543:6;16499:71;:::i;:::-;16580:72;16648:2;16637:9;16633:18;16624:6;16580:72;:::i;:::-;16662;16730:2;16719:9;16715:18;16706:6;16662:72;:::i;:::-;16299:442;;;;;;:::o;16747:182::-;16887:34;16883:1;16875:6;16871:14;16864:58;16747:182;:::o;16935:366::-;17077:3;17098:67;17162:2;17157:3;17098:67;:::i;:::-;17091:74;;17174:93;17263:3;17174:93;:::i;:::-;17292:2;17287:3;17283:12;17276:19;;16935:366;;;:::o;17307:419::-;17473:4;17511:2;17500:9;17496:18;17488:26;;17560:9;17554:4;17550:20;17546:1;17535:9;17531:17;17524:47;17588:131;17714:4;17588:131;:::i;:::-;17580:139;;17307:419;;;:::o;17732:166::-;17872:18;17868:1;17860:6;17856:14;17849:42;17732:166;:::o;17904:366::-;18046:3;18067:67;18131:2;18126:3;18067:67;:::i;:::-;18060:74;;18143:93;18232:3;18143:93;:::i;:::-;18261:2;18256:3;18252:12;18245:19;;17904:366;;;:::o;18276:419::-;18442:4;18480:2;18469:9;18465:18;18457:26;;18529:9;18523:4;18519:20;18515:1;18504:9;18500:17;18493:47;18557:131;18683:4;18557:131;:::i;:::-;18549:139;;18276:419;;;:::o;18701:194::-;18741:4;18761:20;18779:1;18761:20;:::i;:::-;18756:25;;18795:20;18813:1;18795:20;:::i;:::-;18790:25;;18839:1;18836;18832:9;18824:17;;18863:1;18857:4;18854:11;18851:37;;;18868:18;;:::i;:::-;18851:37;18701:194;;;;:::o;18901:180::-;18949:77;18946:1;18939:88;19046:4;19043:1;19036:15;19070:4;19067:1;19060:15;19087:233;19227:34;19223:1;19215:6;19211:14;19204:58;19296:16;19291:2;19283:6;19279:15;19272:41;19087:233;:::o;19326:366::-;19468:3;19489:67;19553:2;19548:3;19489:67;:::i;:::-;19482:74;;19565:93;19654:3;19565:93;:::i;:::-;19683:2;19678:3;19674:12;19667:19;;19326:366;;;:::o;19698:419::-;19864:4;19902:2;19891:9;19887:18;19879:26;;19951:9;19945:4;19941:20;19937:1;19926:9;19922:17;19915:47;19979:131;20105:4;19979:131;:::i;:::-;19971:139;;19698:419;;;:::o;20123:85::-;20168:7;20197:5;20186:16;;20123:85;;;:::o;20214:86::-;20249:7;20289:4;20282:5;20278:16;20267:27;;20214:86;;;:::o;20306:60::-;20334:3;20355:5;20348:12;;20306:60;;;:::o;20372:154::-;20428:9;20461:59;20477:42;20486:32;20512:5;20486:32;:::i;:::-;20477:42;:::i;:::-;20461:59;:::i;:::-;20448:72;;20372:154;;;:::o;20532:143::-;20625:43;20662:5;20625:43;:::i;:::-;20620:3;20613:56;20532:143;;:::o;20681:234::-;20780:4;20818:2;20807:9;20803:18;20795:26;;20831:77;20905:1;20894:9;20890:17;20881:6;20831:77;:::i;:::-;20681:234;;;;:::o;20921:553::-;21098:4;21136:3;21125:9;21121:19;21113:27;;21150:71;21218:1;21207:9;21203:17;21194:6;21150:71;:::i;:::-;21231:72;21299:2;21288:9;21284:18;21275:6;21231:72;:::i;:::-;21313;21381:2;21370:9;21366:18;21357:6;21313:72;:::i;:::-;21395;21463:2;21452:9;21448:18;21439:6;21395:72;:::i;:::-;20921:553;;;;;;;:::o;21480:116::-;21550:21;21565:5;21550:21;:::i;:::-;21543:5;21540:32;21530:60;;21586:1;21583;21576:12;21530:60;21480:116;:::o;21602:137::-;21656:5;21687:6;21681:13;21672:22;;21703:30;21727:5;21703:30;:::i;:::-;21602:137;;;;:::o;21745:345::-;21812:6;21861:2;21849:9;21840:7;21836:23;21832:32;21829:119;;;21867:79;;:::i;:::-;21829:119;21987:1;22012:61;22065:7;22056:6;22045:9;22041:22;22012:61;:::i;:::-;22002:71;;21958:125;21745:345;;;;:::o;22096:175::-;22236:27;22232:1;22224:6;22220:14;22213:51;22096:175;:::o;22277:366::-;22419:3;22440:67;22504:2;22499:3;22440:67;:::i;:::-;22433:74;;22516:93;22605:3;22516:93;:::i;:::-;22634:2;22629:3;22625:12;22618:19;;22277:366;;;:::o;22649:419::-;22815:4;22853:2;22842:9;22838:18;22830:26;;22902:9;22896:4;22892:20;22888:1;22877:9;22873:17;22866:47;22930:131;23056:4;22930:131;:::i;:::-;22922:139;;22649:419;;;:::o;23074:149::-;23110:7;23150:66;23143:5;23139:78;23128:89;;23074:149;;;:::o;23229:115::-;23314:23;23331:5;23314:23;:::i;:::-;23309:3;23302:36;23229:115;;:::o;23350:218::-;23441:4;23479:2;23468:9;23464:18;23456:26;;23492:69;23558:1;23547:9;23543:17;23534:6;23492:69;:::i;:::-;23350:218;;;;:::o;23574:225::-;23714:34;23710:1;23702:6;23698:14;23691:58;23783:8;23778:2;23770:6;23766:15;23759:33;23574:225;:::o;23805:366::-;23947:3;23968:67;24032:2;24027:3;23968:67;:::i;:::-;23961:74;;24044:93;24133:3;24044:93;:::i;:::-;24162:2;24157:3;24153:12;24146:19;;23805:366;;;:::o;24177:419::-;24343:4;24381:2;24370:9;24366:18;24358:26;;24430:9;24424:4;24420:20;24416:1;24405:9;24401:17;24394:47;24458:131;24584:4;24458:131;:::i;:::-;24450:139;;24177:419;;;:::o;24602:182::-;24742:34;24738:1;24730:6;24726:14;24719:58;24602:182;:::o;24790:366::-;24932:3;24953:67;25017:2;25012:3;24953:67;:::i;:::-;24946:74;;25029:93;25118:3;25029:93;:::i;:::-;25147:2;25142:3;25138:12;25131:19;;24790:366;;;:::o;25162:419::-;25328:4;25366:2;25355:9;25351:18;25343:26;;25415:9;25409:4;25405:20;25401:1;25390:9;25386:17;25379:47;25443:131;25569:4;25443:131;:::i;:::-;25435:139;;25162:419;;;:::o;25587:230::-;25727:34;25723:1;25715:6;25711:14;25704:58;25796:13;25791:2;25783:6;25779:15;25772:38;25587:230;:::o;25823:366::-;25965:3;25986:67;26050:2;26045:3;25986:67;:::i;:::-;25979:74;;26062:93;26151:3;26062:93;:::i;:::-;26180:2;26175:3;26171:12;26164:19;;25823:366;;;:::o;26195:419::-;26361:4;26399:2;26388:9;26384:18;26376:26;;26448:9;26442:4;26438:20;26434:1;26423:9;26419:17;26412:47;26476:131;26602:4;26476:131;:::i;:::-;26468:139;;26195:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2087400",
								"executionCost": "2221",
								"totalCost": "2089621"
							},
							"external": {
								"addModule(address)": "infinite",
								"bindToken(address)": "infinite",
								"callModuleFunction(bytes,address)": "infinite",
								"canTransfer(address,address,uint256)": "infinite",
								"created(address,uint256)": "infinite",
								"destroyed(address,uint256)": "infinite",
								"getModules()": "infinite",
								"getTokenBound()": "2545",
								"init()": "116149",
								"isModuleBound(address)": "2950",
								"owner()": "2545",
								"removeModule(address)": "infinite",
								"renounceOwnership()": "30443",
								"transferOwnership(address)": "30832",
								"transferred(address,address,uint256)": "infinite",
								"unbindToken(address)": "infinite"
							},
							"internal": {
								"_selector(bytes calldata)": "64"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 326,
									"end": 5613,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 326,
									"end": 5613,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 326,
									"end": 5613,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 326,
									"end": 5613,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 326,
									"end": 5613,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 326,
									"end": 5613,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 326,
									"end": 5613,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 326,
									"end": 5613,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 326,
									"end": 5613,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 326,
									"end": 5613,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 326,
									"end": 5613,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 326,
									"end": 5613,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 326,
									"end": 5613,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 326,
									"end": 5613,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 326,
									"end": 5613,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 326,
									"end": 5613,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 326,
									"end": 5613,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 326,
									"end": 5613,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 326,
									"end": 5613,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 326,
									"end": 5613,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 326,
									"end": 5613,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c41bd18e8839c10f231112c8dab38e7542361698242bbc7605f39cfbc3c5075e64736f6c63430008110033",
									".code": [
										{
											"begin": 326,
											"end": 5613,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "PUSH",
											"source": 11,
											"value": "8DA5CB5B"
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "PUSH",
											"source": 11,
											"value": "E1C7392A"
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "PUSH",
											"source": 11,
											"value": "E1C7392A"
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "PUSH",
											"source": 11,
											"value": "E46638E6"
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "PUSH",
											"source": 11,
											"value": "EFB22D33"
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "PUSH",
											"source": 11,
											"value": "F2FDE38B"
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "PUSH",
											"source": 11,
											"value": "8DA5CB5B"
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "PUSH",
											"source": 11,
											"value": "A0632461"
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "PUSH",
											"source": 11,
											"value": "A446D49F"
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "PUSH",
											"source": 11,
											"value": "B2494DF3"
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "tag",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "PUSH",
											"source": 11,
											"value": "6A3EDF28"
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "PUSH",
											"source": 11,
											"value": "6A3EDF28"
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "PUSH",
											"source": 11,
											"value": "715018A6"
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "PUSH",
											"source": 11,
											"value": "8BAF29B4"
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "PUSH",
											"source": 11,
											"value": "8D2EA772"
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "tag",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "PUSH",
											"source": 11,
											"value": "1ED86F19"
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "PUSH",
											"source": 11,
											"value": "3FF5AA02"
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "PUSH",
											"source": 11,
											"value": "40DB3B50"
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "PUSH",
											"source": 11,
											"value": "5F8DEAD3"
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 326,
											"end": 5613,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1487,
											"end": 1942,
											"name": "tag",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 1487,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1487,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 1487,
											"end": 1942,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1487,
											"end": 1942,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1487,
											"end": 1942,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1487,
											"end": 1942,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1487,
											"end": 1942,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1487,
											"end": 1942,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1487,
											"end": 1942,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1487,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 1487,
											"end": 1942,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1487,
											"end": 1942,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1487,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 1487,
											"end": 1942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1487,
											"end": 1942,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 1487,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1487,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 1487,
											"end": 1942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1487,
											"end": 1942,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 1487,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1487,
											"end": 1942,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 675,
											"end": 1102,
											"name": "tag",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 675,
											"end": 1102,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 675,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 675,
											"end": 1102,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 675,
											"end": 1102,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 675,
											"end": 1102,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 675,
											"end": 1102,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 675,
											"end": 1102,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 675,
											"end": 1102,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 675,
											"end": 1102,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 675,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 675,
											"end": 1102,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 675,
											"end": 1102,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 675,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 675,
											"end": 1102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 675,
											"end": 1102,
											"name": "tag",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 675,
											"end": 1102,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 675,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 675,
											"end": 1102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 675,
											"end": 1102,
											"name": "tag",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 675,
											"end": 1102,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 675,
											"end": 1102,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 1110,
											"end": 1479,
											"name": "tag",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 1110,
											"end": 1479,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1110,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 1110,
											"end": 1479,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1110,
											"end": 1479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1110,
											"end": 1479,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1110,
											"end": 1479,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1110,
											"end": 1479,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1110,
											"end": 1479,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1110,
											"end": 1479,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1110,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 1110,
											"end": 1479,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1110,
											"end": 1479,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1110,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 1110,
											"end": 1479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1110,
											"end": 1479,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 1110,
											"end": 1479,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1110,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 1110,
											"end": 1479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1110,
											"end": 1479,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 1110,
											"end": 1479,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1110,
											"end": 1479,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 3090,
											"end": 3477,
											"name": "tag",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 3090,
											"end": 3477,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3090,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 3090,
											"end": 3477,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3090,
											"end": 3477,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3090,
											"end": 3477,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 3090,
											"end": 3477,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3090,
											"end": 3477,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3090,
											"end": 3477,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3090,
											"end": 3477,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3090,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 3090,
											"end": 3477,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3090,
											"end": 3477,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3090,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 3090,
											"end": 3477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3090,
											"end": 3477,
											"name": "tag",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 3090,
											"end": 3477,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3090,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 3090,
											"end": 3477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3090,
											"end": 3477,
											"name": "tag",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 3090,
											"end": 3477,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3090,
											"end": 3477,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 4887,
											"end": 4990,
											"name": "tag",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 4887,
											"end": 4990,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4887,
											"end": 4990,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 4887,
											"end": 4990,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 4887,
											"end": 4990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4887,
											"end": 4990,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 4887,
											"end": 4990,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4887,
											"end": 4990,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4887,
											"end": 4990,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4887,
											"end": 4990,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 4887,
											"end": 4990,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4887,
											"end": 4990,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4887,
											"end": 4990,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 4887,
											"end": 4990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4887,
											"end": 4990,
											"name": "tag",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 4887,
											"end": 4990,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4887,
											"end": 4990,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4887,
											"end": 4990,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4887,
											"end": 4990,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4887,
											"end": 4990,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4887,
											"end": 4990,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4887,
											"end": 4990,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4887,
											"end": 4990,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2064,
											"end": 2165,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 2064,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2064,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2064,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 2064,
											"end": 2165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2064,
											"end": 2165,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2064,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2064,
											"end": 2165,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 3082,
											"name": "tag",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 2601,
											"end": 3082,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2601,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 2601,
											"end": 3082,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2601,
											"end": 3082,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2601,
											"end": 3082,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2601,
											"end": 3082,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2601,
											"end": 3082,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2601,
											"end": 3082,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2601,
											"end": 3082,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2601,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 2601,
											"end": 3082,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2601,
											"end": 3082,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2601,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 2601,
											"end": 3082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2601,
											"end": 3082,
											"name": "tag",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 2601,
											"end": 3082,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2601,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 2601,
											"end": 3082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2601,
											"end": 3082,
											"name": "tag",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 2601,
											"end": 3082,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2601,
											"end": 3082,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 3485,
											"end": 3880,
											"name": "tag",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 3485,
											"end": 3880,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3485,
											"end": 3880,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 3485,
											"end": 3880,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3485,
											"end": 3880,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3485,
											"end": 3880,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 3485,
											"end": 3880,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3485,
											"end": 3880,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3485,
											"end": 3880,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3485,
											"end": 3880,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3485,
											"end": 3880,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 3485,
											"end": 3880,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3485,
											"end": 3880,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3485,
											"end": 3880,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 3485,
											"end": 3880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3485,
											"end": 3880,
											"name": "tag",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 3485,
											"end": 3880,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3485,
											"end": 3880,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 3485,
											"end": 3880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3485,
											"end": 3880,
											"name": "tag",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 3485,
											"end": 3880,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3485,
											"end": 3880,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1441,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 1441,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1950,
											"end": 2593,
											"name": "tag",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 1950,
											"end": 2593,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1950,
											"end": 2593,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 1950,
											"end": 2593,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1950,
											"end": 2593,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1950,
											"end": 2593,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1950,
											"end": 2593,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1950,
											"end": 2593,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1950,
											"end": 2593,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1950,
											"end": 2593,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1950,
											"end": 2593,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 1950,
											"end": 2593,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1950,
											"end": 2593,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1950,
											"end": 2593,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 1950,
											"end": 2593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1950,
											"end": 2593,
											"name": "tag",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 1950,
											"end": 2593,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1950,
											"end": 2593,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 1950,
											"end": 2593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1950,
											"end": 2593,
											"name": "tag",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 1950,
											"end": 2593,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1950,
											"end": 2593,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 4640,
											"end": 4765,
											"name": "tag",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 4640,
											"end": 4765,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4640,
											"end": 4765,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 4640,
											"end": 4765,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4640,
											"end": 4765,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4640,
											"end": 4765,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4640,
											"end": 4765,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4640,
											"end": 4765,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4640,
											"end": 4765,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4640,
											"end": 4765,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4640,
											"end": 4765,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 4640,
											"end": 4765,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4640,
											"end": 4765,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4640,
											"end": 4765,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 4640,
											"end": 4765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4640,
											"end": 4765,
											"name": "tag",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 4640,
											"end": 4765,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4640,
											"end": 4765,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 4640,
											"end": 4765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4640,
											"end": 4765,
											"name": "tag",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 4640,
											"end": 4765,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4640,
											"end": 4765,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4640,
											"end": 4765,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4640,
											"end": 4765,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 4640,
											"end": 4765,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4640,
											"end": 4765,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4640,
											"end": 4765,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 4640,
											"end": 4765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4640,
											"end": 4765,
											"name": "tag",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 4640,
											"end": 4765,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4640,
											"end": 4765,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4640,
											"end": 4765,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4640,
											"end": 4765,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4640,
											"end": 4765,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4640,
											"end": 4765,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4640,
											"end": 4765,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4640,
											"end": 4765,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 4773,
											"end": 4879,
											"name": "tag",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 4773,
											"end": 4879,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4773,
											"end": 4879,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 4773,
											"end": 4879,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 4773,
											"end": 4879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4773,
											"end": 4879,
											"name": "tag",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 4773,
											"end": 4879,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4773,
											"end": 4879,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4773,
											"end": 4879,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4773,
											"end": 4879,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 4773,
											"end": 4879,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4773,
											"end": 4879,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4773,
											"end": 4879,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 4773,
											"end": 4879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4773,
											"end": 4879,
											"name": "tag",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 4773,
											"end": 4879,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4773,
											"end": 4879,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4773,
											"end": 4879,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4773,
											"end": 4879,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4773,
											"end": 4879,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4773,
											"end": 4879,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4773,
											"end": 4879,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4773,
											"end": 4879,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 595,
											"end": 667,
											"name": "tag",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 595,
											"end": 667,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 595,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 595,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 595,
											"end": 667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 595,
											"end": 667,
											"name": "tag",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 595,
											"end": 667,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 595,
											"end": 667,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 4998,
											"end": 5368,
											"name": "tag",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 4998,
											"end": 5368,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4998,
											"end": 5368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 4998,
											"end": 5368,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4998,
											"end": 5368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4998,
											"end": 5368,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4998,
											"end": 5368,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4998,
											"end": 5368,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4998,
											"end": 5368,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4998,
											"end": 5368,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4998,
											"end": 5368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 4998,
											"end": 5368,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4998,
											"end": 5368,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4998,
											"end": 5368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 4998,
											"end": 5368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4998,
											"end": 5368,
											"name": "tag",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 4998,
											"end": 5368,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4998,
											"end": 5368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 4998,
											"end": 5368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4998,
											"end": 5368,
											"name": "tag",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 4998,
											"end": 5368,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4998,
											"end": 5368,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4998,
											"end": 5368,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4998,
											"end": 5368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 4998,
											"end": 5368,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4998,
											"end": 5368,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4998,
											"end": 5368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 4998,
											"end": 5368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4998,
											"end": 5368,
											"name": "tag",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 4998,
											"end": 5368,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4998,
											"end": 5368,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4998,
											"end": 5368,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4998,
											"end": 5368,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4998,
											"end": 5368,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4998,
											"end": 5368,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4998,
											"end": 5368,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4998,
											"end": 5368,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 3888,
											"end": 4632,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 3888,
											"end": 4632,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3888,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 3888,
											"end": 4632,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3888,
											"end": 4632,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3888,
											"end": 4632,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 3888,
											"end": 4632,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3888,
											"end": 4632,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3888,
											"end": 4632,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3888,
											"end": 4632,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3888,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 3888,
											"end": 4632,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3888,
											"end": 4632,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3888,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 3888,
											"end": 4632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3888,
											"end": 4632,
											"name": "tag",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 3888,
											"end": 4632,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3888,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 3888,
											"end": 4632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3888,
											"end": 4632,
											"name": "tag",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 3888,
											"end": 4632,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3888,
											"end": 4632,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2314,
											"end": 2512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2314,
											"end": 2512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1487,
											"end": 1942,
											"name": "tag",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 1487,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1334,
											"end": 1347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1589,
											"end": 1590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1570,
											"end": 1591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1570,
											"end": 1591,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1570,
											"end": 1577,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1570,
											"end": 1591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1570,
											"end": 1591,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1570,
											"end": 1591,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1627,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "81"
										},
										{
											"begin": 1562,
											"end": 1627,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1627,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1562,
											"end": 1627,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1627,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1562,
											"end": 1627,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1627,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1627,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1562,
											"end": 1627,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1627,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 1562,
											"end": 1627,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1627,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 1562,
											"end": 1627,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1627,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 1562,
											"end": 1627,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1627,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1562,
											"end": 1627,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1627,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1627,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1627,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1627,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1627,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1627,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "81"
										},
										{
											"begin": 1562,
											"end": 1627,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1647,
											"end": 1659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 1647,
											"end": 1668,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1660,
											"end": 1667,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1647,
											"end": 1668,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1647,
											"end": 1668,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1647,
											"end": 1668,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1647,
											"end": 1668,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1647,
											"end": 1668,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1647,
											"end": 1668,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1647,
											"end": 1668,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1647,
											"end": 1668,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1647,
											"end": 1668,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1647,
											"end": 1668,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1647,
											"end": 1668,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1647,
											"end": 1668,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1647,
											"end": 1668,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1647,
											"end": 1668,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1647,
											"end": 1668,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1647,
											"end": 1668,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1647,
											"end": 1668,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1647,
											"end": 1668,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1647,
											"end": 1668,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1647,
											"end": 1668,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1647,
											"end": 1668,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1647,
											"end": 1668,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1647,
											"end": 1668,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1647,
											"end": 1668,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 1647,
											"end": 1668,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1646,
											"end": 1668,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1638,
											"end": 1693,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 1638,
											"end": 1693,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1638,
											"end": 1693,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1693,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1638,
											"end": 1693,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1638,
											"end": 1693,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1638,
											"end": 1693,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1638,
											"end": 1693,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1638,
											"end": 1693,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1638,
											"end": 1693,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 1638,
											"end": 1693,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1638,
											"end": 1693,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 1638,
											"end": 1693,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1638,
											"end": 1693,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 1638,
											"end": 1693,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1638,
											"end": 1693,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1693,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1638,
											"end": 1693,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1638,
											"end": 1693,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1638,
											"end": 1693,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1638,
											"end": 1693,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1638,
											"end": 1693,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1638,
											"end": 1693,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 1638,
											"end": 1693,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1731,
											"end": 1733,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 1712,
											"end": 1720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 1712,
											"end": 1727,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1712,
											"end": 1727,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1712,
											"end": 1727,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1712,
											"end": 1727,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1712,
											"end": 1733,
											"modifierDepth": 1,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1712,
											"end": 1733,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1704,
											"end": 1769,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 1704,
											"end": 1769,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1704,
											"end": 1769,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1704,
											"end": 1769,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1704,
											"end": 1769,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1704,
											"end": 1769,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1704,
											"end": 1769,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1704,
											"end": 1769,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1704,
											"end": 1769,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1704,
											"end": 1769,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 1704,
											"end": 1769,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1704,
											"end": 1769,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 1704,
											"end": 1769,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1704,
											"end": 1769,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 1704,
											"end": 1769,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1704,
											"end": 1769,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1704,
											"end": 1769,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1704,
											"end": 1769,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1704,
											"end": 1769,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1704,
											"end": 1769,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1704,
											"end": 1769,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1704,
											"end": 1769,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1704,
											"end": 1769,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 1704,
											"end": 1769,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1788,
											"end": 1795,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1780,
											"end": 1811,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1780,
											"end": 1811,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1780,
											"end": 1811,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4A932544"
										},
										{
											"begin": 1820,
											"end": 1824,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 1780,
											"end": 1826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1780,
											"end": 1826,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1780,
											"end": 1826,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1780,
											"end": 1826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1780,
											"end": 1826,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1780,
											"end": 1826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 1780,
											"end": 1826,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 1780,
											"end": 1826,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1780,
											"end": 1826,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1780,
											"end": 1826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1780,
											"end": 1826,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1780,
											"end": 1826,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 1780,
											"end": 1826,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1780,
											"end": 1826,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1780,
											"end": 1826,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 1780,
											"end": 1826,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1780,
											"end": 1826,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 1780,
											"end": 1826,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1780,
											"end": 1826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1780,
											"end": 1826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1780,
											"end": 1826,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1780,
											"end": 1826,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1780,
											"end": 1826,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1780,
											"end": 1826,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1780,
											"end": 1826,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1780,
											"end": 1826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1780,
											"end": 1826,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 1780,
											"end": 1826,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1780,
											"end": 1826,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 1780,
											"end": 1826,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1780,
											"end": 1826,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1780,
											"end": 1826,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1780,
											"end": 1826,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 1780,
											"end": 1826,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1780,
											"end": 1826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1780,
											"end": 1826,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1780,
											"end": 1826,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1780,
											"end": 1826,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 1780,
											"end": 1826,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1780,
											"end": 1826,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1780,
											"end": 1826,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 1780,
											"end": 1826,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 1780,
											"end": 1826,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1780,
											"end": 1826,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1780,
											"end": 1826,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1780,
											"end": 1826,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 1780,
											"end": 1826,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1780,
											"end": 1826,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1780,
											"end": 1826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1780,
											"end": 1826,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1780,
											"end": 1826,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 1780,
											"end": 1826,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1780,
											"end": 1826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1780,
											"end": 1826,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1780,
											"end": 1826,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 1780,
											"end": 1826,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1780,
											"end": 1826,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1780,
											"end": 1826,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1780,
											"end": 1826,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1780,
											"end": 1826,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1837,
											"end": 1845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 1851,
											"end": 1858,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1837,
											"end": 1859,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1837,
											"end": 1859,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1837,
											"end": 1859,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1837,
											"end": 1859,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1837,
											"end": 1859,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1837,
											"end": 1859,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1837,
											"end": 1859,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1837,
											"end": 1859,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1837,
											"end": 1859,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1837,
											"end": 1859,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1837,
											"end": 1859,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1837,
											"end": 1859,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1837,
											"end": 1859,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1837,
											"end": 1859,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1837,
											"end": 1859,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1837,
											"end": 1859,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1837,
											"end": 1859,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1837,
											"end": 1859,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1837,
											"end": 1859,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1837,
											"end": 1859,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1837,
											"end": 1859,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1837,
											"end": 1859,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1837,
											"end": 1859,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1837,
											"end": 1859,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1837,
											"end": 1859,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1837,
											"end": 1859,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1837,
											"end": 1859,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1837,
											"end": 1859,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1837,
											"end": 1859,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1837,
											"end": 1859,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1837,
											"end": 1859,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1837,
											"end": 1859,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1837,
											"end": 1859,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1837,
											"end": 1859,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1837,
											"end": 1859,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1837,
											"end": 1859,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1837,
											"end": 1859,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1837,
											"end": 1859,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 1837,
											"end": 1859,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1837,
											"end": 1859,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1837,
											"end": 1859,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1837,
											"end": 1859,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1837,
											"end": 1859,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1837,
											"end": 1859,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1837,
											"end": 1859,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 1837,
											"end": 1859,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1837,
											"end": 1859,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1837,
											"end": 1859,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1894,
											"end": 1898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1870,
											"end": 1882,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 1870,
											"end": 1891,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1883,
											"end": 1890,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1870,
											"end": 1891,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1870,
											"end": 1891,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1870,
											"end": 1891,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1870,
											"end": 1891,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1870,
											"end": 1891,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1870,
											"end": 1891,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1870,
											"end": 1891,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1870,
											"end": 1891,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1870,
											"end": 1891,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1870,
											"end": 1891,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1870,
											"end": 1891,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1870,
											"end": 1891,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1870,
											"end": 1891,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1870,
											"end": 1891,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1870,
											"end": 1891,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1870,
											"end": 1891,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1870,
											"end": 1898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1870,
											"end": 1898,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1870,
											"end": 1898,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1870,
											"end": 1898,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1870,
											"end": 1898,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1870,
											"end": 1898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 1870,
											"end": 1898,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1870,
											"end": 1898,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 1870,
											"end": 1898,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1870,
											"end": 1898,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1870,
											"end": 1898,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1870,
											"end": 1898,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1870,
											"end": 1898,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1870,
											"end": 1898,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1870,
											"end": 1898,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 1870,
											"end": 1898,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1870,
											"end": 1898,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1870,
											"end": 1898,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1926,
											"end": 1933,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1914,
											"end": 1934,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1914,
											"end": 1934,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1914,
											"end": 1934,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "EAD6A006345DA1073A106D5F32372D2D2204F46CB0B4BCA8F5EBAFCBBED12B8A"
										},
										{
											"begin": 1914,
											"end": 1934,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1914,
											"end": 1934,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1914,
											"end": 1934,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1914,
											"end": 1934,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1914,
											"end": 1934,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1914,
											"end": 1934,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1914,
											"end": 1934,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1914,
											"end": 1934,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1914,
											"end": 1934,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 1487,
											"end": 1942,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1487,
											"end": 1942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 675,
											"end": 1102,
											"name": "tag",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 675,
											"end": 1102,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 758,
											"end": 768,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 747,
											"end": 768,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 747,
											"end": 768,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 747,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 747,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 747,
											"end": 754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 747,
											"end": 754,
											"name": "tag",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 747,
											"end": 754,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 747,
											"end": 768,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 747,
											"end": 768,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 747,
											"end": 768,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 747,
											"end": 823,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 747,
											"end": 823,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "97"
										},
										{
											"begin": 747,
											"end": 823,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 747,
											"end": 823,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 796,
											"end": 797,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 773,
											"end": 798,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 773,
											"end": 798,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 773,
											"end": 784,
											"name": "PUSH",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 773,
											"end": 784,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 773,
											"end": 784,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 773,
											"end": 784,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 773,
											"end": 784,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 773,
											"end": 784,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 773,
											"end": 784,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 773,
											"end": 784,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 773,
											"end": 784,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 773,
											"end": 784,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 773,
											"end": 784,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 773,
											"end": 798,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 773,
											"end": 798,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 773,
											"end": 798,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 773,
											"end": 822,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 773,
											"end": 822,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 773,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 773,
											"end": 822,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 773,
											"end": 822,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 816,
											"end": 822,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 802,
											"end": 822,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 802,
											"end": 822,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 802,
											"end": 812,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 802,
											"end": 822,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 802,
											"end": 822,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 802,
											"end": 822,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 773,
											"end": 822,
											"name": "tag",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 773,
											"end": 822,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 747,
											"end": 823,
											"name": "tag",
											"source": 11,
											"value": "97"
										},
										{
											"begin": 747,
											"end": 823,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 739,
											"end": 865,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 739,
											"end": 865,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 739,
											"end": 865,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 739,
											"end": 865,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 739,
											"end": 865,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 739,
											"end": 865,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 739,
											"end": 865,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 739,
											"end": 865,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 739,
											"end": 865,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 739,
											"end": 865,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 739,
											"end": 865,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 739,
											"end": 865,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 739,
											"end": 865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 739,
											"end": 865,
											"name": "tag",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 739,
											"end": 865,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 739,
											"end": 865,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 739,
											"end": 865,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 739,
											"end": 865,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 739,
											"end": 865,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 739,
											"end": 865,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 739,
											"end": 865,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 739,
											"end": 865,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 739,
											"end": 865,
											"name": "tag",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 739,
											"end": 865,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 902,
											"end": 903,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 884,
											"end": 904,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 884,
											"end": 904,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 884,
											"end": 890,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 884,
											"end": 904,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 884,
											"end": 904,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 884,
											"end": 904,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 876,
											"end": 940,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 876,
											"end": 940,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 876,
											"end": 940,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 876,
											"end": 940,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 876,
											"end": 940,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 876,
											"end": 940,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 876,
											"end": 940,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 876,
											"end": 940,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 876,
											"end": 940,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 876,
											"end": 940,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 876,
											"end": 940,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 876,
											"end": 940,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 876,
											"end": 940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 876,
											"end": 940,
											"name": "tag",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 876,
											"end": 940,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 876,
											"end": 940,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 876,
											"end": 940,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 876,
											"end": 940,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 876,
											"end": 940,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 876,
											"end": 940,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 876,
											"end": 940,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 876,
											"end": 940,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 876,
											"end": 940,
											"name": "tag",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 876,
											"end": 940,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 965,
											"end": 971,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 951,
											"end": 962,
											"name": "PUSH",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 951,
											"end": 962,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 951,
											"end": 971,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 951,
											"end": 971,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 951,
											"end": 971,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 951,
											"end": 971,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 951,
											"end": 971,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 951,
											"end": 971,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 951,
											"end": 971,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 951,
											"end": 971,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 951,
											"end": 971,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 951,
											"end": 971,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 951,
											"end": 971,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 951,
											"end": 971,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 951,
											"end": 971,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 951,
											"end": 971,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 951,
											"end": 971,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 951,
											"end": 971,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 951,
											"end": 971,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 951,
											"end": 971,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1076,
											"end": 1094,
											"name": "PUSH",
											"source": 11,
											"value": "2DE35142B19ED5A07796CF30791959C592018F70B1D2D7C460EEF8FFE713692B"
										},
										{
											"begin": 1087,
											"end": 1093,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1076,
											"end": 1094,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1076,
											"end": 1094,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1076,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 1076,
											"end": 1094,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1076,
											"end": 1094,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1076,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 1076,
											"end": 1094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1076,
											"end": 1094,
											"name": "tag",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 1076,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1076,
											"end": 1094,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1076,
											"end": 1094,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1076,
											"end": 1094,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1076,
											"end": 1094,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1076,
											"end": 1094,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1076,
											"end": 1094,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1076,
											"end": 1094,
											"name": "LOG1",
											"source": 11
										},
										{
											"begin": 675,
											"end": 1102,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 675,
											"end": 1102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1110,
											"end": 1479,
											"name": "tag",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 1110,
											"end": 1479,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1195,
											"end": 1205,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1184,
											"end": 1205,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1184,
											"end": 1205,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1184,
											"end": 1191,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 1184,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 1184,
											"end": 1191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1184,
											"end": 1191,
											"name": "tag",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 1184,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1184,
											"end": 1205,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1184,
											"end": 1205,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1184,
											"end": 1205,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1223,
											"end": 1229,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1209,
											"end": 1229,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1209,
											"end": 1229,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1209,
											"end": 1219,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1209,
											"end": 1229,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1209,
											"end": 1229,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1209,
											"end": 1229,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "tag",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 1184,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1176,
											"end": 1263,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 1176,
											"end": 1263,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1176,
											"end": 1263,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1176,
											"end": 1263,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1176,
											"end": 1263,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1176,
											"end": 1263,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1176,
											"end": 1263,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1176,
											"end": 1263,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1176,
											"end": 1263,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1176,
											"end": 1263,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 1176,
											"end": 1263,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1176,
											"end": 1263,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 1176,
											"end": 1263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1176,
											"end": 1263,
											"name": "tag",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 1176,
											"end": 1263,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1176,
											"end": 1263,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1176,
											"end": 1263,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1176,
											"end": 1263,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1176,
											"end": 1263,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1176,
											"end": 1263,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1176,
											"end": 1263,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1176,
											"end": 1263,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1176,
											"end": 1263,
											"name": "tag",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 1176,
											"end": 1263,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1292,
											"end": 1303,
											"name": "PUSH",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 1292,
											"end": 1303,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1303,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1292,
											"end": 1303,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1292,
											"end": 1303,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1292,
											"end": 1303,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1292,
											"end": 1303,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1292,
											"end": 1303,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1292,
											"end": 1303,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1292,
											"end": 1303,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1292,
											"end": 1303,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1282,
											"end": 1303,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1282,
											"end": 1303,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1282,
											"end": 1288,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1282,
											"end": 1303,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1282,
											"end": 1303,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1282,
											"end": 1303,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1274,
											"end": 1331,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 1274,
											"end": 1331,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1274,
											"end": 1331,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1274,
											"end": 1331,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1274,
											"end": 1331,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1274,
											"end": 1331,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1274,
											"end": 1331,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1274,
											"end": 1331,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1274,
											"end": 1331,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1274,
											"end": 1331,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 1274,
											"end": 1331,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1274,
											"end": 1331,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 1274,
											"end": 1331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1274,
											"end": 1331,
											"name": "tag",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 1274,
											"end": 1331,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1274,
											"end": 1331,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1274,
											"end": 1331,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1274,
											"end": 1331,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1274,
											"end": 1331,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1274,
											"end": 1331,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1274,
											"end": 1331,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1274,
											"end": 1331,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1274,
											"end": 1331,
											"name": "tag",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 1274,
											"end": 1331,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1368,
											"end": 1369,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1350,
											"end": 1356,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1342,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 1342,
											"end": 1406,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1342,
											"end": 1406,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1342,
											"end": 1406,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1342,
											"end": 1406,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1342,
											"end": 1406,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1342,
											"end": 1406,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1342,
											"end": 1406,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1342,
											"end": 1406,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1342,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 1342,
											"end": 1406,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1342,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 1342,
											"end": 1406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1342,
											"end": 1406,
											"name": "tag",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 1342,
											"end": 1406,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1342,
											"end": 1406,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1342,
											"end": 1406,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1342,
											"end": 1406,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1342,
											"end": 1406,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1342,
											"end": 1406,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1342,
											"end": 1406,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1342,
											"end": 1406,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1342,
											"end": 1406,
											"name": "tag",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 1342,
											"end": 1406,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1424,
											"end": 1435,
											"name": "PUSH",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 1424,
											"end": 1435,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1417,
											"end": 1435,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1417,
											"end": 1435,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1417,
											"end": 1435,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1417,
											"end": 1435,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1417,
											"end": 1435,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1417,
											"end": 1435,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1417,
											"end": 1435,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1417,
											"end": 1435,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 1417,
											"end": 1435,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1417,
											"end": 1435,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1417,
											"end": 1435,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1451,
											"end": 1471,
											"name": "PUSH",
											"source": 11,
											"value": "28A4CA7134A3B3F9AFF286E79AD3DAADB4A06D1B43D037A3A98BDC074EDD9B7A"
										},
										{
											"begin": 1464,
											"end": 1470,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1451,
											"end": 1471,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1451,
											"end": 1471,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1451,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 1451,
											"end": 1471,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1451,
											"end": 1471,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1451,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 1451,
											"end": 1471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1451,
											"end": 1471,
											"name": "tag",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 1451,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1451,
											"end": 1471,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1451,
											"end": 1471,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1451,
											"end": 1471,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1451,
											"end": 1471,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1451,
											"end": 1471,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1451,
											"end": 1471,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1451,
											"end": 1471,
											"name": "LOG1",
											"source": 11
										},
										{
											"begin": 1110,
											"end": 1479,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1110,
											"end": 1479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3090,
											"end": 3477,
											"name": "tag",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 3090,
											"end": 3477,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 483,
											"end": 494,
											"name": "PUSH",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 483,
											"end": 494,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 494,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 483,
											"end": 494,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 483,
											"end": 494,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 483,
											"end": 494,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 483,
											"end": 494,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 483,
											"end": 494,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 483,
											"end": 494,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 483,
											"end": 494,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 483,
											"end": 494,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 469,
											"end": 494,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 469,
											"end": 494,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 469,
											"end": 479,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 469,
											"end": 494,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 469,
											"end": 494,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 469,
											"end": 494,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 461,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 461,
											"end": 567,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 461,
											"end": 567,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 461,
											"end": 567,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 461,
											"end": 567,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 461,
											"end": 567,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 461,
											"end": 567,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 461,
											"end": 567,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 461,
											"end": 567,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 461,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 461,
											"end": 567,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 461,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 461,
											"end": 567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 461,
											"end": 567,
											"name": "tag",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 461,
											"end": 567,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 461,
											"end": 567,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 461,
											"end": 567,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 461,
											"end": 567,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 461,
											"end": 567,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 461,
											"end": 567,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 461,
											"end": 567,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 461,
											"end": 567,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 461,
											"end": 567,
											"name": "tag",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 461,
											"end": 567,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3198,
											"end": 3199,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3183,
											"end": 3200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3183,
											"end": 3200,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3183,
											"end": 3186,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3183,
											"end": 3200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3183,
											"end": 3200,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3183,
											"end": 3200,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3175,
											"end": 3236,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 3175,
											"end": 3236,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3175,
											"end": 3236,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3175,
											"end": 3236,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3175,
											"end": 3236,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3175,
											"end": 3236,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3175,
											"end": 3236,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3175,
											"end": 3236,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3175,
											"end": 3236,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3175,
											"end": 3236,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 3175,
											"end": 3236,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3175,
											"end": 3236,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 3175,
											"end": 3236,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3175,
											"end": 3236,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 3175,
											"end": 3236,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3175,
											"end": 3236,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3175,
											"end": 3236,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3175,
											"end": 3236,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3175,
											"end": 3236,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3175,
											"end": 3236,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3175,
											"end": 3236,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3175,
											"end": 3236,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3175,
											"end": 3236,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 3175,
											"end": 3236,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3264,
											"end": 3265,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3255,
											"end": 3261,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3255,
											"end": 3265,
											"modifierDepth": 1,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3247,
											"end": 3302,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 3247,
											"end": 3302,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3247,
											"end": 3302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3247,
											"end": 3302,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3247,
											"end": 3302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3247,
											"end": 3302,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3247,
											"end": 3302,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3247,
											"end": 3302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3247,
											"end": 3302,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3247,
											"end": 3302,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 3247,
											"end": 3302,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3247,
											"end": 3302,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 3247,
											"end": 3302,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3247,
											"end": 3302,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 3247,
											"end": 3302,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3247,
											"end": 3302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3247,
											"end": 3302,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3247,
											"end": 3302,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3247,
											"end": 3302,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3247,
											"end": 3302,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3247,
											"end": 3302,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3247,
											"end": 3302,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3247,
											"end": 3302,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 3247,
											"end": 3302,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3313,
											"end": 3327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3330,
											"end": 3338,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 3330,
											"end": 3345,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3330,
											"end": 3345,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3330,
											"end": 3345,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3330,
											"end": 3345,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3313,
											"end": 3345,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3313,
											"end": 3345,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3361,
											"end": 3370,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3356,
											"end": 3470,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 3356,
											"end": 3470,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3380,
											"end": 3386,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3377,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3386,
											"modifierDepth": 1,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 3356,
											"end": 3470,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3356,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 3356,
											"end": 3470,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3416,
											"end": 3424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 3425,
											"end": 3426,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3416,
											"end": 3427,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3416,
											"end": 3427,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3416,
											"end": 3427,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3416,
											"end": 3427,
											"modifierDepth": 1,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 3416,
											"end": 3427,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 3416,
											"end": 3427,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3416,
											"end": 3427,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 3416,
											"end": 3427,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 3416,
											"end": 3427,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3416,
											"end": 3427,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 3416,
											"end": 3427,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3416,
											"end": 3427,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 3416,
											"end": 3427,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3416,
											"end": 3427,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3416,
											"end": 3427,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3416,
											"end": 3427,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3416,
											"end": 3427,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3416,
											"end": 3427,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3416,
											"end": 3427,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3416,
											"end": 3427,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3416,
											"end": 3427,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3416,
											"end": 3427,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3416,
											"end": 3427,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3416,
											"end": 3427,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3416,
											"end": 3427,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3416,
											"end": 3427,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3416,
											"end": 3427,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3416,
											"end": 3427,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3416,
											"end": 3427,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3416,
											"end": 3427,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3408,
											"end": 3445,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3408,
											"end": 3445,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3408,
											"end": 3445,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "F104A8C9"
										},
										{
											"begin": 3446,
											"end": 3449,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3451,
											"end": 3457,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3408,
											"end": 3458,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3408,
											"end": 3458,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3408,
											"end": 3458,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3408,
											"end": 3458,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3408,
											"end": 3458,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3408,
											"end": 3458,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 3408,
											"end": 3458,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 3408,
											"end": 3458,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3408,
											"end": 3458,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3408,
											"end": 3458,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3408,
											"end": 3458,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3408,
											"end": 3458,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 3408,
											"end": 3458,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3408,
											"end": 3458,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3408,
											"end": 3458,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3408,
											"end": 3458,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 3408,
											"end": 3458,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3408,
											"end": 3458,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 3408,
											"end": 3458,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3408,
											"end": 3458,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3408,
											"end": 3458,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3408,
											"end": 3458,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3408,
											"end": 3458,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3408,
											"end": 3458,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3408,
											"end": 3458,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3408,
											"end": 3458,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3408,
											"end": 3458,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3408,
											"end": 3458,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3408,
											"end": 3458,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3408,
											"end": 3458,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 3408,
											"end": 3458,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3408,
											"end": 3458,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3408,
											"end": 3458,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3408,
											"end": 3458,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 3408,
											"end": 3458,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3408,
											"end": 3458,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3408,
											"end": 3458,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3408,
											"end": 3458,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3408,
											"end": 3458,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 3408,
											"end": 3458,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3408,
											"end": 3458,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3408,
											"end": 3458,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 3408,
											"end": 3458,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 3408,
											"end": 3458,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3408,
											"end": 3458,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3408,
											"end": 3458,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3408,
											"end": 3458,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 3408,
											"end": 3458,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3408,
											"end": 3458,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3408,
											"end": 3458,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3408,
											"end": 3458,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3408,
											"end": 3458,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 3408,
											"end": 3458,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3408,
											"end": 3458,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3408,
											"end": 3458,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3408,
											"end": 3458,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 3408,
											"end": 3458,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3408,
											"end": 3458,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3408,
											"end": 3458,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3408,
											"end": 3458,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3408,
											"end": 3458,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3388,
											"end": 3391,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3388,
											"end": 3391,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3388,
											"end": 3391,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 3388,
											"end": 3391,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3388,
											"end": 3391,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 3388,
											"end": 3391,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3388,
											"end": 3391,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 3388,
											"end": 3391,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3388,
											"end": 3391,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3388,
											"end": 3391,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3388,
											"end": 3391,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3356,
											"end": 3470,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 3356,
											"end": 3470,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3356,
											"end": 3470,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 3356,
											"end": 3470,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3356,
											"end": 3470,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3164,
											"end": 3477,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3090,
											"end": 3477,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3090,
											"end": 3477,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3090,
											"end": 3477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4887,
											"end": 4990,
											"name": "tag",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 4887,
											"end": 4990,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4944,
											"end": 4951,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4971,
											"end": 4982,
											"name": "PUSH",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 4971,
											"end": 4982,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4971,
											"end": 4982,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4971,
											"end": 4982,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4971,
											"end": 4982,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4971,
											"end": 4982,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 4971,
											"end": 4982,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 4971,
											"end": 4982,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4971,
											"end": 4982,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 4971,
											"end": 4982,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4971,
											"end": 4982,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4964,
											"end": 4982,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4964,
											"end": 4982,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4887,
											"end": 4990,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4887,
											"end": 4990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2064,
											"end": 2165,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 2064,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1334,
											"end": 1347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2158,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 2155,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2128,
											"end": 2146,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 2128,
											"end": 2158,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2158,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 2128,
											"end": 2158,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2064,
											"end": 2165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 3082,
											"name": "tag",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 2601,
											"end": 3082,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 483,
											"end": 494,
											"name": "PUSH",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 483,
											"end": 494,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 494,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 483,
											"end": 494,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 483,
											"end": 494,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 483,
											"end": 494,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 483,
											"end": 494,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 483,
											"end": 494,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 483,
											"end": 494,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 483,
											"end": 494,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 483,
											"end": 494,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 469,
											"end": 494,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 469,
											"end": 494,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 469,
											"end": 479,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 469,
											"end": 494,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 469,
											"end": 494,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 469,
											"end": 494,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 461,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 461,
											"end": 567,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 461,
											"end": 567,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 461,
											"end": 567,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 461,
											"end": 567,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 461,
											"end": 567,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 461,
											"end": 567,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 461,
											"end": 567,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 461,
											"end": 567,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 461,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 461,
											"end": 567,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 461,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 461,
											"end": 567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 461,
											"end": 567,
											"name": "tag",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 461,
											"end": 567,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 461,
											"end": 567,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 461,
											"end": 567,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 461,
											"end": 567,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 461,
											"end": 567,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 461,
											"end": 567,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 461,
											"end": 567,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 461,
											"end": 567,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 461,
											"end": 567,
											"name": "tag",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 461,
											"end": 567,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2744,
											"end": 2745,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2727,
											"end": 2746,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2727,
											"end": 2746,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2727,
											"end": 2732,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2727,
											"end": 2746,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2727,
											"end": 2746,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2727,
											"end": 2746,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2727,
											"end": 2746,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2727,
											"end": 2780,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2727,
											"end": 2780,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2727,
											"end": 2780,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 2727,
											"end": 2780,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2727,
											"end": 2780,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2778,
											"end": 2779,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2763,
											"end": 2780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2763,
											"end": 2780,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2763,
											"end": 2766,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2763,
											"end": 2780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2763,
											"end": 2780,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2763,
											"end": 2780,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2763,
											"end": 2780,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2727,
											"end": 2780,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 2727,
											"end": 2780,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2705,
											"end": 2826,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 2705,
											"end": 2826,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2705,
											"end": 2826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2705,
											"end": 2826,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2705,
											"end": 2826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2705,
											"end": 2826,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2705,
											"end": 2826,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2705,
											"end": 2826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2705,
											"end": 2826,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2705,
											"end": 2826,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 2705,
											"end": 2826,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2705,
											"end": 2826,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 2705,
											"end": 2826,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2705,
											"end": 2826,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 2705,
											"end": 2826,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2705,
											"end": 2826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2705,
											"end": 2826,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2705,
											"end": 2826,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2705,
											"end": 2826,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2705,
											"end": 2826,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2705,
											"end": 2826,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2705,
											"end": 2826,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2705,
											"end": 2826,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 2705,
											"end": 2826,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2854,
											"end": 2855,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2845,
											"end": 2851,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2845,
											"end": 2855,
											"modifierDepth": 1,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2837,
											"end": 2896,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 2837,
											"end": 2896,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2837,
											"end": 2896,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2837,
											"end": 2896,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2837,
											"end": 2896,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2837,
											"end": 2896,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2837,
											"end": 2896,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2837,
											"end": 2896,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2837,
											"end": 2896,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2837,
											"end": 2896,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 2837,
											"end": 2896,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2837,
											"end": 2896,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 2837,
											"end": 2896,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2837,
											"end": 2896,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 2837,
											"end": 2896,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2837,
											"end": 2896,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2837,
											"end": 2896,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2837,
											"end": 2896,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2837,
											"end": 2896,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2837,
											"end": 2896,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2837,
											"end": 2896,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2837,
											"end": 2896,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2837,
											"end": 2896,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 2837,
											"end": 2896,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2907,
											"end": 2921,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2924,
											"end": 2932,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 2924,
											"end": 2939,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2924,
											"end": 2939,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2924,
											"end": 2939,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2924,
											"end": 2939,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2907,
											"end": 2939,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2907,
											"end": 2939,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2955,
											"end": 2964,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2950,
											"end": 3075,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 2950,
											"end": 3075,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2974,
											"end": 2980,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2970,
											"end": 2971,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2970,
											"end": 2980,
											"modifierDepth": 1,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2950,
											"end": 3075,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2950,
											"end": 3075,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 2950,
											"end": 3075,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3018,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 3019,
											"end": 3020,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3021,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3021,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3021,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3021,
											"modifierDepth": 1,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3021,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 3010,
											"end": 3021,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3021,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 3010,
											"end": 3021,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 3010,
											"end": 3021,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3021,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 3010,
											"end": 3021,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3021,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 3010,
											"end": 3021,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3021,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3021,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3010,
											"end": 3021,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3021,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3010,
											"end": 3021,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3010,
											"end": 3021,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3021,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3021,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3010,
											"end": 3021,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3021,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3021,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3021,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3010,
											"end": 3021,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3021,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3021,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3010,
											"end": 3021,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3010,
											"end": 3021,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3002,
											"end": 3043,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2CB7E1EC"
										},
										{
											"begin": 3044,
											"end": 3049,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3051,
											"end": 3054,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3056,
											"end": 3062,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3063,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3063,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3002,
											"end": 3063,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 3002,
											"end": 3063,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3063,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3063,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3002,
											"end": 3063,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3063,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 3002,
											"end": 3063,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3063,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3063,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3063,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3063,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 3002,
											"end": 3063,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3063,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 3002,
											"end": 3063,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3002,
											"end": 3063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3063,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3063,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3063,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3063,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3063,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3002,
											"end": 3063,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3063,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3063,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3063,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3063,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3063,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3063,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 3002,
											"end": 3063,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3002,
											"end": 3063,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3063,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3063,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 3002,
											"end": 3063,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3063,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3063,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3063,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3063,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3063,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3063,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3063,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "166"
										},
										{
											"begin": 3002,
											"end": 3063,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3063,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3002,
											"end": 3063,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3063,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3063,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3002,
											"end": 3063,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3063,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "166"
										},
										{
											"begin": 3002,
											"end": 3063,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3063,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3063,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3063,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3002,
											"end": 3063,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2982,
											"end": 2985,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2982,
											"end": 2985,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2982,
											"end": 2985,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 2982,
											"end": 2985,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2982,
											"end": 2985,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 2982,
											"end": 2985,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2982,
											"end": 2985,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 2982,
											"end": 2985,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2982,
											"end": 2985,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2982,
											"end": 2985,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2982,
											"end": 2985,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2950,
											"end": 3075,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 2950,
											"end": 3075,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2950,
											"end": 3075,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 2950,
											"end": 3075,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2950,
											"end": 3075,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 3082,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2601,
											"end": 3082,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2601,
											"end": 3082,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2601,
											"end": 3082,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2601,
											"end": 3082,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3485,
											"end": 3880,
											"name": "tag",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 3485,
											"end": 3880,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 483,
											"end": 494,
											"name": "PUSH",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 483,
											"end": 494,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 494,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 483,
											"end": 494,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 483,
											"end": 494,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 483,
											"end": 494,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 483,
											"end": 494,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 483,
											"end": 494,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 483,
											"end": 494,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 483,
											"end": 494,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 483,
											"end": 494,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 469,
											"end": 494,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 469,
											"end": 494,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 469,
											"end": 479,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 469,
											"end": 494,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 469,
											"end": 494,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 469,
											"end": 494,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 461,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 461,
											"end": 567,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 461,
											"end": 567,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 461,
											"end": 567,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 461,
											"end": 567,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 461,
											"end": 567,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 461,
											"end": 567,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 461,
											"end": 567,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 461,
											"end": 567,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 461,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 461,
											"end": 567,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 461,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 461,
											"end": 567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 461,
											"end": 567,
											"name": "tag",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 461,
											"end": 567,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 461,
											"end": 567,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 461,
											"end": 567,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 461,
											"end": 567,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 461,
											"end": 567,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 461,
											"end": 567,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 461,
											"end": 567,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 461,
											"end": 567,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 461,
											"end": 567,
											"name": "tag",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 461,
											"end": 567,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3599,
											"end": 3600,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3582,
											"end": 3601,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3582,
											"end": 3601,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3582,
											"end": 3587,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3582,
											"end": 3601,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3582,
											"end": 3601,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3582,
											"end": 3601,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3574,
											"end": 3637,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 3574,
											"end": 3637,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3574,
											"end": 3637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3574,
											"end": 3637,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3574,
											"end": 3637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3574,
											"end": 3637,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3574,
											"end": 3637,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3574,
											"end": 3637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3574,
											"end": 3637,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3574,
											"end": 3637,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 3574,
											"end": 3637,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3574,
											"end": 3637,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 3574,
											"end": 3637,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3574,
											"end": 3637,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 3574,
											"end": 3637,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3574,
											"end": 3637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3574,
											"end": 3637,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3574,
											"end": 3637,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3574,
											"end": 3637,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3574,
											"end": 3637,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3574,
											"end": 3637,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3574,
											"end": 3637,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3574,
											"end": 3637,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 3574,
											"end": 3637,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3665,
											"end": 3666,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3656,
											"end": 3662,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3656,
											"end": 3666,
											"modifierDepth": 1,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3648,
											"end": 3703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 3648,
											"end": 3703,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3648,
											"end": 3703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3648,
											"end": 3703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3648,
											"end": 3703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3648,
											"end": 3703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3648,
											"end": 3703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3648,
											"end": 3703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3648,
											"end": 3703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3648,
											"end": 3703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 3648,
											"end": 3703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3648,
											"end": 3703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 3648,
											"end": 3703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3648,
											"end": 3703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 3648,
											"end": 3703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3648,
											"end": 3703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3648,
											"end": 3703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3648,
											"end": 3703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3648,
											"end": 3703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3648,
											"end": 3703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3648,
											"end": 3703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3648,
											"end": 3703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3648,
											"end": 3703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 3648,
											"end": 3703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3714,
											"end": 3728,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3731,
											"end": 3739,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 3731,
											"end": 3746,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3731,
											"end": 3746,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3731,
											"end": 3746,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3731,
											"end": 3746,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3714,
											"end": 3746,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3714,
											"end": 3746,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3762,
											"end": 3771,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3757,
											"end": 3873,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 3757,
											"end": 3873,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3781,
											"end": 3787,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3777,
											"end": 3778,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3777,
											"end": 3787,
											"modifierDepth": 1,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 3757,
											"end": 3873,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3757,
											"end": 3873,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "178"
										},
										{
											"begin": 3757,
											"end": 3873,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3817,
											"end": 3825,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 3826,
											"end": 3827,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3817,
											"end": 3828,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3817,
											"end": 3828,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3817,
											"end": 3828,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3817,
											"end": 3828,
											"modifierDepth": 1,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 3817,
											"end": 3828,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 3817,
											"end": 3828,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3817,
											"end": 3828,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 3817,
											"end": 3828,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 3817,
											"end": 3828,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3817,
											"end": 3828,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 3817,
											"end": 3828,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3817,
											"end": 3828,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 3817,
											"end": 3828,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3817,
											"end": 3828,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3817,
											"end": 3828,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3817,
											"end": 3828,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3817,
											"end": 3828,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3817,
											"end": 3828,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3817,
											"end": 3828,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3817,
											"end": 3828,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3817,
											"end": 3828,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3817,
											"end": 3828,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3817,
											"end": 3828,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3817,
											"end": 3828,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3817,
											"end": 3828,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3817,
											"end": 3828,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3817,
											"end": 3828,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3817,
											"end": 3828,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3817,
											"end": 3828,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3817,
											"end": 3828,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3809,
											"end": 3846,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3809,
											"end": 3846,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3809,
											"end": 3846,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "372491A2"
										},
										{
											"begin": 3847,
											"end": 3852,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3854,
											"end": 3860,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3809,
											"end": 3861,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3809,
											"end": 3861,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3809,
											"end": 3861,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3809,
											"end": 3861,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3809,
											"end": 3861,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3809,
											"end": 3861,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 3809,
											"end": 3861,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 3809,
											"end": 3861,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3809,
											"end": 3861,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3809,
											"end": 3861,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3809,
											"end": 3861,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3809,
											"end": 3861,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 3809,
											"end": 3861,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3809,
											"end": 3861,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3809,
											"end": 3861,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3809,
											"end": 3861,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 3809,
											"end": 3861,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3809,
											"end": 3861,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 3809,
											"end": 3861,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3809,
											"end": 3861,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3809,
											"end": 3861,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3809,
											"end": 3861,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3809,
											"end": 3861,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3809,
											"end": 3861,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3809,
											"end": 3861,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3809,
											"end": 3861,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3809,
											"end": 3861,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3809,
											"end": 3861,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3809,
											"end": 3861,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3809,
											"end": 3861,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 3809,
											"end": 3861,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3809,
											"end": 3861,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3809,
											"end": 3861,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3809,
											"end": 3861,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 3809,
											"end": 3861,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3809,
											"end": 3861,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3809,
											"end": 3861,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3809,
											"end": 3861,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3809,
											"end": 3861,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 3809,
											"end": 3861,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3809,
											"end": 3861,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3809,
											"end": 3861,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 3809,
											"end": 3861,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 3809,
											"end": 3861,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3809,
											"end": 3861,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3809,
											"end": 3861,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3809,
											"end": 3861,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 3809,
											"end": 3861,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3809,
											"end": 3861,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3809,
											"end": 3861,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3809,
											"end": 3861,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3809,
											"end": 3861,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 3809,
											"end": 3861,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3809,
											"end": 3861,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3809,
											"end": 3861,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3809,
											"end": 3861,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 3809,
											"end": 3861,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3809,
											"end": 3861,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3809,
											"end": 3861,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3809,
											"end": 3861,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3809,
											"end": 3861,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3789,
											"end": 3792,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3789,
											"end": 3792,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3789,
											"end": 3792,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 3789,
											"end": 3792,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3789,
											"end": 3792,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 3789,
											"end": 3792,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3789,
											"end": 3792,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 3789,
											"end": 3792,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3789,
											"end": 3792,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3789,
											"end": 3792,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3789,
											"end": 3792,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3757,
											"end": 3873,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 3757,
											"end": 3873,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3757,
											"end": 3873,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "178"
										},
										{
											"begin": 3757,
											"end": 3873,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3757,
											"end": 3873,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3880,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3485,
											"end": 3880,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3485,
											"end": 3880,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3485,
											"end": 3880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1487,
											"end": 1494,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1519,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1519,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1441,
											"end": 1526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1950,
											"end": 2593,
											"name": "tag",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 1950,
											"end": 2593,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1334,
											"end": 1347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2055,
											"end": 2056,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2036,
											"end": 2057,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2036,
											"end": 2057,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2036,
											"end": 2043,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2036,
											"end": 2057,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2036,
											"end": 2057,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2036,
											"end": 2057,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2028,
											"end": 2093,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 2028,
											"end": 2093,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2028,
											"end": 2093,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2028,
											"end": 2093,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2028,
											"end": 2093,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2028,
											"end": 2093,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2028,
											"end": 2093,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2028,
											"end": 2093,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2028,
											"end": 2093,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2028,
											"end": 2093,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 2028,
											"end": 2093,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2028,
											"end": 2093,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 2028,
											"end": 2093,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2028,
											"end": 2093,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 2028,
											"end": 2093,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2028,
											"end": 2093,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2028,
											"end": 2093,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2028,
											"end": 2093,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2028,
											"end": 2093,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2028,
											"end": 2093,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2028,
											"end": 2093,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2028,
											"end": 2093,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2028,
											"end": 2093,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 2028,
											"end": 2093,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2112,
											"end": 2124,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 2112,
											"end": 2133,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2125,
											"end": 2132,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2112,
											"end": 2133,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2112,
											"end": 2133,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2112,
											"end": 2133,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2112,
											"end": 2133,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2112,
											"end": 2133,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2112,
											"end": 2133,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2112,
											"end": 2133,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2112,
											"end": 2133,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2112,
											"end": 2133,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2112,
											"end": 2133,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2112,
											"end": 2133,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2112,
											"end": 2133,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2112,
											"end": 2133,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2112,
											"end": 2133,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2112,
											"end": 2133,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2112,
											"end": 2133,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2112,
											"end": 2133,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2112,
											"end": 2133,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2112,
											"end": 2133,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2112,
											"end": 2133,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2112,
											"end": 2133,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2112,
											"end": 2133,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2112,
											"end": 2133,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 2112,
											"end": 2133,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 2112,
											"end": 2133,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2104,
											"end": 2154,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 2104,
											"end": 2154,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2104,
											"end": 2154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2104,
											"end": 2154,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2104,
											"end": 2154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2104,
											"end": 2154,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2104,
											"end": 2154,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2104,
											"end": 2154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2104,
											"end": 2154,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2104,
											"end": 2154,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 2104,
											"end": 2154,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2104,
											"end": 2154,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 2104,
											"end": 2154,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2104,
											"end": 2154,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 2104,
											"end": 2154,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2104,
											"end": 2154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2104,
											"end": 2154,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2104,
											"end": 2154,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2104,
											"end": 2154,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2104,
											"end": 2154,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2104,
											"end": 2154,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2104,
											"end": 2154,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2104,
											"end": 2154,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 2104,
											"end": 2154,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2165,
											"end": 2179,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2182,
											"end": 2190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 2182,
											"end": 2197,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2182,
											"end": 2197,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2182,
											"end": 2197,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2182,
											"end": 2197,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2165,
											"end": 2197,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2165,
											"end": 2197,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2213,
											"end": 2222,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2208,
											"end": 2586,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 2208,
											"end": 2586,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2232,
											"end": 2238,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2228,
											"end": 2229,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2228,
											"end": 2238,
											"modifierDepth": 1,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2208,
											"end": 2586,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2208,
											"end": 2586,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 2208,
											"end": 2586,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2279,
											"end": 2286,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2264,
											"end": 2286,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2264,
											"end": 2286,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2264,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 2273,
											"end": 2274,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2264,
											"end": 2275,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2264,
											"end": 2275,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2264,
											"end": 2275,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2264,
											"end": 2275,
											"modifierDepth": 1,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2264,
											"end": 2275,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 2264,
											"end": 2275,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2264,
											"end": 2275,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 2264,
											"end": 2275,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 2264,
											"end": 2275,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2264,
											"end": 2275,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 2264,
											"end": 2275,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2264,
											"end": 2275,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 2264,
											"end": 2275,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2264,
											"end": 2275,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2264,
											"end": 2275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2264,
											"end": 2275,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2264,
											"end": 2275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2264,
											"end": 2275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2264,
											"end": 2275,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2264,
											"end": 2275,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2264,
											"end": 2275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2264,
											"end": 2275,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2264,
											"end": 2275,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2264,
											"end": 2275,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2264,
											"end": 2275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2264,
											"end": 2275,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2264,
											"end": 2275,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2264,
											"end": 2275,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 2264,
											"end": 2275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2264,
											"end": 2275,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2264,
											"end": 2286,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2264,
											"end": 2286,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2264,
											"end": 2286,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2260,
											"end": 2575,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 2260,
											"end": 2575,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2315,
											"end": 2322,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2307,
											"end": 2340,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2307,
											"end": 2340,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2307,
											"end": 2340,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "694A5FB"
										},
										{
											"begin": 2349,
											"end": 2353,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 2307,
											"end": 2355,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2307,
											"end": 2355,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2307,
											"end": 2355,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2307,
											"end": 2355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2388,
											"end": 2396,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 2406,
											"end": 2407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2397,
											"end": 2403,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2397,
											"end": 2407,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 2397,
											"end": 2407,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2397,
											"end": 2407,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2397,
											"end": 2407,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 2397,
											"end": 2407,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2397,
											"end": 2407,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 2397,
											"end": 2407,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2388,
											"end": 2408,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2388,
											"end": 2408,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2388,
											"end": 2408,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2388,
											"end": 2408,
											"modifierDepth": 1,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2388,
											"end": 2408,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 2388,
											"end": 2408,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2388,
											"end": 2408,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 2388,
											"end": 2408,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 2388,
											"end": 2408,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2388,
											"end": 2408,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 2388,
											"end": 2408,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2388,
											"end": 2408,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 2388,
											"end": 2408,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2388,
											"end": 2408,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2388,
											"end": 2408,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2388,
											"end": 2408,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2388,
											"end": 2408,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2388,
											"end": 2408,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2388,
											"end": 2408,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2388,
											"end": 2408,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2388,
											"end": 2408,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2388,
											"end": 2408,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2388,
											"end": 2408,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2388,
											"end": 2408,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2388,
											"end": 2408,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2388,
											"end": 2408,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2388,
											"end": 2408,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2388,
											"end": 2408,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 2388,
											"end": 2408,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2388,
											"end": 2408,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2374,
											"end": 2382,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 2383,
											"end": 2384,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2374,
											"end": 2385,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2374,
											"end": 2385,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2374,
											"end": 2385,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2374,
											"end": 2385,
											"modifierDepth": 1,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2374,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 2374,
											"end": 2385,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2374,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 2374,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 2374,
											"end": 2385,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2374,
											"end": 2385,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 2374,
											"end": 2385,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2374,
											"end": 2385,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 2374,
											"end": 2385,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2374,
											"end": 2385,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2374,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2374,
											"end": 2385,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2374,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2374,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2374,
											"end": 2385,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2374,
											"end": 2385,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2374,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2374,
											"end": 2408,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2374,
											"end": 2408,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2374,
											"end": 2408,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2374,
											"end": 2408,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2374,
											"end": 2408,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2374,
											"end": 2408,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2374,
											"end": 2408,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2374,
											"end": 2408,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2374,
											"end": 2408,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2374,
											"end": 2408,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2374,
											"end": 2408,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2374,
											"end": 2408,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2374,
											"end": 2408,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2374,
											"end": 2408,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2374,
											"end": 2408,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2374,
											"end": 2408,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2374,
											"end": 2408,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2374,
											"end": 2408,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2427,
											"end": 2435,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 2427,
											"end": 2441,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2427,
											"end": 2441,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2427,
											"end": 2441,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2427,
											"end": 2441,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 2427,
											"end": 2441,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2427,
											"end": 2441,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 2427,
											"end": 2441,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 2427,
											"end": 2441,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2427,
											"end": 2441,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 2427,
											"end": 2441,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2427,
											"end": 2441,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 2427,
											"end": 2441,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2427,
											"end": 2441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2427,
											"end": 2441,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2427,
											"end": 2441,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2427,
											"end": 2441,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2427,
											"end": 2441,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2427,
											"end": 2441,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2427,
											"end": 2441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2427,
											"end": 2441,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2427,
											"end": 2441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2427,
											"end": 2441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2427,
											"end": 2441,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2427,
											"end": 2441,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2427,
											"end": 2441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2427,
											"end": 2441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2427,
											"end": 2441,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2427,
											"end": 2441,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2427,
											"end": 2441,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2427,
											"end": 2441,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2427,
											"end": 2441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2427,
											"end": 2441,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2427,
											"end": 2441,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2427,
											"end": 2441,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2427,
											"end": 2441,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2427,
											"end": 2441,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2427,
											"end": 2441,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2427,
											"end": 2441,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2484,
											"end": 2489,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2460,
											"end": 2472,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 2460,
											"end": 2481,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2473,
											"end": 2480,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2460,
											"end": 2481,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2460,
											"end": 2481,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2460,
											"end": 2481,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2460,
											"end": 2481,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2460,
											"end": 2481,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2460,
											"end": 2481,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2460,
											"end": 2481,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2481,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2460,
											"end": 2481,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2460,
											"end": 2481,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2460,
											"end": 2481,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2460,
											"end": 2481,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2481,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2460,
											"end": 2481,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2460,
											"end": 2481,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2460,
											"end": 2481,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2460,
											"end": 2489,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2460,
											"end": 2489,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2460,
											"end": 2489,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2460,
											"end": 2489,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2460,
											"end": 2489,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2460,
											"end": 2489,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 2460,
											"end": 2489,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2460,
											"end": 2489,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2460,
											"end": 2489,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2460,
											"end": 2489,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2460,
											"end": 2489,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2460,
											"end": 2489,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2460,
											"end": 2489,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2460,
											"end": 2489,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2460,
											"end": 2489,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2460,
											"end": 2489,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2460,
											"end": 2489,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2460,
											"end": 2489,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2527,
											"end": 2534,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2513,
											"end": 2535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2513,
											"end": 2535,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2513,
											"end": 2535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "A1EE69F55C33D8467C69CA59CE2007A737A88603D75392972520BF67CB513B8"
										},
										{
											"begin": 2513,
											"end": 2535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2513,
											"end": 2535,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2513,
											"end": 2535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2513,
											"end": 2535,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2513,
											"end": 2535,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2513,
											"end": 2535,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2513,
											"end": 2535,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2513,
											"end": 2535,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2513,
											"end": 2535,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 2554,
											"end": 2559,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 2554,
											"end": 2559,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2260,
											"end": 2575,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 2260,
											"end": 2575,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2240,
											"end": 2243,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2240,
											"end": 2243,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2240,
											"end": 2243,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 2240,
											"end": 2243,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2240,
											"end": 2243,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 2240,
											"end": 2243,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2240,
											"end": 2243,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 2240,
											"end": 2243,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2240,
											"end": 2243,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2240,
											"end": 2243,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2240,
											"end": 2243,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2208,
											"end": 2586,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 2208,
											"end": 2586,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2208,
											"end": 2586,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 2208,
											"end": 2586,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2208,
											"end": 2586,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2593,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1950,
											"end": 2593,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1950,
											"end": 2593,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4640,
											"end": 4765,
											"name": "tag",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 4640,
											"end": 4765,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4712,
											"end": 4716,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4736,
											"end": 4748,
											"name": "PUSH",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 4736,
											"end": 4757,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4749,
											"end": 4756,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4736,
											"end": 4757,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4736,
											"end": 4757,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4736,
											"end": 4757,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4736,
											"end": 4757,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4736,
											"end": 4757,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4736,
											"end": 4757,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4736,
											"end": 4757,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4736,
											"end": 4757,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4736,
											"end": 4757,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4736,
											"end": 4757,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4736,
											"end": 4757,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4736,
											"end": 4757,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4736,
											"end": 4757,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4736,
											"end": 4757,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4736,
											"end": 4757,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4736,
											"end": 4757,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4736,
											"end": 4757,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4736,
											"end": 4757,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4736,
											"end": 4757,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4736,
											"end": 4757,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 4736,
											"end": 4757,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 4736,
											"end": 4757,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4736,
											"end": 4757,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 4736,
											"end": 4757,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 4736,
											"end": 4757,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4729,
											"end": 4757,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4729,
											"end": 4757,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4640,
											"end": 4765,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4640,
											"end": 4765,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4640,
											"end": 4765,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4640,
											"end": 4765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4773,
											"end": 4879,
											"name": "tag",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 4773,
											"end": 4879,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4827,
											"end": 4843,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 4863,
											"end": 4871,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "tag",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "tag",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4856,
											"end": 4871,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4773,
											"end": 4879,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4773,
											"end": 4879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 595,
											"end": 667,
											"name": "tag",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 595,
											"end": 667,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3279,
											"end": 3298,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3301,
											"end": 3315,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3279,
											"end": 3315,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3279,
											"end": 3315,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3361,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3380,
											"end": 3381,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3365,
											"end": 3381,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 3365,
											"end": 3381,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3365,
											"end": 3381,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3346,
											"end": 3454,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3346,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 3346,
											"end": 3454,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3346,
											"end": 3454,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3388,
											"end": 3432,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 3426,
											"end": 3430,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 3388,
											"end": 3417,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 3388,
											"end": 3432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3388,
											"end": 3432,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 3388,
											"end": 3432,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3387,
											"end": 3432,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3452,
											"end": 3453,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3436,
											"end": 3453,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 3436,
											"end": 3453,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3436,
											"end": 3453,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3346,
											"end": 3454,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 3346,
											"end": 3454,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 3325,
											"end": 3526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3552,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3536,
											"end": 3548,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3536,
											"end": 3548,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3566,
											"end": 3580,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3612,
											"end": 3616,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3596,
											"end": 3609,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3596,
											"end": 3609,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 643,
											"end": 659,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 643,
											"end": 657,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 643,
											"end": 659,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 643,
											"end": 659,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 643,
											"end": 659,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3651,
											"end": 3665,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3697,
											"end": 3702,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3681,
											"end": 3694,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3681,
											"end": 3694,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH",
											"source": 5,
											"value": "7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498"
										},
										{
											"begin": 3733,
											"end": 3734,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 3721,
											"end": 3735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "LOG1",
											"source": 5
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3269,
											"end": 3752,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 595,
											"end": 667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4998,
											"end": 5368,
											"name": "tag",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 4998,
											"end": 5368,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5095,
											"end": 5099,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5112,
											"end": 5126,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5129,
											"end": 5137,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 5129,
											"end": 5144,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5129,
											"end": 5144,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5129,
											"end": 5144,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5129,
											"end": 5144,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5112,
											"end": 5144,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5112,
											"end": 5144,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5160,
											"end": 5169,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5155,
											"end": 5339,
											"name": "tag",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 5155,
											"end": 5339,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5179,
											"end": 5185,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5175,
											"end": 5176,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5175,
											"end": 5185,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 5155,
											"end": 5339,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5155,
											"end": 5339,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 5155,
											"end": 5339,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5220,
											"end": 5228,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 5229,
											"end": 5230,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5220,
											"end": 5231,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5220,
											"end": 5231,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5220,
											"end": 5231,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5220,
											"end": 5231,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 5220,
											"end": 5231,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 5220,
											"end": 5231,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5220,
											"end": 5231,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 5220,
											"end": 5231,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 5220,
											"end": 5231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5220,
											"end": 5231,
											"name": "tag",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 5220,
											"end": 5231,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5220,
											"end": 5231,
											"name": "tag",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 5220,
											"end": 5231,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5220,
											"end": 5231,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5220,
											"end": 5231,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5220,
											"end": 5231,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5220,
											"end": 5231,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5220,
											"end": 5231,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5220,
											"end": 5231,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5220,
											"end": 5231,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5220,
											"end": 5231,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5220,
											"end": 5231,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5220,
											"end": 5231,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5220,
											"end": 5231,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5220,
											"end": 5231,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 5220,
											"end": 5231,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 5220,
											"end": 5231,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5220,
											"end": 5231,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 5220,
											"end": 5231,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5220,
											"end": 5231,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5244,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5212,
											"end": 5244,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5244,
											"name": "PUSH",
											"source": 11,
											"value": "13B7CE4"
										},
										{
											"begin": 5245,
											"end": 5250,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 5252,
											"end": 5255,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 5257,
											"end": 5263,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 5273,
											"end": 5277,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 5212,
											"end": 5279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "tag",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "tag",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 5212,
											"end": 5279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "tag",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 5212,
											"end": 5279,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5207,
											"end": 5328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 5207,
											"end": 5328,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5307,
											"end": 5312,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5300,
											"end": 5312,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5300,
											"end": 5312,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5300,
											"end": 5312,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5300,
											"end": 5312,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5300,
											"end": 5312,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 5300,
											"end": 5312,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5207,
											"end": 5328,
											"name": "tag",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 5207,
											"end": 5328,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5187,
											"end": 5190,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5187,
											"end": 5190,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5187,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 5187,
											"end": 5190,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5187,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 5187,
											"end": 5190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5187,
											"end": 5190,
											"name": "tag",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 5187,
											"end": 5190,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5187,
											"end": 5190,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5187,
											"end": 5190,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5187,
											"end": 5190,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5155,
											"end": 5339,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 5155,
											"end": 5339,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5155,
											"end": 5339,
											"name": "tag",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 5155,
											"end": 5339,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5155,
											"end": 5339,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5356,
											"end": 5360,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5349,
											"end": 5360,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5349,
											"end": 5360,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5349,
											"end": 5360,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4998,
											"end": 5368,
											"name": "tag",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 4998,
											"end": 5368,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4998,
											"end": 5368,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 4998,
											"end": 5368,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4998,
											"end": 5368,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4998,
											"end": 5368,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4998,
											"end": 5368,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4998,
											"end": 5368,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3888,
											"end": 4632,
											"name": "tag",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 3888,
											"end": 4632,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1334,
											"end": 1347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4005,
											"end": 4017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 4005,
											"end": 4026,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4018,
											"end": 4025,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4005,
											"end": 4026,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4005,
											"end": 4026,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4005,
											"end": 4026,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4005,
											"end": 4026,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4005,
											"end": 4026,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4005,
											"end": 4026,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4005,
											"end": 4026,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4005,
											"end": 4026,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4005,
											"end": 4026,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4005,
											"end": 4026,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4005,
											"end": 4026,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4005,
											"end": 4026,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4005,
											"end": 4026,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4005,
											"end": 4026,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4005,
											"end": 4026,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4005,
											"end": 4026,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4005,
											"end": 4026,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4005,
											"end": 4026,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4005,
											"end": 4026,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4005,
											"end": 4026,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 4005,
											"end": 4026,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 4005,
											"end": 4026,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4005,
											"end": 4026,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 4005,
											"end": 4026,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 4005,
											"end": 4026,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3997,
											"end": 4056,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 3997,
											"end": 4056,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3997,
											"end": 4056,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3997,
											"end": 4056,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3997,
											"end": 4056,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3997,
											"end": 4056,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3997,
											"end": 4056,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3997,
											"end": 4056,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3997,
											"end": 4056,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3997,
											"end": 4056,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 3997,
											"end": 4056,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3997,
											"end": 4056,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 3997,
											"end": 4056,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3997,
											"end": 4056,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 3997,
											"end": 4056,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3997,
											"end": 4056,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3997,
											"end": 4056,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3997,
											"end": 4056,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3997,
											"end": 4056,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3997,
											"end": 4056,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3997,
											"end": 4056,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3997,
											"end": 4056,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3997,
											"end": 4056,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 3997,
											"end": 4056,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4122,
											"end": 4126,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4116,
											"end": 4127,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4190,
											"end": 4205,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4173,
											"end": 4188,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4154,
											"end": 4171,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4141,
											"end": 4206,
											"modifierDepth": 1,
											"name": "CALLDATACOPY",
											"source": 11
										},
										{
											"begin": 4399,
											"end": 4400,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4383,
											"end": 4384,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4353,
											"end": 4368,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4321,
											"end": 4338,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4305,
											"end": 4306,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4283,
											"end": 4290,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4263,
											"end": 4268,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 4244,
											"end": 4415,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 4220,
											"end": 4547,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 4220,
											"end": 4547,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4470,
											"end": 4486,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4467,
											"end": 4468,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4464,
											"end": 4465,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4449,
											"end": 4487,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 4515,
											"end": 4531,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4512,
											"end": 4513,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4505,
											"end": 4532,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4220,
											"end": 4547,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 4220,
											"end": 4547,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4076,
											"end": 4558,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4593,
											"end": 4600,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4575,
											"end": 4622,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4575,
											"end": 4622,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4575,
											"end": 4622,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20D79DE70ADCC6E9353D8A9A5646B46DC352710D0A310B1AD1F67FAECA7EF891"
										},
										{
											"begin": 4602,
											"end": 4621,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 4612,
											"end": 4620,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4612,
											"end": 4620,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4602,
											"end": 4611,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 4602,
											"end": 4621,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4602,
											"end": 4621,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 4602,
											"end": 4621,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4575,
											"end": 4622,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4575,
											"end": 4622,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4575,
											"end": 4622,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 4575,
											"end": 4622,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4575,
											"end": 4622,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4575,
											"end": 4622,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 4575,
											"end": 4622,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4575,
											"end": 4622,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 4575,
											"end": 4622,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4575,
											"end": 4622,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4575,
											"end": 4622,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4575,
											"end": 4622,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4575,
											"end": 4622,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4575,
											"end": 4622,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4575,
											"end": 4622,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4575,
											"end": 4622,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 3888,
											"end": 4632,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3888,
											"end": 4632,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3888,
											"end": 4632,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3888,
											"end": 4632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1334,
											"end": 1347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2422,
											"end": 2423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2402,
											"end": 2424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2402,
											"end": 2424,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2410,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2402,
											"end": 2424,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2424,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 2394,
											"end": 2467,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2505,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 2496,
											"end": 2504,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2495,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 2477,
											"end": 2505,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2505,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 2477,
											"end": 2505,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2314,
											"end": 2512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1599,
											"end": 1729,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1599,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1673,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 1673,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 1673,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1673,
											"end": 1685,
											"name": "tag",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 1673,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1685,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1662,
											"end": 1685,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1669,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 1662,
											"end": 1667,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1662,
											"end": 1669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1669,
											"name": "tag",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 1662,
											"end": 1669,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1685,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1662,
											"end": 1685,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1685,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 1654,
											"end": 1722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "tag",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "tag",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1599,
											"end": 1729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2853,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 2666,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2739,
											"end": 2755,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "PUSH",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2739,
											"end": 2764,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2739,
											"end": 2764,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2783,
											"end": 2791,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2774,
											"end": 2780,
											"name": "PUSH",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2774,
											"end": 2780,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2837,
											"end": 2845,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2806,
											"end": 2846,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2806,
											"end": 2846,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2827,
											"end": 2835,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2806,
											"end": 2846,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2806,
											"end": 2846,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2806,
											"end": 2846,
											"name": "PUSH",
											"source": 4,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2806,
											"end": 2846,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2806,
											"end": 2846,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2806,
											"end": 2846,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2806,
											"end": 2846,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2806,
											"end": 2846,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2806,
											"end": 2846,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2806,
											"end": 2846,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2806,
											"end": 2846,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2806,
											"end": 2846,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 2729,
											"end": 2853,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2853,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1423,
											"end": 1743,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 1423,
											"end": 1743,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1483,
											"end": 1487,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1735,
											"end": 1736,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1736,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1706,
											"end": 1736,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1706,
											"end": 1736,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1423,
											"end": 1743,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1423,
											"end": 1743,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1423,
											"end": 1743,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1423,
											"end": 1743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1003,
											"end": 1098,
											"name": "tag",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 1003,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 5366,
											"end": 5435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "tag",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "tag",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1065,
											"end": 1091,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 1065,
											"end": 1089,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 1065,
											"end": 1091,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1065,
											"end": 1091,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 1065,
											"end": 1091,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1003,
											"end": 1098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5376,
											"end": 5610,
											"name": "tag",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 5376,
											"end": 5610,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5443,
											"end": 5456,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5473,
											"end": 5481,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5473,
											"end": 5481,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5473,
											"end": 5488,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5473,
											"end": 5488,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5473,
											"end": 5493,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 5469,
											"end": 5603,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 5469,
											"end": 5603,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5561,
											"end": 5576,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5577,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 5538,
											"end": 5577,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5538,
											"end": 5577,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5469,
											"end": 5603,
											"name": "tag",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 5469,
											"end": 5603,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5376,
											"end": 5610,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5376,
											"end": 5610,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5376,
											"end": 5610,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5376,
											"end": 5610,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5376,
											"end": 5610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 850,
											"end": 946,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 850,
											"end": 946,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 903,
											"end": 910,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 922,
											"end": 939,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 922,
											"end": 939,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 850,
											"end": 946,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 850,
											"end": 946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1104,
											"end": 1215,
											"name": "tag",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 1104,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 5366,
											"end": 5435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "tag",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "tag",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 1195,
											"end": 1207,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 1195,
											"end": 1205,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 1195,
											"end": 1207,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1195,
											"end": 1207,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 1195,
											"end": 1207,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 1176,
											"end": 1208,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1208,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 1176,
											"end": 1208,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1104,
											"end": 1215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 19,
											"value": "300"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 19,
											"value": "301"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 19,
											"value": "302"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 19,
											"value": "303"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "371"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "302"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 19,
											"value": "371"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 19,
											"value": "304"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "373"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "303"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 19,
											"value": "373"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "374"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 19,
											"value": "374"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 19,
											"value": "305"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "376"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "304"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 19,
											"value": "376"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "378"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "379"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "300"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 19,
											"value": "379"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 19,
											"value": "378"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "380"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "305"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 19,
											"value": "380"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 19,
											"value": "306"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1381,
											"name": "tag",
											"source": 19,
											"value": "307"
										},
										{
											"begin": 1259,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "383"
										},
										{
											"begin": 1350,
											"end": 1355,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "306"
										},
										{
											"begin": 1332,
											"end": 1356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "tag",
											"source": 19,
											"value": "383"
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1325,
											"end": 1330,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1322,
											"end": 1357,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "384"
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1371,
											"end": 1372,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1368,
											"end": 1369,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1361,
											"end": 1373,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "tag",
											"source": 19,
											"value": "384"
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1381,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "tag",
											"source": 19,
											"value": "308"
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1433,
											"end": 1438,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1458,
											"end": 1478,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 1449,
											"end": 1478,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1449,
											"end": 1478,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "386"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "307"
										},
										{
											"begin": 1487,
											"end": 1520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "tag",
											"source": 19,
											"value": "386"
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1387,
											"end": 1526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1532,
											"end": 2006,
											"name": "tag",
											"source": 19,
											"value": "34"
										},
										{
											"begin": 1532,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1600,
											"end": 1606,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1608,
											"end": 1614,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1657,
											"end": 1659,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1645,
											"end": 1654,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1636,
											"end": 1643,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 1632,
											"end": 1655,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 1628,
											"end": 1660,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 1625,
											"end": 1744,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1625,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "388"
										},
										{
											"begin": 1625,
											"end": 1744,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1663,
											"end": 1742,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "389"
										},
										{
											"begin": 1663,
											"end": 1742,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "300"
										},
										{
											"begin": 1663,
											"end": 1742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1663,
											"end": 1742,
											"name": "tag",
											"source": 19,
											"value": "389"
										},
										{
											"begin": 1663,
											"end": 1742,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1625,
											"end": 1744,
											"name": "tag",
											"source": 19,
											"value": "388"
										},
										{
											"begin": 1625,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1783,
											"end": 1784,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1808,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "390"
										},
										{
											"begin": 1853,
											"end": 1860,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 1844,
											"end": 1850,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1833,
											"end": 1842,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 1829,
											"end": 1851,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1808,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "305"
										},
										{
											"begin": 1808,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1808,
											"end": 1861,
											"name": "tag",
											"source": 19,
											"value": "390"
										},
										{
											"begin": 1808,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1798,
											"end": 1861,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1798,
											"end": 1861,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1754,
											"end": 1871,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1910,
											"end": 1912,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "391"
										},
										{
											"begin": 1981,
											"end": 1988,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 1972,
											"end": 1978,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1961,
											"end": 1970,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 1957,
											"end": 1979,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "308"
										},
										{
											"begin": 1936,
											"end": 1989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "tag",
											"source": 19,
											"value": "391"
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1926,
											"end": 1989,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1926,
											"end": 1989,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1881,
											"end": 1999,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1532,
											"end": 2006,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1532,
											"end": 2006,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1532,
											"end": 2006,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1532,
											"end": 2006,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1532,
											"end": 2006,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1532,
											"end": 2006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2012,
											"end": 2130,
											"name": "tag",
											"source": 19,
											"value": "309"
										},
										{
											"begin": 2012,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2099,
											"end": 2123,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "393"
										},
										{
											"begin": 2117,
											"end": 2122,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2099,
											"end": 2123,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "303"
										},
										{
											"begin": 2099,
											"end": 2123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2099,
											"end": 2123,
											"name": "tag",
											"source": 19,
											"value": "393"
										},
										{
											"begin": 2099,
											"end": 2123,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2094,
											"end": 2097,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2087,
											"end": 2124,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2012,
											"end": 2130,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2012,
											"end": 2130,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2012,
											"end": 2130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2136,
											"end": 2358,
											"name": "tag",
											"source": 19,
											"value": "39"
										},
										{
											"begin": 2136,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2229,
											"end": 2233,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2267,
											"end": 2269,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2256,
											"end": 2265,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2252,
											"end": 2270,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2244,
											"end": 2270,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2244,
											"end": 2270,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2280,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "395"
										},
										{
											"begin": 2348,
											"end": 2349,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2337,
											"end": 2346,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2333,
											"end": 2350,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2324,
											"end": 2330,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2280,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "309"
										},
										{
											"begin": 2280,
											"end": 2351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2280,
											"end": 2351,
											"name": "tag",
											"source": 19,
											"value": "395"
										},
										{
											"begin": 2280,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2136,
											"end": 2358,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2136,
											"end": 2358,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2136,
											"end": 2358,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2136,
											"end": 2358,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2136,
											"end": 2358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2364,
											"end": 2983,
											"name": "tag",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 2364,
											"end": 2983,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2441,
											"end": 2447,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2449,
											"end": 2455,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2457,
											"end": 2463,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2508,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 2494,
											"end": 2503,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2485,
											"end": 2492,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 2481,
											"end": 2504,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 2477,
											"end": 2509,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 2474,
											"end": 2593,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 2474,
											"end": 2593,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "397"
										},
										{
											"begin": 2474,
											"end": 2593,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 2512,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "398"
										},
										{
											"begin": 2512,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "300"
										},
										{
											"begin": 2512,
											"end": 2591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2512,
											"end": 2591,
											"name": "tag",
											"source": 19,
											"value": "398"
										},
										{
											"begin": 2512,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2474,
											"end": 2593,
											"name": "tag",
											"source": 19,
											"value": "397"
										},
										{
											"begin": 2474,
											"end": 2593,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2632,
											"end": 2633,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2657,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "399"
										},
										{
											"begin": 2702,
											"end": 2709,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 2693,
											"end": 2699,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2682,
											"end": 2691,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 2678,
											"end": 2700,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2657,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "305"
										},
										{
											"begin": 2657,
											"end": 2710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2657,
											"end": 2710,
											"name": "tag",
											"source": 19,
											"value": "399"
										},
										{
											"begin": 2657,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2647,
											"end": 2710,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 2647,
											"end": 2710,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2603,
											"end": 2720,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2759,
											"end": 2761,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2785,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "400"
										},
										{
											"begin": 2830,
											"end": 2837,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 2821,
											"end": 2827,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2810,
											"end": 2819,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 2806,
											"end": 2828,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2785,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "305"
										},
										{
											"begin": 2785,
											"end": 2838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2785,
											"end": 2838,
											"name": "tag",
											"source": 19,
											"value": "400"
										},
										{
											"begin": 2785,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2775,
											"end": 2838,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2775,
											"end": 2838,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2730,
											"end": 2848,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2887,
											"end": 2889,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 2913,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "401"
										},
										{
											"begin": 2958,
											"end": 2965,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 2949,
											"end": 2955,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2938,
											"end": 2947,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 2934,
											"end": 2956,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2913,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "308"
										},
										{
											"begin": 2913,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2913,
											"end": 2966,
											"name": "tag",
											"source": 19,
											"value": "401"
										},
										{
											"begin": 2913,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2903,
											"end": 2966,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2903,
											"end": 2966,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2858,
											"end": 2976,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2364,
											"end": 2983,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2364,
											"end": 2983,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2364,
											"end": 2983,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2364,
											"end": 2983,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2364,
											"end": 2983,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2364,
											"end": 2983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2989,
											"end": 3079,
											"name": "tag",
											"source": 19,
											"value": "310"
										},
										{
											"begin": 2989,
											"end": 3079,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3023,
											"end": 3030,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3066,
											"end": 3071,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3059,
											"end": 3072,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 3052,
											"end": 3073,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 3041,
											"end": 3073,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3041,
											"end": 3073,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2989,
											"end": 3079,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2989,
											"end": 3079,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2989,
											"end": 3079,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2989,
											"end": 3079,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3085,
											"end": 3194,
											"name": "tag",
											"source": 19,
											"value": "311"
										},
										{
											"begin": 3085,
											"end": 3194,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3166,
											"end": 3187,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "404"
										},
										{
											"begin": 3181,
											"end": 3186,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3166,
											"end": 3187,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "310"
										},
										{
											"begin": 3166,
											"end": 3187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3166,
											"end": 3187,
											"name": "tag",
											"source": 19,
											"value": "404"
										},
										{
											"begin": 3166,
											"end": 3187,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3161,
											"end": 3164,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3154,
											"end": 3188,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3085,
											"end": 3194,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3085,
											"end": 3194,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3085,
											"end": 3194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3200,
											"end": 3410,
											"name": "tag",
											"source": 19,
											"value": "59"
										},
										{
											"begin": 3200,
											"end": 3410,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3287,
											"end": 3291,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3325,
											"end": 3327,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3314,
											"end": 3323,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3310,
											"end": 3328,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3302,
											"end": 3328,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3302,
											"end": 3328,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3338,
											"end": 3403,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "406"
										},
										{
											"begin": 3400,
											"end": 3401,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3389,
											"end": 3398,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3385,
											"end": 3402,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3376,
											"end": 3382,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 3338,
											"end": 3403,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "311"
										},
										{
											"begin": 3338,
											"end": 3403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3338,
											"end": 3403,
											"name": "tag",
											"source": 19,
											"value": "406"
										},
										{
											"begin": 3338,
											"end": 3403,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3200,
											"end": 3410,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 3200,
											"end": 3410,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3200,
											"end": 3410,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3200,
											"end": 3410,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3200,
											"end": 3410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3416,
											"end": 3530,
											"name": "tag",
											"source": 19,
											"value": "312"
										},
										{
											"begin": 3416,
											"end": 3530,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3483,
											"end": 3489,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3517,
											"end": 3522,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3511,
											"end": 3523,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 3501,
											"end": 3523,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3501,
											"end": 3523,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3416,
											"end": 3530,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3416,
											"end": 3530,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3416,
											"end": 3530,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3416,
											"end": 3530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3536,
											"end": 3720,
											"name": "tag",
											"source": 19,
											"value": "313"
										},
										{
											"begin": 3536,
											"end": 3720,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3635,
											"end": 3646,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3675,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3664,
											"end": 3667,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3657,
											"end": 3676,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3709,
											"end": 3713,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3704,
											"end": 3707,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3700,
											"end": 3714,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3685,
											"end": 3714,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3685,
											"end": 3714,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3536,
											"end": 3720,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 3536,
											"end": 3720,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3536,
											"end": 3720,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3536,
											"end": 3720,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3536,
											"end": 3720,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3726,
											"end": 3858,
											"name": "tag",
											"source": 19,
											"value": "314"
										},
										{
											"begin": 3726,
											"end": 3858,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3793,
											"end": 3797,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3816,
											"end": 3819,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3808,
											"end": 3819,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3808,
											"end": 3819,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3846,
											"end": 3850,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3841,
											"end": 3844,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3837,
											"end": 3851,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3829,
											"end": 3851,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3829,
											"end": 3851,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3726,
											"end": 3858,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3726,
											"end": 3858,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3726,
											"end": 3858,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3726,
											"end": 3858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3864,
											"end": 3972,
											"name": "tag",
											"source": 19,
											"value": "315"
										},
										{
											"begin": 3864,
											"end": 3972,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3941,
											"end": 3965,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "411"
										},
										{
											"begin": 3959,
											"end": 3964,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3941,
											"end": 3965,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "303"
										},
										{
											"begin": 3941,
											"end": 3965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3941,
											"end": 3965,
											"name": "tag",
											"source": 19,
											"value": "411"
										},
										{
											"begin": 3941,
											"end": 3965,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3936,
											"end": 3939,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3929,
											"end": 3966,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3864,
											"end": 3972,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3864,
											"end": 3972,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3864,
											"end": 3972,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3978,
											"end": 4157,
											"name": "tag",
											"source": 19,
											"value": "316"
										},
										{
											"begin": 3978,
											"end": 4157,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4047,
											"end": 4057,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4068,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "413"
										},
										{
											"begin": 4110,
											"end": 4113,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4102,
											"end": 4108,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4068,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "315"
										},
										{
											"begin": 4068,
											"end": 4114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4068,
											"end": 4114,
											"name": "tag",
											"source": 19,
											"value": "413"
										},
										{
											"begin": 4068,
											"end": 4114,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4146,
											"end": 4150,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 4141,
											"end": 4144,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4137,
											"end": 4151,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4123,
											"end": 4151,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4123,
											"end": 4151,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3978,
											"end": 4157,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 3978,
											"end": 4157,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3978,
											"end": 4157,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3978,
											"end": 4157,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3978,
											"end": 4157,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4163,
											"end": 4276,
											"name": "tag",
											"source": 19,
											"value": "317"
										},
										{
											"begin": 4163,
											"end": 4276,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4233,
											"end": 4237,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4265,
											"end": 4269,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 4260,
											"end": 4263,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4256,
											"end": 4270,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4248,
											"end": 4270,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4248,
											"end": 4270,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4163,
											"end": 4276,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4163,
											"end": 4276,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4163,
											"end": 4276,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4163,
											"end": 4276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4312,
											"end": 5044,
											"name": "tag",
											"source": 19,
											"value": "318"
										},
										{
											"begin": 4312,
											"end": 5044,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4431,
											"end": 4434,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4460,
											"end": 4514,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "416"
										},
										{
											"begin": 4508,
											"end": 4513,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4460,
											"end": 4514,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "312"
										},
										{
											"begin": 4460,
											"end": 4514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4460,
											"end": 4514,
											"name": "tag",
											"source": 19,
											"value": "416"
										},
										{
											"begin": 4460,
											"end": 4514,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4530,
											"end": 4616,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "417"
										},
										{
											"begin": 4609,
											"end": 4615,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4604,
											"end": 4607,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 4530,
											"end": 4616,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "313"
										},
										{
											"begin": 4530,
											"end": 4616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4530,
											"end": 4616,
											"name": "tag",
											"source": 19,
											"value": "417"
										},
										{
											"begin": 4530,
											"end": 4616,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4523,
											"end": 4616,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 4523,
											"end": 4616,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4640,
											"end": 4696,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "418"
										},
										{
											"begin": 4690,
											"end": 4695,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4640,
											"end": 4696,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "314"
										},
										{
											"begin": 4640,
											"end": 4696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4640,
											"end": 4696,
											"name": "tag",
											"source": 19,
											"value": "418"
										},
										{
											"begin": 4640,
											"end": 4696,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4719,
											"end": 4726,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4750,
											"end": 4751,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4735,
											"end": 5019,
											"name": "tag",
											"source": 19,
											"value": "419"
										},
										{
											"begin": 4735,
											"end": 5019,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4760,
											"end": 4766,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4757,
											"end": 4758,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4754,
											"end": 4767,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 4735,
											"end": 5019,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 4735,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "421"
										},
										{
											"begin": 4735,
											"end": 5019,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 4836,
											"end": 4842,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4830,
											"end": 4843,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 4863,
											"end": 4926,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "422"
										},
										{
											"begin": 4922,
											"end": 4925,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 4907,
											"end": 4920,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4863,
											"end": 4926,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "316"
										},
										{
											"begin": 4863,
											"end": 4926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4863,
											"end": 4926,
											"name": "tag",
											"source": 19,
											"value": "422"
										},
										{
											"begin": 4863,
											"end": 4926,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4856,
											"end": 4926,
											"name": "SWAP8",
											"source": 19
										},
										{
											"begin": 4856,
											"end": 4926,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4949,
											"end": 5009,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "423"
										},
										{
											"begin": 5002,
											"end": 5008,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4949,
											"end": 5009,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "317"
										},
										{
											"begin": 4949,
											"end": 5009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4949,
											"end": 5009,
											"name": "tag",
											"source": 19,
											"value": "423"
										},
										{
											"begin": 4949,
											"end": 5009,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4939,
											"end": 5009,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4939,
											"end": 5009,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4795,
											"end": 5019,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4782,
											"end": 4783,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 4779,
											"end": 4780,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4775,
											"end": 4784,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4770,
											"end": 4784,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4770,
											"end": 4784,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4735,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "419"
										},
										{
											"begin": 4735,
											"end": 5019,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4735,
											"end": 5019,
											"name": "tag",
											"source": 19,
											"value": "421"
										},
										{
											"begin": 4735,
											"end": 5019,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4739,
											"end": 4753,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5035,
											"end": 5038,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 5028,
											"end": 5038,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 5028,
											"end": 5038,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4436,
											"end": 5044,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4436,
											"end": 5044,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4436,
											"end": 5044,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4312,
											"end": 5044,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4312,
											"end": 5044,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4312,
											"end": 5044,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4312,
											"end": 5044,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4312,
											"end": 5044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5050,
											"end": 5423,
											"name": "tag",
											"source": 19,
											"value": "63"
										},
										{
											"begin": 5050,
											"end": 5423,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5193,
											"end": 5197,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5231,
											"end": 5233,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5220,
											"end": 5229,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5216,
											"end": 5234,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5208,
											"end": 5234,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5208,
											"end": 5234,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5280,
											"end": 5289,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5274,
											"end": 5278,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5270,
											"end": 5290,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 5266,
											"end": 5267,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5255,
											"end": 5264,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 5251,
											"end": 5268,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5244,
											"end": 5291,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5308,
											"end": 5416,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "425"
										},
										{
											"begin": 5411,
											"end": 5415,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5402,
											"end": 5408,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 5308,
											"end": 5416,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "318"
										},
										{
											"begin": 5308,
											"end": 5416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5308,
											"end": 5416,
											"name": "tag",
											"source": 19,
											"value": "425"
										},
										{
											"begin": 5308,
											"end": 5416,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5300,
											"end": 5416,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5300,
											"end": 5416,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5050,
											"end": 5423,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 5050,
											"end": 5423,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5050,
											"end": 5423,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5050,
											"end": 5423,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5050,
											"end": 5423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5429,
											"end": 5546,
											"name": "tag",
											"source": 19,
											"value": "319"
										},
										{
											"begin": 5429,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5538,
											"end": 5539,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5535,
											"end": 5536,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5528,
											"end": 5540,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 5552,
											"end": 5669,
											"name": "tag",
											"source": 19,
											"value": "320"
										},
										{
											"begin": 5552,
											"end": 5669,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5661,
											"end": 5662,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5658,
											"end": 5659,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5651,
											"end": 5663,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 5675,
											"end": 5792,
											"name": "tag",
											"source": 19,
											"value": "321"
										},
										{
											"begin": 5675,
											"end": 5792,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5784,
											"end": 5785,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5781,
											"end": 5782,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5774,
											"end": 5786,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 5811,
											"end": 6363,
											"name": "tag",
											"source": 19,
											"value": "322"
										},
										{
											"begin": 5811,
											"end": 6363,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5868,
											"end": 5876,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5878,
											"end": 5884,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5928,
											"end": 5931,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 5921,
											"end": 5925,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 5913,
											"end": 5919,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 5909,
											"end": 5926,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5905,
											"end": 5932,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 5895,
											"end": 6017,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "430"
										},
										{
											"begin": 5895,
											"end": 6017,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 5936,
											"end": 6015,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "431"
										},
										{
											"begin": 5936,
											"end": 6015,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "319"
										},
										{
											"begin": 5936,
											"end": 6015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5936,
											"end": 6015,
											"name": "tag",
											"source": 19,
											"value": "431"
										},
										{
											"begin": 5936,
											"end": 6015,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5895,
											"end": 6017,
											"name": "tag",
											"source": 19,
											"value": "430"
										},
										{
											"begin": 5895,
											"end": 6017,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6049,
											"end": 6055,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6036,
											"end": 6056,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 6026,
											"end": 6056,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6026,
											"end": 6056,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6079,
											"end": 6097,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6071,
											"end": 6077,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6068,
											"end": 6098,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 6065,
											"end": 6182,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 6065,
											"end": 6182,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "432"
										},
										{
											"begin": 6065,
											"end": 6182,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 6101,
											"end": 6180,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "433"
										},
										{
											"begin": 6101,
											"end": 6180,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "320"
										},
										{
											"begin": 6101,
											"end": 6180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6101,
											"end": 6180,
											"name": "tag",
											"source": 19,
											"value": "433"
										},
										{
											"begin": 6101,
											"end": 6180,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6065,
											"end": 6182,
											"name": "tag",
											"source": 19,
											"value": "432"
										},
										{
											"begin": 6065,
											"end": 6182,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6215,
											"end": 6219,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 6207,
											"end": 6213,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 6203,
											"end": 6220,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6191,
											"end": 6220,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 6191,
											"end": 6220,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6269,
											"end": 6272,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 6261,
											"end": 6265,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 6253,
											"end": 6259,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6249,
											"end": 6266,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 6239,
											"end": 6247,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 6235,
											"end": 6267,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6232,
											"end": 6273,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 6229,
											"end": 6357,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 6229,
											"end": 6357,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "434"
										},
										{
											"begin": 6229,
											"end": 6357,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 6276,
											"end": 6355,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "435"
										},
										{
											"begin": 6276,
											"end": 6355,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "321"
										},
										{
											"begin": 6276,
											"end": 6355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6276,
											"end": 6355,
											"name": "tag",
											"source": 19,
											"value": "435"
										},
										{
											"begin": 6276,
											"end": 6355,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6229,
											"end": 6357,
											"name": "tag",
											"source": 19,
											"value": "434"
										},
										{
											"begin": 6229,
											"end": 6357,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5811,
											"end": 6363,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 5811,
											"end": 6363,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5811,
											"end": 6363,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 5811,
											"end": 6363,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5811,
											"end": 6363,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5811,
											"end": 6363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6369,
											"end": 7041,
											"name": "tag",
											"source": 19,
											"value": "72"
										},
										{
											"begin": 6369,
											"end": 7041,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6448,
											"end": 6454,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6456,
											"end": 6462,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 6464,
											"end": 6470,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6513,
											"end": 6515,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 6501,
											"end": 6510,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 6492,
											"end": 6499,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 6488,
											"end": 6511,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 6484,
											"end": 6516,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 6481,
											"end": 6600,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 6481,
											"end": 6600,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "437"
										},
										{
											"begin": 6481,
											"end": 6600,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 6519,
											"end": 6598,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "438"
										},
										{
											"begin": 6519,
											"end": 6598,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "300"
										},
										{
											"begin": 6519,
											"end": 6598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6519,
											"end": 6598,
											"name": "tag",
											"source": 19,
											"value": "438"
										},
										{
											"begin": 6519,
											"end": 6598,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6481,
											"end": 6600,
											"name": "tag",
											"source": 19,
											"value": "437"
										},
										{
											"begin": 6481,
											"end": 6600,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6667,
											"end": 6668,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6656,
											"end": 6665,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 6652,
											"end": 6669,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6639,
											"end": 6670,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 6697,
											"end": 6715,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6689,
											"end": 6695,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6686,
											"end": 6716,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 6683,
											"end": 6800,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 6683,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "439"
										},
										{
											"begin": 6683,
											"end": 6800,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 6719,
											"end": 6798,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "440"
										},
										{
											"begin": 6719,
											"end": 6798,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "301"
										},
										{
											"begin": 6719,
											"end": 6798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6719,
											"end": 6798,
											"name": "tag",
											"source": 19,
											"value": "440"
										},
										{
											"begin": 6719,
											"end": 6798,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6683,
											"end": 6800,
											"name": "tag",
											"source": 19,
											"value": "439"
										},
										{
											"begin": 6683,
											"end": 6800,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6832,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "441"
										},
										{
											"begin": 6888,
											"end": 6895,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 6879,
											"end": 6885,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6868,
											"end": 6877,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 6864,
											"end": 6886,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6832,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "322"
										},
										{
											"begin": 6832,
											"end": 6896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6832,
											"end": 6896,
											"name": "tag",
											"source": 19,
											"value": "441"
										},
										{
											"begin": 6832,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6814,
											"end": 6896,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 6814,
											"end": 6896,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6814,
											"end": 6896,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 6814,
											"end": 6896,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6610,
											"end": 6906,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6945,
											"end": 6947,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 6971,
											"end": 7024,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "442"
										},
										{
											"begin": 7016,
											"end": 7023,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 7007,
											"end": 7013,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6996,
											"end": 7005,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 6992,
											"end": 7014,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6971,
											"end": 7024,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "305"
										},
										{
											"begin": 6971,
											"end": 7024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6971,
											"end": 7024,
											"name": "tag",
											"source": 19,
											"value": "442"
										},
										{
											"begin": 6971,
											"end": 7024,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6961,
											"end": 7024,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 6961,
											"end": 7024,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6916,
											"end": 7034,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6369,
											"end": 7041,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 6369,
											"end": 7041,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6369,
											"end": 7041,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 6369,
											"end": 7041,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6369,
											"end": 7041,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 6369,
											"end": 7041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7047,
											"end": 7216,
											"name": "tag",
											"source": 19,
											"value": "323"
										},
										{
											"begin": 7047,
											"end": 7216,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7131,
											"end": 7142,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7165,
											"end": 7171,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7160,
											"end": 7163,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7153,
											"end": 7172,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7205,
											"end": 7209,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 7200,
											"end": 7203,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7196,
											"end": 7210,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7181,
											"end": 7210,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7181,
											"end": 7210,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7047,
											"end": 7216,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 7047,
											"end": 7216,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 7047,
											"end": 7216,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7047,
											"end": 7216,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7047,
											"end": 7216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7222,
											"end": 7403,
											"name": "tag",
											"source": 19,
											"value": "324"
										},
										{
											"begin": 7222,
											"end": 7403,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7362,
											"end": 7395,
											"name": "PUSH",
											"source": 19,
											"value": "696E76616C696420617267756D656E74202D207A65726F206164647265737300"
										},
										{
											"begin": 7358,
											"end": 7359,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7350,
											"end": 7356,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7346,
											"end": 7360,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7339,
											"end": 7396,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7222,
											"end": 7403,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7222,
											"end": 7403,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7409,
											"end": 7775,
											"name": "tag",
											"source": 19,
											"value": "325"
										},
										{
											"begin": 7409,
											"end": 7775,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7551,
											"end": 7554,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7639,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "446"
										},
										{
											"begin": 7636,
											"end": 7638,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 7631,
											"end": 7634,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 7572,
											"end": 7639,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "323"
										},
										{
											"begin": 7572,
											"end": 7639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7572,
											"end": 7639,
											"name": "tag",
											"source": 19,
											"value": "446"
										},
										{
											"begin": 7572,
											"end": 7639,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7565,
											"end": 7639,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 7565,
											"end": 7639,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7648,
											"end": 7741,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "447"
										},
										{
											"begin": 7737,
											"end": 7740,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7648,
											"end": 7741,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "324"
										},
										{
											"begin": 7648,
											"end": 7741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7648,
											"end": 7741,
											"name": "tag",
											"source": 19,
											"value": "447"
										},
										{
											"begin": 7648,
											"end": 7741,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7766,
											"end": 7768,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 7761,
											"end": 7764,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7757,
											"end": 7769,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7750,
											"end": 7769,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7750,
											"end": 7769,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7409,
											"end": 7775,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 7409,
											"end": 7775,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7409,
											"end": 7775,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7409,
											"end": 7775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7781,
											"end": 8200,
											"name": "tag",
											"source": 19,
											"value": "83"
										},
										{
											"begin": 7781,
											"end": 8200,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7947,
											"end": 7951,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7985,
											"end": 7987,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 7974,
											"end": 7983,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7970,
											"end": 7988,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7962,
											"end": 7988,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7962,
											"end": 7988,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8034,
											"end": 8043,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8028,
											"end": 8032,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8024,
											"end": 8044,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 8020,
											"end": 8021,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8009,
											"end": 8018,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 8005,
											"end": 8022,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7998,
											"end": 8045,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 8062,
											"end": 8193,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "449"
										},
										{
											"begin": 8188,
											"end": 8192,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8062,
											"end": 8193,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "325"
										},
										{
											"begin": 8062,
											"end": 8193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8062,
											"end": 8193,
											"name": "tag",
											"source": 19,
											"value": "449"
										},
										{
											"begin": 8062,
											"end": 8193,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8054,
											"end": 8193,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8054,
											"end": 8193,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7781,
											"end": 8200,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 7781,
											"end": 8200,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7781,
											"end": 8200,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7781,
											"end": 8200,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8206,
											"end": 8376,
											"name": "tag",
											"source": 19,
											"value": "326"
										},
										{
											"begin": 8206,
											"end": 8376,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8346,
											"end": 8368,
											"name": "PUSH",
											"source": 19,
											"value": "6D6F64756C6520616C726561647920626F756E64000000000000000000000000"
										},
										{
											"begin": 8342,
											"end": 8343,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8334,
											"end": 8340,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8330,
											"end": 8344,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8323,
											"end": 8369,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 8206,
											"end": 8376,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8206,
											"end": 8376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8382,
											"end": 8748,
											"name": "tag",
											"source": 19,
											"value": "327"
										},
										{
											"begin": 8382,
											"end": 8748,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8524,
											"end": 8527,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8545,
											"end": 8612,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "452"
										},
										{
											"begin": 8609,
											"end": 8611,
											"name": "PUSH",
											"source": 19,
											"value": "14"
										},
										{
											"begin": 8604,
											"end": 8607,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 8545,
											"end": 8612,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "323"
										},
										{
											"begin": 8545,
											"end": 8612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8545,
											"end": 8612,
											"name": "tag",
											"source": 19,
											"value": "452"
										},
										{
											"begin": 8545,
											"end": 8612,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8538,
											"end": 8612,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 8538,
											"end": 8612,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8621,
											"end": 8714,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "453"
										},
										{
											"begin": 8710,
											"end": 8713,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8621,
											"end": 8714,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "326"
										},
										{
											"begin": 8621,
											"end": 8714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8621,
											"end": 8714,
											"name": "tag",
											"source": 19,
											"value": "453"
										},
										{
											"begin": 8621,
											"end": 8714,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8739,
											"end": 8741,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 8734,
											"end": 8737,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8730,
											"end": 8742,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8723,
											"end": 8742,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8723,
											"end": 8742,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8382,
											"end": 8748,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 8382,
											"end": 8748,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8382,
											"end": 8748,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8382,
											"end": 8748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8754,
											"end": 9173,
											"name": "tag",
											"source": 19,
											"value": "86"
										},
										{
											"begin": 8754,
											"end": 9173,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8920,
											"end": 8924,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8958,
											"end": 8960,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 8947,
											"end": 8956,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8943,
											"end": 8961,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8935,
											"end": 8961,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8935,
											"end": 8961,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9007,
											"end": 9016,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9001,
											"end": 9005,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8997,
											"end": 9017,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 8993,
											"end": 8994,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8982,
											"end": 8991,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 8978,
											"end": 8995,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8971,
											"end": 9018,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 9035,
											"end": 9166,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "455"
										},
										{
											"begin": 9161,
											"end": 9165,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9035,
											"end": 9166,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "327"
										},
										{
											"begin": 9035,
											"end": 9166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9035,
											"end": 9166,
											"name": "tag",
											"source": 19,
											"value": "455"
										},
										{
											"begin": 9035,
											"end": 9166,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9027,
											"end": 9166,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 9027,
											"end": 9166,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8754,
											"end": 9173,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 8754,
											"end": 9173,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8754,
											"end": 9173,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8754,
											"end": 9173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9179,
											"end": 9360,
											"name": "tag",
											"source": 19,
											"value": "328"
										},
										{
											"begin": 9179,
											"end": 9360,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9319,
											"end": 9352,
											"name": "PUSH",
											"source": 19,
											"value": "63616E6E6F7420616464206D6F7265207468616E203235206D6F64756C657300"
										},
										{
											"begin": 9315,
											"end": 9316,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9307,
											"end": 9313,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9303,
											"end": 9317,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9296,
											"end": 9353,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 9179,
											"end": 9360,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9179,
											"end": 9360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9366,
											"end": 9732,
											"name": "tag",
											"source": 19,
											"value": "329"
										},
										{
											"begin": 9366,
											"end": 9732,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9508,
											"end": 9511,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9529,
											"end": 9596,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "458"
										},
										{
											"begin": 9593,
											"end": 9595,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 9588,
											"end": 9591,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 9529,
											"end": 9596,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "323"
										},
										{
											"begin": 9529,
											"end": 9596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9529,
											"end": 9596,
											"name": "tag",
											"source": 19,
											"value": "458"
										},
										{
											"begin": 9529,
											"end": 9596,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9522,
											"end": 9596,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 9522,
											"end": 9596,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9605,
											"end": 9698,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "459"
										},
										{
											"begin": 9694,
											"end": 9697,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9605,
											"end": 9698,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "328"
										},
										{
											"begin": 9605,
											"end": 9698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9605,
											"end": 9698,
											"name": "tag",
											"source": 19,
											"value": "459"
										},
										{
											"begin": 9605,
											"end": 9698,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9723,
											"end": 9725,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 9718,
											"end": 9721,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9714,
											"end": 9726,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9707,
											"end": 9726,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 9707,
											"end": 9726,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9366,
											"end": 9732,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 9366,
											"end": 9732,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 9366,
											"end": 9732,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9366,
											"end": 9732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9738,
											"end": 10157,
											"name": "tag",
											"source": 19,
											"value": "89"
										},
										{
											"begin": 9738,
											"end": 10157,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9904,
											"end": 9908,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9942,
											"end": 9944,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 9931,
											"end": 9940,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9927,
											"end": 9945,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9919,
											"end": 9945,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 9919,
											"end": 9945,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9991,
											"end": 10000,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9985,
											"end": 9989,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9981,
											"end": 10001,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 9977,
											"end": 9978,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9966,
											"end": 9975,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 9962,
											"end": 9979,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9955,
											"end": 10002,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10019,
											"end": 10150,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "461"
										},
										{
											"begin": 10145,
											"end": 10149,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10019,
											"end": 10150,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "329"
										},
										{
											"begin": 10019,
											"end": 10150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10019,
											"end": 10150,
											"name": "tag",
											"source": 19,
											"value": "461"
										},
										{
											"begin": 10019,
											"end": 10150,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10011,
											"end": 10150,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10011,
											"end": 10150,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9738,
											"end": 10157,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 9738,
											"end": 10157,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 9738,
											"end": 10157,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9738,
											"end": 10157,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10163,
											"end": 10341,
											"name": "tag",
											"source": 19,
											"value": "330"
										},
										{
											"begin": 10163,
											"end": 10341,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10303,
											"end": 10333,
											"name": "PUSH",
											"source": 19,
											"value": "6F6E6C79206F776E6572206F7220746F6B656E2063616E2063616C6C00000000"
										},
										{
											"begin": 10299,
											"end": 10300,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10291,
											"end": 10297,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10287,
											"end": 10301,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10280,
											"end": 10334,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10163,
											"end": 10341,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10163,
											"end": 10341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10347,
											"end": 10713,
											"name": "tag",
											"source": 19,
											"value": "331"
										},
										{
											"begin": 10347,
											"end": 10713,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10489,
											"end": 10492,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10510,
											"end": 10577,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "464"
										},
										{
											"begin": 10574,
											"end": 10576,
											"name": "PUSH",
											"source": 19,
											"value": "1C"
										},
										{
											"begin": 10569,
											"end": 10572,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 10510,
											"end": 10577,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "323"
										},
										{
											"begin": 10510,
											"end": 10577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10510,
											"end": 10577,
											"name": "tag",
											"source": 19,
											"value": "464"
										},
										{
											"begin": 10510,
											"end": 10577,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10503,
											"end": 10577,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 10503,
											"end": 10577,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10586,
											"end": 10679,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "465"
										},
										{
											"begin": 10675,
											"end": 10678,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10586,
											"end": 10679,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "330"
										},
										{
											"begin": 10586,
											"end": 10679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10586,
											"end": 10679,
											"name": "tag",
											"source": 19,
											"value": "465"
										},
										{
											"begin": 10586,
											"end": 10679,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10704,
											"end": 10706,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 10699,
											"end": 10702,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10695,
											"end": 10707,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10688,
											"end": 10707,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10688,
											"end": 10707,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10347,
											"end": 10713,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 10347,
											"end": 10713,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10347,
											"end": 10713,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10347,
											"end": 10713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10719,
											"end": 11138,
											"name": "tag",
											"source": 19,
											"value": "101"
										},
										{
											"begin": 10719,
											"end": 11138,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10885,
											"end": 10889,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10923,
											"end": 10925,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 10912,
											"end": 10921,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10908,
											"end": 10926,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10900,
											"end": 10926,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10900,
											"end": 10926,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10972,
											"end": 10981,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10966,
											"end": 10970,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10962,
											"end": 10982,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 10958,
											"end": 10959,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10947,
											"end": 10956,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 10943,
											"end": 10960,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10936,
											"end": 10983,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 11000,
											"end": 11131,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "467"
										},
										{
											"begin": 11126,
											"end": 11130,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 11000,
											"end": 11131,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "331"
										},
										{
											"begin": 11000,
											"end": 11131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11000,
											"end": 11131,
											"name": "tag",
											"source": 19,
											"value": "467"
										},
										{
											"begin": 11000,
											"end": 11131,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10992,
											"end": 11131,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10992,
											"end": 11131,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10719,
											"end": 11138,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 10719,
											"end": 11138,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10719,
											"end": 11138,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10719,
											"end": 11138,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11144,
											"end": 11317,
											"name": "tag",
											"source": 19,
											"value": "332"
										},
										{
											"begin": 11144,
											"end": 11317,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11284,
											"end": 11309,
											"name": "PUSH",
											"source": 19,
											"value": "5468697320746F6B656E206973206E6F7420626F756E64000000000000000000"
										},
										{
											"begin": 11280,
											"end": 11281,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 11272,
											"end": 11278,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11268,
											"end": 11282,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11261,
											"end": 11310,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 11144,
											"end": 11317,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11144,
											"end": 11317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11323,
											"end": 11689,
											"name": "tag",
											"source": 19,
											"value": "333"
										},
										{
											"begin": 11323,
											"end": 11689,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11465,
											"end": 11468,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 11486,
											"end": 11553,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "470"
										},
										{
											"begin": 11550,
											"end": 11552,
											"name": "PUSH",
											"source": 19,
											"value": "17"
										},
										{
											"begin": 11545,
											"end": 11548,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 11486,
											"end": 11553,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "323"
										},
										{
											"begin": 11486,
											"end": 11553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11486,
											"end": 11553,
											"name": "tag",
											"source": 19,
											"value": "470"
										},
										{
											"begin": 11486,
											"end": 11553,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11479,
											"end": 11553,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 11479,
											"end": 11553,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11562,
											"end": 11655,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "471"
										},
										{
											"begin": 11651,
											"end": 11654,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11562,
											"end": 11655,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "332"
										},
										{
											"begin": 11562,
											"end": 11655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11562,
											"end": 11655,
											"name": "tag",
											"source": 19,
											"value": "471"
										},
										{
											"begin": 11562,
											"end": 11655,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11680,
											"end": 11682,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 11675,
											"end": 11678,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11671,
											"end": 11683,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11664,
											"end": 11683,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 11664,
											"end": 11683,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11323,
											"end": 11689,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 11323,
											"end": 11689,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 11323,
											"end": 11689,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11323,
											"end": 11689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11695,
											"end": 12114,
											"name": "tag",
											"source": 19,
											"value": "112"
										},
										{
											"begin": 11695,
											"end": 12114,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11861,
											"end": 11865,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 11899,
											"end": 11901,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 11888,
											"end": 11897,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11884,
											"end": 11902,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11876,
											"end": 11902,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 11876,
											"end": 11902,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11948,
											"end": 11957,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 11942,
											"end": 11946,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 11938,
											"end": 11958,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 11934,
											"end": 11935,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 11923,
											"end": 11932,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 11919,
											"end": 11936,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11912,
											"end": 11959,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 11976,
											"end": 12107,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "473"
										},
										{
											"begin": 12102,
											"end": 12106,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 11976,
											"end": 12107,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "333"
										},
										{
											"begin": 11976,
											"end": 12107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11976,
											"end": 12107,
											"name": "tag",
											"source": 19,
											"value": "473"
										},
										{
											"begin": 11976,
											"end": 12107,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11968,
											"end": 12107,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 11968,
											"end": 12107,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11695,
											"end": 12114,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 11695,
											"end": 12114,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 11695,
											"end": 12114,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11695,
											"end": 12114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12120,
											"end": 12412,
											"name": "tag",
											"source": 19,
											"value": "334"
										},
										{
											"begin": 12120,
											"end": 12412,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12260,
											"end": 12294,
											"name": "PUSH",
											"source": 19,
											"value": "6572726F72203A20746869732061646472657373206973206E6F74206120746F"
										},
										{
											"begin": 12256,
											"end": 12257,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 12248,
											"end": 12254,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12244,
											"end": 12258,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12237,
											"end": 12295,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 12329,
											"end": 12363,
											"name": "PUSH",
											"source": 19,
											"value": "6B656E20626F756E6420746F2074686520636F6D706C69616E636520636F6E74"
										},
										{
											"begin": 12324,
											"end": 12326,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 12316,
											"end": 12322,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12312,
											"end": 12327,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12305,
											"end": 12364,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 12398,
											"end": 12404,
											"name": "PUSH",
											"source": 19,
											"value": "7261637400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12393,
											"end": 12395,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 12385,
											"end": 12391,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12381,
											"end": 12396,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12374,
											"end": 12405,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 12120,
											"end": 12412,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12120,
											"end": 12412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12418,
											"end": 12784,
											"name": "tag",
											"source": 19,
											"value": "335"
										},
										{
											"begin": 12418,
											"end": 12784,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12560,
											"end": 12563,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 12581,
											"end": 12648,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "476"
										},
										{
											"begin": 12645,
											"end": 12647,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 12640,
											"end": 12643,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 12581,
											"end": 12648,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "323"
										},
										{
											"begin": 12581,
											"end": 12648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12581,
											"end": 12648,
											"name": "tag",
											"source": 19,
											"value": "476"
										},
										{
											"begin": 12581,
											"end": 12648,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12574,
											"end": 12648,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 12574,
											"end": 12648,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12657,
											"end": 12750,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "477"
										},
										{
											"begin": 12746,
											"end": 12749,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12657,
											"end": 12750,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "334"
										},
										{
											"begin": 12657,
											"end": 12750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12657,
											"end": 12750,
											"name": "tag",
											"source": 19,
											"value": "477"
										},
										{
											"begin": 12657,
											"end": 12750,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12775,
											"end": 12777,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 12770,
											"end": 12773,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12766,
											"end": 12778,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12759,
											"end": 12778,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 12759,
											"end": 12778,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12418,
											"end": 12784,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 12418,
											"end": 12784,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 12418,
											"end": 12784,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12418,
											"end": 12784,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12790,
											"end": 13209,
											"name": "tag",
											"source": 19,
											"value": "119"
										},
										{
											"begin": 12790,
											"end": 13209,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12956,
											"end": 12960,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 12994,
											"end": 12996,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 12983,
											"end": 12992,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12979,
											"end": 12997,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12971,
											"end": 12997,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 12971,
											"end": 12997,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13043,
											"end": 13052,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 13037,
											"end": 13041,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 13033,
											"end": 13053,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 13029,
											"end": 13030,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13018,
											"end": 13027,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 13014,
											"end": 13031,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13007,
											"end": 13054,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 13071,
											"end": 13202,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "479"
										},
										{
											"begin": 13197,
											"end": 13201,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 13071,
											"end": 13202,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "335"
										},
										{
											"begin": 13071,
											"end": 13202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13071,
											"end": 13202,
											"name": "tag",
											"source": 19,
											"value": "479"
										},
										{
											"begin": 13071,
											"end": 13202,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13063,
											"end": 13202,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13063,
											"end": 13202,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12790,
											"end": 13209,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 12790,
											"end": 13209,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 12790,
											"end": 13209,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12790,
											"end": 13209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13215,
											"end": 13397,
											"name": "tag",
											"source": 19,
											"value": "336"
										},
										{
											"begin": 13215,
											"end": 13397,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13355,
											"end": 13389,
											"name": "PUSH",
											"source": 19,
											"value": "696E76616C696420617267756D656E74202D206E6F2076616C7565206D696E74"
										},
										{
											"begin": 13351,
											"end": 13352,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13343,
											"end": 13349,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13339,
											"end": 13353,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13332,
											"end": 13390,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 13215,
											"end": 13397,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13215,
											"end": 13397,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13403,
											"end": 13769,
											"name": "tag",
											"source": 19,
											"value": "337"
										},
										{
											"begin": 13403,
											"end": 13769,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13545,
											"end": 13548,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13566,
											"end": 13633,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "482"
										},
										{
											"begin": 13630,
											"end": 13632,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 13625,
											"end": 13628,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 13566,
											"end": 13633,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "323"
										},
										{
											"begin": 13566,
											"end": 13633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13566,
											"end": 13633,
											"name": "tag",
											"source": 19,
											"value": "482"
										},
										{
											"begin": 13566,
											"end": 13633,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13559,
											"end": 13633,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 13559,
											"end": 13633,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13642,
											"end": 13735,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "483"
										},
										{
											"begin": 13731,
											"end": 13734,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13642,
											"end": 13735,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "336"
										},
										{
											"begin": 13642,
											"end": 13735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13642,
											"end": 13735,
											"name": "tag",
											"source": 19,
											"value": "483"
										},
										{
											"begin": 13642,
											"end": 13735,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13760,
											"end": 13762,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 13755,
											"end": 13758,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13751,
											"end": 13763,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13744,
											"end": 13763,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13744,
											"end": 13763,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13403,
											"end": 13769,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 13403,
											"end": 13769,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13403,
											"end": 13769,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13403,
											"end": 13769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13775,
											"end": 14194,
											"name": "tag",
											"source": 19,
											"value": "125"
										},
										{
											"begin": 13775,
											"end": 14194,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13941,
											"end": 13945,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13979,
											"end": 13981,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 13968,
											"end": 13977,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13964,
											"end": 13982,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13956,
											"end": 13982,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13956,
											"end": 13982,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14028,
											"end": 14037,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 14022,
											"end": 14026,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 14018,
											"end": 14038,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 14014,
											"end": 14015,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14003,
											"end": 14012,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 13999,
											"end": 14016,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13992,
											"end": 14039,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 14056,
											"end": 14187,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "485"
										},
										{
											"begin": 14182,
											"end": 14186,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 14056,
											"end": 14187,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "337"
										},
										{
											"begin": 14056,
											"end": 14187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14056,
											"end": 14187,
											"name": "tag",
											"source": 19,
											"value": "485"
										},
										{
											"begin": 14056,
											"end": 14187,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14048,
											"end": 14187,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 14048,
											"end": 14187,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13775,
											"end": 14194,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 13775,
											"end": 14194,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13775,
											"end": 14194,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13775,
											"end": 14194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14200,
											"end": 14380,
											"name": "tag",
											"source": 19,
											"value": "131"
										},
										{
											"begin": 14200,
											"end": 14380,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14248,
											"end": 14325,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14245,
											"end": 14246,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14238,
											"end": 14326,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 14345,
											"end": 14349,
											"name": "PUSH",
											"source": 19,
											"value": "32"
										},
										{
											"begin": 14342,
											"end": 14343,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 14335,
											"end": 14350,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 14369,
											"end": 14373,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 14366,
											"end": 14367,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14359,
											"end": 14374,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 14386,
											"end": 14504,
											"name": "tag",
											"source": 19,
											"value": "338"
										},
										{
											"begin": 14386,
											"end": 14504,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14473,
											"end": 14497,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "488"
										},
										{
											"begin": 14491,
											"end": 14496,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 14473,
											"end": 14497,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "306"
										},
										{
											"begin": 14473,
											"end": 14497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14473,
											"end": 14497,
											"name": "tag",
											"source": 19,
											"value": "488"
										},
										{
											"begin": 14473,
											"end": 14497,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14468,
											"end": 14471,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14461,
											"end": 14498,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 14386,
											"end": 14504,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14386,
											"end": 14504,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14386,
											"end": 14504,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14510,
											"end": 14842,
											"name": "tag",
											"source": 19,
											"value": "134"
										},
										{
											"begin": 14510,
											"end": 14842,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14631,
											"end": 14635,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14669,
											"end": 14671,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 14658,
											"end": 14667,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14654,
											"end": 14672,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14646,
											"end": 14672,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 14646,
											"end": 14672,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14682,
											"end": 14753,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "490"
										},
										{
											"begin": 14750,
											"end": 14751,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14739,
											"end": 14748,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 14735,
											"end": 14752,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14726,
											"end": 14732,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 14682,
											"end": 14753,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "309"
										},
										{
											"begin": 14682,
											"end": 14753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14682,
											"end": 14753,
											"name": "tag",
											"source": 19,
											"value": "490"
										},
										{
											"begin": 14682,
											"end": 14753,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14763,
											"end": 14835,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "491"
										},
										{
											"begin": 14831,
											"end": 14833,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 14820,
											"end": 14829,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 14816,
											"end": 14834,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14807,
											"end": 14813,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 14763,
											"end": 14835,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "338"
										},
										{
											"begin": 14763,
											"end": 14835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14763,
											"end": 14835,
											"name": "tag",
											"source": 19,
											"value": "491"
										},
										{
											"begin": 14763,
											"end": 14835,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14510,
											"end": 14842,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 14510,
											"end": 14842,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 14510,
											"end": 14842,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14510,
											"end": 14842,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14510,
											"end": 14842,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14510,
											"end": 14842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14848,
											"end": 15028,
											"name": "tag",
											"source": 19,
											"value": "339"
										},
										{
											"begin": 14848,
											"end": 15028,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14896,
											"end": 14973,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14893,
											"end": 14894,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14886,
											"end": 14974,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 14993,
											"end": 14997,
											"name": "PUSH",
											"source": 19,
											"value": "11"
										},
										{
											"begin": 14990,
											"end": 14991,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 14983,
											"end": 14998,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 15017,
											"end": 15021,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 15014,
											"end": 15015,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15007,
											"end": 15022,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 15034,
											"end": 15267,
											"name": "tag",
											"source": 19,
											"value": "139"
										},
										{
											"begin": 15034,
											"end": 15267,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15073,
											"end": 15076,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15096,
											"end": 15120,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "494"
										},
										{
											"begin": 15114,
											"end": 15119,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15096,
											"end": 15120,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "306"
										},
										{
											"begin": 15096,
											"end": 15120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15096,
											"end": 15120,
											"name": "tag",
											"source": 19,
											"value": "494"
										},
										{
											"begin": 15096,
											"end": 15120,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15087,
											"end": 15120,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 15087,
											"end": 15120,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15142,
											"end": 15208,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15135,
											"end": 15140,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15132,
											"end": 15209,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 15129,
											"end": 15232,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "495"
										},
										{
											"begin": 15129,
											"end": 15232,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 15212,
											"end": 15230,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "496"
										},
										{
											"begin": 15212,
											"end": 15230,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "339"
										},
										{
											"begin": 15212,
											"end": 15230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15212,
											"end": 15230,
											"name": "tag",
											"source": 19,
											"value": "496"
										},
										{
											"begin": 15212,
											"end": 15230,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15129,
											"end": 15232,
											"name": "tag",
											"source": 19,
											"value": "495"
										},
										{
											"begin": 15129,
											"end": 15232,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15259,
											"end": 15260,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 15252,
											"end": 15257,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15248,
											"end": 15261,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15241,
											"end": 15261,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15241,
											"end": 15261,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15034,
											"end": 15267,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 15034,
											"end": 15267,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15034,
											"end": 15267,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15034,
											"end": 15267,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15273,
											"end": 15496,
											"name": "tag",
											"source": 19,
											"value": "340"
										},
										{
											"begin": 15273,
											"end": 15496,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15413,
											"end": 15447,
											"name": "PUSH",
											"source": 19,
											"value": "696E76616C696420617267756D656E74202D206E6F2076616C7565207472616E"
										},
										{
											"begin": 15409,
											"end": 15410,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15401,
											"end": 15407,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15397,
											"end": 15411,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15390,
											"end": 15448,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 15482,
											"end": 15488,
											"name": "PUSH",
											"source": 19,
											"value": "7366657200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15477,
											"end": 15479,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 15469,
											"end": 15475,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15465,
											"end": 15480,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15458,
											"end": 15489,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 15273,
											"end": 15496,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15273,
											"end": 15496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15502,
											"end": 15868,
											"name": "tag",
											"source": 19,
											"value": "341"
										},
										{
											"begin": 15502,
											"end": 15868,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15644,
											"end": 15647,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15665,
											"end": 15732,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "499"
										},
										{
											"begin": 15729,
											"end": 15731,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 15724,
											"end": 15727,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 15665,
											"end": 15732,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "323"
										},
										{
											"begin": 15665,
											"end": 15732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15665,
											"end": 15732,
											"name": "tag",
											"source": 19,
											"value": "499"
										},
										{
											"begin": 15665,
											"end": 15732,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15658,
											"end": 15732,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 15658,
											"end": 15732,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15741,
											"end": 15834,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "500"
										},
										{
											"begin": 15830,
											"end": 15833,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15741,
											"end": 15834,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "340"
										},
										{
											"begin": 15741,
											"end": 15834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15741,
											"end": 15834,
											"name": "tag",
											"source": 19,
											"value": "500"
										},
										{
											"begin": 15741,
											"end": 15834,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15859,
											"end": 15861,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 15854,
											"end": 15857,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15850,
											"end": 15862,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15843,
											"end": 15862,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15843,
											"end": 15862,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15502,
											"end": 15868,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 15502,
											"end": 15868,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15502,
											"end": 15868,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15502,
											"end": 15868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15874,
											"end": 16293,
											"name": "tag",
											"source": 19,
											"value": "155"
										},
										{
											"begin": 15874,
											"end": 16293,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16040,
											"end": 16044,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 16078,
											"end": 16080,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 16067,
											"end": 16076,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16063,
											"end": 16081,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16055,
											"end": 16081,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 16055,
											"end": 16081,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16127,
											"end": 16136,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 16121,
											"end": 16125,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 16117,
											"end": 16137,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 16113,
											"end": 16114,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 16102,
											"end": 16111,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 16098,
											"end": 16115,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16091,
											"end": 16138,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 16155,
											"end": 16286,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "502"
										},
										{
											"begin": 16281,
											"end": 16285,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 16155,
											"end": 16286,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "341"
										},
										{
											"begin": 16155,
											"end": 16286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16155,
											"end": 16286,
											"name": "tag",
											"source": 19,
											"value": "502"
										},
										{
											"begin": 16155,
											"end": 16286,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16147,
											"end": 16286,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 16147,
											"end": 16286,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15874,
											"end": 16293,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 15874,
											"end": 16293,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15874,
											"end": 16293,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15874,
											"end": 16293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16299,
											"end": 16741,
											"name": "tag",
											"source": 19,
											"value": "163"
										},
										{
											"begin": 16299,
											"end": 16741,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16448,
											"end": 16452,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 16486,
											"end": 16488,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 16475,
											"end": 16484,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16471,
											"end": 16489,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16463,
											"end": 16489,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 16463,
											"end": 16489,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16499,
											"end": 16570,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "504"
										},
										{
											"begin": 16567,
											"end": 16568,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 16556,
											"end": 16565,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 16552,
											"end": 16569,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16543,
											"end": 16549,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 16499,
											"end": 16570,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "309"
										},
										{
											"begin": 16499,
											"end": 16570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16499,
											"end": 16570,
											"name": "tag",
											"source": 19,
											"value": "504"
										},
										{
											"begin": 16499,
											"end": 16570,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16580,
											"end": 16652,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "505"
										},
										{
											"begin": 16648,
											"end": 16650,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 16637,
											"end": 16646,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 16633,
											"end": 16651,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16624,
											"end": 16630,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 16580,
											"end": 16652,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "309"
										},
										{
											"begin": 16580,
											"end": 16652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16580,
											"end": 16652,
											"name": "tag",
											"source": 19,
											"value": "505"
										},
										{
											"begin": 16580,
											"end": 16652,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16662,
											"end": 16734,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "506"
										},
										{
											"begin": 16730,
											"end": 16732,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 16719,
											"end": 16728,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 16715,
											"end": 16733,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16706,
											"end": 16712,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 16662,
											"end": 16734,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "338"
										},
										{
											"begin": 16662,
											"end": 16734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16662,
											"end": 16734,
											"name": "tag",
											"source": 19,
											"value": "506"
										},
										{
											"begin": 16662,
											"end": 16734,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16299,
											"end": 16741,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 16299,
											"end": 16741,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 16299,
											"end": 16741,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16299,
											"end": 16741,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16299,
											"end": 16741,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16299,
											"end": 16741,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16299,
											"end": 16741,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16747,
											"end": 16929,
											"name": "tag",
											"source": 19,
											"value": "342"
										},
										{
											"begin": 16747,
											"end": 16929,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16887,
											"end": 16921,
											"name": "PUSH",
											"source": 19,
											"value": "696E76616C696420617267756D656E74202D206E6F2076616C7565206275726E"
										},
										{
											"begin": 16883,
											"end": 16884,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 16875,
											"end": 16881,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16871,
											"end": 16885,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16864,
											"end": 16922,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 16747,
											"end": 16929,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16747,
											"end": 16929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16935,
											"end": 17301,
											"name": "tag",
											"source": 19,
											"value": "343"
										},
										{
											"begin": 16935,
											"end": 17301,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17077,
											"end": 17080,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 17098,
											"end": 17165,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "509"
										},
										{
											"begin": 17162,
											"end": 17164,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 17157,
											"end": 17160,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 17098,
											"end": 17165,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "323"
										},
										{
											"begin": 17098,
											"end": 17165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17098,
											"end": 17165,
											"name": "tag",
											"source": 19,
											"value": "509"
										},
										{
											"begin": 17098,
											"end": 17165,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17091,
											"end": 17165,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 17091,
											"end": 17165,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17174,
											"end": 17267,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "510"
										},
										{
											"begin": 17263,
											"end": 17266,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17174,
											"end": 17267,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "342"
										},
										{
											"begin": 17174,
											"end": 17267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17174,
											"end": 17267,
											"name": "tag",
											"source": 19,
											"value": "510"
										},
										{
											"begin": 17174,
											"end": 17267,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17292,
											"end": 17294,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 17287,
											"end": 17290,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17283,
											"end": 17295,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17276,
											"end": 17295,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 17276,
											"end": 17295,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16935,
											"end": 17301,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 16935,
											"end": 17301,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 16935,
											"end": 17301,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16935,
											"end": 17301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17307,
											"end": 17726,
											"name": "tag",
											"source": 19,
											"value": "176"
										},
										{
											"begin": 17307,
											"end": 17726,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17473,
											"end": 17477,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 17511,
											"end": 17513,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 17500,
											"end": 17509,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17496,
											"end": 17514,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17488,
											"end": 17514,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 17488,
											"end": 17514,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17560,
											"end": 17569,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 17554,
											"end": 17558,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 17550,
											"end": 17570,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 17546,
											"end": 17547,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 17535,
											"end": 17544,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 17531,
											"end": 17548,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17524,
											"end": 17571,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 17588,
											"end": 17719,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "512"
										},
										{
											"begin": 17714,
											"end": 17718,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 17588,
											"end": 17719,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "343"
										},
										{
											"begin": 17588,
											"end": 17719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17588,
											"end": 17719,
											"name": "tag",
											"source": 19,
											"value": "512"
										},
										{
											"begin": 17588,
											"end": 17719,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17580,
											"end": 17719,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 17580,
											"end": 17719,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17307,
											"end": 17726,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 17307,
											"end": 17726,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 17307,
											"end": 17726,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17307,
											"end": 17726,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17732,
											"end": 17898,
											"name": "tag",
											"source": 19,
											"value": "344"
										},
										{
											"begin": 17732,
											"end": 17898,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17872,
											"end": 17890,
											"name": "PUSH",
											"source": 19,
											"value": "6D6F64756C65206E6F7420626F756E6400000000000000000000000000000000"
										},
										{
											"begin": 17868,
											"end": 17869,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 17860,
											"end": 17866,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17856,
											"end": 17870,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17849,
											"end": 17891,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 17732,
											"end": 17898,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17732,
											"end": 17898,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17904,
											"end": 18270,
											"name": "tag",
											"source": 19,
											"value": "345"
										},
										{
											"begin": 17904,
											"end": 18270,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18046,
											"end": 18049,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 18067,
											"end": 18134,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "515"
										},
										{
											"begin": 18131,
											"end": 18133,
											"name": "PUSH",
											"source": 19,
											"value": "10"
										},
										{
											"begin": 18126,
											"end": 18129,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 18067,
											"end": 18134,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "323"
										},
										{
											"begin": 18067,
											"end": 18134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18067,
											"end": 18134,
											"name": "tag",
											"source": 19,
											"value": "515"
										},
										{
											"begin": 18067,
											"end": 18134,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18060,
											"end": 18134,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 18060,
											"end": 18134,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18143,
											"end": 18236,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "516"
										},
										{
											"begin": 18232,
											"end": 18235,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18143,
											"end": 18236,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "344"
										},
										{
											"begin": 18143,
											"end": 18236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18143,
											"end": 18236,
											"name": "tag",
											"source": 19,
											"value": "516"
										},
										{
											"begin": 18143,
											"end": 18236,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18261,
											"end": 18263,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 18256,
											"end": 18259,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18252,
											"end": 18264,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18245,
											"end": 18264,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 18245,
											"end": 18264,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17904,
											"end": 18270,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 17904,
											"end": 18270,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 17904,
											"end": 18270,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17904,
											"end": 18270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18276,
											"end": 18695,
											"name": "tag",
											"source": 19,
											"value": "196"
										},
										{
											"begin": 18276,
											"end": 18695,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18442,
											"end": 18446,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 18480,
											"end": 18482,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 18469,
											"end": 18478,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18465,
											"end": 18483,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18457,
											"end": 18483,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 18457,
											"end": 18483,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18529,
											"end": 18538,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 18523,
											"end": 18527,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 18519,
											"end": 18539,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 18515,
											"end": 18516,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 18504,
											"end": 18513,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 18500,
											"end": 18517,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18493,
											"end": 18540,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 18557,
											"end": 18688,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "518"
										},
										{
											"begin": 18683,
											"end": 18687,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 18557,
											"end": 18688,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "345"
										},
										{
											"begin": 18557,
											"end": 18688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18557,
											"end": 18688,
											"name": "tag",
											"source": 19,
											"value": "518"
										},
										{
											"begin": 18557,
											"end": 18688,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18549,
											"end": 18688,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 18549,
											"end": 18688,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18276,
											"end": 18695,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 18276,
											"end": 18695,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 18276,
											"end": 18695,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18276,
											"end": 18695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18701,
											"end": 18895,
											"name": "tag",
											"source": 19,
											"value": "209"
										},
										{
											"begin": 18701,
											"end": 18895,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18741,
											"end": 18745,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 18761,
											"end": 18781,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "520"
										},
										{
											"begin": 18779,
											"end": 18780,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18761,
											"end": 18781,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "306"
										},
										{
											"begin": 18761,
											"end": 18781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18761,
											"end": 18781,
											"name": "tag",
											"source": 19,
											"value": "520"
										},
										{
											"begin": 18761,
											"end": 18781,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18756,
											"end": 18781,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 18756,
											"end": 18781,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18795,
											"end": 18815,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "521"
										},
										{
											"begin": 18813,
											"end": 18814,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 18795,
											"end": 18815,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "306"
										},
										{
											"begin": 18795,
											"end": 18815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18795,
											"end": 18815,
											"name": "tag",
											"source": 19,
											"value": "521"
										},
										{
											"begin": 18795,
											"end": 18815,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18790,
											"end": 18815,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 18790,
											"end": 18815,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18839,
											"end": 18840,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18836,
											"end": 18837,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18832,
											"end": 18841,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 18824,
											"end": 18841,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 18824,
											"end": 18841,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18863,
											"end": 18864,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 18857,
											"end": 18861,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 18854,
											"end": 18865,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 18851,
											"end": 18888,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 18851,
											"end": 18888,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "522"
										},
										{
											"begin": 18851,
											"end": 18888,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 18868,
											"end": 18886,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "523"
										},
										{
											"begin": 18868,
											"end": 18886,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "339"
										},
										{
											"begin": 18868,
											"end": 18886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18868,
											"end": 18886,
											"name": "tag",
											"source": 19,
											"value": "523"
										},
										{
											"begin": 18868,
											"end": 18886,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18851,
											"end": 18888,
											"name": "tag",
											"source": 19,
											"value": "522"
										},
										{
											"begin": 18851,
											"end": 18888,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18701,
											"end": 18895,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 18701,
											"end": 18895,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 18701,
											"end": 18895,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18701,
											"end": 18895,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18701,
											"end": 18895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18901,
											"end": 19081,
											"name": "tag",
											"source": 19,
											"value": "218"
										},
										{
											"begin": 18901,
											"end": 19081,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18949,
											"end": 19026,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18946,
											"end": 18947,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 18939,
											"end": 19027,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 19046,
											"end": 19050,
											"name": "PUSH",
											"source": 19,
											"value": "31"
										},
										{
											"begin": 19043,
											"end": 19044,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 19036,
											"end": 19051,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 19070,
											"end": 19074,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 19067,
											"end": 19068,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 19060,
											"end": 19075,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 19087,
											"end": 19320,
											"name": "tag",
											"source": 19,
											"value": "346"
										},
										{
											"begin": 19087,
											"end": 19320,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19227,
											"end": 19261,
											"name": "PUSH",
											"source": 19,
											"value": "496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
										},
										{
											"begin": 19223,
											"end": 19224,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 19215,
											"end": 19221,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 19211,
											"end": 19225,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19204,
											"end": 19262,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 19296,
											"end": 19312,
											"name": "PUSH",
											"source": 19,
											"value": "647920696E697469616C697A6564000000000000000000000000000000000000"
										},
										{
											"begin": 19291,
											"end": 19293,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 19283,
											"end": 19289,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 19279,
											"end": 19294,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19272,
											"end": 19313,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 19087,
											"end": 19320,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19087,
											"end": 19320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19326,
											"end": 19692,
											"name": "tag",
											"source": 19,
											"value": "347"
										},
										{
											"begin": 19326,
											"end": 19692,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19468,
											"end": 19471,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 19489,
											"end": 19556,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "527"
										},
										{
											"begin": 19553,
											"end": 19555,
											"name": "PUSH",
											"source": 19,
											"value": "2E"
										},
										{
											"begin": 19548,
											"end": 19551,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 19489,
											"end": 19556,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "323"
										},
										{
											"begin": 19489,
											"end": 19556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19489,
											"end": 19556,
											"name": "tag",
											"source": 19,
											"value": "527"
										},
										{
											"begin": 19489,
											"end": 19556,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19482,
											"end": 19556,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 19482,
											"end": 19556,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19565,
											"end": 19658,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "528"
										},
										{
											"begin": 19654,
											"end": 19657,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 19565,
											"end": 19658,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "346"
										},
										{
											"begin": 19565,
											"end": 19658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19565,
											"end": 19658,
											"name": "tag",
											"source": 19,
											"value": "528"
										},
										{
											"begin": 19565,
											"end": 19658,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19683,
											"end": 19685,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 19678,
											"end": 19681,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 19674,
											"end": 19686,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19667,
											"end": 19686,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 19667,
											"end": 19686,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19326,
											"end": 19692,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 19326,
											"end": 19692,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 19326,
											"end": 19692,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19326,
											"end": 19692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19698,
											"end": 20117,
											"name": "tag",
											"source": 19,
											"value": "233"
										},
										{
											"begin": 19698,
											"end": 20117,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19864,
											"end": 19868,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 19902,
											"end": 19904,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 19891,
											"end": 19900,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 19887,
											"end": 19905,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19879,
											"end": 19905,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 19879,
											"end": 19905,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19951,
											"end": 19960,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 19945,
											"end": 19949,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 19941,
											"end": 19961,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 19937,
											"end": 19938,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 19926,
											"end": 19935,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 19922,
											"end": 19939,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19915,
											"end": 19962,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 19979,
											"end": 20110,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "530"
										},
										{
											"begin": 20105,
											"end": 20109,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 19979,
											"end": 20110,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "347"
										},
										{
											"begin": 19979,
											"end": 20110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19979,
											"end": 20110,
											"name": "tag",
											"source": 19,
											"value": "530"
										},
										{
											"begin": 19979,
											"end": 20110,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19971,
											"end": 20110,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 19971,
											"end": 20110,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19698,
											"end": 20117,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 19698,
											"end": 20117,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 19698,
											"end": 20117,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19698,
											"end": 20117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20123,
											"end": 20208,
											"name": "tag",
											"source": 19,
											"value": "348"
										},
										{
											"begin": 20123,
											"end": 20208,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20168,
											"end": 20175,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 20197,
											"end": 20202,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 20186,
											"end": 20202,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 20186,
											"end": 20202,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20123,
											"end": 20208,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 20123,
											"end": 20208,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 20123,
											"end": 20208,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20123,
											"end": 20208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20214,
											"end": 20300,
											"name": "tag",
											"source": 19,
											"value": "349"
										},
										{
											"begin": 20214,
											"end": 20300,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20249,
											"end": 20256,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 20289,
											"end": 20293,
											"name": "PUSH",
											"source": 19,
											"value": "FF"
										},
										{
											"begin": 20282,
											"end": 20287,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 20278,
											"end": 20294,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 20267,
											"end": 20294,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 20267,
											"end": 20294,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20214,
											"end": 20300,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 20214,
											"end": 20300,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 20214,
											"end": 20300,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20214,
											"end": 20300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20306,
											"end": 20366,
											"name": "tag",
											"source": 19,
											"value": "350"
										},
										{
											"begin": 20306,
											"end": 20366,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20334,
											"end": 20337,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 20355,
											"end": 20360,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 20348,
											"end": 20360,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 20348,
											"end": 20360,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20306,
											"end": 20366,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 20306,
											"end": 20366,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 20306,
											"end": 20366,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20306,
											"end": 20366,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20372,
											"end": 20526,
											"name": "tag",
											"source": 19,
											"value": "351"
										},
										{
											"begin": 20372,
											"end": 20526,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20428,
											"end": 20437,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 20461,
											"end": 20520,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "535"
										},
										{
											"begin": 20477,
											"end": 20519,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "536"
										},
										{
											"begin": 20486,
											"end": 20518,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "537"
										},
										{
											"begin": 20512,
											"end": 20517,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 20486,
											"end": 20518,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "348"
										},
										{
											"begin": 20486,
											"end": 20518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20486,
											"end": 20518,
											"name": "tag",
											"source": 19,
											"value": "537"
										},
										{
											"begin": 20486,
											"end": 20518,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20477,
											"end": 20519,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "350"
										},
										{
											"begin": 20477,
											"end": 20519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20477,
											"end": 20519,
											"name": "tag",
											"source": 19,
											"value": "536"
										},
										{
											"begin": 20477,
											"end": 20519,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20461,
											"end": 20520,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "349"
										},
										{
											"begin": 20461,
											"end": 20520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20461,
											"end": 20520,
											"name": "tag",
											"source": 19,
											"value": "535"
										},
										{
											"begin": 20461,
											"end": 20520,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20448,
											"end": 20520,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 20448,
											"end": 20520,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20372,
											"end": 20526,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 20372,
											"end": 20526,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 20372,
											"end": 20526,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20372,
											"end": 20526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20532,
											"end": 20675,
											"name": "tag",
											"source": 19,
											"value": "352"
										},
										{
											"begin": 20532,
											"end": 20675,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20625,
											"end": 20668,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "539"
										},
										{
											"begin": 20662,
											"end": 20667,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 20625,
											"end": 20668,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "351"
										},
										{
											"begin": 20625,
											"end": 20668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20625,
											"end": 20668,
											"name": "tag",
											"source": 19,
											"value": "539"
										},
										{
											"begin": 20625,
											"end": 20668,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20620,
											"end": 20623,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 20613,
											"end": 20669,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 20532,
											"end": 20675,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20532,
											"end": 20675,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20532,
											"end": 20675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20681,
											"end": 20915,
											"name": "tag",
											"source": 19,
											"value": "240"
										},
										{
											"begin": 20681,
											"end": 20915,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20780,
											"end": 20784,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 20818,
											"end": 20820,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 20807,
											"end": 20816,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 20803,
											"end": 20821,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 20795,
											"end": 20821,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 20795,
											"end": 20821,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20831,
											"end": 20908,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "541"
										},
										{
											"begin": 20905,
											"end": 20906,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 20894,
											"end": 20903,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 20890,
											"end": 20907,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 20881,
											"end": 20887,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 20831,
											"end": 20908,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "352"
										},
										{
											"begin": 20831,
											"end": 20908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20831,
											"end": 20908,
											"name": "tag",
											"source": 19,
											"value": "541"
										},
										{
											"begin": 20831,
											"end": 20908,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20681,
											"end": 20915,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 20681,
											"end": 20915,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 20681,
											"end": 20915,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20681,
											"end": 20915,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20681,
											"end": 20915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20921,
											"end": 21474,
											"name": "tag",
											"source": 19,
											"value": "249"
										},
										{
											"begin": 20921,
											"end": 21474,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21098,
											"end": 21102,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 21136,
											"end": 21139,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 21125,
											"end": 21134,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 21121,
											"end": 21140,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 21113,
											"end": 21140,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 21113,
											"end": 21140,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21150,
											"end": 21221,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "543"
										},
										{
											"begin": 21218,
											"end": 21219,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 21207,
											"end": 21216,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 21203,
											"end": 21220,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 21194,
											"end": 21200,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 21150,
											"end": 21221,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "309"
										},
										{
											"begin": 21150,
											"end": 21221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21150,
											"end": 21221,
											"name": "tag",
											"source": 19,
											"value": "543"
										},
										{
											"begin": 21150,
											"end": 21221,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21231,
											"end": 21303,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "544"
										},
										{
											"begin": 21299,
											"end": 21301,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 21288,
											"end": 21297,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 21284,
											"end": 21302,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 21275,
											"end": 21281,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 21231,
											"end": 21303,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "309"
										},
										{
											"begin": 21231,
											"end": 21303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21231,
											"end": 21303,
											"name": "tag",
											"source": 19,
											"value": "544"
										},
										{
											"begin": 21231,
											"end": 21303,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21313,
											"end": 21385,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "545"
										},
										{
											"begin": 21381,
											"end": 21383,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 21370,
											"end": 21379,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 21366,
											"end": 21384,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 21357,
											"end": 21363,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 21313,
											"end": 21385,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "338"
										},
										{
											"begin": 21313,
											"end": 21385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21313,
											"end": 21385,
											"name": "tag",
											"source": 19,
											"value": "545"
										},
										{
											"begin": 21313,
											"end": 21385,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21395,
											"end": 21467,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "546"
										},
										{
											"begin": 21463,
											"end": 21465,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 21452,
											"end": 21461,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 21448,
											"end": 21466,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 21439,
											"end": 21445,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 21395,
											"end": 21467,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "309"
										},
										{
											"begin": 21395,
											"end": 21467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21395,
											"end": 21467,
											"name": "tag",
											"source": 19,
											"value": "546"
										},
										{
											"begin": 21395,
											"end": 21467,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20921,
											"end": 21474,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 20921,
											"end": 21474,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 20921,
											"end": 21474,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20921,
											"end": 21474,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20921,
											"end": 21474,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20921,
											"end": 21474,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20921,
											"end": 21474,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20921,
											"end": 21474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21480,
											"end": 21596,
											"name": "tag",
											"source": 19,
											"value": "353"
										},
										{
											"begin": 21480,
											"end": 21596,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21550,
											"end": 21571,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "548"
										},
										{
											"begin": 21565,
											"end": 21570,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 21550,
											"end": 21571,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "310"
										},
										{
											"begin": 21550,
											"end": 21571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21550,
											"end": 21571,
											"name": "tag",
											"source": 19,
											"value": "548"
										},
										{
											"begin": 21550,
											"end": 21571,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21543,
											"end": 21548,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 21540,
											"end": 21572,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 21530,
											"end": 21590,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "549"
										},
										{
											"begin": 21530,
											"end": 21590,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 21586,
											"end": 21587,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 21583,
											"end": 21584,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 21576,
											"end": 21588,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 21530,
											"end": 21590,
											"name": "tag",
											"source": 19,
											"value": "549"
										},
										{
											"begin": 21530,
											"end": 21590,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21480,
											"end": 21596,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21480,
											"end": 21596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21602,
											"end": 21739,
											"name": "tag",
											"source": 19,
											"value": "354"
										},
										{
											"begin": 21602,
											"end": 21739,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21656,
											"end": 21661,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 21687,
											"end": 21693,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 21681,
											"end": 21694,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 21672,
											"end": 21694,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 21672,
											"end": 21694,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21703,
											"end": 21733,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "551"
										},
										{
											"begin": 21727,
											"end": 21732,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 21703,
											"end": 21733,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "353"
										},
										{
											"begin": 21703,
											"end": 21733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21703,
											"end": 21733,
											"name": "tag",
											"source": 19,
											"value": "551"
										},
										{
											"begin": 21703,
											"end": 21733,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21602,
											"end": 21739,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 21602,
											"end": 21739,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 21602,
											"end": 21739,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21602,
											"end": 21739,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21602,
											"end": 21739,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21745,
											"end": 22090,
											"name": "tag",
											"source": 19,
											"value": "253"
										},
										{
											"begin": 21745,
											"end": 22090,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21812,
											"end": 21818,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 21861,
											"end": 21863,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 21849,
											"end": 21858,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 21840,
											"end": 21847,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 21836,
											"end": 21859,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 21832,
											"end": 21864,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 21829,
											"end": 21948,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 21829,
											"end": 21948,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "553"
										},
										{
											"begin": 21829,
											"end": 21948,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 21867,
											"end": 21946,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "554"
										},
										{
											"begin": 21867,
											"end": 21946,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "300"
										},
										{
											"begin": 21867,
											"end": 21946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21867,
											"end": 21946,
											"name": "tag",
											"source": 19,
											"value": "554"
										},
										{
											"begin": 21867,
											"end": 21946,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21829,
											"end": 21948,
											"name": "tag",
											"source": 19,
											"value": "553"
										},
										{
											"begin": 21829,
											"end": 21948,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21987,
											"end": 21988,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 22012,
											"end": 22073,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "555"
										},
										{
											"begin": 22065,
											"end": 22072,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 22056,
											"end": 22062,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 22045,
											"end": 22054,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 22041,
											"end": 22063,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 22012,
											"end": 22073,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "354"
										},
										{
											"begin": 22012,
											"end": 22073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22012,
											"end": 22073,
											"name": "tag",
											"source": 19,
											"value": "555"
										},
										{
											"begin": 22012,
											"end": 22073,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22002,
											"end": 22073,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 22002,
											"end": 22073,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21958,
											"end": 22083,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21745,
											"end": 22090,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 21745,
											"end": 22090,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 21745,
											"end": 22090,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21745,
											"end": 22090,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21745,
											"end": 22090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22096,
											"end": 22271,
											"name": "tag",
											"source": 19,
											"value": "355"
										},
										{
											"begin": 22096,
											"end": 22271,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22236,
											"end": 22263,
											"name": "PUSH",
											"source": 19,
											"value": "63616C6C206F6E6C79206F6E20626F756E64206D6F64756C6500000000000000"
										},
										{
											"begin": 22232,
											"end": 22233,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 22224,
											"end": 22230,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 22220,
											"end": 22234,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 22213,
											"end": 22264,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 22096,
											"end": 22271,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22096,
											"end": 22271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22277,
											"end": 22643,
											"name": "tag",
											"source": 19,
											"value": "356"
										},
										{
											"begin": 22277,
											"end": 22643,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22419,
											"end": 22422,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 22440,
											"end": 22507,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "558"
										},
										{
											"begin": 22504,
											"end": 22506,
											"name": "PUSH",
											"source": 19,
											"value": "19"
										},
										{
											"begin": 22499,
											"end": 22502,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 22440,
											"end": 22507,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "323"
										},
										{
											"begin": 22440,
											"end": 22507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22440,
											"end": 22507,
											"name": "tag",
											"source": 19,
											"value": "558"
										},
										{
											"begin": 22440,
											"end": 22507,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22433,
											"end": 22507,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 22433,
											"end": 22507,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22516,
											"end": 22609,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "559"
										},
										{
											"begin": 22605,
											"end": 22608,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 22516,
											"end": 22609,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "355"
										},
										{
											"begin": 22516,
											"end": 22609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22516,
											"end": 22609,
											"name": "tag",
											"source": 19,
											"value": "559"
										},
										{
											"begin": 22516,
											"end": 22609,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22634,
											"end": 22636,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 22629,
											"end": 22632,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 22625,
											"end": 22637,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 22618,
											"end": 22637,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 22618,
											"end": 22637,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22277,
											"end": 22643,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 22277,
											"end": 22643,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 22277,
											"end": 22643,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22277,
											"end": 22643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22649,
											"end": 23068,
											"name": "tag",
											"source": 19,
											"value": "261"
										},
										{
											"begin": 22649,
											"end": 23068,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22815,
											"end": 22819,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 22853,
											"end": 22855,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 22842,
											"end": 22851,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 22838,
											"end": 22856,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 22830,
											"end": 22856,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 22830,
											"end": 22856,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22902,
											"end": 22911,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 22896,
											"end": 22900,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 22892,
											"end": 22912,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 22888,
											"end": 22889,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 22877,
											"end": 22886,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 22873,
											"end": 22890,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 22866,
											"end": 22913,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 22930,
											"end": 23061,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "561"
										},
										{
											"begin": 23056,
											"end": 23060,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 22930,
											"end": 23061,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "356"
										},
										{
											"begin": 22930,
											"end": 23061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22930,
											"end": 23061,
											"name": "tag",
											"source": 19,
											"value": "561"
										},
										{
											"begin": 22930,
											"end": 23061,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22922,
											"end": 23061,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 22922,
											"end": 23061,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22649,
											"end": 23068,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 22649,
											"end": 23068,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 22649,
											"end": 23068,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22649,
											"end": 23068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23074,
											"end": 23223,
											"name": "tag",
											"source": 19,
											"value": "357"
										},
										{
											"begin": 23074,
											"end": 23223,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23110,
											"end": 23117,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 23150,
											"end": 23216,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23143,
											"end": 23148,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 23139,
											"end": 23217,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 23128,
											"end": 23217,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 23128,
											"end": 23217,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23074,
											"end": 23223,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 23074,
											"end": 23223,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 23074,
											"end": 23223,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23074,
											"end": 23223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23229,
											"end": 23344,
											"name": "tag",
											"source": 19,
											"value": "358"
										},
										{
											"begin": 23229,
											"end": 23344,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23314,
											"end": 23337,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "564"
										},
										{
											"begin": 23331,
											"end": 23336,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 23314,
											"end": 23337,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "357"
										},
										{
											"begin": 23314,
											"end": 23337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23314,
											"end": 23337,
											"name": "tag",
											"source": 19,
											"value": "564"
										},
										{
											"begin": 23314,
											"end": 23337,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23309,
											"end": 23312,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 23302,
											"end": 23338,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 23229,
											"end": 23344,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23229,
											"end": 23344,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23229,
											"end": 23344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23350,
											"end": 23568,
											"name": "tag",
											"source": 19,
											"value": "266"
										},
										{
											"begin": 23350,
											"end": 23568,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23441,
											"end": 23445,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 23479,
											"end": 23481,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 23468,
											"end": 23477,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 23464,
											"end": 23482,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 23456,
											"end": 23482,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 23456,
											"end": 23482,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23492,
											"end": 23561,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "566"
										},
										{
											"begin": 23558,
											"end": 23559,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 23547,
											"end": 23556,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 23543,
											"end": 23560,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 23534,
											"end": 23540,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 23492,
											"end": 23561,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "358"
										},
										{
											"begin": 23492,
											"end": 23561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23492,
											"end": 23561,
											"name": "tag",
											"source": 19,
											"value": "566"
										},
										{
											"begin": 23492,
											"end": 23561,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23350,
											"end": 23568,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 23350,
											"end": 23568,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 23350,
											"end": 23568,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23350,
											"end": 23568,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23350,
											"end": 23568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23574,
											"end": 23799,
											"name": "tag",
											"source": 19,
											"value": "359"
										},
										{
											"begin": 23574,
											"end": 23799,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23714,
											"end": 23748,
											"name": "PUSH",
											"source": 19,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 23710,
											"end": 23711,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 23702,
											"end": 23708,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 23698,
											"end": 23712,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 23691,
											"end": 23749,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 23783,
											"end": 23791,
											"name": "PUSH",
											"source": 19,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23778,
											"end": 23780,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 23770,
											"end": 23776,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 23766,
											"end": 23781,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 23759,
											"end": 23792,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 23574,
											"end": 23799,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23574,
											"end": 23799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23805,
											"end": 24171,
											"name": "tag",
											"source": 19,
											"value": "360"
										},
										{
											"begin": 23805,
											"end": 24171,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23947,
											"end": 23950,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 23968,
											"end": 24035,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "569"
										},
										{
											"begin": 24032,
											"end": 24034,
											"name": "PUSH",
											"source": 19,
											"value": "26"
										},
										{
											"begin": 24027,
											"end": 24030,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 23968,
											"end": 24035,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "323"
										},
										{
											"begin": 23968,
											"end": 24035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23968,
											"end": 24035,
											"name": "tag",
											"source": 19,
											"value": "569"
										},
										{
											"begin": 23968,
											"end": 24035,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23961,
											"end": 24035,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 23961,
											"end": 24035,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24044,
											"end": 24137,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "570"
										},
										{
											"begin": 24133,
											"end": 24136,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 24044,
											"end": 24137,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "359"
										},
										{
											"begin": 24044,
											"end": 24137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 24044,
											"end": 24137,
											"name": "tag",
											"source": 19,
											"value": "570"
										},
										{
											"begin": 24044,
											"end": 24137,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24162,
											"end": 24164,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 24157,
											"end": 24160,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 24153,
											"end": 24165,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 24146,
											"end": 24165,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 24146,
											"end": 24165,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23805,
											"end": 24171,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 23805,
											"end": 24171,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 23805,
											"end": 24171,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23805,
											"end": 24171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 24177,
											"end": 24596,
											"name": "tag",
											"source": 19,
											"value": "272"
										},
										{
											"begin": 24177,
											"end": 24596,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24343,
											"end": 24347,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 24381,
											"end": 24383,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 24370,
											"end": 24379,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 24366,
											"end": 24384,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 24358,
											"end": 24384,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 24358,
											"end": 24384,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24430,
											"end": 24439,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 24424,
											"end": 24428,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 24420,
											"end": 24440,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 24416,
											"end": 24417,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 24405,
											"end": 24414,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 24401,
											"end": 24418,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 24394,
											"end": 24441,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 24458,
											"end": 24589,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "572"
										},
										{
											"begin": 24584,
											"end": 24588,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 24458,
											"end": 24589,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "360"
										},
										{
											"begin": 24458,
											"end": 24589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 24458,
											"end": 24589,
											"name": "tag",
											"source": 19,
											"value": "572"
										},
										{
											"begin": 24458,
											"end": 24589,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24450,
											"end": 24589,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 24450,
											"end": 24589,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24177,
											"end": 24596,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 24177,
											"end": 24596,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 24177,
											"end": 24596,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24177,
											"end": 24596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 24602,
											"end": 24784,
											"name": "tag",
											"source": 19,
											"value": "361"
										},
										{
											"begin": 24602,
											"end": 24784,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24742,
											"end": 24776,
											"name": "PUSH",
											"source": 19,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 24738,
											"end": 24739,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 24730,
											"end": 24736,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 24726,
											"end": 24740,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 24719,
											"end": 24777,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 24602,
											"end": 24784,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24602,
											"end": 24784,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 24790,
											"end": 25156,
											"name": "tag",
											"source": 19,
											"value": "362"
										},
										{
											"begin": 24790,
											"end": 25156,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24932,
											"end": 24935,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 24953,
											"end": 25020,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "575"
										},
										{
											"begin": 25017,
											"end": 25019,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 25012,
											"end": 25015,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 24953,
											"end": 25020,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "323"
										},
										{
											"begin": 24953,
											"end": 25020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 24953,
											"end": 25020,
											"name": "tag",
											"source": 19,
											"value": "575"
										},
										{
											"begin": 24953,
											"end": 25020,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24946,
											"end": 25020,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 24946,
											"end": 25020,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 25029,
											"end": 25122,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "576"
										},
										{
											"begin": 25118,
											"end": 25121,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 25029,
											"end": 25122,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "361"
										},
										{
											"begin": 25029,
											"end": 25122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 25029,
											"end": 25122,
											"name": "tag",
											"source": 19,
											"value": "576"
										},
										{
											"begin": 25029,
											"end": 25122,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25147,
											"end": 25149,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 25142,
											"end": 25145,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 25138,
											"end": 25150,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 25131,
											"end": 25150,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 25131,
											"end": 25150,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24790,
											"end": 25156,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 24790,
											"end": 25156,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 24790,
											"end": 25156,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24790,
											"end": 25156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 25162,
											"end": 25581,
											"name": "tag",
											"source": 19,
											"value": "280"
										},
										{
											"begin": 25162,
											"end": 25581,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25328,
											"end": 25332,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 25366,
											"end": 25368,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 25355,
											"end": 25364,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 25351,
											"end": 25369,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 25343,
											"end": 25369,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 25343,
											"end": 25369,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 25415,
											"end": 25424,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 25409,
											"end": 25413,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 25405,
											"end": 25425,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 25401,
											"end": 25402,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 25390,
											"end": 25399,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 25386,
											"end": 25403,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 25379,
											"end": 25426,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 25443,
											"end": 25574,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "578"
										},
										{
											"begin": 25569,
											"end": 25573,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 25443,
											"end": 25574,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "362"
										},
										{
											"begin": 25443,
											"end": 25574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 25443,
											"end": 25574,
											"name": "tag",
											"source": 19,
											"value": "578"
										},
										{
											"begin": 25443,
											"end": 25574,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25435,
											"end": 25574,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 25435,
											"end": 25574,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 25162,
											"end": 25581,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 25162,
											"end": 25581,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 25162,
											"end": 25581,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 25162,
											"end": 25581,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 25587,
											"end": 25817,
											"name": "tag",
											"source": 19,
											"value": "363"
										},
										{
											"begin": 25587,
											"end": 25817,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25727,
											"end": 25761,
											"name": "PUSH",
											"source": 19,
											"value": "496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069"
										},
										{
											"begin": 25723,
											"end": 25724,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 25715,
											"end": 25721,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 25711,
											"end": 25725,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 25704,
											"end": 25762,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 25796,
											"end": 25809,
											"name": "PUSH",
											"source": 19,
											"value": "6E697469616C697A696E67000000000000000000000000000000000000000000"
										},
										{
											"begin": 25791,
											"end": 25793,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 25783,
											"end": 25789,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 25779,
											"end": 25794,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 25772,
											"end": 25810,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 25587,
											"end": 25817,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 25587,
											"end": 25817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 25823,
											"end": 26189,
											"name": "tag",
											"source": 19,
											"value": "364"
										},
										{
											"begin": 25823,
											"end": 26189,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25965,
											"end": 25968,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 25986,
											"end": 26053,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "581"
										},
										{
											"begin": 26050,
											"end": 26052,
											"name": "PUSH",
											"source": 19,
											"value": "2B"
										},
										{
											"begin": 26045,
											"end": 26048,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 25986,
											"end": 26053,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "323"
										},
										{
											"begin": 25986,
											"end": 26053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 25986,
											"end": 26053,
											"name": "tag",
											"source": 19,
											"value": "581"
										},
										{
											"begin": 25986,
											"end": 26053,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25979,
											"end": 26053,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 25979,
											"end": 26053,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 26062,
											"end": 26155,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "582"
										},
										{
											"begin": 26151,
											"end": 26154,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 26062,
											"end": 26155,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "363"
										},
										{
											"begin": 26062,
											"end": 26155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 26062,
											"end": 26155,
											"name": "tag",
											"source": 19,
											"value": "582"
										},
										{
											"begin": 26062,
											"end": 26155,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 26180,
											"end": 26182,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 26175,
											"end": 26178,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 26171,
											"end": 26183,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 26164,
											"end": 26183,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 26164,
											"end": 26183,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 25823,
											"end": 26189,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 25823,
											"end": 26189,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 25823,
											"end": 26189,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 25823,
											"end": 26189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 26195,
											"end": 26614,
											"name": "tag",
											"source": 19,
											"value": "286"
										},
										{
											"begin": 26195,
											"end": 26614,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 26361,
											"end": 26365,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 26399,
											"end": 26401,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 26388,
											"end": 26397,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 26384,
											"end": 26402,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 26376,
											"end": 26402,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 26376,
											"end": 26402,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 26448,
											"end": 26457,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 26442,
											"end": 26446,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 26438,
											"end": 26458,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 26434,
											"end": 26435,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 26423,
											"end": 26432,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 26419,
											"end": 26436,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 26412,
											"end": 26459,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 26476,
											"end": 26607,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "584"
										},
										{
											"begin": 26602,
											"end": 26606,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 26476,
											"end": 26607,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "364"
										},
										{
											"begin": 26476,
											"end": 26607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 26476,
											"end": 26607,
											"name": "tag",
											"source": 19,
											"value": "584"
										},
										{
											"begin": 26476,
											"end": 26607,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 26468,
											"end": 26607,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 26468,
											"end": 26607,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 26195,
											"end": 26614,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 26195,
											"end": 26614,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 26195,
											"end": 26614,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 26195,
											"end": 26614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										}
									]
								}
							},
							"sourceList": [
								"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
								"@onchain-id/solidity/contracts/interface/IERC734.sol",
								"@onchain-id/solidity/contracts/interface/IERC735.sol",
								"@onchain-id/solidity/contracts/interface/IIdentity.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"Tokeny Project/Compliance/modular/IModularCompliance.sol",
								"Tokeny Project/Compliance/modular/MCStorage.sol",
								"Tokeny Project/Compliance/modular/ModularCompliance.sol",
								"Tokeny Project/Compliance/modular/Modules/IModule.sol",
								"https://github.com/TokenySolutions/T-REX/blob/main/contracts/compliance/modular/IModularCompliance.sol",
								"https://github.com/TokenySolutions/T-REX/blob/main/contracts/registry/interface/IClaimTopicsRegistry.sol",
								"https://github.com/TokenySolutions/T-REX/blob/main/contracts/registry/interface/IIdentityRegistry.sol",
								"https://github.com/TokenySolutions/T-REX/blob/main/contracts/registry/interface/IIdentityRegistryStorage.sol",
								"https://github.com/TokenySolutions/T-REX/blob/main/contracts/registry/interface/ITrustedIssuersRegistry.sol",
								"https://github.com/TokenySolutions/T-REX/blob/main/contracts/token/IToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addModule(address)": "1ed86f19",
							"bindToken(address)": "3ff5aa02",
							"callModuleFunction(bytes,address)": "efb22d33",
							"canTransfer(address,address,uint256)": "e46638e6",
							"created(address,uint256)": "5f8dead3",
							"destroyed(address,uint256)": "8d2ea772",
							"getModules()": "b2494df3",
							"getTokenBound()": "6a3edf28",
							"init()": "e1c7392a",
							"isModuleBound(address)": "a446d49f",
							"owner()": "8da5cb5b",
							"removeModule(address)": "a0632461",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"transferred(address,address,uint256)": "8baf29b4",
							"unbindToken(address)": "40db3b50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"}],\"name\":\"ModuleAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"ModuleInteraction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"}],\"name\":\"ModuleRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"TokenBound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"TokenUnbound\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"}],\"name\":\"addModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"bindToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"}],\"name\":\"callModuleFunction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"canTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"created\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"destroyed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getModules\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenBound\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"}],\"name\":\"isModuleBound\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"}],\"name\":\"removeModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferred\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"unbindToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addModule(address)\":{\"details\":\"adds a module to the list of compliance modules\",\"params\":{\"_module\":\"address of the module to add  there cannot be more than 25 modules bound to the modular compliance for gas cost reasons  This function can be called ONLY by the owner of the compliance contract  Emits a ModuleAdded event\"}},\"bindToken(address)\":{\"details\":\"binds a token to the compliance contract\",\"params\":{\"_token\":\"address of the token to bind  This function can be called ONLY by the owner of the compliance contract  Emits a TokenBound event\"}},\"callModuleFunction(bytes,address)\":{\"details\":\"calls any function on bound modules  can be called only on bound modules\",\"params\":{\"_module\":\"The address of the module  This function can be called only by the modular compliance owner  emits a `ModuleInteraction` event\",\"callData\":\"the bytecode for interaction with the module, abi encoded\"}},\"getModules()\":{\"details\":\"getter for the modules bound to the compliance contract  returns address array of module contracts bound to the compliance\"},\"getTokenBound()\":{\"details\":\"getter for the address of the token bound  returns the address of the token\"},\"isModuleBound(address)\":{\"details\":\"checks if a module is bound to the compliance contract  returns true if module is bound, false otherwise\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeModule(address)\":{\"details\":\"removes a module from the list of compliance modules\",\"params\":{\"_module\":\"address of the module to remove  This function can be called ONLY by the owner of the compliance contract  Emits a ModuleRemoved event\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unbindToken(address)\":{\"details\":\"unbinds a token from the compliance contract\",\"params\":{\"_token\":\"address of the token to unbind  This function can be called ONLY by the owner of the compliance contract  Emits a TokenUnbound event\"}}},\"version\":1},\"userdoc\":{\"events\":{\"ModuleAdded(address)\":{\"notice\":\"this event is emitted when a module has been added to the list of modules bound to the compliance contract  the event is emitted by the addModule function  `_module` is the address of the compliance module\"},\"ModuleRemoved(address)\":{\"notice\":\"this event is emitted when a module has been removed from the list of modules bound to the compliance contract  the event is emitted by the removeModule function  `_module` is the address of the compliance module\"},\"TokenBound(address)\":{\"notice\":\"this event is emitted when a token has been bound to the compliance contract  the event is emitted by the bindToken function  `_token` is the address of the token to bind\"},\"TokenUnbound(address)\":{\"notice\":\"this event is emitted when a token has been unbound from the compliance contract  the event is emitted by the unbindToken function  `_token` is the address of the token to unbind\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Tokeny Project/Compliance/modular/ModularCompliance.sol\":\"ModularCompliance\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\":{\"keccak256\":\"0xa7372faa967bc7eaedf66ec51907a21ca789123ad8a6fd371b32f2d2a6f27817\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dcf7cf65c7aff1f78a9071c47b05865c0fbce9d7c965430e8438ba7a451a2ba4\",\"dweb:/ipfs/QmViSrFA2KQpFeWssbJWQtdpa62A9MeEWaxqgs8dyPssga\"]},\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x419198390ae57e3a090a454452931ac8a6605acfd296809c43d4966c9cea2d19\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8f8c7d8d74a6e7dff2858abd7f10aefe1cc88bb629ec6a0c164e4043e2c70eb7\",\"dweb:/ipfs/QmRg2WFW8T2YEt1zJ7PGSAFxcu1L46pNWxm6MZbuN7M4Qc\"]},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"Tokeny Project/Compliance/modular/IModularCompliance.sol\":{\"keccak256\":\"0xebb5cf023668789943bfa6e405037a1e0871ef1a8b4e4929e2bf78f86bde6f15\",\"urls\":[\"bzz-raw://f76876399ebf894df39866452049b72b40ea6e4c004d1629dbb278b5ac0ddb05\",\"dweb:/ipfs/QmeUbLXQFSF7viPTs6zTVaxCbHq14WbN5XyFPWT2gZKYks\"]},\"Tokeny Project/Compliance/modular/MCStorage.sol\":{\"keccak256\":\"0xc2f7353ffd1544ed9a32a686f08e19638cc8565ed11a813d82bb06b592cf1825\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1de12e376bc9dcbb70119a351a7b0d752b9554f8c3536bcfc07cee9a3e8462\",\"dweb:/ipfs/QmU46tA1a2c58kTv5J1XMCKutcQ6NotVSLLNGkzPgwwn4a\"]},\"Tokeny Project/Compliance/modular/ModularCompliance.sol\":{\"keccak256\":\"0x985ecbf29f7ca992ad4a7eea6dacd08635b2d2e2c5368ae63a6269277ff525da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecc59c3886e76a24dae89bfd297e65394d555b8e0babd281bc633e1b479cc01f\",\"dweb:/ipfs/Qmbaioy4a1cDzYKVVrNGDRaFKmcgiT3uwxePuctcQ39Ff3\"]},\"Tokeny Project/Compliance/modular/Modules/IModule.sol\":{\"keccak256\":\"0xe3d553f04d43623b2b8702292e44a09a47c3db736b0f5463de2b606c2eee7545\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://632ad70eca95a71a179c8c319b62fccb3b98a2cc04b24e10945a7d274bf2eba4\",\"dweb:/ipfs/QmNisz3w7zy73dcYKTfYG1SqtGqDheht3cCzPo4T9ZYeWH\"]},\"https://github.com/TokenySolutions/T-REX/blob/main/contracts/compliance/modular/IModularCompliance.sol\":{\"keccak256\":\"0xf632b47a306502ce66a0e432c7c3a7d3290ab8325a854bdefe2268d61fb7cc7f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://988eb31577cdd253e9ff2743983c466f81fdb6b944b24d3c55b0263ae45f3d3d\",\"dweb:/ipfs/QmZFixdMi55m78eEfrLN3yiNL4VR3AWSgKcjaRBBq4FskX\"]},\"https://github.com/TokenySolutions/T-REX/blob/main/contracts/registry/interface/IClaimTopicsRegistry.sol\":{\"keccak256\":\"0x878a76f41e117a67b97a698755e9875701282fcc12890c5ebaf85264808e5608\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://46639925c8db6a5442687f74c489bd9f05904acc2f87579f3f538e2a8d5045e2\",\"dweb:/ipfs/QmQSQHd9jMT98LDnD3cxHFK4L9zZ7fLLd9tJUu1ddZYoLn\"]},\"https://github.com/TokenySolutions/T-REX/blob/main/contracts/registry/interface/IIdentityRegistry.sol\":{\"keccak256\":\"0xce63ed845f95b5fe108f16029a6cbe77df130c37e91fed3651098aab7ac82747\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2ed88bfac46fb3b6f5600276b68f043ce40a624f77c4c13ccb7091932d9277bb\",\"dweb:/ipfs/QmYKqQfmLWJUJrrcYdCXU5bCZU8baZGgqq4vPEaRDsGPa1\"]},\"https://github.com/TokenySolutions/T-REX/blob/main/contracts/registry/interface/IIdentityRegistryStorage.sol\":{\"keccak256\":\"0x8ada486c1c9fe45156df6bde7326dd2454ebf16b00caf003915c82847b08cfee\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8dca0a89a9d95dc3dc29333fafcdc0834169dc3e51b3b19203ec6a18dbde3170\",\"dweb:/ipfs/QmVjJwN6kKq6MwZc7hpw98wjmXyyyAqPkr7KAnixe2jxTj\"]},\"https://github.com/TokenySolutions/T-REX/blob/main/contracts/registry/interface/ITrustedIssuersRegistry.sol\":{\"keccak256\":\"0xf85a074a00edd299b7e980da614debe8b17af0dac4a3f98d5cba7e6f2a3a8263\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ce3fca047a970c6039cd238f3b3a7203221876f8a8924f3164ab36f9f1771dcb\",\"dweb:/ipfs/QmcGym6CWid1ejg4MmJmFBfk32gg7K1F7YutEkTriDQYTj\"]},\"https://github.com/TokenySolutions/T-REX/blob/main/contracts/token/IToken.sol\":{\"keccak256\":\"0xf5c167244bcf46aa12fa678c6821c9534cd7b251c254dafd4fefb7586d3310ef\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://386e323cddab4b50c2d904ce549f4cdf096881d65ca3d28a5ec79db313c3357c\",\"dweb:/ipfs/QmQ1VqhgoGpfKFXGhgvSqKsQFLnbbJd9FWogSouoFDs45q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 462,
								"contract": "Tokeny Project/Compliance/modular/ModularCompliance.sol:ModularCompliance",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 465,
								"contract": "Tokeny Project/Compliance/modular/ModularCompliance.sol:ModularCompliance",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 995,
								"contract": "Tokeny Project/Compliance/modular/ModularCompliance.sol:ModularCompliance",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 334,
								"contract": "Tokeny Project/Compliance/modular/ModularCompliance.sol:ModularCompliance",
								"label": "_owner",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 454,
								"contract": "Tokeny Project/Compliance/modular/ModularCompliance.sol:ModularCompliance",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 1080,
								"contract": "Tokeny Project/Compliance/modular/ModularCompliance.sol:ModularCompliance",
								"label": "_tokenBound",
								"offset": 0,
								"slot": "101",
								"type": "t_address"
							},
							{
								"astId": 1084,
								"contract": "Tokeny Project/Compliance/modular/ModularCompliance.sol:ModularCompliance",
								"label": "_modules",
								"offset": 0,
								"slot": "102",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 1089,
								"contract": "Tokeny Project/Compliance/modular/ModularCompliance.sol:ModularCompliance",
								"label": "_moduleBound",
								"offset": 0,
								"slot": "103",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1093,
								"contract": "Tokeny Project/Compliance/modular/ModularCompliance.sol:ModularCompliance",
								"label": "__gap",
								"offset": 0,
								"slot": "104",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"events": {
							"ModuleAdded(address)": {
								"notice": "this event is emitted when a module has been added to the list of modules bound to the compliance contract  the event is emitted by the addModule function  `_module` is the address of the compliance module"
							},
							"ModuleRemoved(address)": {
								"notice": "this event is emitted when a module has been removed from the list of modules bound to the compliance contract  the event is emitted by the removeModule function  `_module` is the address of the compliance module"
							},
							"TokenBound(address)": {
								"notice": "this event is emitted when a token has been bound to the compliance contract  the event is emitted by the bindToken function  `_token` is the address of the token to bind"
							},
							"TokenUnbound(address)": {
								"notice": "this event is emitted when a token has been unbound from the compliance contract  the event is emitted by the unbindToken function  `_token` is the address of the token to unbind"
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Tokeny Project/Compliance/modular/Modules/IModule.sol": {
				"IModule": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_compliance",
									"type": "address"
								}
							],
							"name": "ComplianceBound",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_compliance",
									"type": "address"
								}
							],
							"name": "ComplianceUnbound",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_compliance",
									"type": "address"
								}
							],
							"name": "bindCompliance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_compliance",
									"type": "address"
								}
							],
							"name": "isComplianceBound",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "moduleBurnAction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_compliance",
									"type": "address"
								}
							],
							"name": "moduleCheck",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "moduleMintAction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "moduleTransferAction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_compliance",
									"type": "address"
								}
							],
							"name": "unbindCompliance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"bindCompliance(address)": "4a932544",
							"isComplianceBound(address)": "4cf4d295",
							"moduleBurnAction(address,uint256)": "372491a2",
							"moduleCheck(address,address,uint256,address)": "013b7ce4",
							"moduleMintAction(address,uint256)": "f104a8c9",
							"moduleTransferAction(address,address,uint256)": "2cb7e1ec",
							"unbindCompliance(address)": "0694a5fb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_compliance\",\"type\":\"address\"}],\"name\":\"ComplianceBound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_compliance\",\"type\":\"address\"}],\"name\":\"ComplianceUnbound\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_compliance\",\"type\":\"address\"}],\"name\":\"bindCompliance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_compliance\",\"type\":\"address\"}],\"name\":\"isComplianceBound\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"moduleBurnAction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_compliance\",\"type\":\"address\"}],\"name\":\"moduleCheck\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"moduleMintAction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"moduleTransferAction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_compliance\",\"type\":\"address\"}],\"name\":\"unbindCompliance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Tokeny Project/Compliance/modular/Modules/IModule.sol\":\"IModule\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Tokeny Project/Compliance/modular/Modules/IModule.sol\":{\"keccak256\":\"0xe3d553f04d43623b2b8702292e44a09a47c3db736b0f5463de2b606c2eee7545\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://632ad70eca95a71a179c8c319b62fccb3b98a2cc04b24e10945a7d274bf2eba4\",\"dweb:/ipfs/QmNisz3w7zy73dcYKTfYG1SqtGqDheht3cCzPo4T9ZYeWH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/TokenySolutions/T-REX/blob/main/contracts/compliance/modular/IModularCompliance.sol": {
				"IModularCompliance": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_module",
									"type": "address"
								}
							],
							"name": "ModuleAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes4",
									"name": "selector",
									"type": "bytes4"
								}
							],
							"name": "ModuleInteraction",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_module",
									"type": "address"
								}
							],
							"name": "ModuleRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "TokenBound",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "TokenUnbound",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_module",
									"type": "address"
								}
							],
							"name": "addModule",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "bindToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "callData",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "_module",
									"type": "address"
								}
							],
							"name": "callModuleFunction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "canTransfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "created",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "destroyed",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getModules",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTokenBound",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_module",
									"type": "address"
								}
							],
							"name": "isModuleBound",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_module",
									"type": "address"
								}
							],
							"name": "removeModule",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "transferred",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "unbindToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"ModuleInteraction(address,bytes4)": {
								"details": "Event emitted for each executed interaction with a module contract.  For gas efficiency, only the interaction calldata selector (first 4  bytes) is included in the event. For interactions without calldata or  whose calldata is shorter than 4 bytes, the selector will be `0`."
							}
						},
						"kind": "dev",
						"methods": {
							"addModule(address)": {
								"details": "adds a module to the list of compliance modules",
								"params": {
									"_module": "address of the module to add  there cannot be more than 25 modules bound to the modular compliance for gas cost reasons  This function can be called ONLY by the owner of the compliance contract  Emits a ModuleAdded event"
								}
							},
							"bindToken(address)": {
								"details": "binds a token to the compliance contract",
								"params": {
									"_token": "address of the token to bind  This function can be called ONLY by the owner of the compliance contract  Emits a TokenBound event"
								}
							},
							"callModuleFunction(bytes,address)": {
								"details": "calls any function on bound modules  can be called only on bound modules",
								"params": {
									"_module": "The address of the module  This function can be called only by the modular compliance owner  emits a `ModuleInteraction` event",
									"callData": "the bytecode for interaction with the module, abi encoded"
								}
							},
							"canTransfer(address,address,uint256)": {
								"details": "checks that the transfer is compliant.  default compliance always returns true  READ ONLY FUNCTION, this function cannot be used to increment  counters, emit events, ...",
								"params": {
									"_amount": "The amount of tokens involved in the transfer  This function will call moduleCheck() on every module bound to the compliance  If each of the module checks return TRUE, this function will return TRUE as well  returns FALSE otherwise",
									"_from": "The address of the sender",
									"_to": "The address of the receiver"
								}
							},
							"created(address,uint256)": {
								"details": "function called whenever tokens are created on a wallet  this function can update state variables in the modules bound to the compliance  these state variables being used by the module checks to decide if a transfer  is compliant or not depending on the values stored in these state variables and on  the parameters of the modules  This function can be called ONLY by the token contract bound to the compliance",
								"params": {
									"_amount": "The amount of tokens involved in the minting  This function calls moduleMintAction() on each module bound to the compliance contract",
									"_to": "The address of the receiver"
								}
							},
							"destroyed(address,uint256)": {
								"details": "function called whenever tokens are destroyed from a wallet  this function can update state variables in the modules bound to the compliance  these state variables being used by the module checks to decide if a transfer  is compliant or not depending on the values stored in these state variables and on  the parameters of the modules  This function can be called ONLY by the token contract bound to the compliance",
								"params": {
									"_amount": "The amount of tokens involved in the burn  This function calls moduleBurnAction() on each module bound to the compliance contract",
									"_from": "The address on which tokens are burnt"
								}
							},
							"getModules()": {
								"details": "getter for the modules bound to the compliance contract  returns address array of module contracts bound to the compliance"
							},
							"getTokenBound()": {
								"details": "getter for the address of the token bound  returns the address of the token"
							},
							"isModuleBound(address)": {
								"details": "checks if a module is bound to the compliance contract  returns true if module is bound, false otherwise"
							},
							"removeModule(address)": {
								"details": "removes a module from the list of compliance modules",
								"params": {
									"_module": "address of the module to remove  This function can be called ONLY by the owner of the compliance contract  Emits a ModuleRemoved event"
								}
							},
							"transferred(address,address,uint256)": {
								"details": "function called whenever tokens are transferred  from one wallet to another  this function can update state variables in the modules bound to the compliance  these state variables being used by the module checks to decide if a transfer  is compliant or not depending on the values stored in these state variables and on  the parameters of the modules  This function can be called ONLY by the token contract bound to the compliance",
								"params": {
									"_amount": "The amount of tokens involved in the transfer  This function calls moduleTransferAction() on each module bound to the compliance contract",
									"_from": "The address of the sender",
									"_to": "The address of the receiver"
								}
							},
							"unbindToken(address)": {
								"details": "unbinds a token from the compliance contract",
								"params": {
									"_token": "address of the token to unbind  This function can be called ONLY by the owner of the compliance contract  Emits a TokenUnbound event"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addModule(address)": "1ed86f19",
							"bindToken(address)": "3ff5aa02",
							"callModuleFunction(bytes,address)": "efb22d33",
							"canTransfer(address,address,uint256)": "e46638e6",
							"created(address,uint256)": "5f8dead3",
							"destroyed(address,uint256)": "8d2ea772",
							"getModules()": "b2494df3",
							"getTokenBound()": "6a3edf28",
							"isModuleBound(address)": "a446d49f",
							"removeModule(address)": "a0632461",
							"transferred(address,address,uint256)": "8baf29b4",
							"unbindToken(address)": "40db3b50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"}],\"name\":\"ModuleAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"ModuleInteraction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"}],\"name\":\"ModuleRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"TokenBound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"TokenUnbound\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"}],\"name\":\"addModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"bindToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"}],\"name\":\"callModuleFunction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"canTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"created\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"destroyed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getModules\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenBound\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"}],\"name\":\"isModuleBound\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"}],\"name\":\"removeModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferred\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"unbindToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ModuleInteraction(address,bytes4)\":{\"details\":\"Event emitted for each executed interaction with a module contract.  For gas efficiency, only the interaction calldata selector (first 4  bytes) is included in the event. For interactions without calldata or  whose calldata is shorter than 4 bytes, the selector will be `0`.\"}},\"kind\":\"dev\",\"methods\":{\"addModule(address)\":{\"details\":\"adds a module to the list of compliance modules\",\"params\":{\"_module\":\"address of the module to add  there cannot be more than 25 modules bound to the modular compliance for gas cost reasons  This function can be called ONLY by the owner of the compliance contract  Emits a ModuleAdded event\"}},\"bindToken(address)\":{\"details\":\"binds a token to the compliance contract\",\"params\":{\"_token\":\"address of the token to bind  This function can be called ONLY by the owner of the compliance contract  Emits a TokenBound event\"}},\"callModuleFunction(bytes,address)\":{\"details\":\"calls any function on bound modules  can be called only on bound modules\",\"params\":{\"_module\":\"The address of the module  This function can be called only by the modular compliance owner  emits a `ModuleInteraction` event\",\"callData\":\"the bytecode for interaction with the module, abi encoded\"}},\"canTransfer(address,address,uint256)\":{\"details\":\"checks that the transfer is compliant.  default compliance always returns true  READ ONLY FUNCTION, this function cannot be used to increment  counters, emit events, ...\",\"params\":{\"_amount\":\"The amount of tokens involved in the transfer  This function will call moduleCheck() on every module bound to the compliance  If each of the module checks return TRUE, this function will return TRUE as well  returns FALSE otherwise\",\"_from\":\"The address of the sender\",\"_to\":\"The address of the receiver\"}},\"created(address,uint256)\":{\"details\":\"function called whenever tokens are created on a wallet  this function can update state variables in the modules bound to the compliance  these state variables being used by the module checks to decide if a transfer  is compliant or not depending on the values stored in these state variables and on  the parameters of the modules  This function can be called ONLY by the token contract bound to the compliance\",\"params\":{\"_amount\":\"The amount of tokens involved in the minting  This function calls moduleMintAction() on each module bound to the compliance contract\",\"_to\":\"The address of the receiver\"}},\"destroyed(address,uint256)\":{\"details\":\"function called whenever tokens are destroyed from a wallet  this function can update state variables in the modules bound to the compliance  these state variables being used by the module checks to decide if a transfer  is compliant or not depending on the values stored in these state variables and on  the parameters of the modules  This function can be called ONLY by the token contract bound to the compliance\",\"params\":{\"_amount\":\"The amount of tokens involved in the burn  This function calls moduleBurnAction() on each module bound to the compliance contract\",\"_from\":\"The address on which tokens are burnt\"}},\"getModules()\":{\"details\":\"getter for the modules bound to the compliance contract  returns address array of module contracts bound to the compliance\"},\"getTokenBound()\":{\"details\":\"getter for the address of the token bound  returns the address of the token\"},\"isModuleBound(address)\":{\"details\":\"checks if a module is bound to the compliance contract  returns true if module is bound, false otherwise\"},\"removeModule(address)\":{\"details\":\"removes a module from the list of compliance modules\",\"params\":{\"_module\":\"address of the module to remove  This function can be called ONLY by the owner of the compliance contract  Emits a ModuleRemoved event\"}},\"transferred(address,address,uint256)\":{\"details\":\"function called whenever tokens are transferred  from one wallet to another  this function can update state variables in the modules bound to the compliance  these state variables being used by the module checks to decide if a transfer  is compliant or not depending on the values stored in these state variables and on  the parameters of the modules  This function can be called ONLY by the token contract bound to the compliance\",\"params\":{\"_amount\":\"The amount of tokens involved in the transfer  This function calls moduleTransferAction() on each module bound to the compliance contract\",\"_from\":\"The address of the sender\",\"_to\":\"The address of the receiver\"}},\"unbindToken(address)\":{\"details\":\"unbinds a token from the compliance contract\",\"params\":{\"_token\":\"address of the token to unbind  This function can be called ONLY by the owner of the compliance contract  Emits a TokenUnbound event\"}}},\"version\":1},\"userdoc\":{\"events\":{\"ModuleAdded(address)\":{\"notice\":\"this event is emitted when a module has been added to the list of modules bound to the compliance contract  the event is emitted by the addModule function  `_module` is the address of the compliance module\"},\"ModuleRemoved(address)\":{\"notice\":\"this event is emitted when a module has been removed from the list of modules bound to the compliance contract  the event is emitted by the removeModule function  `_module` is the address of the compliance module\"},\"TokenBound(address)\":{\"notice\":\"this event is emitted when a token has been bound to the compliance contract  the event is emitted by the bindToken function  `_token` is the address of the token to bind\"},\"TokenUnbound(address)\":{\"notice\":\"this event is emitted when a token has been unbound from the compliance contract  the event is emitted by the unbindToken function  `_token` is the address of the token to unbind\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/TokenySolutions/T-REX/blob/main/contracts/compliance/modular/IModularCompliance.sol\":\"IModularCompliance\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/TokenySolutions/T-REX/blob/main/contracts/compliance/modular/IModularCompliance.sol\":{\"keccak256\":\"0xf632b47a306502ce66a0e432c7c3a7d3290ab8325a854bdefe2268d61fb7cc7f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://988eb31577cdd253e9ff2743983c466f81fdb6b944b24d3c55b0263ae45f3d3d\",\"dweb:/ipfs/QmZFixdMi55m78eEfrLN3yiNL4VR3AWSgKcjaRBBq4FskX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"ModuleAdded(address)": {
								"notice": "this event is emitted when a module has been added to the list of modules bound to the compliance contract  the event is emitted by the addModule function  `_module` is the address of the compliance module"
							},
							"ModuleRemoved(address)": {
								"notice": "this event is emitted when a module has been removed from the list of modules bound to the compliance contract  the event is emitted by the removeModule function  `_module` is the address of the compliance module"
							},
							"TokenBound(address)": {
								"notice": "this event is emitted when a token has been bound to the compliance contract  the event is emitted by the bindToken function  `_token` is the address of the token to bind"
							},
							"TokenUnbound(address)": {
								"notice": "this event is emitted when a token has been unbound from the compliance contract  the event is emitted by the unbindToken function  `_token` is the address of the token to unbind"
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/TokenySolutions/T-REX/blob/main/contracts/registry/interface/IClaimTopicsRegistry.sol": {
				"IClaimTopicsRegistry": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "claimTopic",
									"type": "uint256"
								}
							],
							"name": "ClaimTopicAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "claimTopic",
									"type": "uint256"
								}
							],
							"name": "ClaimTopicRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_claimTopic",
									"type": "uint256"
								}
							],
							"name": "addClaimTopic",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getClaimTopics",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_claimTopic",
									"type": "uint256"
								}
							],
							"name": "removeClaimTopic",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"addClaimTopic(uint256)": {
								"details": "Add a trusted claim topic (For example: KYC=1, AML=2). Only owner can call. emits `ClaimTopicAdded` event cannot add more than 15 topics for 1 token as adding more could create gas issues",
								"params": {
									"_claimTopic": "The claim topic index"
								}
							},
							"getClaimTopics()": {
								"details": "Get the trusted claim topics for the security token",
								"returns": {
									"_0": "Array of trusted claim topics"
								}
							},
							"removeClaimTopic(uint256)": {
								"details": "Remove a trusted claim topic (For example: KYC=1, AML=2).  Only owner can call.  emits `ClaimTopicRemoved` event",
								"params": {
									"_claimTopic": "The claim topic index"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addClaimTopic(uint256)": "c7b22551",
							"getClaimTopics()": "df09d604",
							"removeClaimTopic(uint256)": "08297846"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"}],\"name\":\"ClaimTopicAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"}],\"name\":\"ClaimTopicRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_claimTopic\",\"type\":\"uint256\"}],\"name\":\"addClaimTopic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getClaimTopics\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_claimTopic\",\"type\":\"uint256\"}],\"name\":\"removeClaimTopic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addClaimTopic(uint256)\":{\"details\":\"Add a trusted claim topic (For example: KYC=1, AML=2). Only owner can call. emits `ClaimTopicAdded` event cannot add more than 15 topics for 1 token as adding more could create gas issues\",\"params\":{\"_claimTopic\":\"The claim topic index\"}},\"getClaimTopics()\":{\"details\":\"Get the trusted claim topics for the security token\",\"returns\":{\"_0\":\"Array of trusted claim topics\"}},\"removeClaimTopic(uint256)\":{\"details\":\"Remove a trusted claim topic (For example: KYC=1, AML=2).  Only owner can call.  emits `ClaimTopicRemoved` event\",\"params\":{\"_claimTopic\":\"The claim topic index\"}}},\"version\":1},\"userdoc\":{\"events\":{\"ClaimTopicAdded(uint256)\":{\"notice\":\"this event is emitted when a claim topic has been added to the ClaimTopicsRegistry  the event is emitted by the 'addClaimTopic' function  `claimTopic` is the required claim added to the Claim Topics Registry\"},\"ClaimTopicRemoved(uint256)\":{\"notice\":\"this event is emitted when a claim topic has been removed from the ClaimTopicsRegistry  the event is emitted by the 'removeClaimTopic' function  `claimTopic` is the required claim removed from the Claim Topics Registry\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/TokenySolutions/T-REX/blob/main/contracts/registry/interface/IClaimTopicsRegistry.sol\":\"IClaimTopicsRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/TokenySolutions/T-REX/blob/main/contracts/registry/interface/IClaimTopicsRegistry.sol\":{\"keccak256\":\"0x878a76f41e117a67b97a698755e9875701282fcc12890c5ebaf85264808e5608\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://46639925c8db6a5442687f74c489bd9f05904acc2f87579f3f538e2a8d5045e2\",\"dweb:/ipfs/QmQSQHd9jMT98LDnD3cxHFK4L9zZ7fLLd9tJUu1ddZYoLn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"ClaimTopicAdded(uint256)": {
								"notice": "this event is emitted when a claim topic has been added to the ClaimTopicsRegistry  the event is emitted by the 'addClaimTopic' function  `claimTopic` is the required claim added to the Claim Topics Registry"
							},
							"ClaimTopicRemoved(uint256)": {
								"notice": "this event is emitted when a claim topic has been removed from the ClaimTopicsRegistry  the event is emitted by the 'removeClaimTopic' function  `claimTopic` is the required claim removed from the Claim Topics Registry"
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/TokenySolutions/T-REX/blob/main/contracts/registry/interface/IIdentityRegistry.sol": {
				"IIdentityRegistry": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "claimTopicsRegistry",
									"type": "address"
								}
							],
							"name": "ClaimTopicsRegistrySet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "investorAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint16",
									"name": "country",
									"type": "uint16"
								}
							],
							"name": "CountryUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "investorAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "contract IIdentity",
									"name": "identity",
									"type": "address"
								}
							],
							"name": "IdentityRegistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "investorAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "contract IIdentity",
									"name": "identity",
									"type": "address"
								}
							],
							"name": "IdentityRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "identityStorage",
									"type": "address"
								}
							],
							"name": "IdentityStorageSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IIdentity",
									"name": "oldIdentity",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "contract IIdentity",
									"name": "newIdentity",
									"type": "address"
								}
							],
							"name": "IdentityUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "trustedIssuersRegistry",
									"type": "address"
								}
							],
							"name": "TrustedIssuersRegistrySet",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_userAddresses",
									"type": "address[]"
								},
								{
									"internalType": "contract IIdentity[]",
									"name": "_identities",
									"type": "address[]"
								},
								{
									"internalType": "uint16[]",
									"name": "_countries",
									"type": "uint16[]"
								}
							],
							"name": "batchRegisterIdentity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "contains",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "deleteIdentity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "identity",
							"outputs": [
								{
									"internalType": "contract IIdentity",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "identityStorage",
							"outputs": [
								{
									"internalType": "contract IIdentityRegistryStorage",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "investorCountry",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "isVerified",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "issuersRegistry",
							"outputs": [
								{
									"internalType": "contract ITrustedIssuersRegistry",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "contract IIdentity",
									"name": "_identity",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "_country",
									"type": "uint16"
								}
							],
							"name": "registerIdentity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_claimTopicsRegistry",
									"type": "address"
								}
							],
							"name": "setClaimTopicsRegistry",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_identityRegistryStorage",
									"type": "address"
								}
							],
							"name": "setIdentityRegistryStorage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_trustedIssuersRegistry",
									"type": "address"
								}
							],
							"name": "setTrustedIssuersRegistry",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "topicsRegistry",
							"outputs": [
								{
									"internalType": "contract IClaimTopicsRegistry",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "_country",
									"type": "uint16"
								}
							],
							"name": "updateCountry",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "contract IIdentity",
									"name": "_identity",
									"type": "address"
								}
							],
							"name": "updateIdentity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"batchRegisterIdentity(address[],address[],uint16[])": {
								"details": "function allowing to register identities in batch  This function can only be called by a wallet set as agent of the smart contract  Requires that none of the users has an identity contract already registered.  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_userAddresses.length` IS TOO HIGH,  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \"OUT OF GAS\" TRANSACTION",
								"params": {
									"_countries": "The countries of the corresponding investors  emits _userAddresses.length `IdentityRegistered` events",
									"_identities": "The addresses of the corresponding identity contracts",
									"_userAddresses": "The addresses of the users"
								}
							},
							"contains(address)": {
								"details": "This functions checks whether a wallet has its Identity registered or not  in the Identity Registry.",
								"params": {
									"_userAddress": "The address of the user to be checked."
								},
								"returns": {
									"_0": "'True' if the address is contained in the Identity Registry, 'false' if not."
								}
							},
							"deleteIdentity(address)": {
								"details": "Removes an user from the identity registry.  Requires that the user have an identity contract already deployed that will be deleted.  This function can only be called by a wallet set as agent of the smart contract",
								"params": {
									"_userAddress": "The address of the user to be removed  emits `IdentityRemoved` event"
								}
							},
							"identity(address)": {
								"details": "Returns the onchainID of an investor.",
								"params": {
									"_userAddress": "The wallet of the investor"
								}
							},
							"identityStorage()": {
								"details": "Returns the IdentityRegistryStorage linked to the current IdentityRegistry."
							},
							"investorCountry(address)": {
								"details": "Returns the country code of an investor.",
								"params": {
									"_userAddress": "The wallet of the investor"
								}
							},
							"isVerified(address)": {
								"details": "This functions checks whether an identity contract  corresponding to the provided user address has the required claims or not based  on the data fetched from trusted issuers registry and from the claim topics registry",
								"params": {
									"_userAddress": "The address of the user to be verified."
								},
								"returns": {
									"_0": "'True' if the address is verified, 'false' if not."
								}
							},
							"issuersRegistry()": {
								"details": "Returns the TrustedIssuersRegistry linked to the current IdentityRegistry."
							},
							"registerIdentity(address,address,uint16)": {
								"details": "Register an identity contract corresponding to a user address.  Requires that the user doesn't have an identity contract already registered.  This function can only be called by a wallet set as agent of the smart contract",
								"params": {
									"_country": "The country of the investor  emits `IdentityRegistered` event",
									"_identity": "The address of the user's identity contract",
									"_userAddress": "The address of the user"
								}
							},
							"setClaimTopicsRegistry(address)": {
								"details": "Replace the actual claimTopicsRegistry contract with a new one.  This function can only be called by the wallet set as owner of the smart contract",
								"params": {
									"_claimTopicsRegistry": "The address of the new claim Topics Registry  emits `ClaimTopicsRegistrySet` event"
								}
							},
							"setIdentityRegistryStorage(address)": {
								"details": "Replace the actual identityRegistryStorage contract with a new one.  This function can only be called by the wallet set as owner of the smart contract",
								"params": {
									"_identityRegistryStorage": "The address of the new Identity Registry Storage  emits `IdentityStorageSet` event"
								}
							},
							"setTrustedIssuersRegistry(address)": {
								"details": "Replace the actual trustedIssuersRegistry contract with a new one.  This function can only be called by the wallet set as owner of the smart contract",
								"params": {
									"_trustedIssuersRegistry": "The address of the new Trusted Issuers Registry  emits `TrustedIssuersRegistrySet` event"
								}
							},
							"topicsRegistry()": {
								"details": "Returns the ClaimTopicsRegistry linked to the current IdentityRegistry."
							},
							"updateCountry(address,uint16)": {
								"details": "Updates the country corresponding to a user address.  Requires that the user should have an identity contract already deployed that will be replaced.  This function can only be called by a wallet set as agent of the smart contract",
								"params": {
									"_country": "The new country of the user  emits `CountryUpdated` event",
									"_userAddress": "The address of the user"
								}
							},
							"updateIdentity(address,address)": {
								"details": "Updates an identity contract corresponding to a user address.  Requires that the user address should be the owner of the identity contract.  Requires that the user should have an identity contract already deployed that will be replaced.  This function can only be called by a wallet set as agent of the smart contract",
								"params": {
									"_identity": "The address of the user's new identity contract  emits `IdentityUpdated` event",
									"_userAddress": "The address of the user"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"batchRegisterIdentity(address[],address[],uint16[])": "653dc9f1",
							"contains(address)": "5dbe47e8",
							"deleteIdentity(address)": "a8d29d1d",
							"identity(address)": "f0eb5e54",
							"identityStorage()": "f11abfd8",
							"investorCountry(address)": "7e42683b",
							"isVerified(address)": "b9209e33",
							"issuersRegistry()": "b4f3fcb7",
							"registerIdentity(address,address,uint16)": "454a03e0",
							"setClaimTopicsRegistry(address)": "670af6a9",
							"setIdentityRegistryStorage(address)": "26d941ae",
							"setTrustedIssuersRegistry(address)": "e744d789",
							"topicsRegistry()": "3b3e12f4",
							"updateCountry(address,uint16)": "3b239a7f",
							"updateIdentity(address,address)": "8e098ca1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimTopicsRegistry\",\"type\":\"address\"}],\"name\":\"ClaimTopicsRegistrySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"country\",\"type\":\"uint16\"}],\"name\":\"CountryUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"identity\",\"type\":\"address\"}],\"name\":\"IdentityRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"identity\",\"type\":\"address\"}],\"name\":\"IdentityRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"identityStorage\",\"type\":\"address\"}],\"name\":\"IdentityStorageSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"oldIdentity\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"newIdentity\",\"type\":\"address\"}],\"name\":\"IdentityUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trustedIssuersRegistry\",\"type\":\"address\"}],\"name\":\"TrustedIssuersRegistrySet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_userAddresses\",\"type\":\"address[]\"},{\"internalType\":\"contract IIdentity[]\",\"name\":\"_identities\",\"type\":\"address[]\"},{\"internalType\":\"uint16[]\",\"name\":\"_countries\",\"type\":\"uint16[]\"}],\"name\":\"batchRegisterIdentity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"contains\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"deleteIdentity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"identity\",\"outputs\":[{\"internalType\":\"contract IIdentity\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"identityStorage\",\"outputs\":[{\"internalType\":\"contract IIdentityRegistryStorage\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"investorCountry\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"isVerified\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"issuersRegistry\",\"outputs\":[{\"internalType\":\"contract ITrustedIssuersRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"contract IIdentity\",\"name\":\"_identity\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_country\",\"type\":\"uint16\"}],\"name\":\"registerIdentity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_claimTopicsRegistry\",\"type\":\"address\"}],\"name\":\"setClaimTopicsRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_identityRegistryStorage\",\"type\":\"address\"}],\"name\":\"setIdentityRegistryStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trustedIssuersRegistry\",\"type\":\"address\"}],\"name\":\"setTrustedIssuersRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"topicsRegistry\",\"outputs\":[{\"internalType\":\"contract IClaimTopicsRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_country\",\"type\":\"uint16\"}],\"name\":\"updateCountry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"contract IIdentity\",\"name\":\"_identity\",\"type\":\"address\"}],\"name\":\"updateIdentity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"batchRegisterIdentity(address[],address[],uint16[])\":{\"details\":\"function allowing to register identities in batch  This function can only be called by a wallet set as agent of the smart contract  Requires that none of the users has an identity contract already registered.  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_userAddresses.length` IS TOO HIGH,  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \\\"OUT OF GAS\\\" TRANSACTION\",\"params\":{\"_countries\":\"The countries of the corresponding investors  emits _userAddresses.length `IdentityRegistered` events\",\"_identities\":\"The addresses of the corresponding identity contracts\",\"_userAddresses\":\"The addresses of the users\"}},\"contains(address)\":{\"details\":\"This functions checks whether a wallet has its Identity registered or not  in the Identity Registry.\",\"params\":{\"_userAddress\":\"The address of the user to be checked.\"},\"returns\":{\"_0\":\"'True' if the address is contained in the Identity Registry, 'false' if not.\"}},\"deleteIdentity(address)\":{\"details\":\"Removes an user from the identity registry.  Requires that the user have an identity contract already deployed that will be deleted.  This function can only be called by a wallet set as agent of the smart contract\",\"params\":{\"_userAddress\":\"The address of the user to be removed  emits `IdentityRemoved` event\"}},\"identity(address)\":{\"details\":\"Returns the onchainID of an investor.\",\"params\":{\"_userAddress\":\"The wallet of the investor\"}},\"identityStorage()\":{\"details\":\"Returns the IdentityRegistryStorage linked to the current IdentityRegistry.\"},\"investorCountry(address)\":{\"details\":\"Returns the country code of an investor.\",\"params\":{\"_userAddress\":\"The wallet of the investor\"}},\"isVerified(address)\":{\"details\":\"This functions checks whether an identity contract  corresponding to the provided user address has the required claims or not based  on the data fetched from trusted issuers registry and from the claim topics registry\",\"params\":{\"_userAddress\":\"The address of the user to be verified.\"},\"returns\":{\"_0\":\"'True' if the address is verified, 'false' if not.\"}},\"issuersRegistry()\":{\"details\":\"Returns the TrustedIssuersRegistry linked to the current IdentityRegistry.\"},\"registerIdentity(address,address,uint16)\":{\"details\":\"Register an identity contract corresponding to a user address.  Requires that the user doesn't have an identity contract already registered.  This function can only be called by a wallet set as agent of the smart contract\",\"params\":{\"_country\":\"The country of the investor  emits `IdentityRegistered` event\",\"_identity\":\"The address of the user's identity contract\",\"_userAddress\":\"The address of the user\"}},\"setClaimTopicsRegistry(address)\":{\"details\":\"Replace the actual claimTopicsRegistry contract with a new one.  This function can only be called by the wallet set as owner of the smart contract\",\"params\":{\"_claimTopicsRegistry\":\"The address of the new claim Topics Registry  emits `ClaimTopicsRegistrySet` event\"}},\"setIdentityRegistryStorage(address)\":{\"details\":\"Replace the actual identityRegistryStorage contract with a new one.  This function can only be called by the wallet set as owner of the smart contract\",\"params\":{\"_identityRegistryStorage\":\"The address of the new Identity Registry Storage  emits `IdentityStorageSet` event\"}},\"setTrustedIssuersRegistry(address)\":{\"details\":\"Replace the actual trustedIssuersRegistry contract with a new one.  This function can only be called by the wallet set as owner of the smart contract\",\"params\":{\"_trustedIssuersRegistry\":\"The address of the new Trusted Issuers Registry  emits `TrustedIssuersRegistrySet` event\"}},\"topicsRegistry()\":{\"details\":\"Returns the ClaimTopicsRegistry linked to the current IdentityRegistry.\"},\"updateCountry(address,uint16)\":{\"details\":\"Updates the country corresponding to a user address.  Requires that the user should have an identity contract already deployed that will be replaced.  This function can only be called by a wallet set as agent of the smart contract\",\"params\":{\"_country\":\"The new country of the user  emits `CountryUpdated` event\",\"_userAddress\":\"The address of the user\"}},\"updateIdentity(address,address)\":{\"details\":\"Updates an identity contract corresponding to a user address.  Requires that the user address should be the owner of the identity contract.  Requires that the user should have an identity contract already deployed that will be replaced.  This function can only be called by a wallet set as agent of the smart contract\",\"params\":{\"_identity\":\"The address of the user's new identity contract  emits `IdentityUpdated` event\",\"_userAddress\":\"The address of the user\"}}},\"version\":1},\"userdoc\":{\"events\":{\"ClaimTopicsRegistrySet(address)\":{\"notice\":\"this event is emitted when the ClaimTopicsRegistry has been set for the IdentityRegistry  the event is emitted by the IdentityRegistry constructor  `claimTopicsRegistry` is the address of the Claim Topics Registry contract\"},\"CountryUpdated(address,uint16)\":{\"notice\":\"this event is emitted when an Identity's country has been updated  the event is emitted by the 'updateCountry' function  `investorAddress` is the address on which the country has been updated  `country` is the numeric code (ISO 3166-1) of the new country\"},\"IdentityRegistered(address,address)\":{\"notice\":\"this event is emitted when an Identity is registered into the Identity Registry.  the event is emitted by the 'registerIdentity' function  `investorAddress` is the address of the investor's wallet  `identity` is the address of the Identity smart contract (onchainID)\"},\"IdentityRemoved(address,address)\":{\"notice\":\"this event is emitted when an Identity is removed from the Identity Registry.  the event is emitted by the 'deleteIdentity' function  `investorAddress` is the address of the investor's wallet  `identity` is the address of the Identity smart contract (onchainID)\"},\"IdentityStorageSet(address)\":{\"notice\":\"this event is emitted when the IdentityRegistryStorage has been set for the IdentityRegistry  the event is emitted by the IdentityRegistry constructor  `identityStorage` is the address of the Identity Registry Storage contract\"},\"IdentityUpdated(address,address)\":{\"notice\":\"this event is emitted when an Identity has been updated  the event is emitted by the 'updateIdentity' function  `oldIdentity` is the old Identity contract's address to update  `newIdentity` is the new Identity contract's\"},\"TrustedIssuersRegistrySet(address)\":{\"notice\":\"this event is emitted when the TrustedIssuersRegistry has been set for the IdentityRegistry  the event is emitted by the IdentityRegistry constructor  `trustedIssuersRegistry` is the address of the Trusted Issuers Registry contract\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/TokenySolutions/T-REX/blob/main/contracts/registry/interface/IIdentityRegistry.sol\":\"IIdentityRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\":{\"keccak256\":\"0xa7372faa967bc7eaedf66ec51907a21ca789123ad8a6fd371b32f2d2a6f27817\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dcf7cf65c7aff1f78a9071c47b05865c0fbce9d7c965430e8438ba7a451a2ba4\",\"dweb:/ipfs/QmViSrFA2KQpFeWssbJWQtdpa62A9MeEWaxqgs8dyPssga\"]},\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x419198390ae57e3a090a454452931ac8a6605acfd296809c43d4966c9cea2d19\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8f8c7d8d74a6e7dff2858abd7f10aefe1cc88bb629ec6a0c164e4043e2c70eb7\",\"dweb:/ipfs/QmRg2WFW8T2YEt1zJ7PGSAFxcu1L46pNWxm6MZbuN7M4Qc\"]},\"https://github.com/TokenySolutions/T-REX/blob/main/contracts/registry/interface/IClaimTopicsRegistry.sol\":{\"keccak256\":\"0x878a76f41e117a67b97a698755e9875701282fcc12890c5ebaf85264808e5608\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://46639925c8db6a5442687f74c489bd9f05904acc2f87579f3f538e2a8d5045e2\",\"dweb:/ipfs/QmQSQHd9jMT98LDnD3cxHFK4L9zZ7fLLd9tJUu1ddZYoLn\"]},\"https://github.com/TokenySolutions/T-REX/blob/main/contracts/registry/interface/IIdentityRegistry.sol\":{\"keccak256\":\"0xce63ed845f95b5fe108f16029a6cbe77df130c37e91fed3651098aab7ac82747\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2ed88bfac46fb3b6f5600276b68f043ce40a624f77c4c13ccb7091932d9277bb\",\"dweb:/ipfs/QmYKqQfmLWJUJrrcYdCXU5bCZU8baZGgqq4vPEaRDsGPa1\"]},\"https://github.com/TokenySolutions/T-REX/blob/main/contracts/registry/interface/IIdentityRegistryStorage.sol\":{\"keccak256\":\"0x8ada486c1c9fe45156df6bde7326dd2454ebf16b00caf003915c82847b08cfee\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8dca0a89a9d95dc3dc29333fafcdc0834169dc3e51b3b19203ec6a18dbde3170\",\"dweb:/ipfs/QmVjJwN6kKq6MwZc7hpw98wjmXyyyAqPkr7KAnixe2jxTj\"]},\"https://github.com/TokenySolutions/T-REX/blob/main/contracts/registry/interface/ITrustedIssuersRegistry.sol\":{\"keccak256\":\"0xf85a074a00edd299b7e980da614debe8b17af0dac4a3f98d5cba7e6f2a3a8263\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ce3fca047a970c6039cd238f3b3a7203221876f8a8924f3164ab36f9f1771dcb\",\"dweb:/ipfs/QmcGym6CWid1ejg4MmJmFBfk32gg7K1F7YutEkTriDQYTj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"ClaimTopicsRegistrySet(address)": {
								"notice": "this event is emitted when the ClaimTopicsRegistry has been set for the IdentityRegistry  the event is emitted by the IdentityRegistry constructor  `claimTopicsRegistry` is the address of the Claim Topics Registry contract"
							},
							"CountryUpdated(address,uint16)": {
								"notice": "this event is emitted when an Identity's country has been updated  the event is emitted by the 'updateCountry' function  `investorAddress` is the address on which the country has been updated  `country` is the numeric code (ISO 3166-1) of the new country"
							},
							"IdentityRegistered(address,address)": {
								"notice": "this event is emitted when an Identity is registered into the Identity Registry.  the event is emitted by the 'registerIdentity' function  `investorAddress` is the address of the investor's wallet  `identity` is the address of the Identity smart contract (onchainID)"
							},
							"IdentityRemoved(address,address)": {
								"notice": "this event is emitted when an Identity is removed from the Identity Registry.  the event is emitted by the 'deleteIdentity' function  `investorAddress` is the address of the investor's wallet  `identity` is the address of the Identity smart contract (onchainID)"
							},
							"IdentityStorageSet(address)": {
								"notice": "this event is emitted when the IdentityRegistryStorage has been set for the IdentityRegistry  the event is emitted by the IdentityRegistry constructor  `identityStorage` is the address of the Identity Registry Storage contract"
							},
							"IdentityUpdated(address,address)": {
								"notice": "this event is emitted when an Identity has been updated  the event is emitted by the 'updateIdentity' function  `oldIdentity` is the old Identity contract's address to update  `newIdentity` is the new Identity contract's"
							},
							"TrustedIssuersRegistrySet(address)": {
								"notice": "this event is emitted when the TrustedIssuersRegistry has been set for the IdentityRegistry  the event is emitted by the IdentityRegistry constructor  `trustedIssuersRegistry` is the address of the Trusted Issuers Registry contract"
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/TokenySolutions/T-REX/blob/main/contracts/registry/interface/IIdentityRegistryStorage.sol": {
				"IIdentityRegistryStorage": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "investorAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint16",
									"name": "country",
									"type": "uint16"
								}
							],
							"name": "CountryModified",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IIdentity",
									"name": "oldIdentity",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "contract IIdentity",
									"name": "newIdentity",
									"type": "address"
								}
							],
							"name": "IdentityModified",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "identityRegistry",
									"type": "address"
								}
							],
							"name": "IdentityRegistryBound",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "identityRegistry",
									"type": "address"
								}
							],
							"name": "IdentityRegistryUnbound",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "investorAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "contract IIdentity",
									"name": "identity",
									"type": "address"
								}
							],
							"name": "IdentityStored",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "investorAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "contract IIdentity",
									"name": "identity",
									"type": "address"
								}
							],
							"name": "IdentityUnstored",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "contract IIdentity",
									"name": "_identity",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "_country",
									"type": "uint16"
								}
							],
							"name": "addIdentityToStorage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_identityRegistry",
									"type": "address"
								}
							],
							"name": "bindIdentityRegistry",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "linkedIdentityRegistries",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "contract IIdentity",
									"name": "_identity",
									"type": "address"
								}
							],
							"name": "modifyStoredIdentity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "_country",
									"type": "uint16"
								}
							],
							"name": "modifyStoredInvestorCountry",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "removeIdentityFromStorage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "storedIdentity",
							"outputs": [
								{
									"internalType": "contract IIdentity",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "storedInvestorCountry",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_identityRegistry",
									"type": "address"
								}
							],
							"name": "unbindIdentityRegistry",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"addIdentityToStorage(address,address,uint16)": {
								"details": "adds an identity contract corresponding to a user address in the storage.  Requires that the user doesn't have an identity contract already registered.  This function can only be called by an address set as agent of the smart contract",
								"params": {
									"_country": "The country of the investor  emits `IdentityStored` event",
									"_identity": "The address of the user's identity contract",
									"_userAddress": "The address of the user"
								}
							},
							"bindIdentityRegistry(address)": {
								"params": {
									"_identityRegistry": "The identity registry address to add."
								}
							},
							"linkedIdentityRegistries()": {
								"details": "Returns the identity registries linked to the storage contract"
							},
							"modifyStoredIdentity(address,address)": {
								"details": "Updates an identity contract corresponding to a user address.  Requires that the user address should be the owner of the identity contract.  Requires that the user should have an identity contract already deployed that will be replaced.  This function can only be called by an address set as agent of the smart contract",
								"params": {
									"_identity": "The address of the user's new identity contract  emits `IdentityModified` event",
									"_userAddress": "The address of the user"
								}
							},
							"modifyStoredInvestorCountry(address,uint16)": {
								"details": "Updates the country corresponding to a user address.  Requires that the user should have an identity contract already deployed that will be replaced.  This function can only be called by an address set as agent of the smart contract",
								"params": {
									"_country": "The new country of the user  emits `CountryModified` event",
									"_userAddress": "The address of the user"
								}
							},
							"removeIdentityFromStorage(address)": {
								"details": "Removes an user from the storage.  Requires that the user have an identity contract already deployed that will be deleted.  This function can only be called by an address set as agent of the smart contract",
								"params": {
									"_userAddress": "The address of the user to be removed  emits `IdentityUnstored` event"
								}
							},
							"storedIdentity(address)": {
								"details": "Returns the onchainID of an investor.",
								"params": {
									"_userAddress": "The wallet of the investor"
								}
							},
							"storedInvestorCountry(address)": {
								"details": "Returns the country code of an investor.",
								"params": {
									"_userAddress": "The wallet of the investor"
								}
							},
							"unbindIdentityRegistry(address)": {
								"params": {
									"_identityRegistry": "The identity registry address to remove."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addIdentityToStorage(address,address,uint16)": "a53410dd",
							"bindIdentityRegistry(address)": "690a49f9",
							"linkedIdentityRegistries()": "bf9eb959",
							"modifyStoredIdentity(address,address)": "e805cf86",
							"modifyStoredInvestorCountry(address,uint16)": "9f3418d5",
							"removeIdentityFromStorage(address)": "cf191bcd",
							"storedIdentity(address)": "7988d3a5",
							"storedInvestorCountry(address)": "727e13bc",
							"unbindIdentityRegistry(address)": "97a012f7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"country\",\"type\":\"uint16\"}],\"name\":\"CountryModified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"oldIdentity\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"newIdentity\",\"type\":\"address\"}],\"name\":\"IdentityModified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"identityRegistry\",\"type\":\"address\"}],\"name\":\"IdentityRegistryBound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"identityRegistry\",\"type\":\"address\"}],\"name\":\"IdentityRegistryUnbound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"identity\",\"type\":\"address\"}],\"name\":\"IdentityStored\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"identity\",\"type\":\"address\"}],\"name\":\"IdentityUnstored\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"contract IIdentity\",\"name\":\"_identity\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_country\",\"type\":\"uint16\"}],\"name\":\"addIdentityToStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_identityRegistry\",\"type\":\"address\"}],\"name\":\"bindIdentityRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"linkedIdentityRegistries\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"contract IIdentity\",\"name\":\"_identity\",\"type\":\"address\"}],\"name\":\"modifyStoredIdentity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_country\",\"type\":\"uint16\"}],\"name\":\"modifyStoredInvestorCountry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"removeIdentityFromStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"storedIdentity\",\"outputs\":[{\"internalType\":\"contract IIdentity\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"storedInvestorCountry\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_identityRegistry\",\"type\":\"address\"}],\"name\":\"unbindIdentityRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addIdentityToStorage(address,address,uint16)\":{\"details\":\"adds an identity contract corresponding to a user address in the storage.  Requires that the user doesn't have an identity contract already registered.  This function can only be called by an address set as agent of the smart contract\",\"params\":{\"_country\":\"The country of the investor  emits `IdentityStored` event\",\"_identity\":\"The address of the user's identity contract\",\"_userAddress\":\"The address of the user\"}},\"bindIdentityRegistry(address)\":{\"params\":{\"_identityRegistry\":\"The identity registry address to add.\"}},\"linkedIdentityRegistries()\":{\"details\":\"Returns the identity registries linked to the storage contract\"},\"modifyStoredIdentity(address,address)\":{\"details\":\"Updates an identity contract corresponding to a user address.  Requires that the user address should be the owner of the identity contract.  Requires that the user should have an identity contract already deployed that will be replaced.  This function can only be called by an address set as agent of the smart contract\",\"params\":{\"_identity\":\"The address of the user's new identity contract  emits `IdentityModified` event\",\"_userAddress\":\"The address of the user\"}},\"modifyStoredInvestorCountry(address,uint16)\":{\"details\":\"Updates the country corresponding to a user address.  Requires that the user should have an identity contract already deployed that will be replaced.  This function can only be called by an address set as agent of the smart contract\",\"params\":{\"_country\":\"The new country of the user  emits `CountryModified` event\",\"_userAddress\":\"The address of the user\"}},\"removeIdentityFromStorage(address)\":{\"details\":\"Removes an user from the storage.  Requires that the user have an identity contract already deployed that will be deleted.  This function can only be called by an address set as agent of the smart contract\",\"params\":{\"_userAddress\":\"The address of the user to be removed  emits `IdentityUnstored` event\"}},\"storedIdentity(address)\":{\"details\":\"Returns the onchainID of an investor.\",\"params\":{\"_userAddress\":\"The wallet of the investor\"}},\"storedInvestorCountry(address)\":{\"details\":\"Returns the country code of an investor.\",\"params\":{\"_userAddress\":\"The wallet of the investor\"}},\"unbindIdentityRegistry(address)\":{\"params\":{\"_identityRegistry\":\"The identity registry address to remove.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"CountryModified(address,uint16)\":{\"notice\":\"this event is emitted when an Identity's country has been updated  the event is emitted by the 'updateCountry' function  `investorAddress` is the address on which the country has been updated  `country` is the numeric code (ISO 3166-1) of the new country\"},\"IdentityModified(address,address)\":{\"notice\":\"this event is emitted when an Identity has been updated  the event is emitted by the 'updateIdentity' function  `oldIdentity` is the old Identity contract's address to update  `newIdentity` is the new Identity contract's\"},\"IdentityRegistryBound(address)\":{\"notice\":\"this event is emitted when an Identity Registry is bound to the storage contract  the event is emitted by the 'addIdentityRegistry' function  `identityRegistry` is the address of the identity registry added\"},\"IdentityRegistryUnbound(address)\":{\"notice\":\"this event is emitted when an Identity Registry is unbound from the storage contract  the event is emitted by the 'removeIdentityRegistry' function  `identityRegistry` is the address of the identity registry removed\"},\"IdentityStored(address,address)\":{\"notice\":\"this event is emitted when an Identity is registered into the storage contract.  the event is emitted by the 'registerIdentity' function  `investorAddress` is the address of the investor's wallet  `identity` is the address of the Identity smart contract (onchainID)\"},\"IdentityUnstored(address,address)\":{\"notice\":\"this event is emitted when an Identity is removed from the storage contract.  the event is emitted by the 'deleteIdentity' function  `investorAddress` is the address of the investor's wallet  `identity` is the address of the Identity smart contract (onchainID)\"}},\"kind\":\"user\",\"methods\":{\"bindIdentityRegistry(address)\":{\"notice\":\"Adds an identity registry as agent of the Identity Registry Storage Contract.  This function can only be called by the wallet set as owner of the smart contract  This function adds the identity registry to the list of identityRegistries linked to the storage contract  cannot bind more than 300 IR to 1 IRS\"},\"unbindIdentityRegistry(address)\":{\"notice\":\"Removes an identity registry from being agent of the Identity Registry Storage Contract.  This function can only be called by the wallet set as owner of the smart contract  This function removes the identity registry from the list of identityRegistries linked to the storage contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/TokenySolutions/T-REX/blob/main/contracts/registry/interface/IIdentityRegistryStorage.sol\":\"IIdentityRegistryStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x419198390ae57e3a090a454452931ac8a6605acfd296809c43d4966c9cea2d19\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8f8c7d8d74a6e7dff2858abd7f10aefe1cc88bb629ec6a0c164e4043e2c70eb7\",\"dweb:/ipfs/QmRg2WFW8T2YEt1zJ7PGSAFxcu1L46pNWxm6MZbuN7M4Qc\"]},\"https://github.com/TokenySolutions/T-REX/blob/main/contracts/registry/interface/IIdentityRegistryStorage.sol\":{\"keccak256\":\"0x8ada486c1c9fe45156df6bde7326dd2454ebf16b00caf003915c82847b08cfee\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8dca0a89a9d95dc3dc29333fafcdc0834169dc3e51b3b19203ec6a18dbde3170\",\"dweb:/ipfs/QmVjJwN6kKq6MwZc7hpw98wjmXyyyAqPkr7KAnixe2jxTj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"CountryModified(address,uint16)": {
								"notice": "this event is emitted when an Identity's country has been updated  the event is emitted by the 'updateCountry' function  `investorAddress` is the address on which the country has been updated  `country` is the numeric code (ISO 3166-1) of the new country"
							},
							"IdentityModified(address,address)": {
								"notice": "this event is emitted when an Identity has been updated  the event is emitted by the 'updateIdentity' function  `oldIdentity` is the old Identity contract's address to update  `newIdentity` is the new Identity contract's"
							},
							"IdentityRegistryBound(address)": {
								"notice": "this event is emitted when an Identity Registry is bound to the storage contract  the event is emitted by the 'addIdentityRegistry' function  `identityRegistry` is the address of the identity registry added"
							},
							"IdentityRegistryUnbound(address)": {
								"notice": "this event is emitted when an Identity Registry is unbound from the storage contract  the event is emitted by the 'removeIdentityRegistry' function  `identityRegistry` is the address of the identity registry removed"
							},
							"IdentityStored(address,address)": {
								"notice": "this event is emitted when an Identity is registered into the storage contract.  the event is emitted by the 'registerIdentity' function  `investorAddress` is the address of the investor's wallet  `identity` is the address of the Identity smart contract (onchainID)"
							},
							"IdentityUnstored(address,address)": {
								"notice": "this event is emitted when an Identity is removed from the storage contract.  the event is emitted by the 'deleteIdentity' function  `investorAddress` is the address of the investor's wallet  `identity` is the address of the Identity smart contract (onchainID)"
							}
						},
						"kind": "user",
						"methods": {
							"bindIdentityRegistry(address)": {
								"notice": "Adds an identity registry as agent of the Identity Registry Storage Contract.  This function can only be called by the wallet set as owner of the smart contract  This function adds the identity registry to the list of identityRegistries linked to the storage contract  cannot bind more than 300 IR to 1 IRS"
							},
							"unbindIdentityRegistry(address)": {
								"notice": "Removes an identity registry from being agent of the Identity Registry Storage Contract.  This function can only be called by the wallet set as owner of the smart contract  This function removes the identity registry from the list of identityRegistries linked to the storage contract"
							}
						},
						"version": 1
					}
				}
			},
			"https://github.com/TokenySolutions/T-REX/blob/main/contracts/registry/interface/ITrustedIssuersRegistry.sol": {
				"ITrustedIssuersRegistry": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IClaimIssuer",
									"name": "trustedIssuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "claimTopics",
									"type": "uint256[]"
								}
							],
							"name": "ClaimTopicsUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IClaimIssuer",
									"name": "trustedIssuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "claimTopics",
									"type": "uint256[]"
								}
							],
							"name": "TrustedIssuerAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IClaimIssuer",
									"name": "trustedIssuer",
									"type": "address"
								}
							],
							"name": "TrustedIssuerRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "contract IClaimIssuer",
									"name": "_trustedIssuer",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "_claimTopics",
									"type": "uint256[]"
								}
							],
							"name": "addTrustedIssuer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IClaimIssuer",
									"name": "_trustedIssuer",
									"type": "address"
								}
							],
							"name": "getTrustedIssuerClaimTopics",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTrustedIssuers",
							"outputs": [
								{
									"internalType": "contract IClaimIssuer[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "claimTopic",
									"type": "uint256"
								}
							],
							"name": "getTrustedIssuersForClaimTopic",
							"outputs": [
								{
									"internalType": "contract IClaimIssuer[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_issuer",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_claimTopic",
									"type": "uint256"
								}
							],
							"name": "hasClaimTopic",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_issuer",
									"type": "address"
								}
							],
							"name": "isTrustedIssuer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IClaimIssuer",
									"name": "_trustedIssuer",
									"type": "address"
								}
							],
							"name": "removeTrustedIssuer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IClaimIssuer",
									"name": "_trustedIssuer",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "_claimTopics",
									"type": "uint256[]"
								}
							],
							"name": "updateIssuerClaimTopics",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"addTrustedIssuer(address,uint256[])": {
								"details": "registers a ClaimIssuer contract as trusted claim issuer.  Requires that a ClaimIssuer contract doesn't already exist  Requires that the claimTopics set is not empty  Requires that there is no more than 15 claimTopics  Requires that there is no more than 50 Trusted issuers",
								"params": {
									"_claimTopics": "the set of claim topics that the trusted issuer is allowed to emit  This function can only be called by the owner of the Trusted Issuers Registry contract  emits a `TrustedIssuerAdded` event",
									"_trustedIssuer": "The ClaimIssuer contract address of the trusted claim issuer."
								}
							},
							"getTrustedIssuerClaimTopics(address)": {
								"details": "Function for getting all the claim topic of trusted claim issuer  Requires the provided ClaimIssuer contract to be registered in the trusted issuers registry.",
								"params": {
									"_trustedIssuer": "the trusted issuer concerned."
								},
								"returns": {
									"_0": "The set of claim topics that the trusted issuer is allowed to emit"
								}
							},
							"getTrustedIssuers()": {
								"details": "Function for getting all the trusted claim issuers stored.",
								"returns": {
									"_0": "array of all claim issuers registered."
								}
							},
							"getTrustedIssuersForClaimTopic(uint256)": {
								"details": "Function for getting all the trusted issuer allowed for a given claim topic.",
								"params": {
									"claimTopic": "the claim topic to get the trusted issuers for."
								},
								"returns": {
									"_0": "array of all claim issuer addresses that are allowed for the given claim topic."
								}
							},
							"hasClaimTopic(address,uint256)": {
								"details": "Function for checking if the trusted claim issuer is allowed  to emit a certain claim topic",
								"params": {
									"_claimTopic": "the Claim Topic that has to be checked to know if the `issuer` is allowed to emit it",
									"_issuer": "the address of the trusted issuer's ClaimIssuer contract"
								},
								"returns": {
									"_0": "true if the issuer is trusted for this claim topic."
								}
							},
							"isTrustedIssuer(address)": {
								"details": "Checks if the ClaimIssuer contract is trusted",
								"params": {
									"_issuer": "the address of the ClaimIssuer contract"
								},
								"returns": {
									"_0": "true if the issuer is trusted, false otherwise."
								}
							},
							"removeTrustedIssuer(address)": {
								"details": "Removes the ClaimIssuer contract of a trusted claim issuer.  Requires that the claim issuer contract to be registered first",
								"params": {
									"_trustedIssuer": "the claim issuer to remove.  This function can only be called by the owner of the Trusted Issuers Registry contract  emits a `TrustedIssuerRemoved` event"
								}
							},
							"updateIssuerClaimTopics(address,uint256[])": {
								"details": "Updates the set of claim topics that a trusted issuer is allowed to emit.  Requires that this ClaimIssuer contract already exists in the registry  Requires that the provided claimTopics set is not empty  Requires that there is no more than 15 claimTopics",
								"params": {
									"_claimTopics": "the set of claim topics that the trusted issuer is allowed to emit  This function can only be called by the owner of the Trusted Issuers Registry contract  emits a `ClaimTopicsUpdated` event",
									"_trustedIssuer": "the claim issuer to update."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addTrustedIssuer(address,uint256[])": "9f63ea98",
							"getTrustedIssuerClaimTopics(address)": "c28fb278",
							"getTrustedIssuers()": "d9dd24c5",
							"getTrustedIssuersForClaimTopic(uint256)": "52c111d1",
							"hasClaimTopic(address,uint256)": "34a89987",
							"isTrustedIssuer(address)": "ef2ed1a4",
							"removeTrustedIssuer(address)": "b93d28eb",
							"updateIssuerClaimTopics(address,uint256[])": "04bc7e84"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IClaimIssuer\",\"name\":\"trustedIssuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"claimTopics\",\"type\":\"uint256[]\"}],\"name\":\"ClaimTopicsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IClaimIssuer\",\"name\":\"trustedIssuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"claimTopics\",\"type\":\"uint256[]\"}],\"name\":\"TrustedIssuerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IClaimIssuer\",\"name\":\"trustedIssuer\",\"type\":\"address\"}],\"name\":\"TrustedIssuerRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_trustedIssuer\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_claimTopics\",\"type\":\"uint256[]\"}],\"name\":\"addTrustedIssuer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_trustedIssuer\",\"type\":\"address\"}],\"name\":\"getTrustedIssuerClaimTopics\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTrustedIssuers\",\"outputs\":[{\"internalType\":\"contract IClaimIssuer[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"}],\"name\":\"getTrustedIssuersForClaimTopic\",\"outputs\":[{\"internalType\":\"contract IClaimIssuer[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_issuer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_claimTopic\",\"type\":\"uint256\"}],\"name\":\"hasClaimTopic\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_issuer\",\"type\":\"address\"}],\"name\":\"isTrustedIssuer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_trustedIssuer\",\"type\":\"address\"}],\"name\":\"removeTrustedIssuer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_trustedIssuer\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_claimTopics\",\"type\":\"uint256[]\"}],\"name\":\"updateIssuerClaimTopics\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addTrustedIssuer(address,uint256[])\":{\"details\":\"registers a ClaimIssuer contract as trusted claim issuer.  Requires that a ClaimIssuer contract doesn't already exist  Requires that the claimTopics set is not empty  Requires that there is no more than 15 claimTopics  Requires that there is no more than 50 Trusted issuers\",\"params\":{\"_claimTopics\":\"the set of claim topics that the trusted issuer is allowed to emit  This function can only be called by the owner of the Trusted Issuers Registry contract  emits a `TrustedIssuerAdded` event\",\"_trustedIssuer\":\"The ClaimIssuer contract address of the trusted claim issuer.\"}},\"getTrustedIssuerClaimTopics(address)\":{\"details\":\"Function for getting all the claim topic of trusted claim issuer  Requires the provided ClaimIssuer contract to be registered in the trusted issuers registry.\",\"params\":{\"_trustedIssuer\":\"the trusted issuer concerned.\"},\"returns\":{\"_0\":\"The set of claim topics that the trusted issuer is allowed to emit\"}},\"getTrustedIssuers()\":{\"details\":\"Function for getting all the trusted claim issuers stored.\",\"returns\":{\"_0\":\"array of all claim issuers registered.\"}},\"getTrustedIssuersForClaimTopic(uint256)\":{\"details\":\"Function for getting all the trusted issuer allowed for a given claim topic.\",\"params\":{\"claimTopic\":\"the claim topic to get the trusted issuers for.\"},\"returns\":{\"_0\":\"array of all claim issuer addresses that are allowed for the given claim topic.\"}},\"hasClaimTopic(address,uint256)\":{\"details\":\"Function for checking if the trusted claim issuer is allowed  to emit a certain claim topic\",\"params\":{\"_claimTopic\":\"the Claim Topic that has to be checked to know if the `issuer` is allowed to emit it\",\"_issuer\":\"the address of the trusted issuer's ClaimIssuer contract\"},\"returns\":{\"_0\":\"true if the issuer is trusted for this claim topic.\"}},\"isTrustedIssuer(address)\":{\"details\":\"Checks if the ClaimIssuer contract is trusted\",\"params\":{\"_issuer\":\"the address of the ClaimIssuer contract\"},\"returns\":{\"_0\":\"true if the issuer is trusted, false otherwise.\"}},\"removeTrustedIssuer(address)\":{\"details\":\"Removes the ClaimIssuer contract of a trusted claim issuer.  Requires that the claim issuer contract to be registered first\",\"params\":{\"_trustedIssuer\":\"the claim issuer to remove.  This function can only be called by the owner of the Trusted Issuers Registry contract  emits a `TrustedIssuerRemoved` event\"}},\"updateIssuerClaimTopics(address,uint256[])\":{\"details\":\"Updates the set of claim topics that a trusted issuer is allowed to emit.  Requires that this ClaimIssuer contract already exists in the registry  Requires that the provided claimTopics set is not empty  Requires that there is no more than 15 claimTopics\",\"params\":{\"_claimTopics\":\"the set of claim topics that the trusted issuer is allowed to emit  This function can only be called by the owner of the Trusted Issuers Registry contract  emits a `ClaimTopicsUpdated` event\",\"_trustedIssuer\":\"the claim issuer to update.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"ClaimTopicsUpdated(address,uint256[])\":{\"notice\":\"this event is emitted when the set of claim topics is changed for a given trusted issuer.  the event is emitted by the updateIssuerClaimTopics function  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract  `claimTopics` is the set of claims that the trusted issuer is allowed to emit\"},\"TrustedIssuerAdded(address,uint256[])\":{\"notice\":\"this event is emitted when a trusted issuer is added in the registry.  the event is emitted by the addTrustedIssuer function  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract  `claimTopics` is the set of claims that the trusted issuer is allowed to emit\"},\"TrustedIssuerRemoved(address)\":{\"notice\":\"this event is emitted when a trusted issuer is removed from the registry.  the event is emitted by the removeTrustedIssuer function  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/TokenySolutions/T-REX/blob/main/contracts/registry/interface/ITrustedIssuersRegistry.sol\":\"ITrustedIssuersRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\":{\"keccak256\":\"0xa7372faa967bc7eaedf66ec51907a21ca789123ad8a6fd371b32f2d2a6f27817\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dcf7cf65c7aff1f78a9071c47b05865c0fbce9d7c965430e8438ba7a451a2ba4\",\"dweb:/ipfs/QmViSrFA2KQpFeWssbJWQtdpa62A9MeEWaxqgs8dyPssga\"]},\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x419198390ae57e3a090a454452931ac8a6605acfd296809c43d4966c9cea2d19\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8f8c7d8d74a6e7dff2858abd7f10aefe1cc88bb629ec6a0c164e4043e2c70eb7\",\"dweb:/ipfs/QmRg2WFW8T2YEt1zJ7PGSAFxcu1L46pNWxm6MZbuN7M4Qc\"]},\"https://github.com/TokenySolutions/T-REX/blob/main/contracts/registry/interface/ITrustedIssuersRegistry.sol\":{\"keccak256\":\"0xf85a074a00edd299b7e980da614debe8b17af0dac4a3f98d5cba7e6f2a3a8263\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ce3fca047a970c6039cd238f3b3a7203221876f8a8924f3164ab36f9f1771dcb\",\"dweb:/ipfs/QmcGym6CWid1ejg4MmJmFBfk32gg7K1F7YutEkTriDQYTj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"ClaimTopicsUpdated(address,uint256[])": {
								"notice": "this event is emitted when the set of claim topics is changed for a given trusted issuer.  the event is emitted by the updateIssuerClaimTopics function  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract  `claimTopics` is the set of claims that the trusted issuer is allowed to emit"
							},
							"TrustedIssuerAdded(address,uint256[])": {
								"notice": "this event is emitted when a trusted issuer is added in the registry.  the event is emitted by the addTrustedIssuer function  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract  `claimTopics` is the set of claims that the trusted issuer is allowed to emit"
							},
							"TrustedIssuerRemoved(address)": {
								"notice": "this event is emitted when a trusted issuer is removed from the registry.  the event is emitted by the removeTrustedIssuer function  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract"
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/TokenySolutions/T-REX/blob/main/contracts/token/IToken.sol": {
				"IToken": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "bool",
									"name": "_isFrozen",
									"type": "bool"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "AddressFrozen",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_compliance",
									"type": "address"
								}
							],
							"name": "ComplianceAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_identityRegistry",
									"type": "address"
								}
							],
							"name": "IdentityRegistryAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_lostWallet",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_newWallet",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_investorOnchainID",
									"type": "address"
								}
							],
							"name": "RecoverySuccess",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "TokensFrozen",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "TokensUnfrozen",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "string",
									"name": "_newName",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "string",
									"name": "_newSymbol",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "_newDecimals",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "_newVersion",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_newOnchainID",
									"type": "address"
								}
							],
							"name": "UpdatedTokenInformation",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_userAddresses",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_amounts",
									"type": "uint256[]"
								}
							],
							"name": "batchBurn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_fromList",
									"type": "address[]"
								},
								{
									"internalType": "address[]",
									"name": "_toList",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_amounts",
									"type": "uint256[]"
								}
							],
							"name": "batchForcedTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_userAddresses",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_amounts",
									"type": "uint256[]"
								}
							],
							"name": "batchFreezePartialTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_toList",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_amounts",
									"type": "uint256[]"
								}
							],
							"name": "batchMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_userAddresses",
									"type": "address[]"
								},
								{
									"internalType": "bool[]",
									"name": "_freeze",
									"type": "bool[]"
								}
							],
							"name": "batchSetAddressFrozen",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_toList",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_amounts",
									"type": "uint256[]"
								}
							],
							"name": "batchTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_userAddresses",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_amounts",
									"type": "uint256[]"
								}
							],
							"name": "batchUnfreezePartialTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "compliance",
							"outputs": [
								{
									"internalType": "contract IModularCompliance",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "forcedTransfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "freezePartialTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "getFrozenTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "identityRegistry",
							"outputs": [
								{
									"internalType": "contract IIdentityRegistry",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "isFrozen",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "onchainID",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_lostWallet",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_newWallet",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_investorOnchainID",
									"type": "address"
								}
							],
							"name": "recoveryAddress",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_freeze",
									"type": "bool"
								}
							],
							"name": "setAddressFrozen",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_compliance",
									"type": "address"
								}
							],
							"name": "setCompliance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_identityRegistry",
									"type": "address"
								}
							],
							"name": "setIdentityRegistry",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								}
							],
							"name": "setName",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_onchainID",
									"type": "address"
								}
							],
							"name": "setOnchainID",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								}
							],
							"name": "setSymbol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "unfreezePartialTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "interface",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"batchBurn(address[],uint256[])": {
								"details": "function allowing to burn tokens in batch  Require that the `_userAddresses` addresses are all verified addresses  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_userAddresses.length` IS TOO HIGH,  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \"OUT OF GAS\" TRANSACTION",
								"params": {
									"_amounts": "The number of tokens to burn from the corresponding wallets  This function can only be called by a wallet set as agent of the token  emits _userAddresses.length `Transfer` events",
									"_userAddresses": "The addresses of the wallets concerned by the burn"
								}
							},
							"batchForcedTransfer(address[],address[],uint256[])": {
								"details": "function allowing to issue forced transfers in batch  Require that `_amounts[i]` should not exceed available balance of `_fromList[i]`.  Require that the `_toList` addresses are all verified addresses  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_fromList.length` IS TOO HIGH,  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \"OUT OF GAS\" TRANSACTION",
								"params": {
									"_amounts": "The number of tokens to transfer to the corresponding receiver  This function can only be called by a wallet set as agent of the token  emits `TokensUnfrozen` events if `_amounts[i]` is higher than the free balance of `_fromList[i]`  emits _fromList.length `Transfer` events",
									"_fromList": "The addresses of the senders",
									"_toList": "The addresses of the receivers"
								}
							},
							"batchFreezePartialTokens(address[],uint256[])": {
								"details": "function allowing to freeze tokens partially in batch  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_userAddresses.length` IS TOO HIGH,  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \"OUT OF GAS\" TRANSACTION",
								"params": {
									"_amounts": "the amount of tokens to freeze on the corresponding address  This function can only be called by a wallet set as agent of the token  emits _userAddresses.length `TokensFrozen` events",
									"_userAddresses": "The addresses on which tokens need to be frozen"
								}
							},
							"batchMint(address[],uint256[])": {
								"details": "function allowing to mint tokens in batch  Require that the `_toList` addresses are all verified addresses  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_toList.length` IS TOO HIGH,  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \"OUT OF GAS\" TRANSACTION",
								"params": {
									"_amounts": "The number of tokens to mint to the corresponding receiver  This function can only be called by a wallet set as agent of the token  emits _toList.length `Transfer` events",
									"_toList": "The addresses of the receivers"
								}
							},
							"batchSetAddressFrozen(address[],bool[])": {
								"details": "function allowing to set frozen addresses in batch  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_userAddresses.length` IS TOO HIGH,  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \"OUT OF GAS\" TRANSACTION",
								"params": {
									"_freeze": "Frozen status of the corresponding address  This function can only be called by a wallet set as agent of the token  emits _userAddresses.length `AddressFrozen` events",
									"_userAddresses": "The addresses for which to update frozen status"
								}
							},
							"batchTransfer(address[],uint256[])": {
								"details": "function allowing to issue transfers in batch  Require that the msg.sender and `to` addresses are not frozen.  Require that the total value should not exceed available balance.  Require that the `to` addresses are all verified addresses,  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_toList.length` IS TOO HIGH,  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \"OUT OF GAS\" TRANSACTION",
								"params": {
									"_amounts": "The number of tokens to transfer to the corresponding receiver  emits _toList.length `Transfer` events",
									"_toList": "The addresses of the receivers"
								}
							},
							"batchUnfreezePartialTokens(address[],uint256[])": {
								"details": "function allowing to unfreeze tokens partially in batch  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_userAddresses.length` IS TOO HIGH,  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \"OUT OF GAS\" TRANSACTION",
								"params": {
									"_amounts": "the amount of tokens to unfreeze on the corresponding address  This function can only be called by a wallet set as agent of the token  emits _userAddresses.length `TokensUnfrozen` events",
									"_userAddresses": "The addresses on which tokens need to be unfrozen"
								}
							},
							"burn(address,uint256)": {
								"details": "burn tokens on a wallet  In case the `account` address has not enough free tokens (unfrozen tokens)  but has a total balance higher or equal to the `value` amount  the amount of frozen tokens is reduced in order to have enough free tokens  to proceed the burn, in such a case, the remaining balance on the `account`  is 100% composed of frozen tokens post-transaction.",
								"params": {
									"_amount": "Amount of tokens to burn.  This function can only be called by a wallet set as agent of the token  emits a `TokensUnfrozen` event if `_amount` is higher than the free balance of `_userAddress`  emits a `Transfer` event",
									"_userAddress": "Address to burn the tokens from."
								}
							},
							"compliance()": {
								"details": "Returns the Compliance contract linked to the token"
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 1 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including balanceOf() and transfer()."
							},
							"forcedTransfer(address,address,uint256)": {
								"details": "force a transfer of tokens between 2 whitelisted wallets  In case the `from` address has not enough free tokens (unfrozen tokens)  but has a total balance higher or equal to the `amount`  the amount of frozen tokens is reduced in order to have enough free tokens  to proceed the transfer, in such a case, the remaining balance on the `from`  account is 100% composed of frozen tokens post-transfer.  Require that the `to` address is a verified address,",
								"params": {
									"_amount": "The number of tokens to transfer",
									"_from": "The address of the sender",
									"_to": "The address of the receiver"
								},
								"returns": {
									"_0": "`true` if successful and revert if unsuccessful  This function can only be called by a wallet set as agent of the token  emits a `TokensUnfrozen` event if `_amount` is higher than the free balance of `_from`  emits a `Transfer` event"
								}
							},
							"freezePartialTokens(address,uint256)": {
								"details": "freezes token amount specified for given address.",
								"params": {
									"_amount": "Amount of Tokens to be frozen  This function can only be called by a wallet set as agent of the token  emits a `TokensFrozen` event",
									"_userAddress": "The address for which to update frozen tokens"
								}
							},
							"getFrozenTokens(address)": {
								"details": "Returns the amount of tokens that are partially frozen on a wallet  the amount of frozen tokens is always <= to the total balance of the wallet",
								"params": {
									"_userAddress": "the address of the wallet on which getFrozenTokens is called"
								}
							},
							"identityRegistry()": {
								"details": "Returns the Identity Registry linked to the token"
							},
							"isFrozen(address)": {
								"details": "Returns the freezing status of a wallet  if isFrozen returns `true` the wallet is frozen  if isFrozen returns `false` the wallet is not frozen  isFrozen returning `true` doesn't mean that the balance is free, tokens could be blocked by  a partial freeze or the whole token could be blocked by pause",
								"params": {
									"_userAddress": "the address of the wallet on which isFrozen is called"
								}
							},
							"mint(address,uint256)": {
								"details": "mint tokens on a wallet  Improved version of default mint method. Tokens can be minted  to an address if only it is a verified address as per the security token.",
								"params": {
									"_amount": "Amount of tokens to mint.  This function can only be called by a wallet set as agent of the token  emits a `Transfer` event",
									"_to": "Address to mint the tokens to."
								}
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"onchainID()": {
								"details": "Returns the address of the onchainID of the token. the onchainID of the token gives all the information available about the token and is managed by the token issuer or his agent."
							},
							"pause()": {
								"details": "pauses the token contract, when contract is paused investors cannot transfer tokens anymore  This function can only be called by a wallet set as agent of the token  emits a `Paused` event"
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"recoveryAddress(address,address,address)": {
								"details": "recovery function used to force transfer tokens from a  lost wallet to a new wallet for an investor.",
								"params": {
									"_investorOnchainID": "the onchainID of the investor asking for a recovery  This function can only be called by a wallet set as agent of the token  emits a `TokensUnfrozen` event if there is some frozen tokens on the lost wallet if the recovery process is successful  emits a `Transfer` event if the recovery process is successful  emits a `RecoverySuccess` event if the recovery process is successful  emits a `RecoveryFails` event if the recovery process fails",
									"_lostWallet": "the wallet that the investor lost",
									"_newWallet": "the newly provided wallet on which tokens have to be transferred"
								}
							},
							"setAddressFrozen(address,bool)": {
								"details": "sets an address frozen status for this token.",
								"params": {
									"_freeze": "Frozen status of the address  This function can only be called by a wallet set as agent of the token  emits an `AddressFrozen` event",
									"_userAddress": "The address for which to update frozen status"
								}
							},
							"setCompliance(address)": {
								"details": "sets the compliance contract of the token",
								"params": {
									"_compliance": "the address of the compliance contract to set  Only the owner of the token smart contract can call this function  calls bindToken on the compliance contract  emits a `ComplianceAdded` event"
								}
							},
							"setIdentityRegistry(address)": {
								"details": "sets the Identity Registry for the token",
								"params": {
									"_identityRegistry": "the address of the Identity Registry to set  Only the owner of the token smart contract can call this function  emits an `IdentityRegistryAdded` event"
								}
							},
							"setName(string)": {
								"details": "sets the token name",
								"params": {
									"_name": "the name of token to set  Only the owner of the token smart contract can call this function  emits a `UpdatedTokenInformation` event"
								}
							},
							"setOnchainID(address)": {
								"details": "sets the onchain ID of the token",
								"params": {
									"_onchainID": "the address of the onchain ID to set  Only the owner of the token smart contract can call this function  emits a `UpdatedTokenInformation` event"
								}
							},
							"setSymbol(string)": {
								"details": "sets the token symbol",
								"params": {
									"_symbol": "the token symbol to set  Only the owner of the token smart contract can call this function  emits a `UpdatedTokenInformation` event"
								}
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"unfreezePartialTokens(address,uint256)": {
								"details": "unfreezes token amount specified for given address",
								"params": {
									"_amount": "Amount of Tokens to be unfrozen  This function can only be called by a wallet set as agent of the token  emits a `TokensUnfrozen` event",
									"_userAddress": "The address for which to update frozen tokens"
								}
							},
							"unpause()": {
								"details": "unpauses the token contract, when contract is unpaused investors can transfer tokens  if their wallet is not blocked & if the amount to transfer is <= to the amount of free tokens  This function can only be called by a wallet set as agent of the token  emits an `Unpaused` event"
							},
							"version()": {
								"details": "Returns the TREX version of the token. current version is 3.0.0"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"batchBurn(address[],uint256[])": "4a6cc677",
							"batchForcedTransfer(address[],address[],uint256[])": "42a47abc",
							"batchFreezePartialTokens(address[],uint256[])": "fc7e5fa8",
							"batchMint(address[],uint256[])": "68573107",
							"batchSetAddressFrozen(address[],bool[])": "1a7af379",
							"batchTransfer(address[],uint256[])": "88d695b2",
							"batchUnfreezePartialTokens(address[],uint256[])": "4710362d",
							"burn(address,uint256)": "9dc29fac",
							"compliance()": "6290865d",
							"decimals()": "313ce567",
							"forcedTransfer(address,address,uint256)": "9fc1d0e7",
							"freezePartialTokens(address,uint256)": "125c4a33",
							"getFrozenTokens(address)": "158b1a57",
							"identityRegistry()": "134e18f4",
							"isFrozen(address)": "e5839836",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"onchainID()": "aba63705",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"recoveryAddress(address,address,address)": "9285948a",
							"setAddressFrozen(address,bool)": "c69c09cf",
							"setCompliance(address)": "f8981789",
							"setIdentityRegistry(address)": "cbf3f861",
							"setName(string)": "c47f0027",
							"setOnchainID(address)": "3d1ddc5b",
							"setSymbol(string)": "b84c8246",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"unfreezePartialTokens(address,uint256)": "1fe56f7d",
							"unpause()": "3f4ba83a",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"_isFrozen\",\"type\":\"bool\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"AddressFrozen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_compliance\",\"type\":\"address\"}],\"name\":\"ComplianceAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_identityRegistry\",\"type\":\"address\"}],\"name\":\"IdentityRegistryAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_lostWallet\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_newWallet\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_investorOnchainID\",\"type\":\"address\"}],\"name\":\"RecoverySuccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"TokensFrozen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"TokensUnfrozen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"_newName\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"_newSymbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"_newDecimals\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_newVersion\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_newOnchainID\",\"type\":\"address\"}],\"name\":\"UpdatedTokenInformation\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_userAddresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"batchBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_fromList\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_toList\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"batchForcedTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_userAddresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"batchFreezePartialTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_toList\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"batchMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_userAddresses\",\"type\":\"address[]\"},{\"internalType\":\"bool[]\",\"name\":\"_freeze\",\"type\":\"bool[]\"}],\"name\":\"batchSetAddressFrozen\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_toList\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"batchTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_userAddresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"batchUnfreezePartialTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"compliance\",\"outputs\":[{\"internalType\":\"contract IModularCompliance\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"forcedTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"freezePartialTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"getFrozenTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"identityRegistry\",\"outputs\":[{\"internalType\":\"contract IIdentityRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"isFrozen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"onchainID\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lostWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_newWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_investorOnchainID\",\"type\":\"address\"}],\"name\":\"recoveryAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_freeze\",\"type\":\"bool\"}],\"name\":\"setAddressFrozen\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_compliance\",\"type\":\"address\"}],\"name\":\"setCompliance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_identityRegistry\",\"type\":\"address\"}],\"name\":\"setIdentityRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"setName\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_onchainID\",\"type\":\"address\"}],\"name\":\"setOnchainID\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"name\":\"setSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"unfreezePartialTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"interface\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"batchBurn(address[],uint256[])\":{\"details\":\"function allowing to burn tokens in batch  Require that the `_userAddresses` addresses are all verified addresses  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_userAddresses.length` IS TOO HIGH,  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \\\"OUT OF GAS\\\" TRANSACTION\",\"params\":{\"_amounts\":\"The number of tokens to burn from the corresponding wallets  This function can only be called by a wallet set as agent of the token  emits _userAddresses.length `Transfer` events\",\"_userAddresses\":\"The addresses of the wallets concerned by the burn\"}},\"batchForcedTransfer(address[],address[],uint256[])\":{\"details\":\"function allowing to issue forced transfers in batch  Require that `_amounts[i]` should not exceed available balance of `_fromList[i]`.  Require that the `_toList` addresses are all verified addresses  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_fromList.length` IS TOO HIGH,  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \\\"OUT OF GAS\\\" TRANSACTION\",\"params\":{\"_amounts\":\"The number of tokens to transfer to the corresponding receiver  This function can only be called by a wallet set as agent of the token  emits `TokensUnfrozen` events if `_amounts[i]` is higher than the free balance of `_fromList[i]`  emits _fromList.length `Transfer` events\",\"_fromList\":\"The addresses of the senders\",\"_toList\":\"The addresses of the receivers\"}},\"batchFreezePartialTokens(address[],uint256[])\":{\"details\":\"function allowing to freeze tokens partially in batch  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_userAddresses.length` IS TOO HIGH,  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \\\"OUT OF GAS\\\" TRANSACTION\",\"params\":{\"_amounts\":\"the amount of tokens to freeze on the corresponding address  This function can only be called by a wallet set as agent of the token  emits _userAddresses.length `TokensFrozen` events\",\"_userAddresses\":\"The addresses on which tokens need to be frozen\"}},\"batchMint(address[],uint256[])\":{\"details\":\"function allowing to mint tokens in batch  Require that the `_toList` addresses are all verified addresses  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_toList.length` IS TOO HIGH,  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \\\"OUT OF GAS\\\" TRANSACTION\",\"params\":{\"_amounts\":\"The number of tokens to mint to the corresponding receiver  This function can only be called by a wallet set as agent of the token  emits _toList.length `Transfer` events\",\"_toList\":\"The addresses of the receivers\"}},\"batchSetAddressFrozen(address[],bool[])\":{\"details\":\"function allowing to set frozen addresses in batch  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_userAddresses.length` IS TOO HIGH,  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \\\"OUT OF GAS\\\" TRANSACTION\",\"params\":{\"_freeze\":\"Frozen status of the corresponding address  This function can only be called by a wallet set as agent of the token  emits _userAddresses.length `AddressFrozen` events\",\"_userAddresses\":\"The addresses for which to update frozen status\"}},\"batchTransfer(address[],uint256[])\":{\"details\":\"function allowing to issue transfers in batch  Require that the msg.sender and `to` addresses are not frozen.  Require that the total value should not exceed available balance.  Require that the `to` addresses are all verified addresses,  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_toList.length` IS TOO HIGH,  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \\\"OUT OF GAS\\\" TRANSACTION\",\"params\":{\"_amounts\":\"The number of tokens to transfer to the corresponding receiver  emits _toList.length `Transfer` events\",\"_toList\":\"The addresses of the receivers\"}},\"batchUnfreezePartialTokens(address[],uint256[])\":{\"details\":\"function allowing to unfreeze tokens partially in batch  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_userAddresses.length` IS TOO HIGH,  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \\\"OUT OF GAS\\\" TRANSACTION\",\"params\":{\"_amounts\":\"the amount of tokens to unfreeze on the corresponding address  This function can only be called by a wallet set as agent of the token  emits _userAddresses.length `TokensUnfrozen` events\",\"_userAddresses\":\"The addresses on which tokens need to be unfrozen\"}},\"burn(address,uint256)\":{\"details\":\"burn tokens on a wallet  In case the `account` address has not enough free tokens (unfrozen tokens)  but has a total balance higher or equal to the `value` amount  the amount of frozen tokens is reduced in order to have enough free tokens  to proceed the burn, in such a case, the remaining balance on the `account`  is 100% composed of frozen tokens post-transaction.\",\"params\":{\"_amount\":\"Amount of tokens to burn.  This function can only be called by a wallet set as agent of the token  emits a `TokensUnfrozen` event if `_amount` is higher than the free balance of `_userAddress`  emits a `Transfer` event\",\"_userAddress\":\"Address to burn the tokens from.\"}},\"compliance()\":{\"details\":\"Returns the Compliance contract linked to the token\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 1 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including balanceOf() and transfer().\"},\"forcedTransfer(address,address,uint256)\":{\"details\":\"force a transfer of tokens between 2 whitelisted wallets  In case the `from` address has not enough free tokens (unfrozen tokens)  but has a total balance higher or equal to the `amount`  the amount of frozen tokens is reduced in order to have enough free tokens  to proceed the transfer, in such a case, the remaining balance on the `from`  account is 100% composed of frozen tokens post-transfer.  Require that the `to` address is a verified address,\",\"params\":{\"_amount\":\"The number of tokens to transfer\",\"_from\":\"The address of the sender\",\"_to\":\"The address of the receiver\"},\"returns\":{\"_0\":\"`true` if successful and revert if unsuccessful  This function can only be called by a wallet set as agent of the token  emits a `TokensUnfrozen` event if `_amount` is higher than the free balance of `_from`  emits a `Transfer` event\"}},\"freezePartialTokens(address,uint256)\":{\"details\":\"freezes token amount specified for given address.\",\"params\":{\"_amount\":\"Amount of Tokens to be frozen  This function can only be called by a wallet set as agent of the token  emits a `TokensFrozen` event\",\"_userAddress\":\"The address for which to update frozen tokens\"}},\"getFrozenTokens(address)\":{\"details\":\"Returns the amount of tokens that are partially frozen on a wallet  the amount of frozen tokens is always <= to the total balance of the wallet\",\"params\":{\"_userAddress\":\"the address of the wallet on which getFrozenTokens is called\"}},\"identityRegistry()\":{\"details\":\"Returns the Identity Registry linked to the token\"},\"isFrozen(address)\":{\"details\":\"Returns the freezing status of a wallet  if isFrozen returns `true` the wallet is frozen  if isFrozen returns `false` the wallet is not frozen  isFrozen returning `true` doesn't mean that the balance is free, tokens could be blocked by  a partial freeze or the whole token could be blocked by pause\",\"params\":{\"_userAddress\":\"the address of the wallet on which isFrozen is called\"}},\"mint(address,uint256)\":{\"details\":\"mint tokens on a wallet  Improved version of default mint method. Tokens can be minted  to an address if only it is a verified address as per the security token.\",\"params\":{\"_amount\":\"Amount of tokens to mint.  This function can only be called by a wallet set as agent of the token  emits a `Transfer` event\",\"_to\":\"Address to mint the tokens to.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"onchainID()\":{\"details\":\"Returns the address of the onchainID of the token. the onchainID of the token gives all the information available about the token and is managed by the token issuer or his agent.\"},\"pause()\":{\"details\":\"pauses the token contract, when contract is paused investors cannot transfer tokens anymore  This function can only be called by a wallet set as agent of the token  emits a `Paused` event\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"recoveryAddress(address,address,address)\":{\"details\":\"recovery function used to force transfer tokens from a  lost wallet to a new wallet for an investor.\",\"params\":{\"_investorOnchainID\":\"the onchainID of the investor asking for a recovery  This function can only be called by a wallet set as agent of the token  emits a `TokensUnfrozen` event if there is some frozen tokens on the lost wallet if the recovery process is successful  emits a `Transfer` event if the recovery process is successful  emits a `RecoverySuccess` event if the recovery process is successful  emits a `RecoveryFails` event if the recovery process fails\",\"_lostWallet\":\"the wallet that the investor lost\",\"_newWallet\":\"the newly provided wallet on which tokens have to be transferred\"}},\"setAddressFrozen(address,bool)\":{\"details\":\"sets an address frozen status for this token.\",\"params\":{\"_freeze\":\"Frozen status of the address  This function can only be called by a wallet set as agent of the token  emits an `AddressFrozen` event\",\"_userAddress\":\"The address for which to update frozen status\"}},\"setCompliance(address)\":{\"details\":\"sets the compliance contract of the token\",\"params\":{\"_compliance\":\"the address of the compliance contract to set  Only the owner of the token smart contract can call this function  calls bindToken on the compliance contract  emits a `ComplianceAdded` event\"}},\"setIdentityRegistry(address)\":{\"details\":\"sets the Identity Registry for the token\",\"params\":{\"_identityRegistry\":\"the address of the Identity Registry to set  Only the owner of the token smart contract can call this function  emits an `IdentityRegistryAdded` event\"}},\"setName(string)\":{\"details\":\"sets the token name\",\"params\":{\"_name\":\"the name of token to set  Only the owner of the token smart contract can call this function  emits a `UpdatedTokenInformation` event\"}},\"setOnchainID(address)\":{\"details\":\"sets the onchain ID of the token\",\"params\":{\"_onchainID\":\"the address of the onchain ID to set  Only the owner of the token smart contract can call this function  emits a `UpdatedTokenInformation` event\"}},\"setSymbol(string)\":{\"details\":\"sets the token symbol\",\"params\":{\"_symbol\":\"the token symbol to set  Only the owner of the token smart contract can call this function  emits a `UpdatedTokenInformation` event\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"unfreezePartialTokens(address,uint256)\":{\"details\":\"unfreezes token amount specified for given address\",\"params\":{\"_amount\":\"Amount of Tokens to be unfrozen  This function can only be called by a wallet set as agent of the token  emits a `TokensUnfrozen` event\",\"_userAddress\":\"The address for which to update frozen tokens\"}},\"unpause()\":{\"details\":\"unpauses the token contract, when contract is unpaused investors can transfer tokens  if their wallet is not blocked & if the amount to transfer is <= to the amount of free tokens  This function can only be called by a wallet set as agent of the token  emits an `Unpaused` event\"},\"version()\":{\"details\":\"Returns the TREX version of the token. current version is 3.0.0\"}},\"version\":1},\"userdoc\":{\"events\":{\"AddressFrozen(address,bool,address)\":{\"notice\":\"this event is emitted when the wallet of an investor is frozen or unfrozen  the event is emitted by setAddressFrozen and batchSetAddressFrozen functions  `_userAddress` is the wallet of the investor that is concerned by the freezing status  `_isFrozen` is the freezing status of the wallet  if `_isFrozen` equals `true` the wallet is frozen after emission of the event  if `_isFrozen` equals `false` the wallet is unfrozen after emission of the event  `_owner` is the address of the agent who called the function to freeze the wallet\"},\"ComplianceAdded(address)\":{\"notice\":\"this event is emitted when the Compliance has been set for the token  the event is emitted by the token constructor and by the setCompliance function  `_compliance` is the address of the Compliance contract of the token\"},\"IdentityRegistryAdded(address)\":{\"notice\":\"this event is emitted when the IdentityRegistry has been set for the token  the event is emitted by the token constructor and by the setIdentityRegistry function  `_identityRegistry` is the address of the Identity Registry of the token\"},\"Paused(address)\":{\"notice\":\"this event is emitted when the token is paused  the event is emitted by the pause function  `_userAddress` is the address of the wallet that called the pause function\"},\"RecoverySuccess(address,address,address)\":{\"notice\":\"this event is emitted when an investor successfully recovers his tokens  the event is emitted by the recoveryAddress function  `_lostWallet` is the address of the wallet that the investor lost access to  `_newWallet` is the address of the wallet that the investor provided for the recovery  `_investorOnchainID` is the address of the onchainID of the investor who asked for a recovery\"},\"TokensFrozen(address,uint256)\":{\"notice\":\"this event is emitted when a certain amount of tokens is frozen on a wallet  the event is emitted by freezePartialTokens and batchFreezePartialTokens functions  `_userAddress` is the wallet of the investor that is concerned by the freezing status  `_amount` is the amount of tokens that are frozen\"},\"TokensUnfrozen(address,uint256)\":{\"notice\":\"this event is emitted when a certain amount of tokens is unfrozen on a wallet  the event is emitted by unfreezePartialTokens and batchUnfreezePartialTokens functions  `_userAddress` is the wallet of the investor that is concerned by the freezing status  `_amount` is the amount of tokens that are unfrozen\"},\"Unpaused(address)\":{\"notice\":\"this event is emitted when the token is unpaused  the event is emitted by the unpause function  `_userAddress` is the address of the wallet that called the unpause function\"},\"UpdatedTokenInformation(string,string,uint8,string,address)\":{\"notice\":\"this event is emitted when the token information is updated.  the event is emitted by the token init function and by the setTokenInformation function  `_newName` is the name of the token  `_newSymbol` is the symbol of the token  `_newDecimals` is the decimals of the token  `_newVersion` is the version of the token, current version is 3.0  `_newOnchainID` is the address of the onchainID of the token\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/TokenySolutions/T-REX/blob/main/contracts/token/IToken.sol\":\"IToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\":{\"keccak256\":\"0xa7372faa967bc7eaedf66ec51907a21ca789123ad8a6fd371b32f2d2a6f27817\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dcf7cf65c7aff1f78a9071c47b05865c0fbce9d7c965430e8438ba7a451a2ba4\",\"dweb:/ipfs/QmViSrFA2KQpFeWssbJWQtdpa62A9MeEWaxqgs8dyPssga\"]},\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x419198390ae57e3a090a454452931ac8a6605acfd296809c43d4966c9cea2d19\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8f8c7d8d74a6e7dff2858abd7f10aefe1cc88bb629ec6a0c164e4043e2c70eb7\",\"dweb:/ipfs/QmRg2WFW8T2YEt1zJ7PGSAFxcu1L46pNWxm6MZbuN7M4Qc\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"https://github.com/TokenySolutions/T-REX/blob/main/contracts/compliance/modular/IModularCompliance.sol\":{\"keccak256\":\"0xf632b47a306502ce66a0e432c7c3a7d3290ab8325a854bdefe2268d61fb7cc7f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://988eb31577cdd253e9ff2743983c466f81fdb6b944b24d3c55b0263ae45f3d3d\",\"dweb:/ipfs/QmZFixdMi55m78eEfrLN3yiNL4VR3AWSgKcjaRBBq4FskX\"]},\"https://github.com/TokenySolutions/T-REX/blob/main/contracts/registry/interface/IClaimTopicsRegistry.sol\":{\"keccak256\":\"0x878a76f41e117a67b97a698755e9875701282fcc12890c5ebaf85264808e5608\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://46639925c8db6a5442687f74c489bd9f05904acc2f87579f3f538e2a8d5045e2\",\"dweb:/ipfs/QmQSQHd9jMT98LDnD3cxHFK4L9zZ7fLLd9tJUu1ddZYoLn\"]},\"https://github.com/TokenySolutions/T-REX/blob/main/contracts/registry/interface/IIdentityRegistry.sol\":{\"keccak256\":\"0xce63ed845f95b5fe108f16029a6cbe77df130c37e91fed3651098aab7ac82747\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2ed88bfac46fb3b6f5600276b68f043ce40a624f77c4c13ccb7091932d9277bb\",\"dweb:/ipfs/QmYKqQfmLWJUJrrcYdCXU5bCZU8baZGgqq4vPEaRDsGPa1\"]},\"https://github.com/TokenySolutions/T-REX/blob/main/contracts/registry/interface/IIdentityRegistryStorage.sol\":{\"keccak256\":\"0x8ada486c1c9fe45156df6bde7326dd2454ebf16b00caf003915c82847b08cfee\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8dca0a89a9d95dc3dc29333fafcdc0834169dc3e51b3b19203ec6a18dbde3170\",\"dweb:/ipfs/QmVjJwN6kKq6MwZc7hpw98wjmXyyyAqPkr7KAnixe2jxTj\"]},\"https://github.com/TokenySolutions/T-REX/blob/main/contracts/registry/interface/ITrustedIssuersRegistry.sol\":{\"keccak256\":\"0xf85a074a00edd299b7e980da614debe8b17af0dac4a3f98d5cba7e6f2a3a8263\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ce3fca047a970c6039cd238f3b3a7203221876f8a8924f3164ab36f9f1771dcb\",\"dweb:/ipfs/QmcGym6CWid1ejg4MmJmFBfk32gg7K1F7YutEkTriDQYTj\"]},\"https://github.com/TokenySolutions/T-REX/blob/main/contracts/token/IToken.sol\":{\"keccak256\":\"0xf5c167244bcf46aa12fa678c6821c9534cd7b251c254dafd4fefb7586d3310ef\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://386e323cddab4b50c2d904ce549f4cdf096881d65ca3d28a5ec79db313c3357c\",\"dweb:/ipfs/QmQ1VqhgoGpfKFXGhgvSqKsQFLnbbJd9FWogSouoFDs45q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"AddressFrozen(address,bool,address)": {
								"notice": "this event is emitted when the wallet of an investor is frozen or unfrozen  the event is emitted by setAddressFrozen and batchSetAddressFrozen functions  `_userAddress` is the wallet of the investor that is concerned by the freezing status  `_isFrozen` is the freezing status of the wallet  if `_isFrozen` equals `true` the wallet is frozen after emission of the event  if `_isFrozen` equals `false` the wallet is unfrozen after emission of the event  `_owner` is the address of the agent who called the function to freeze the wallet"
							},
							"ComplianceAdded(address)": {
								"notice": "this event is emitted when the Compliance has been set for the token  the event is emitted by the token constructor and by the setCompliance function  `_compliance` is the address of the Compliance contract of the token"
							},
							"IdentityRegistryAdded(address)": {
								"notice": "this event is emitted when the IdentityRegistry has been set for the token  the event is emitted by the token constructor and by the setIdentityRegistry function  `_identityRegistry` is the address of the Identity Registry of the token"
							},
							"Paused(address)": {
								"notice": "this event is emitted when the token is paused  the event is emitted by the pause function  `_userAddress` is the address of the wallet that called the pause function"
							},
							"RecoverySuccess(address,address,address)": {
								"notice": "this event is emitted when an investor successfully recovers his tokens  the event is emitted by the recoveryAddress function  `_lostWallet` is the address of the wallet that the investor lost access to  `_newWallet` is the address of the wallet that the investor provided for the recovery  `_investorOnchainID` is the address of the onchainID of the investor who asked for a recovery"
							},
							"TokensFrozen(address,uint256)": {
								"notice": "this event is emitted when a certain amount of tokens is frozen on a wallet  the event is emitted by freezePartialTokens and batchFreezePartialTokens functions  `_userAddress` is the wallet of the investor that is concerned by the freezing status  `_amount` is the amount of tokens that are frozen"
							},
							"TokensUnfrozen(address,uint256)": {
								"notice": "this event is emitted when a certain amount of tokens is unfrozen on a wallet  the event is emitted by unfreezePartialTokens and batchUnfreezePartialTokens functions  `_userAddress` is the wallet of the investor that is concerned by the freezing status  `_amount` is the amount of tokens that are unfrozen"
							},
							"Unpaused(address)": {
								"notice": "this event is emitted when the token is unpaused  the event is emitted by the unpause function  `_userAddress` is the address of the wallet that called the unpause function"
							},
							"UpdatedTokenInformation(string,string,uint8,string,address)": {
								"notice": "this event is emitted when the token information is updated.  the event is emitted by the token init function and by the setTokenInformation function  `_newName` is the name of the token  `_newSymbol` is the symbol of the token  `_newDecimals` is the decimals of the token  `_newVersion` is the version of the token, current version is 3.0  `_newOnchainID` is the address of the onchainID of the token"
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> Tokeny Project/Compliance/modular/IModularCompliance.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "Tokeny Project/Compliance/modular/IModularCompliance.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "3420",
				"formattedMessage": "Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.17;\"\n--> Tokeny Project/Compliance/modular/IModularCompliance.sol\n\n",
				"message": "Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.17;\"",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "Tokeny Project/Compliance/modular/IModularCompliance.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol": {
				"ast": {
					"absolutePath": "@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
					"exportedSymbols": {
						"IClaimIssuer": [
							59
						],
						"IERC734": [
							206
						],
						"IERC735": [
							314
						],
						"IIdentity": [
							323
						]
					},
					"id": 60,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:0"
						},
						{
							"absolutePath": "@onchain-id/solidity/contracts/interface/IIdentity.sol",
							"file": "./IIdentity.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 60,
							"sourceUnit": 324,
							"src": "61:25:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "IIdentity",
										"nameLocations": [
											"114:9:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 323,
										"src": "114:9:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "114:9:0"
								}
							],
							"canonicalName": "IClaimIssuer",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 59,
							"linearizedBaseContracts": [
								59,
								323,
								314,
								206
							],
							"name": "IClaimIssuer",
							"nameLocation": "98:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 5,
										"nodeType": "StructuredDocumentation",
										"src": "131:126:0",
										"text": " @dev Emitted when a claim is revoked.\n Specification: MUST be triggered when revoking a claim."
									},
									"eventSelector": "7f484e37f24c0a92f81dd74afa3027b3ea31f2e9fb6b9fa29fe9865f81ac5569",
									"id": 9,
									"name": "ClaimRevoked",
									"nameLocation": "268:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "295:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "281:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 6,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "281:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "280:25:0"
									},
									"src": "262:44:0"
								},
								{
									"documentation": {
										"id": 10,
										"nodeType": "StructuredDocumentation",
										"src": "312:351:0",
										"text": " @dev Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\n @notice will fetch the claim from the identity contract (unsafe).\n @param _claimId the id of the claim\n @param _identity the address of the identity contract\n @return isRevoked true when the claim is revoked"
									},
									"functionSelector": "73c33708",
									"id": 19,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeClaim",
									"nameLocation": "677:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "_claimId",
												"nameLocation": "697:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "689:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 11,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "689:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "_identity",
												"nameLocation": "715:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "707:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "707:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "688:37:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "743:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "743:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "742:6:0"
									},
									"scope": 59,
									"src": "668:81:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "755:169:0",
										"text": " @dev Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\n @param signature the signature of the claim"
									},
									"functionSelector": "9f7f9edd",
									"id": 25,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeClaimBySignature",
									"nameLocation": "938:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "976:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "961:24:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 21,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "961:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "960:26:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "995:0:0"
									},
									"scope": 59,
									"src": "929:67:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "1002:181:0",
										"text": " @dev Returns revocation status of a claim.\n @param _sig the signature of the claim\n @return isRevoked true if the claim is revoked and false otherwise"
									},
									"functionSelector": "2646b264",
									"id": 33,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isClaimRevoked",
									"nameLocation": "1197:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "_sig",
												"nameLocation": "1227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1212:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 27,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1212:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1211:21:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 30,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1255:6:0"
									},
									"scope": 59,
									"src": "1188:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "1268:334:0",
										"text": " @dev Checks if a claim is valid.\n @param _identity the identity contract related to the claim\n @param claimTopic the claim topic of the claim\n @param sig the signature of the claim\n @param data the data field of the claim\n @return claimValid true if the claim is valid, false otherwise"
									},
									"functionSelector": "c0969a6e",
									"id": 48,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isClaimValid",
									"nameLocation": "1616:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "_identity",
												"nameLocation": "1648:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1638:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$323",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 36,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 35,
														"name": "IIdentity",
														"nameLocations": [
															"1638:9:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "1638:9:0"
													},
													"referencedDeclaration": 323,
													"src": "1638:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$323",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "claimTopic",
												"nameLocation": "1675:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1667:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1667:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "sig",
												"nameLocation": "1710:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1695:18:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 40,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1695:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1738:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1723:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 42,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1723:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1628:115:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1771:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 45,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1771:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1770:6:0"
									},
									"scope": 59,
									"src": "1607:170:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 49,
										"nodeType": "StructuredDocumentation",
										"src": "1783:240:0",
										"text": " @dev returns the address that signed the given data\n @param sig the signature of the data\n @param dataHash the data that was signed\n returns the address that signed dataHash and created the signature sig"
									},
									"functionSelector": "c3b129e3",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRecoveredAddress",
									"nameLocation": "2037:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "sig",
												"nameLocation": "2072:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2057:18:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 50,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2057:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "dataHash",
												"nameLocation": "2085:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2077:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 52,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2077:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2056:38:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2118:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2118:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2117:9:0"
									},
									"scope": 59,
									"src": "2028:99:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 60,
							"src": "88:2041:0",
							"usedErrors": []
						}
					],
					"src": "36:2094:0"
				},
				"id": 0
			},
			"@onchain-id/solidity/contracts/interface/IERC734.sol": {
				"ast": {
					"absolutePath": "@onchain-id/solidity/contracts/interface/IERC734.sol",
					"exportedSymbols": {
						"IERC734": [
							206
						]
					},
					"id": 207,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 61,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC734",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 62,
								"nodeType": "StructuredDocumentation",
								"src": "61:84:1",
								"text": " @dev interface of the ERC734 (Key Holder) standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 206,
							"linearizedBaseContracts": [
								206
							],
							"name": "IERC734",
							"nameLocation": "156:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "171:156:1",
										"text": " @dev Emitted when an execution request was approved.\n Specification: MUST be triggered when approve was successfully called."
									},
									"eventSelector": "b3932da477fe5d6c8ff2eafef050c0f3a1af18fc07121001482600f36f3715d8",
									"id": 69,
									"name": "Approved",
									"nameLocation": "338:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"indexed": true,
												"mutability": "mutable",
												"name": "executionId",
												"nameLocation": "363:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "347:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "347:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "381:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "376:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 66,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "376:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "346:44:1"
									},
									"src": "332:59:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "397:214:1",
										"text": " @dev Emitted when an execute operation was approved and successfully performed.\n Specification: MUST be triggered when approve was called and the execution was successfully approved."
									},
									"eventSelector": "1f920dbda597d7bf95035464170fa58d0a4b57f13a1c315ace6793b9f63688b8",
									"id": 80,
									"name": "Executed",
									"nameLocation": "622:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"indexed": true,
												"mutability": "mutable",
												"name": "executionId",
												"nameLocation": "647:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "631:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "631:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "676:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "660:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"indexed": true,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "696:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "680:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "680:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 78,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "709:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "703:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 77,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "703:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "630:84:1"
									},
									"src": "616:99:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "721:171:1",
										"text": " @dev Emitted when an execution request was performed via `execute`.\n Specification: MUST be triggered when execute was successfully called."
									},
									"eventSelector": "8afcfabcb00e47a53a8fc3e9f23ff47ee1926194bb1350dd007c50b412a6cee8",
									"id": 91,
									"name": "ExecutionRequested",
									"nameLocation": "903:18:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"indexed": true,
												"mutability": "mutable",
												"name": "executionId",
												"nameLocation": "938:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "922:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 82,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "922:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "967:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "951:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "951:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"indexed": true,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "987:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "971:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1000:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "994:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 88,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "994:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "921:84:1"
									},
									"src": "897:109:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "1012:151:1",
										"text": " @dev Emitted when an execute operation was called and failed\n Specification: MUST be triggered when execute call failed"
									},
									"eventSelector": "e10c49d9f7c71da23262367013434763cfdb2332267641728d25cd712c5c6a68",
									"id": 102,
									"name": "ExecutionFailed",
									"nameLocation": "1174:15:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"indexed": true,
												"mutability": "mutable",
												"name": "executionId",
												"nameLocation": "1206:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "1190:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 93,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1190:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1235:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "1219:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"indexed": true,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1255:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "1239:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 97,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1239:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 100,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1268:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "1262:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 99,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1262:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1189:84:1"
									},
									"src": "1168:106:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 103,
										"nodeType": "StructuredDocumentation",
										"src": "1280:153:1",
										"text": " @dev Emitted when a key was added to the Identity.\n Specification: MUST be triggered when addKey was successfully called."
									},
									"eventSelector": "480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e9",
									"id": 111,
									"name": "KeyAdded",
									"nameLocation": "1444:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"indexed": true,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "1469:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "1453:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 104,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1453:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 107,
												"indexed": true,
												"mutability": "mutable",
												"name": "purpose",
												"nameLocation": "1490:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "1474:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1474:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"indexed": true,
												"mutability": "mutable",
												"name": "keyType",
												"nameLocation": "1515:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "1499:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1499:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1452:71:1"
									},
									"src": "1438:86:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "1530:160:1",
										"text": " @dev Emitted when a key was removed from the Identity.\n Specification: MUST be triggered when removeKey was successfully called."
									},
									"eventSelector": "585a4aef50f8267a92b32412b331b20f7f8b96f2245b253b9cc50dcc621d3397",
									"id": 120,
									"name": "KeyRemoved",
									"nameLocation": "1701:10:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"indexed": true,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "1728:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "1712:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 113,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1712:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"indexed": true,
												"mutability": "mutable",
												"name": "purpose",
												"nameLocation": "1749:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "1733:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1733:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"indexed": true,
												"mutability": "mutable",
												"name": "keyType",
												"nameLocation": "1774:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "1758:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1758:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1711:71:1"
									},
									"src": "1695:88:1"
								},
								{
									"documentation": {
										"id": 121,
										"nodeType": "StructuredDocumentation",
										"src": "1789:319:1",
										"text": " @dev Adds a _key to the identity. The _purpose specifies the purpose of the key.\n Triggers Event: `KeyAdded`\n Specification: MUST only be done by keys of purpose 1, or the identity\n itself. If it's the identity itself, the approval process will determine its approval."
									},
									"functionSelector": "1d381240",
									"id": 132,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addKey",
									"nameLocation": "2122:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "_key",
												"nameLocation": "2137:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2129:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 122,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2129:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "_purpose",
												"nameLocation": "2151:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2143:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "_keyType",
												"nameLocation": "2169:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2161:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2161:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2128:50:1"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2202:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2197:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 129,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2197:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2196:14:1"
									},
									"scope": 206,
									"src": "2113:98:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2217:201:1",
										"text": " @dev Approves an execution.\n Triggers Event: `Approved`\n Triggers on execution successful Event: `Executed`\n Triggers on execution failure Event: `ExecutionFailed`"
									},
									"functionSelector": "747442d3",
									"id": 142,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2432:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "2448:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "2440:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "_approve",
												"nameLocation": "2458:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "2453:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 136,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2453:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:28:1"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2491:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "2486:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2486:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2485:14:1"
									},
									"scope": 206,
									"src": "2423:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 143,
										"nodeType": "StructuredDocumentation",
										"src": "2506:290:1",
										"text": " @dev Removes _purpose for _key from the identity.\n Triggers Event: `KeyRemoved`\n Specification: MUST only be done by keys of purpose 1, or the identity itself.\n If it's the identity itself, the approval process will determine its approval."
									},
									"functionSelector": "53d413c5",
									"id": 152,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeKey",
									"nameLocation": "2810:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "_key",
												"nameLocation": "2828:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "2820:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 144,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "_purpose",
												"nameLocation": "2842:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "2834:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2834:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2819:32:1"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2875:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "2870:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 149,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2870:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2869:14:1"
									},
									"scope": 206,
									"src": "2801:83:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "2890:481:1",
										"text": " @dev Passes an execution instruction to an ERC734 identity.\n How the execution is handled is up to the identity implementation:\n An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to\n approve this execution.\n Execute COULD be used as the only accessor for `addKey` and `removeKey`.\n Triggers Event: ExecutionRequested\n Triggers on direct execution Event: Executed"
									},
									"functionSelector": "b61d27f6",
									"id": 164,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "execute",
									"nameLocation": "3385:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "3401:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3393:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3393:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "3414:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3406:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3406:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "3437:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3422:20:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 158,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3422:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3392:51:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "executionId",
												"nameLocation": "3478:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3470:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3470:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3469:21:1"
									},
									"scope": 206,
									"src": "3376:115:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "3497:78:1",
										"text": " @dev Returns the full key data, if present in the identity."
									},
									"functionSelector": "12aaac70",
									"id": 177,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getKey",
									"nameLocation": "3589:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "_key",
												"nameLocation": "3604:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "3596:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 166,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3596:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3595:14:1"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "purposes",
												"nameLocation": "3650:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "3633:25:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 169,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3633:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 170,
													"nodeType": "ArrayTypeName",
													"src": "3633:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "keyType",
												"nameLocation": "3668:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "3660:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3660:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "3685:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "3677:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 174,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3677:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3632:57:1"
									},
									"scope": 206,
									"src": "3580:110:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "3696:75:1",
										"text": " @dev Returns the list of purposes associated with a key."
									},
									"functionSelector": "fb307b34",
									"id": 186,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getKeyPurposes",
									"nameLocation": "3785:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "_key",
												"nameLocation": "3808:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "3800:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 179,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3800:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3799:14:1"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "_purposes",
												"nameLocation": "3853:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "3836:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 182,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3836:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 183,
													"nodeType": "ArrayTypeName",
													"src": "3836:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3835:28:1"
									},
									"scope": 206,
									"src": "3776:88:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "3870:85:1",
										"text": " @dev Returns an array of public key bytes32 held by this identity."
									},
									"functionSelector": "9010f726",
									"id": 195,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getKeysByPurpose",
									"nameLocation": "3969:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "_purpose",
												"nameLocation": "3994:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "3986:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3986:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3985:18:1"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "keys",
												"nameLocation": "4044:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "4027:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 191,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "4027:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 192,
													"nodeType": "ArrayTypeName",
													"src": "4027:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4026:23:1"
									},
									"scope": 206,
									"src": "3960:90:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "4056:127:1",
										"text": " @dev Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE."
									},
									"functionSelector": "d202158d",
									"id": 205,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "keyHasPurpose",
									"nameLocation": "4197:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "_key",
												"nameLocation": "4219:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "4211:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 197,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4211:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "_purpose",
												"nameLocation": "4233:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "4225:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4225:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4210:32:1"
									},
									"returnParameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "exists",
												"nameLocation": "4271:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "4266:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 202,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4266:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4265:13:1"
									},
									"scope": 206,
									"src": "4188:91:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 207,
							"src": "146:4135:1",
							"usedErrors": []
						}
					],
					"src": "36:4246:1"
				},
				"id": 1
			},
			"@onchain-id/solidity/contracts/interface/IERC735.sol": {
				"ast": {
					"absolutePath": "@onchain-id/solidity/contracts/interface/IERC735.sol",
					"exportedSymbols": {
						"IERC735": [
							314
						]
					},
					"id": 315,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 208,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC735",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 209,
								"nodeType": "StructuredDocumentation",
								"src": "61:86:2",
								"text": " @dev interface of the ERC735 (Claim Holder) standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 314,
							"linearizedBaseContracts": [
								314
							],
							"name": "IERC735",
							"nameLocation": "158:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "173:139:2",
										"text": " @dev Emitted when a claim was added.\n Specification: MUST be triggered when a claim was successfully added."
									},
									"eventSelector": "46149b18aa084502c3f12bc75e19eda8bda8d102b82cce8474677a6d0d5f43c5",
									"id": 226,
									"name": "ClaimAdded",
									"nameLocation": "323:10:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimId",
												"nameLocation": "359:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "343:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 211,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"indexed": true,
												"mutability": "mutable",
												"name": "topic",
												"nameLocation": "392:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "376:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "376:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"indexed": false,
												"mutability": "mutable",
												"name": "scheme",
												"nameLocation": "415:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "407:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "407:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"indexed": true,
												"mutability": "mutable",
												"name": "issuer",
												"nameLocation": "447:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "431:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"indexed": false,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "469:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "463:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 219,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "463:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "494:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "488:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 221,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "488:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"indexed": false,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "515:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "508:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 223,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "508:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "333:186:2"
									},
									"src": "317:203:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "526:146:2",
										"text": " @dev Emitted when a claim was removed.\n Specification: MUST be triggered when removeClaim was successfully called."
									},
									"eventSelector": "3cf57863a89432c61c4a27073c6ee39e8a764bff5a05aebfbcdcdc80b2e6130a",
									"id": 243,
									"name": "ClaimRemoved",
									"nameLocation": "683:12:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimId",
												"nameLocation": "721:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "705:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 228,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "705:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"indexed": true,
												"mutability": "mutable",
												"name": "topic",
												"nameLocation": "754:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "738:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"indexed": false,
												"mutability": "mutable",
												"name": "scheme",
												"nameLocation": "777:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "769:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"indexed": true,
												"mutability": "mutable",
												"name": "issuer",
												"nameLocation": "809:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "793:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "793:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"indexed": false,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "831:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "825:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 236,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "825:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "856:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "850:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 238,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "850:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"indexed": false,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "877:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "870:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 240,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "870:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "695:186:2"
									},
									"src": "677:205:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "888:166:2",
										"text": " @dev Emitted when a claim was changed.\n Specification: MUST be triggered when addClaim was successfully called on an existing claimId."
									},
									"eventSelector": "3bab293fc00db832d7619a9299914251b8747c036867ec056cbd506f60135b13",
									"id": 260,
									"name": "ClaimChanged",
									"nameLocation": "1065:12:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimId",
												"nameLocation": "1103:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "1087:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 245,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1087:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"indexed": true,
												"mutability": "mutable",
												"name": "topic",
												"nameLocation": "1136:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "1120:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1120:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"indexed": false,
												"mutability": "mutable",
												"name": "scheme",
												"nameLocation": "1159:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "1151:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1151:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"indexed": true,
												"mutability": "mutable",
												"name": "issuer",
												"nameLocation": "1191:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "1175:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1175:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"indexed": false,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "1213:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "1207:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 253,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1207:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1238:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "1232:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 255,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1232:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"indexed": false,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "1259:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "1252:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 257,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1252:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1077:186:2"
									},
									"src": "1059:205:2"
								},
								{
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "1270:438:2",
										"text": " @dev Add or update a claim.\n Triggers Event: `ClaimAdded`, `ClaimChanged`\n Specification: Add or update a claim from an issuer.\n _signature is a signed message of the following structure:\n `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`.\n Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`."
									},
									"functionSelector": "b1a34e0d",
									"id": 278,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addClaim",
									"nameLocation": "1722:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "_topic",
												"nameLocation": "1748:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "1740:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1740:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "_scheme",
												"nameLocation": "1772:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "1764:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1764:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "issuer",
												"nameLocation": "1797:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "1789:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1789:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "_signature",
												"nameLocation": "1828:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "1813:25:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 268,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1813:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "1863:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "1848:20:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 270,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1848:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "_uri",
												"nameLocation": "1894:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "1878:20:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 272,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1878:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1730:169:2"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "claimRequestId",
												"nameLocation": "1930:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "1922:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 275,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1922:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1921:24:2"
									},
									"scope": 314,
									"src": "1713:233:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "1952:193:2",
										"text": " @dev Removes a claim.\n Triggers Event: `ClaimRemoved`\n Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
									},
									"functionSelector": "4eee424a",
									"id": 286,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeClaim",
									"nameLocation": "2159:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "_claimId",
												"nameLocation": "2179:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "2171:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 280,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2170:18:2"
									},
									"returnParameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2212:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "2207:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 283,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2207:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2206:14:2"
									},
									"scope": 314,
									"src": "2150:71:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "2227:154:2",
										"text": " @dev Get a claim by its ID.\n Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
									},
									"functionSelector": "c9100bcb",
									"id": 304,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getClaim",
									"nameLocation": "2395:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "_claimId",
												"nameLocation": "2412:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "2404:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 288,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2404:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2403:18:2"
									},
									"returnParameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "topic",
												"nameLocation": "2465:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "2457:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2457:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "scheme",
												"nameLocation": "2488:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "2480:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2480:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "issuer",
												"nameLocation": "2512:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "2504:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2504:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "2541:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "2528:22:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 297,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2528:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2573:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "2560:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 299,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2560:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "2601:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "2587:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 301,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2587:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2447:158:2"
									},
									"scope": 314,
									"src": "2386:220:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 305,
										"nodeType": "StructuredDocumentation",
										"src": "2612:63:2",
										"text": " @dev Returns an array of claim IDs by topic."
									},
									"functionSelector": "80e9e9e1",
									"id": 313,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getClaimIdsByTopic",
									"nameLocation": "2689:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "_topic",
												"nameLocation": "2716:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "2708:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2708:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2707:16:2"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "claimIds",
												"nameLocation": "2763:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "2746:25:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 309,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "2746:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 310,
													"nodeType": "ArrayTypeName",
													"src": "2746:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2745:27:2"
									},
									"scope": 314,
									"src": "2680:93:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 315,
							"src": "148:2627:2",
							"usedErrors": []
						}
					],
					"src": "36:2740:2"
				},
				"id": 2
			},
			"@onchain-id/solidity/contracts/interface/IIdentity.sol": {
				"ast": {
					"absolutePath": "@onchain-id/solidity/contracts/interface/IIdentity.sol",
					"exportedSymbols": {
						"IERC734": [
							206
						],
						"IERC735": [
							314
						],
						"IIdentity": [
							323
						]
					},
					"id": 324,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 316,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:3"
						},
						{
							"absolutePath": "@onchain-id/solidity/contracts/interface/IERC734.sol",
							"file": "./IERC734.sol",
							"id": 317,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 324,
							"sourceUnit": 207,
							"src": "61:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@onchain-id/solidity/contracts/interface/IERC735.sol",
							"file": "./IERC735.sol",
							"id": 318,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 324,
							"sourceUnit": 315,
							"src": "85:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 319,
										"name": "IERC734",
										"nameLocations": [
											"178:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 206,
										"src": "178:7:3"
									},
									"id": 320,
									"nodeType": "InheritanceSpecifier",
									"src": "178:7:3"
								},
								{
									"baseName": {
										"id": 321,
										"name": "IERC735",
										"nameLocations": [
											"187:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 314,
										"src": "187:7:3"
									},
									"id": 322,
									"nodeType": "InheritanceSpecifier",
									"src": "187:7:3"
								}
							],
							"canonicalName": "IIdentity",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 323,
							"linearizedBaseContracts": [
								323,
								314,
								206
							],
							"name": "IIdentity",
							"nameLocation": "165:9:3",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 324,
							"src": "155:42:3",
							"usedErrors": []
						}
					],
					"src": "36:162:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							954
						],
						"ContextUpgradeable": [
							996
						],
						"Initializable": [
							624
						],
						"OwnableUpgradeable": [
							455
						]
					},
					"id": 456,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 325,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 326,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 456,
							"sourceUnit": 997,
							"src": "127:41:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 327,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 456,
							"sourceUnit": 625,
							"src": "169:42:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 329,
										"name": "Initializable",
										"nameLocations": [
											"748:13:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 624,
										"src": "748:13:4"
									},
									"id": 330,
									"nodeType": "InheritanceSpecifier",
									"src": "748:13:4"
								},
								{
									"baseName": {
										"id": 331,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"763:18:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 996,
										"src": "763:18:4"
									},
									"id": 332,
									"nodeType": "InheritanceSpecifier",
									"src": "763:18:4"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 328,
								"nodeType": "StructuredDocumentation",
								"src": "213:494:4",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 455,
							"linearizedBaseContracts": [
								455,
								996,
								624
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "726:18:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 334,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "804:6:4",
									"nodeType": "VariableDeclaration",
									"scope": 455,
									"src": "788:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 333,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "788:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 340,
									"name": "OwnershipTransferred",
									"nameLocation": "823:20:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "860:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "844:29:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "844:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "891:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "875:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:57:4"
									},
									"src": "817:84:4"
								},
								{
									"body": {
										"id": 349,
										"nodeType": "Block",
										"src": "1055:43:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 346,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "1065:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1065:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 348,
												"nodeType": "ExpressionStatement",
												"src": "1065:26:4"
											}
										]
									},
									"documentation": {
										"id": 341,
										"nodeType": "StructuredDocumentation",
										"src": "907:91:4",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 350,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 344,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 343,
												"name": "onlyInitializing",
												"nameLocations": [
													"1038:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 569,
												"src": "1038:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1038:16:4"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1012:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1026:2:4"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1055:0:4"
									},
									"scope": 455,
									"src": "1003:95:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "1166:49:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 356,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 981,
																"src": "1195:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1195:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 355,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "1176:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1176:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 359,
												"nodeType": "ExpressionStatement",
												"src": "1176:32:4"
											}
										]
									},
									"id": 361,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 353,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 352,
												"name": "onlyInitializing",
												"nameLocations": [
													"1149:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 569,
												"src": "1149:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1149:16:4"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1113:24:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1137:2:4"
									},
									"returnParameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1166:0:4"
									},
									"scope": 455,
									"src": "1104:111:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 368,
										"nodeType": "Block",
										"src": "1324:41:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 364,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 392,
														"src": "1334:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1334:13:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 366,
												"nodeType": "ExpressionStatement",
												"src": "1334:13:4"
											},
											{
												"id": 367,
												"nodeType": "PlaceholderStatement",
												"src": "1357:1:4"
											}
										]
									},
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "1221:77:4",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 369,
									"name": "onlyOwner",
									"nameLocation": "1312:9:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1321:2:4"
									},
									"src": "1303:62:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 377,
										"nodeType": "Block",
										"src": "1496:30:4",
										"statements": [
											{
												"expression": {
													"id": 375,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 334,
													"src": "1513:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 374,
												"id": 376,
												"nodeType": "Return",
												"src": "1506:13:4"
											}
										]
									},
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "1371:65:4",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 378,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1450:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1455:2:4"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "1487:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1487:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1486:9:4"
									},
									"scope": 455,
									"src": "1441:85:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 391,
										"nodeType": "Block",
										"src": "1644:85:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 383,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 378,
																	"src": "1662:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 384,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1662:7:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 385,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 981,
																	"src": "1673:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 386,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1673:12:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1662:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 388,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1687:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 382,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1654:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1654:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 390,
												"nodeType": "ExpressionStatement",
												"src": "1654:68:4"
											}
										]
									},
									"documentation": {
										"id": 379,
										"nodeType": "StructuredDocumentation",
										"src": "1532:62:4",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 392,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1608:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1619:2:4"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1644:0:4"
									},
									"scope": 455,
									"src": "1599:130:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 405,
										"nodeType": "Block",
										"src": "2118:47:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 401,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2155:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 400,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2147:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 399,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2147:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2147:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 398,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "2128:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2128:30:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 404,
												"nodeType": "ExpressionStatement",
												"src": "2128:30:4"
											}
										]
									},
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "1735:324:4",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 406,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 396,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 395,
												"name": "onlyOwner",
												"nameLocations": [
													"2108:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 369,
												"src": "2108:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2108:9:4"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2073:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2090:2:4"
									},
									"returnParameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2118:0:4"
									},
									"scope": 455,
									"src": "2064:101:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 428,
										"nodeType": "Block",
										"src": "2384:128:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 415,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 409,
																"src": "2402:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 418,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2422:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2414:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 416,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2414:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 419,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2414:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2402:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2426:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 414,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2394:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2394:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 423,
												"nodeType": "ExpressionStatement",
												"src": "2394:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 425,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "2496:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 424,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "2477:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2477:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 427,
												"nodeType": "ExpressionStatement",
												"src": "2477:28:4"
											}
										]
									},
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "2171:138:4",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 429,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 412,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 411,
												"name": "onlyOwner",
												"nameLocations": [
													"2374:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 369,
												"src": "2374:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2374:9:4"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2323:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2349:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "2341:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2341:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2340:18:4"
									},
									"returnParameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2384:0:4"
									},
									"scope": 455,
									"src": "2314:198:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 448,
										"nodeType": "Block",
										"src": "2729:124:4",
										"statements": [
											{
												"assignments": [
													436
												],
												"declarations": [
													{
														"constant": false,
														"id": 436,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2747:8:4",
														"nodeType": "VariableDeclaration",
														"scope": 448,
														"src": "2739:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 435,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2739:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 438,
												"initialValue": {
													"id": 437,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 334,
													"src": "2758:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2739:25:4"
											},
											{
												"expression": {
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 439,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "2774:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 440,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 432,
														"src": "2783:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2774:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 442,
												"nodeType": "ExpressionStatement",
												"src": "2774:17:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 444,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 436,
															"src": "2827:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 445,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "2837:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 443,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 340,
														"src": "2806:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2806:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 447,
												"nodeType": "EmitStatement",
												"src": "2801:45:4"
											}
										]
									},
									"documentation": {
										"id": 430,
										"nodeType": "StructuredDocumentation",
										"src": "2518:143:4",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 449,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2675:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2702:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "2694:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2693:18:4"
									},
									"returnParameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2729:0:4"
									},
									"scope": 455,
									"src": "2666:187:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 450,
										"nodeType": "StructuredDocumentation",
										"src": "2859:254:4",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 454,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "3138:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 455,
									"src": "3118:25:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 451,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3118:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 453,
										"length": {
											"hexValue": "3439",
											"id": 452,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3126:2:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "3118:11:4",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 456,
							"src": "708:2438:4",
							"usedErrors": []
						}
					],
					"src": "102:3045:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							954
						],
						"Initializable": [
							624
						]
					},
					"id": 625,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 457,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
							"file": "../../utils/AddressUpgradeable.sol",
							"id": 458,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 625,
							"sourceUnit": 955,
							"src": "138:44:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 459,
								"nodeType": "StructuredDocumentation",
								"src": "184:2209:5",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 624,
							"linearizedBaseContracts": [
								624
							],
							"name": "Initializable",
							"nameLocation": "2412:13:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "2432:109:5",
										"text": " @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"
									},
									"id": 462,
									"mutability": "mutable",
									"name": "_initialized",
									"nameLocation": "2560:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 624,
									"src": "2546:26:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 461,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "2546:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "2579:91:5",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 465,
									"mutability": "mutable",
									"name": "_initializing",
									"nameLocation": "2688:13:5",
									"nodeType": "VariableDeclaration",
									"scope": 624,
									"src": "2675:26:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 464,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2675:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 466,
										"nodeType": "StructuredDocumentation",
										"src": "2708:90:5",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498",
									"id": 470,
									"name": "Initialized",
									"nameLocation": "2809:11:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "2827:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "2821:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 467,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2821:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2820:15:5"
									},
									"src": "2803:33:5"
								},
								{
									"body": {
										"id": 525,
										"nodeType": "Block",
										"src": "3269:483:5",
										"statements": [
											{
												"assignments": [
													474
												],
												"declarations": [
													{
														"constant": false,
														"id": 474,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "3284:14:5",
														"nodeType": "VariableDeclaration",
														"scope": 525,
														"src": "3279:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 473,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3279:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 477,
												"initialValue": {
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3301:14:5",
													"subExpression": {
														"id": 475,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 465,
														"src": "3302:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3279:36:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 483,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 479,
																			"name": "isTopLevelCall",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 474,
																			"src": "3347:14:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 482,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 480,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 462,
																				"src": "3365:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 481,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3380:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3365:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3347:34:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 484,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3346:36:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 496,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 492,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "3387:45:5",
																			"subExpression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 489,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967268,
																								"src": "3426:4:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_Initializable_$624",
																									"typeString": "contract Initializable"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_Initializable_$624",
																									"typeString": "contract Initializable"
																								}
																							],
																							"id": 488,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3418:7:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 487,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "3418:7:5",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 490,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3418:13:5",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"id": 485,
																						"name": "AddressUpgradeable",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 954,
																						"src": "3388:18:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$954_$",
																							"typeString": "type(library AddressUpgradeable)"
																						}
																					},
																					"id": 486,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3407:10:5",
																					"memberName": "isContract",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 642,
																					"src": "3388:29:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																						"typeString": "function (address) view returns (bool)"
																					}
																				},
																				"id": 491,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3388:44:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 495,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 493,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 462,
																				"src": "3436:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 494,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3452:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3436:17:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3387:66:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 497,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3386:68:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3346:108:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 499,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3468:48:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 478,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3325:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3325:201:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 501,
												"nodeType": "ExpressionStatement",
												"src": "3325:201:5"
											},
											{
												"expression": {
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 502,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 462,
														"src": "3536:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3551:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3536:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 505,
												"nodeType": "ExpressionStatement",
												"src": "3536:16:5"
											},
											{
												"condition": {
													"id": 506,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 474,
													"src": "3566:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 512,
												"nodeType": "IfStatement",
												"src": "3562:65:5",
												"trueBody": {
													"id": 511,
													"nodeType": "Block",
													"src": "3582:45:5",
													"statements": [
														{
															"expression": {
																"id": 509,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 507,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 465,
																	"src": "3596:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 508,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3612:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3596:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 510,
															"nodeType": "ExpressionStatement",
															"src": "3596:20:5"
														}
													]
												}
											},
											{
												"id": 513,
												"nodeType": "PlaceholderStatement",
												"src": "3636:1:5"
											},
											{
												"condition": {
													"id": 514,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 474,
													"src": "3651:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 524,
												"nodeType": "IfStatement",
												"src": "3647:99:5",
												"trueBody": {
													"id": 523,
													"nodeType": "Block",
													"src": "3667:79:5",
													"statements": [
														{
															"expression": {
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 515,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 465,
																	"src": "3681:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3697:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "3681:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 518,
															"nodeType": "ExpressionStatement",
															"src": "3681:21:5"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 520,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3733:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 519,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 470,
																	"src": "3721:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 521,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3721:14:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 522,
															"nodeType": "EmitStatement",
															"src": "3716:19:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 471,
										"nodeType": "StructuredDocumentation",
										"src": "2842:399:5",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."
									},
									"id": 526,
									"name": "initializer",
									"nameLocation": "3255:11:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3266:2:5"
									},
									"src": "3246:506:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 558,
										"nodeType": "Block",
										"src": "4863:255:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "4881:14:5",
																"subExpression": {
																	"id": 532,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 465,
																	"src": "4882:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 536,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 534,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 462,
																	"src": "4899:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 535,
																	"name": "version",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 529,
																	"src": "4914:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "4899:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4881:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4923:48:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 531,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4873:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:99:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "4873:99:5"
											},
											{
												"expression": {
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 541,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 462,
														"src": "4982:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 542,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4997:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4982:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 544,
												"nodeType": "ExpressionStatement",
												"src": "4982:22:5"
											},
											{
												"expression": {
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 545,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 465,
														"src": "5014:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 546,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5030:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5014:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 548,
												"nodeType": "ExpressionStatement",
												"src": "5014:20:5"
											},
											{
												"id": 549,
												"nodeType": "PlaceholderStatement",
												"src": "5044:1:5"
											},
											{
												"expression": {
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 550,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 465,
														"src": "5055:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 551,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5071:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "5055:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 553,
												"nodeType": "ExpressionStatement",
												"src": "5055:21:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 555,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "5103:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 554,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 470,
														"src": "5091:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
															"typeString": "function (uint8)"
														}
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5091:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 557,
												"nodeType": "EmitStatement",
												"src": "5086:25:5"
											}
										]
									},
									"documentation": {
										"id": 527,
										"nodeType": "StructuredDocumentation",
										"src": "3758:1062:5",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 559,
									"name": "reinitializer",
									"nameLocation": "4834:13:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "4854:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "4848:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 528,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4848:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4847:15:5"
									},
									"src": "4825:293:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 568,
										"nodeType": "Block",
										"src": "5356:97:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 563,
															"name": "_initializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "5374:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67",
															"id": 564,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5389:45:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															},
															"value": "Initializable: contract is not initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															}
														],
														"id": 562,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5366:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5366:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 566,
												"nodeType": "ExpressionStatement",
												"src": "5366:69:5"
											},
											{
												"id": 567,
												"nodeType": "PlaceholderStatement",
												"src": "5445:1:5"
											}
										]
									},
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "5124:199:5",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 569,
									"name": "onlyInitializing",
									"nameLocation": "5337:16:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5353:2:5"
									},
									"src": "5328:125:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 604,
										"nodeType": "Block",
										"src": "5988:231:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "6006:14:5",
															"subExpression": {
																"id": 574,
																"name": "_initializing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 465,
																"src": "6007:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67",
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6022:41:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															},
															"value": "Initializable: contract is initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															}
														],
														"id": 573,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5998:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5998:66:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 578,
												"nodeType": "ExpressionStatement",
												"src": "5998:66:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 579,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 462,
														"src": "6078:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 582,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6099:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 581,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "6099:5:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 580,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6094:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6094:11:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 584,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6106:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6094:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "6078:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 603,
												"nodeType": "IfStatement",
												"src": "6074:139:5",
												"trueBody": {
													"id": 602,
													"nodeType": "Block",
													"src": "6111:102:5",
													"statements": [
														{
															"expression": {
																"id": 592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 586,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 462,
																	"src": "6125:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 589,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6145:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 588,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "6145:5:5",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				}
																			],
																			"id": 587,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "6140:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 590,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6140:11:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint8",
																			"typeString": "type(uint8)"
																		}
																	},
																	"id": 591,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "6152:3:5",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "6140:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "6125:30:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 593,
															"nodeType": "ExpressionStatement",
															"src": "6125:30:5"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 597,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "6191:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					},
																					"typeName": {
																						"id": 596,
																						"name": "uint8",
																						"nodeType": "ElementaryTypeName",
																						"src": "6191:5:5",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					}
																				],
																				"id": 595,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "6186:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 598,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6186:11:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint8",
																				"typeString": "type(uint8)"
																			}
																		},
																		"id": 599,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6198:3:5",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "6186:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 594,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 470,
																	"src": "6174:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 600,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6174:28:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 601,
															"nodeType": "EmitStatement",
															"src": "6169:33:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 570,
										"nodeType": "StructuredDocumentation",
										"src": "5459:475:5",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 605,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "5948:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5968:2:5"
									},
									"returnParameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5988:0:5"
									},
									"scope": 624,
									"src": "5939:280:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 613,
										"nodeType": "Block",
										"src": "6393:36:5",
										"statements": [
											{
												"expression": {
													"id": 611,
													"name": "_initialized",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 462,
													"src": "6410:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 610,
												"id": 612,
												"nodeType": "Return",
												"src": "6403:19:5"
											}
										]
									},
									"documentation": {
										"id": 606,
										"nodeType": "StructuredDocumentation",
										"src": "6225:99:5",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 614,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "6338:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6360:2:5"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "6386:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 608,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6386:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6385:7:5"
									},
									"scope": 624,
									"src": "6329:100:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 622,
										"nodeType": "Block",
										"src": "6601:37:5",
										"statements": [
											{
												"expression": {
													"id": 620,
													"name": "_initializing",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 465,
													"src": "6618:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 619,
												"id": 621,
												"nodeType": "Return",
												"src": "6611:20:5"
											}
										]
									},
									"documentation": {
										"id": 615,
										"nodeType": "StructuredDocumentation",
										"src": "6435:105:5",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "6554:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6569:2:5"
									},
									"returnParameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "6595:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 617,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6595:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6594:6:5"
									},
									"scope": 624,
									"src": "6545:93:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 625,
							"src": "2394:4246:5",
							"usedErrors": []
						}
					],
					"src": "113:6528:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							954
						]
					},
					"id": 955,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 626,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AddressUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 627,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:6",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 954,
							"linearizedBaseContracts": [
								954
							],
							"name": "AddressUpgradeable",
							"nameLocation": "202:18:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 641,
										"nodeType": "Block",
										"src": "1489:254:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 635,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 630,
																"src": "1713:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 636,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1721:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1713:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 637,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1726:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1713:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 638,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1735:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1713:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 634,
												"id": 640,
												"nodeType": "Return",
												"src": "1706:30:6"
											}
										]
									},
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "227:1191:6",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 642,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1432:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1451:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "1443:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1443:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1442:17:6"
									},
									"returnParameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "1483:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 632,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1483:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1482:6:6"
									},
									"scope": 954,
									"src": "1423:320:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 675,
										"nodeType": "Block",
										"src": "2729:241:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 653,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2755:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$954",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$954",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 652,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2747:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 651,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2747:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 654,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2747:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 655,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2761:7:6",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2747:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 656,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 647,
																"src": "2772:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2747:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2780:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 650,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2739:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2739:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 660,
												"nodeType": "ExpressionStatement",
												"src": "2739:73:6"
											},
											{
												"assignments": [
													662,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 662,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2829:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 675,
														"src": "2824:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 661,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2824:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 669,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2872:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 663,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 645,
																"src": "2842:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2852:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2842:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 666,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 665,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 647,
																"src": "2864:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2842:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2842:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2823:52:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 671,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "2893:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 672,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2902:60:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 670,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2885:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2885:78:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 674,
												"nodeType": "ExpressionStatement",
												"src": "2885:78:6"
											}
										]
									},
									"documentation": {
										"id": 643,
										"nodeType": "StructuredDocumentation",
										"src": "1749:904:6",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 676,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2667:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2693:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "2677:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2712:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "2704:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2676:43:6"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2729:0:6"
									},
									"scope": 954,
									"src": "2658:312:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 693,
										"nodeType": "Block",
										"src": "3801:96:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 687,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "3840:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 688,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 681,
															"src": "3848:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3854:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 690,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3857:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 686,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															734,
															778
														],
														"referencedDeclaration": 778,
														"src": "3818:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3818:72:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 685,
												"id": 692,
												"nodeType": "Return",
												"src": "3811:79:6"
											}
										]
									},
									"documentation": {
										"id": 677,
										"nodeType": "StructuredDocumentation",
										"src": "2976:731:6",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 694,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3721:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3742:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "3734:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3734:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3763:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "3750:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 680,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3750:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3733:35:6"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "3787:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 683,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3787:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3786:14:6"
									},
									"scope": 954,
									"src": "3712:185:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 713,
										"nodeType": "Block",
										"src": "4266:76:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 707,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 697,
															"src": "4305:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 708,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 699,
															"src": "4313:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 709,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4319:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 710,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 701,
															"src": "4322:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 706,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															734,
															778
														],
														"referencedDeclaration": 778,
														"src": "4283:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4283:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 705,
												"id": 712,
												"nodeType": "Return",
												"src": "4276:59:6"
											}
										]
									},
									"documentation": {
										"id": 695,
										"nodeType": "StructuredDocumentation",
										"src": "3903:211:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4128:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4158:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "4150:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4150:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4187:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "4174:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 698,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4174:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4215:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "4201:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 700,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4201:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4140:93:6"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "4252:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 703,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4252:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4251:14:6"
									},
									"scope": 954,
									"src": "4119:223:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 733,
										"nodeType": "Block",
										"src": "4817:111:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 727,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 717,
															"src": "4856:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 728,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 719,
															"src": "4864:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 729,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 721,
															"src": "4870:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 730,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4877:43:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 726,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															734,
															778
														],
														"referencedDeclaration": 778,
														"src": "4834:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4834:87:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 725,
												"id": 732,
												"nodeType": "Return",
												"src": "4827:94:6"
											}
										]
									},
									"documentation": {
										"id": 715,
										"nodeType": "StructuredDocumentation",
										"src": "4348:351:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 734,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4713:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4743:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "4735:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4735:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4764:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "4751:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 718,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4751:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4778:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "4770:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4770:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4734:50:6"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "4803:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 723,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4803:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4802:14:6"
									},
									"scope": 954,
									"src": "4704:224:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 777,
										"nodeType": "Block",
										"src": "5355:267:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 755,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 751,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5381:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$954",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$954",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 750,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5373:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 749,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5373:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 752,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5373:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 753,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5387:7:6",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5373:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 754,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 741,
																"src": "5398:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5373:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5405:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 748,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5365:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5365:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 758,
												"nodeType": "ExpressionStatement",
												"src": "5365:81:6"
											},
											{
												"assignments": [
													760,
													762
												],
												"declarations": [
													{
														"constant": false,
														"id": 760,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5462:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "5457:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 759,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5457:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 762,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5484:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "5471:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 761,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5471:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 769,
												"initialValue": {
													"arguments": [
														{
															"id": 767,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "5524:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 763,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 737,
																"src": "5498:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 764,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5505:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5498:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 766,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 765,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 741,
																"src": "5517:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5498:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5498:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5456:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 771,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "5573:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 772,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 760,
															"src": "5581:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 773,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "5590:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 774,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 743,
															"src": "5602:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 770,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "5546:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5546:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 747,
												"id": 776,
												"nodeType": "Return",
												"src": "5539:76:6"
											}
										]
									},
									"documentation": {
										"id": 735,
										"nodeType": "StructuredDocumentation",
										"src": "4934:237:6",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5185:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5224:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "5216:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5216:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5253:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "5240:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 738,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5240:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5275:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "5267:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5267:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5304:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "5290:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 742,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5290:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5206:116:6"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "5341:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 745,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5341:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5340:14:6"
									},
									"scope": 954,
									"src": "5176:446:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 794,
										"nodeType": "Block",
										"src": "5899:97:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 789,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "5935:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 790,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "5943:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 791,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5949:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 788,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															795,
															824
														],
														"referencedDeclaration": 824,
														"src": "5916:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5916:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 787,
												"id": 793,
												"nodeType": "Return",
												"src": "5909:80:6"
											}
										]
									},
									"documentation": {
										"id": 779,
										"nodeType": "StructuredDocumentation",
										"src": "5628:166:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 795,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5808:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5835:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "5827:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 780,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5827:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5856:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "5843:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 782,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5843:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5826:35:6"
									},
									"returnParameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "5885:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 785,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5885:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5884:14:6"
									},
									"scope": 954,
									"src": "5799:197:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 823,
										"nodeType": "Block",
										"src": "6338:168:6",
										"statements": [
											{
												"assignments": [
													808,
													810
												],
												"declarations": [
													{
														"constant": false,
														"id": 808,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6354:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 823,
														"src": "6349:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 807,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6349:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 810,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6376:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 823,
														"src": "6363:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 809,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6363:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 815,
												"initialValue": {
													"arguments": [
														{
															"id": 813,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "6408:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 811,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "6390:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 812,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6397:10:6",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6390:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6348:65:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 817,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "6457:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 818,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "6465:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 819,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "6474:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 820,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "6486:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 816,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "6430:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6430:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 806,
												"id": 822,
												"nodeType": "Return",
												"src": "6423:76:6"
											}
										]
									},
									"documentation": {
										"id": 796,
										"nodeType": "StructuredDocumentation",
										"src": "6002:173:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 824,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6189:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6225:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "6217:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 797,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6217:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6254:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "6241:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 799,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6241:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6282:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "6268:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 801,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6268:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6207:93:6"
									},
									"returnParameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "6324:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 804,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6324:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6323:14:6"
									},
									"scope": 954,
									"src": "6180:326:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 840,
										"nodeType": "Block",
										"src": "6782:101:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 835,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 827,
															"src": "6820:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 836,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "6828:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 837,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6834:41:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 834,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															841,
															870
														],
														"referencedDeclaration": 870,
														"src": "6799:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6799:77:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 833,
												"id": 839,
												"nodeType": "Return",
												"src": "6792:84:6"
											}
										]
									},
									"documentation": {
										"id": 825,
										"nodeType": "StructuredDocumentation",
										"src": "6512:168:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 841,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6694:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6723:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "6715:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6715:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6744:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "6731:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 828,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6731:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6714:35:6"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "6768:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 831,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6768:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6767:14:6"
									},
									"scope": 954,
									"src": "6685:198:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 869,
										"nodeType": "Block",
										"src": "7224:170:6",
										"statements": [
											{
												"assignments": [
													854,
													856
												],
												"declarations": [
													{
														"constant": false,
														"id": 854,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7240:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 869,
														"src": "7235:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 853,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7235:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 856,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7262:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 869,
														"src": "7249:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 855,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7249:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 861,
												"initialValue": {
													"arguments": [
														{
															"id": 859,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 846,
															"src": "7296:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 857,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 844,
															"src": "7276:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 858,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7283:12:6",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7276:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7276:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7234:67:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 863,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 844,
															"src": "7345:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 864,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 854,
															"src": "7353:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 865,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "7362:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 866,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "7374:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 862,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "7318:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7318:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 852,
												"id": 868,
												"nodeType": "Return",
												"src": "7311:76:6"
											}
										]
									},
									"documentation": {
										"id": 842,
										"nodeType": "StructuredDocumentation",
										"src": "6889:175:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7078:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7116:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "7108:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 843,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7145:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "7132:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 845,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7132:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7173:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "7159:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 847,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7159:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7098:93:6"
									},
									"returnParameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "7210:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 850,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7210:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7209:14:6"
									},
									"scope": 954,
									"src": "7069:325:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 908,
										"nodeType": "Block",
										"src": "7876:434:6",
										"statements": [
											{
												"condition": {
													"id": 884,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 875,
													"src": "7890:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 906,
													"nodeType": "Block",
													"src": "8246:58:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 902,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 877,
																		"src": "8268:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 903,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 879,
																		"src": "8280:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 901,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 953,
																	"src": "8260:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 904,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8260:33:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 905,
															"nodeType": "ExpressionStatement",
															"src": "8260:33:6"
														}
													]
												},
												"id": 907,
												"nodeType": "IfStatement",
												"src": "7886:418:6",
												"trueBody": {
													"id": 900,
													"nodeType": "Block",
													"src": "7899:341:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 888,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 885,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 877,
																		"src": "7917:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 886,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7928:6:6",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7917:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 887,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7938:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7917:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 897,
															"nodeType": "IfStatement",
															"src": "7913:286:6",
															"trueBody": {
																"id": 896,
																"nodeType": "Block",
																"src": "7941:258:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 891,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 873,
																							"src": "8143:6:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 890,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 642,
																						"src": "8132:10:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 892,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8132:18:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 893,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8152:31:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 889,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8124:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 894,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8124:60:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 895,
																		"nodeType": "ExpressionStatement",
																		"src": "8124:60:6"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 898,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 877,
																"src": "8219:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 883,
															"id": 899,
															"nodeType": "Return",
															"src": "8212:17:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 871,
										"nodeType": "StructuredDocumentation",
										"src": "7400:277:6",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 909,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7691:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7735:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "7727:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7727:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7756:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "7751:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 874,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7751:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7786:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "7773:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 876,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7773:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7820:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "7806:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 878,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7806:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7717:121:6"
									},
									"returnParameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "7862:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 881,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7862:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7861:14:6"
									},
									"scope": 954,
									"src": "7682:628:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 932,
										"nodeType": "Block",
										"src": "8691:135:6",
										"statements": [
											{
												"condition": {
													"id": 921,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 912,
													"src": "8705:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 930,
													"nodeType": "Block",
													"src": "8762:58:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 926,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 914,
																		"src": "8784:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 927,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 916,
																		"src": "8796:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 925,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 953,
																	"src": "8776:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 928,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8776:33:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 929,
															"nodeType": "ExpressionStatement",
															"src": "8776:33:6"
														}
													]
												},
												"id": 931,
												"nodeType": "IfStatement",
												"src": "8701:119:6",
												"trueBody": {
													"id": 924,
													"nodeType": "Block",
													"src": "8714:42:6",
													"statements": [
														{
															"expression": {
																"id": 922,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 914,
																"src": "8735:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 920,
															"id": 923,
															"nodeType": "Return",
															"src": "8728:17:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 910,
										"nodeType": "StructuredDocumentation",
										"src": "8316:210:6",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 933,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8540:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8571:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "8566:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 911,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8566:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8601:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "8588:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 913,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8588:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8635:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "8621:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 915,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8621:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8556:97:6"
									},
									"returnParameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "8677:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 918,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8677:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8676:14:6"
									},
									"scope": 954,
									"src": "8531:295:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 952,
										"nodeType": "Block",
										"src": "8915:457:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 940,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "8991:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 941,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9002:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8991:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 942,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9011:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8991:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 950,
													"nodeType": "Block",
													"src": "9321:45:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 947,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 937,
																		"src": "9342:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 946,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9335:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 948,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9335:20:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 949,
															"nodeType": "ExpressionStatement",
															"src": "9335:20:6"
														}
													]
												},
												"id": 951,
												"nodeType": "IfStatement",
												"src": "8987:379:6",
												"trueBody": {
													"id": 945,
													"nodeType": "Block",
													"src": "9014:301:6",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "9172:133:6",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9190:40:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9219:10:6"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "9213:5:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9213:17:6"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "9194:15:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9258:2:6",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9262:10:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9254:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9254:19:6"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9275:15:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9247:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9247:44:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9247:44:6"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 935,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9219:10:6",
																	"valueSize": 1
																},
																{
																	"declaration": 935,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9262:10:6",
																	"valueSize": 1
																}
															],
															"id": 944,
															"nodeType": "InlineAssembly",
															"src": "9163:142:6"
														}
													]
												}
											}
										]
									},
									"id": 953,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8841:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8862:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "8849:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 934,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8849:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8888:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "8874:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 936,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8874:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8848:53:6"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8915:0:6"
									},
									"scope": 954,
									"src": "8832:540:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 955,
							"src": "194:9180:6",
							"usedErrors": []
						}
					],
					"src": "101:9274:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							954
						],
						"ContextUpgradeable": [
							996
						],
						"Initializable": [
							624
						]
					},
					"id": 997,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 956,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 957,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 997,
							"sourceUnit": 625,
							"src": "110:42:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 959,
										"name": "Initializable",
										"nameLocations": [
											"691:13:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 624,
										"src": "691:13:7"
									},
									"id": 960,
									"nodeType": "InheritanceSpecifier",
									"src": "691:13:7"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 958,
								"nodeType": "StructuredDocumentation",
								"src": "154:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 996,
							"linearizedBaseContracts": [
								996,
								624
							],
							"name": "ContextUpgradeable",
							"nameLocation": "669:18:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 965,
										"nodeType": "Block",
										"src": "763:7:7",
										"statements": []
									},
									"id": 966,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 963,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 962,
												"name": "onlyInitializing",
												"nameLocations": [
													"746:16:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 569,
												"src": "746:16:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "746:16:7"
										}
									],
									"name": "__Context_init",
									"nameLocation": "720:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "734:2:7"
									},
									"returnParameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "763:0:7"
									},
									"scope": 996,
									"src": "711:59:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 971,
										"nodeType": "Block",
										"src": "838:7:7",
										"statements": []
									},
									"id": 972,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 969,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 968,
												"name": "onlyInitializing",
												"nameLocations": [
													"821:16:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 569,
												"src": "821:16:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "821:16:7"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "785:24:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "809:2:7"
									},
									"returnParameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "838:0:7"
									},
									"scope": 996,
									"src": "776:69:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 980,
										"nodeType": "Block",
										"src": "912:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 977,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "929:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "933:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "929:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 976,
												"id": 979,
												"nodeType": "Return",
												"src": "922:17:7"
											}
										]
									},
									"id": 981,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "859:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "869:2:7"
									},
									"returnParameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "903:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 974,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "903:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "902:9:7"
									},
									"scope": 996,
									"src": "850:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 989,
										"nodeType": "Block",
										"src": "1019:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 986,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1036:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1040:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1036:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 985,
												"id": 988,
												"nodeType": "Return",
												"src": "1029:15:7"
											}
										]
									},
									"id": 990,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "961:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "969:2:7"
									},
									"returnParameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "1003:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 983,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1003:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1002:16:7"
									},
									"scope": 996,
									"src": "952:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 991,
										"nodeType": "StructuredDocumentation",
										"src": "1057:254:7",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 995,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "1336:5:7",
									"nodeType": "VariableDeclaration",
									"scope": 996,
									"src": "1316:25:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 992,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1316:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 994,
										"length": {
											"hexValue": "3530",
											"id": 993,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1324:2:7",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1316:11:7",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 997,
							"src": "651:693:7",
							"usedErrors": []
						}
					],
					"src": "86:1259:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1074
						]
					},
					"id": 1075,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 998,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 999,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:8",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1074,
							"linearizedBaseContracts": [
								1074
							],
							"name": "IERC20",
							"nameLocation": "212:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1000,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:8",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1008,
									"name": "Transfer",
									"nameLocation": "394:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "403:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1001,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1004,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "425:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1003,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1006,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "445:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:8"
									},
									"src": "388:72:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1009,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:8",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1017,
									"name": "Approval",
									"nameLocation": "625:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1011,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "634:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1010,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1013,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "657:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1012,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1015,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "682:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1014,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:8"
									},
									"src": "619:78:8"
								},
								{
									"documentation": {
										"id": 1018,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:8",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1023,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:8"
									},
									"returnParameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "820:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:8"
									},
									"scope": 1074,
									"src": "774:55:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1024,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:8",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1031,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "931:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1025,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:8"
									},
									"returnParameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "971:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:8"
									},
									"scope": 1074,
									"src": "912:68:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1032,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:8",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1041,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "1211:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1033,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "1223:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:8"
									},
									"returnParameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "1257:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1038,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:8"
									},
									"scope": 1074,
									"src": "1193:70:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1042,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:8",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1051,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "1557:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1043,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "1572:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1045,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:8"
									},
									"returnParameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "1612:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:8"
									},
									"scope": 1074,
									"src": "1538:83:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:8",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1061,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "2291:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1053,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "2308:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:8"
									},
									"returnParameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "2342:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1058,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:8"
									},
									"scope": 1074,
									"src": "2274:74:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1062,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:8",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1073,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "2677:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1063,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "2699:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "2719:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1067,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:8"
									},
									"returnParameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "2758:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1070,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:8"
									},
									"scope": 1074,
									"src": "2646:118:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1075,
							"src": "202:2564:8",
							"usedErrors": []
						}
					],
					"src": "106:2661:8"
				},
				"id": 8
			},
			"Tokeny Project/Compliance/modular/IModularCompliance.sol": {
				"ast": {
					"absolutePath": "Tokeny Project/Compliance/modular/IModularCompliance.sol",
					"exportedSymbols": {},
					"id": 1076,
					"nodeType": "SourceUnit",
					"nodes": [],
					"src": "31:0:9"
				},
				"id": 9
			},
			"Tokeny Project/Compliance/modular/MCStorage.sol": {
				"ast": {
					"absolutePath": "Tokeny Project/Compliance/modular/MCStorage.sol",
					"exportedSymbols": {
						"MCStorage": [
							1094
						]
					},
					"id": 1095,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1077,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MCStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1094,
							"linearizedBaseContracts": [
								1094
							],
							"name": "MCStorage",
							"nameLocation": "71:9:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 1078,
										"nodeType": "StructuredDocumentation",
										"src": "88:43:10",
										"text": "token linked to the compliance contract"
									},
									"id": 1080,
									"mutability": "mutable",
									"name": "_tokenBound",
									"nameLocation": "154:11:10",
									"nodeType": "VariableDeclaration",
									"scope": 1094,
									"src": "137:28:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1079,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "137:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1081,
										"nodeType": "StructuredDocumentation",
										"src": "174:44:10",
										"text": "Array of modules bound to the compliance"
									},
									"id": 1084,
									"mutability": "mutable",
									"name": "_modules",
									"nameLocation": "243:8:10",
									"nodeType": "VariableDeclaration",
									"scope": 1094,
									"src": "224:27:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 1082,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "224:7:10",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 1083,
										"nodeType": "ArrayTypeName",
										"src": "224:9:10",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1085,
										"nodeType": "StructuredDocumentation",
										"src": "260:36:10",
										"text": "Mapping of module binding status"
									},
									"id": 1089,
									"mutability": "mutable",
									"name": "_moduleBound",
									"nameLocation": "336:12:10",
									"nodeType": "VariableDeclaration",
									"scope": 1094,
									"src": "302:46:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1088,
										"keyType": {
											"id": 1086,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "310:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "302:24:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 1087,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "321:4:10",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1093,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "381:5:10",
									"nodeType": "VariableDeclaration",
									"scope": 1094,
									"src": "361:25:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 1090,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "361:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1092,
										"length": {
											"hexValue": "3439",
											"id": 1091,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "369:2:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "361:11:10",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 1095,
							"src": "62:328:10",
							"usedErrors": []
						}
					],
					"src": "35:355:10"
				},
				"id": 10
			},
			"Tokeny Project/Compliance/modular/ModularCompliance.sol": {
				"ast": {
					"absolutePath": "Tokeny Project/Compliance/modular/ModularCompliance.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							954
						],
						"ContextUpgradeable": [
							996
						],
						"IClaimIssuer": [
							59
						],
						"IClaimTopicsRegistry": [
							1884
						],
						"IERC20": [
							1074
						],
						"IERC734": [
							206
						],
						"IERC735": [
							314
						],
						"IIdentity": [
							323
						],
						"IIdentityRegistry": [
							2059
						],
						"IIdentityRegistryStorage": [
							2175
						],
						"IModularCompliance": [
							1852
						],
						"IModule": [
							1731
						],
						"IToken": [
							2591
						],
						"ITrustedIssuersRegistry": [
							2276
						],
						"Initializable": [
							624
						],
						"MCStorage": [
							1094
						],
						"ModularCompliance": [
							1667
						],
						"OwnableUpgradeable": [
							455
						]
					},
					"id": 1668,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1096,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 1097,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1668,
							"sourceUnit": 456,
							"src": "60:75:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/TokenySolutions/T-REX/blob/main/contracts/token/IToken.sol",
							"file": "https://github.com/TokenySolutions/T-REX/blob/main/contracts/token/IToken.sol",
							"id": 1098,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1668,
							"sourceUnit": 2592,
							"src": "137:87:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Tokeny Project/Compliance/modular/IModularCompliance.sol",
							"file": "./IModularCompliance.sol",
							"id": 1099,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1668,
							"sourceUnit": 1076,
							"src": "226:34:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Tokeny Project/Compliance/modular/MCStorage.sol",
							"file": "./MCStorage.sol",
							"id": 1100,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1668,
							"sourceUnit": 1095,
							"src": "262:25:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Tokeny Project/Compliance/modular/Modules/IModule.sol",
							"file": "./Modules/IModule.sol",
							"id": 1101,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1668,
							"sourceUnit": 1732,
							"src": "289:31:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1102,
										"name": "IModularCompliance",
										"nameLocations": [
											"356:18:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1852,
										"src": "356:18:11"
									},
									"id": 1103,
									"nodeType": "InheritanceSpecifier",
									"src": "356:18:11"
								},
								{
									"baseName": {
										"id": 1104,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"376:18:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 455,
										"src": "376:18:11"
									},
									"id": 1105,
									"nodeType": "InheritanceSpecifier",
									"src": "376:18:11"
								},
								{
									"baseName": {
										"id": 1106,
										"name": "MCStorage",
										"nameLocations": [
											"396:9:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1094,
										"src": "396:9:11"
									},
									"id": 1107,
									"nodeType": "InheritanceSpecifier",
									"src": "396:9:11"
								}
							],
							"canonicalName": "ModularCompliance",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1667,
							"linearizedBaseContracts": [
								1667,
								1094,
								455,
								996,
								624,
								1852
							],
							"name": "ModularCompliance",
							"nameLocation": "335:17:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1118,
										"nodeType": "Block",
										"src": "450:137:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1110,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "469:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1111,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "473:6:11",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "469:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1112,
																"name": "_tokenBound",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1080,
																"src": "483:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "469:25:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6572726f72203a20746869732061646472657373206973206e6f74206120746f6b656e20626f756e6420746f2074686520636f6d706c69616e636520636f6e7472616374",
															"id": 1114,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "496:70:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5a68ed2bc0002f6d7777b41be5e0fbfbfe715cdad34adee170beb7e99ea964f1",
																"typeString": "literal_string \"error : this address is not a token bound to the compliance contract\""
															},
															"value": "error : this address is not a token bound to the compliance contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5a68ed2bc0002f6d7777b41be5e0fbfbfe715cdad34adee170beb7e99ea964f1",
																"typeString": "literal_string \"error : this address is not a token bound to the compliance contract\""
															}
														],
														"id": 1109,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "461:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "461:106:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1116,
												"nodeType": "ExpressionStatement",
												"src": "461:106:11"
											},
											{
												"id": 1117,
												"nodeType": "PlaceholderStatement",
												"src": "578:1:11"
											}
										]
									},
									"id": 1119,
									"name": "onlyToken",
									"nameLocation": "438:9:11",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:11"
									},
									"src": "429:158:11",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1127,
										"nodeType": "Block",
										"src": "632:35:11",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1124,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 350,
														"src": "643:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "643:16:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1126,
												"nodeType": "ExpressionStatement",
												"src": "643:16:11"
											}
										]
									},
									"functionSelector": "e1c7392a",
									"id": 1128,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1122,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1121,
												"name": "initializer",
												"nameLocations": [
													"620:11:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 526,
												"src": "620:11:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "620:11:11"
										}
									],
									"name": "init",
									"nameLocation": "604:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "608:2:11"
									},
									"returnParameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "632:0:11"
									},
									"scope": 1667,
									"src": "595:72:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1766
									],
									"body": {
										"id": 1174,
										"nodeType": "Block",
										"src": "728:374:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1139,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1135,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "747:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "747:7:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 1137,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "758:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "762:6:11",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "758:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "747:21:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 1145,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1140,
																				"name": "_tokenBound",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1080,
																				"src": "773:11:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"arguments": [
																					{
																						"hexValue": "30",
																						"id": 1143,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "796:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						}
																					],
																					"id": 1142,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "788:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1141,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "788:7:11",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1144,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "788:10:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "773:25:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 1149,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1146,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "802:3:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1147,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "806:6:11",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "802:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 1148,
																				"name": "_token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1130,
																				"src": "816:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "802:20:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "773:49:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1151,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "772:51:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "747:76:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6f6e6c79206f776e6572206f7220746f6b656e2063616e2063616c6c",
															"id": 1153,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "834:30:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_85ebbeb661b177a20113638bf35f6faae6d63a8b8162625e2d2ab0a760e9b8cf",
																"typeString": "literal_string \"only owner or token can call\""
															},
															"value": "only owner or token can call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_85ebbeb661b177a20113638bf35f6faae6d63a8b8162625e2d2ab0a760e9b8cf",
																"typeString": "literal_string \"only owner or token can call\""
															}
														],
														"id": 1134,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "739:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "739:126:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1155,
												"nodeType": "ExpressionStatement",
												"src": "739:126:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1157,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1130,
																"src": "884:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "902:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "894:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1158,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "894:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1161,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "894:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "884:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
															"id": 1163,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "906:33:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															},
															"value": "invalid argument - zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															}
														],
														"id": 1156,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "876:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "876:64:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1165,
												"nodeType": "ExpressionStatement",
												"src": "876:64:11"
											},
											{
												"expression": {
													"id": 1168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1166,
														"name": "_tokenBound",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "951:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1167,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1130,
														"src": "965:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "951:20:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1169,
												"nodeType": "ExpressionStatement",
												"src": "951:20:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1171,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1130,
															"src": "1087:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1170,
														"name": "TokenBound",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1745,
														"src": "1076:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1076:18:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1173,
												"nodeType": "EmitStatement",
												"src": "1071:23:11"
											}
										]
									},
									"functionSelector": "3ff5aa02",
									"id": 1175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "bindToken",
									"nameLocation": "684:9:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1132,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "719:8:11"
									},
									"parameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "702:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "694:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "693:16:11"
									},
									"returnParameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "728:0:11"
									},
									"scope": 1667,
									"src": "675:427:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1772
									],
									"body": {
										"id": 1219,
										"nodeType": "Block",
										"src": "1165:314:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1182,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "1184:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1183,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1184:7:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 1184,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1195:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1185,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1199:6:11",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1195:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1184:21:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1190,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1187,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1209:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1188,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1213:6:11",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1209:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1189,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1177,
																	"src": "1223:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1209:20:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1184:45:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6f6e6c79206f776e6572206f7220746f6b656e2063616e2063616c6c",
															"id": 1192,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1232:30:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_85ebbeb661b177a20113638bf35f6faae6d63a8b8162625e2d2ab0a760e9b8cf",
																"typeString": "literal_string \"only owner or token can call\""
															},
															"value": "only owner or token can call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_85ebbeb661b177a20113638bf35f6faae6d63a8b8162625e2d2ab0a760e9b8cf",
																"typeString": "literal_string \"only owner or token can call\""
															}
														],
														"id": 1181,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1176:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1176:87:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1194,
												"nodeType": "ExpressionStatement",
												"src": "1176:87:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1198,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1196,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1177,
																"src": "1282:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1197,
																"name": "_tokenBound",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1080,
																"src": "1292:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1282:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468697320746f6b656e206973206e6f7420626f756e64",
															"id": 1199,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1305:25:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bc637b520028211bbc531d42bfcff19a7cfbd2d183c129d537e63c33437371db",
																"typeString": "literal_string \"This token is not bound\""
															},
															"value": "This token is not bound"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bc637b520028211bbc531d42bfcff19a7cfbd2d183c129d537e63c33437371db",
																"typeString": "literal_string \"This token is not bound\""
															}
														],
														"id": 1195,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1274:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1274:57:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1201,
												"nodeType": "ExpressionStatement",
												"src": "1274:57:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1203,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1177,
																"src": "1350:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1368:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1360:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1204,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1360:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1207,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1360:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1350:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
															"id": 1209,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1372:33:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															},
															"value": "invalid argument - zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															}
														],
														"id": 1202,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1342:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1342:64:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1211,
												"nodeType": "ExpressionStatement",
												"src": "1342:64:11"
											},
											{
												"expression": {
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "1417:18:11",
													"subExpression": {
														"id": 1212,
														"name": "_tokenBound",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "1424:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1214,
												"nodeType": "ExpressionStatement",
												"src": "1417:18:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1216,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "1464:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1215,
														"name": "TokenUnbound",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1750,
														"src": "1451:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1451:20:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1218,
												"nodeType": "EmitStatement",
												"src": "1446:25:11"
											}
										]
									},
									"functionSelector": "40db3b50",
									"id": 1220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unbindToken",
									"nameLocation": "1119:11:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1179,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1156:8:11"
									},
									"parameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "1139:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "1131:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1131:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1130:16:11"
									},
									"returnParameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1165:0:11"
									},
									"scope": 1667,
									"src": "1110:369:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1778
									],
									"body": {
										"id": 1280,
										"nodeType": "Block",
										"src": "1551:391:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1229,
																"name": "_module",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1222,
																"src": "1570:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1232,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1589:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1581:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1230,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1581:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1233,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1581:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1570:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
															"id": 1235,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1593:33:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															},
															"value": "invalid argument - zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															}
														],
														"id": 1228,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1562:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1562:65:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1237,
												"nodeType": "ExpressionStatement",
												"src": "1562:65:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1646:22:11",
															"subExpression": {
																"baseExpression": {
																	"id": 1239,
																	"name": "_moduleBound",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1089,
																	"src": "1647:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1241,
																"indexExpression": {
																	"id": 1240,
																	"name": "_module",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1222,
																	"src": "1660:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1647:21:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6d6f64756c6520616c726561647920626f756e64",
															"id": 1243,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1670:22:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_49f5e4419f8a1741d107c52289d66583a4bd31e41918484b4780f719774ab10e",
																"typeString": "literal_string \"module already bound\""
															},
															"value": "module already bound"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_49f5e4419f8a1741d107c52289d66583a4bd31e41918484b4780f719774ab10e",
																"typeString": "literal_string \"module already bound\""
															}
														],
														"id": 1238,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1638:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1638:55:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1245,
												"nodeType": "ExpressionStatement",
												"src": "1638:55:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1247,
																	"name": "_modules",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1084,
																	"src": "1712:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 1248,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1721:6:11",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1712:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3234",
																"id": 1249,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1731:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_24_by_1",
																	"typeString": "int_const 24"
																},
																"value": "24"
															},
															"src": "1712:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "63616e6e6f7420616464206d6f7265207468616e203235206d6f64756c6573",
															"id": 1251,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1735:33:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c1dee6581c6aebc50da002deed9e99d1ce1dab6a498f29e5915ed31feaae5830",
																"typeString": "literal_string \"cannot add more than 25 modules\""
															},
															"value": "cannot add more than 25 modules"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c1dee6581c6aebc50da002deed9e99d1ce1dab6a498f29e5915ed31feaae5830",
																"typeString": "literal_string \"cannot add more than 25 modules\""
															}
														],
														"id": 1246,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1704:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1704:65:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1253,
												"nodeType": "ExpressionStatement",
												"src": "1704:65:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1260,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1820:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ModularCompliance_$1667",
																		"typeString": "contract ModularCompliance"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ModularCompliance_$1667",
																		"typeString": "contract ModularCompliance"
																	}
																],
																"id": 1259,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1812:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1258,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1812:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1812:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1255,
																	"name": "_module",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1222,
																	"src": "1788:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1254,
																"name": "IModule",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1731,
																"src": "1780:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IModule_$1731_$",
																	"typeString": "type(contract IModule)"
																}
															},
															"id": 1256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1780:16:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IModule_$1731",
																"typeString": "contract IModule"
															}
														},
														"id": 1257,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1797:14:11",
														"memberName": "bindCompliance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1682,
														"src": "1780:31:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address) external"
														}
													},
													"id": 1262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1780:46:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1263,
												"nodeType": "ExpressionStatement",
												"src": "1780:46:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1267,
															"name": "_module",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1222,
															"src": "1851:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1264,
															"name": "_modules",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1084,
															"src": "1837:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1266,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1846:4:11",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "1837:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 1268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1837:22:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1269,
												"nodeType": "ExpressionStatement",
												"src": "1837:22:11"
											},
											{
												"expression": {
													"id": 1274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1270,
															"name": "_moduleBound",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "1870:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1272,
														"indexExpression": {
															"id": 1271,
															"name": "_module",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1222,
															"src": "1883:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1870:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1273,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1894:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1870:28:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1275,
												"nodeType": "ExpressionStatement",
												"src": "1870:28:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1277,
															"name": "_module",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1222,
															"src": "1926:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1276,
														"name": "ModuleAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1755,
														"src": "1914:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1914:20:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1279,
												"nodeType": "EmitStatement",
												"src": "1909:25:11"
											}
										]
									},
									"functionSelector": "1ed86f19",
									"id": 1281,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1226,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1225,
												"name": "onlyOwner",
												"nameLocations": [
													"1541:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 369,
												"src": "1541:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1541:9:11"
										}
									],
									"name": "addModule",
									"nameLocation": "1496:9:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1224,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1532:8:11"
									},
									"parameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "_module",
												"nameLocation": "1514:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "1506:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1506:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1505:17:11"
									},
									"returnParameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1551:0:11"
									},
									"scope": 1667,
									"src": "1487:455:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1784
									],
									"body": {
										"id": 1366,
										"nodeType": "Block",
										"src": "2017:576:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1290,
																"name": "_module",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1283,
																"src": "2036:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2055:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2047:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1291,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2047:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2047:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2036:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
															"id": 1296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2059:33:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															},
															"value": "invalid argument - zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															}
														],
														"id": 1289,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2028:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2028:65:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1298,
												"nodeType": "ExpressionStatement",
												"src": "2028:65:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1300,
																"name": "_moduleBound",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1089,
																"src": "2112:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1302,
															"indexExpression": {
																"id": 1301,
																"name": "_module",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1283,
																"src": "2125:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2112:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6d6f64756c65206e6f7420626f756e64",
															"id": 1303,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2135:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3f029d9821dc476c0705c03fff9255d333d5235fef87cba00cede4d1409cd713",
																"typeString": "literal_string \"module not bound\""
															},
															"value": "module not bound"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3f029d9821dc476c0705c03fff9255d333d5235fef87cba00cede4d1409cd713",
																"typeString": "literal_string \"module not bound\""
															}
														],
														"id": 1299,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2104:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2104:50:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1305,
												"nodeType": "ExpressionStatement",
												"src": "2104:50:11"
											},
											{
												"assignments": [
													1307
												],
												"declarations": [
													{
														"constant": false,
														"id": 1307,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "2173:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 1366,
														"src": "2165:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1306,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2165:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1310,
												"initialValue": {
													"expression": {
														"id": 1308,
														"name": "_modules",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1084,
														"src": "2182:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 1309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2191:6:11",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "2182:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2165:32:11"
											},
											{
												"body": {
													"id": 1364,
													"nodeType": "Block",
													"src": "2245:341:11",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1325,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1321,
																		"name": "_modules",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1084,
																		"src": "2264:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1323,
																	"indexExpression": {
																		"id": 1322,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1312,
																		"src": "2273:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2264:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1324,
																	"name": "_module",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1283,
																	"src": "2279:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2264:22:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1363,
															"nodeType": "IfStatement",
															"src": "2260:315:11",
															"trueBody": {
																"id": 1362,
																"nodeType": "Block",
																"src": "2288:287:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1332,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "2349:4:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_ModularCompliance_$1667",
																								"typeString": "contract ModularCompliance"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_ModularCompliance_$1667",
																								"typeString": "contract ModularCompliance"
																							}
																						],
																						"id": 1331,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "2341:7:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1330,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "2341:7:11",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1333,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2341:13:11",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 1327,
																							"name": "_module",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1283,
																							"src": "2315:7:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1326,
																						"name": "IModule",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1731,
																						"src": "2307:7:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IModule_$1731_$",
																							"typeString": "type(contract IModule)"
																						}
																					},
																					"id": 1328,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2307:16:11",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IModule_$1731",
																						"typeString": "contract IModule"
																					}
																				},
																				"id": 1329,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2324:16:11",
																				"memberName": "unbindCompliance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1687,
																				"src": "2307:33:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
																					"typeString": "function (address) external"
																				}
																			},
																			"id": 1334,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2307:48:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1335,
																		"nodeType": "ExpressionStatement",
																		"src": "2307:48:11"
																	},
																	{
																		"expression": {
																			"id": 1344,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1336,
																					"name": "_modules",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1084,
																					"src": "2374:8:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1338,
																				"indexExpression": {
																					"id": 1337,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1312,
																					"src": "2383:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "2374:11:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 1339,
																					"name": "_modules",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1084,
																					"src": "2388:8:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1343,
																				"indexExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1342,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1340,
																						"name": "length",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1307,
																						"src": "2397:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 1341,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "2406:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "2397:10:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2388:20:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "2374:34:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1345,
																		"nodeType": "ExpressionStatement",
																		"src": "2374:34:11"
																	},
																	{
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 1346,
																					"name": "_modules",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1084,
																					"src": "2427:8:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1348,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2436:3:11",
																				"memberName": "pop",
																				"nodeType": "MemberAccess",
																				"src": "2427:12:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
																					"typeString": "function (address[] storage pointer)"
																				}
																			},
																			"id": 1349,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2427:14:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1350,
																		"nodeType": "ExpressionStatement",
																		"src": "2427:14:11"
																	},
																	{
																		"expression": {
																			"id": 1355,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1351,
																					"name": "_moduleBound",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1089,
																					"src": "2460:12:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																						"typeString": "mapping(address => bool)"
																					}
																				},
																				"id": 1353,
																				"indexExpression": {
																					"id": 1352,
																					"name": "_module",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1283,
																					"src": "2473:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "2460:21:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "66616c7365",
																				"id": 1354,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2484:5:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			},
																			"src": "2460:29:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1356,
																		"nodeType": "ExpressionStatement",
																		"src": "2460:29:11"
																	},
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1358,
																					"name": "_module",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1283,
																					"src": "2527:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1357,
																				"name": "ModuleRemoved",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1760,
																				"src": "2513:13:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
																					"typeString": "function (address)"
																				}
																			},
																			"id": 1359,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2513:22:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1360,
																		"nodeType": "EmitStatement",
																		"src": "2508:27:11"
																	},
																	{
																		"id": 1361,
																		"nodeType": "Break",
																		"src": "2554:5:11"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1315,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1312,
														"src": "2228:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1316,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1307,
														"src": "2232:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2228:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1365,
												"initializationExpression": {
													"assignments": [
														1312
													],
													"declarations": [
														{
															"constant": false,
															"id": 1312,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2221:1:11",
															"nodeType": "VariableDeclaration",
															"scope": 1365,
															"src": "2213:9:11",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1311,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2213:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1314,
													"initialValue": {
														"hexValue": "30",
														"id": 1313,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2225:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2213:13:11"
												},
												"loopExpression": {
													"expression": {
														"id": 1319,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2240:3:11",
														"subExpression": {
															"id": 1318,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1312,
															"src": "2240:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1320,
													"nodeType": "ExpressionStatement",
													"src": "2240:3:11"
												},
												"nodeType": "ForStatement",
												"src": "2208:378:11"
											}
										]
									},
									"functionSelector": "a0632461",
									"id": 1367,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1287,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1286,
												"name": "onlyOwner",
												"nameLocations": [
													"2007:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 369,
												"src": "2007:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2007:9:11"
										}
									],
									"name": "removeModule",
									"nameLocation": "1959:12:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1285,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1998:8:11"
									},
									"parameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "_module",
												"nameLocation": "1980:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "1972:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1972:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1971:17:11"
									},
									"returnParameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2017:0:11"
									},
									"scope": 1667,
									"src": "1950:643:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1802
									],
									"body": {
										"id": 1431,
										"nodeType": "Block",
										"src": "2694:388:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1385,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1380,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1369,
																	"src": "2727:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1383,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2744:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1382,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2736:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1381,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2736:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1384,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2736:10:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2727:19:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1391,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1386,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1371,
																	"src": "2763:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1389,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2778:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1388,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2770:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1387,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2770:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1390,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2770:10:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2763:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2727:53:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
															"id": 1393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2792:33:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															},
															"value": "invalid argument - zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															}
														],
														"id": 1379,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2705:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2705:121:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1395,
												"nodeType": "ExpressionStatement",
												"src": "2705:121:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1397,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1373,
																"src": "2845:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1398,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2854:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2845:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420617267756d656e74202d206e6f2076616c7565207472616e73666572",
															"id": 1400,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2857:38:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e9c7f121b6da7dac929ed2e7ad1b1b43e75c240016a001387d6d3f264c6c87e7",
																"typeString": "literal_string \"invalid argument - no value transfer\""
															},
															"value": "invalid argument - no value transfer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e9c7f121b6da7dac929ed2e7ad1b1b43e75c240016a001387d6d3f264c6c87e7",
																"typeString": "literal_string \"invalid argument - no value transfer\""
															}
														],
														"id": 1396,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2837:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2837:59:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1402,
												"nodeType": "ExpressionStatement",
												"src": "2837:59:11"
											},
											{
												"assignments": [
													1404
												],
												"declarations": [
													{
														"constant": false,
														"id": 1404,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "2915:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 1431,
														"src": "2907:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1403,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2907:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1407,
												"initialValue": {
													"expression": {
														"id": 1405,
														"name": "_modules",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1084,
														"src": "2924:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 1406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2933:6:11",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "2924:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2907:32:11"
											},
											{
												"body": {
													"id": 1429,
													"nodeType": "Block",
													"src": "2987:88:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1424,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1369,
																		"src": "3044:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1425,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1371,
																		"src": "3051:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1426,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1373,
																		"src": "3056:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"baseExpression": {
																					"id": 1419,
																					"name": "_modules",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1084,
																					"src": "3010:8:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1421,
																				"indexExpression": {
																					"id": 1420,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1409,
																					"src": "3019:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3010:11:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1418,
																			"name": "IModule",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1731,
																			"src": "3002:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IModule_$1731_$",
																				"typeString": "type(contract IModule)"
																			}
																		},
																		"id": 1422,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3002:20:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IModule_$1731",
																			"typeString": "contract IModule"
																		}
																	},
																	"id": 1423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3023:20:11",
																	"memberName": "moduleTransferAction",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1696,
																	"src": "3002:41:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) external"
																	}
																},
																"id": 1427,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3002:61:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1428,
															"nodeType": "ExpressionStatement",
															"src": "3002:61:11"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1412,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1409,
														"src": "2970:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1413,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1404,
														"src": "2974:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2970:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1430,
												"initializationExpression": {
													"assignments": [
														1409
													],
													"declarations": [
														{
															"constant": false,
															"id": 1409,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2963:1:11",
															"nodeType": "VariableDeclaration",
															"scope": 1430,
															"src": "2955:9:11",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1408,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2955:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1411,
													"initialValue": {
														"hexValue": "30",
														"id": 1410,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2967:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2955:13:11"
												},
												"loopExpression": {
													"expression": {
														"id": 1416,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2982:3:11",
														"subExpression": {
															"id": 1415,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1409,
															"src": "2982:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1417,
													"nodeType": "ExpressionStatement",
													"src": "2982:3:11"
												},
												"nodeType": "ForStatement",
												"src": "2950:125:11"
											}
										]
									},
									"functionSelector": "8baf29b4",
									"id": 1432,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1376,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1375,
												"name": "onlyToken",
												"nameLocations": [
													"2675:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1119,
												"src": "2675:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2675:9:11"
										}
									],
									"name": "transferred",
									"nameLocation": "2610:11:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1377,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2685:8:11"
									},
									"parameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "2630:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "2622:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2622:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "2645:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "2637:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2637:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "2658:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "2650:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2650:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2621:44:11"
									},
									"returnParameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2694:0:11"
									},
									"scope": 1667,
									"src": "2601:481:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1810
									],
									"body": {
										"id": 1486,
										"nodeType": "Block",
										"src": "3164:313:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1443,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1434,
																"src": "3183:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3198:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3190:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1444,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3190:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1447,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3190:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3183:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
															"id": 1449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3202:33:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															},
															"value": "invalid argument - zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															}
														],
														"id": 1442,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3175:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3175:61:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1451,
												"nodeType": "ExpressionStatement",
												"src": "3175:61:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1453,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1436,
																"src": "3255:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1454,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3264:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3255:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420617267756d656e74202d206e6f2076616c7565206d696e74",
															"id": 1456,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3267:34:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0de045b53a2696c4c58a2dd6a960eacc1f1718f54ec66cb0ba5f399ae9d1fb9e",
																"typeString": "literal_string \"invalid argument - no value mint\""
															},
															"value": "invalid argument - no value mint"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0de045b53a2696c4c58a2dd6a960eacc1f1718f54ec66cb0ba5f399ae9d1fb9e",
																"typeString": "literal_string \"invalid argument - no value mint\""
															}
														],
														"id": 1452,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3247:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3247:55:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1458,
												"nodeType": "ExpressionStatement",
												"src": "3247:55:11"
											},
											{
												"assignments": [
													1460
												],
												"declarations": [
													{
														"constant": false,
														"id": 1460,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "3321:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 1486,
														"src": "3313:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1459,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3313:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1463,
												"initialValue": {
													"expression": {
														"id": 1461,
														"name": "_modules",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1084,
														"src": "3330:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 1462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3339:6:11",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "3330:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3313:32:11"
											},
											{
												"body": {
													"id": 1484,
													"nodeType": "Block",
													"src": "3393:77:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1480,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1434,
																		"src": "3446:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1481,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1436,
																		"src": "3451:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"baseExpression": {
																					"id": 1475,
																					"name": "_modules",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1084,
																					"src": "3416:8:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1477,
																				"indexExpression": {
																					"id": 1476,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1465,
																					"src": "3425:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3416:11:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1474,
																			"name": "IModule",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1731,
																			"src": "3408:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IModule_$1731_$",
																				"typeString": "type(contract IModule)"
																			}
																		},
																		"id": 1478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3408:20:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IModule_$1731",
																			"typeString": "contract IModule"
																		}
																	},
																	"id": 1479,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3429:16:11",
																	"memberName": "moduleMintAction",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1703,
																	"src": "3408:37:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256) external"
																	}
																},
																"id": 1482,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3408:50:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1483,
															"nodeType": "ExpressionStatement",
															"src": "3408:50:11"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1468,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1465,
														"src": "3376:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1469,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1460,
														"src": "3380:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3376:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1485,
												"initializationExpression": {
													"assignments": [
														1465
													],
													"declarations": [
														{
															"constant": false,
															"id": 1465,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3369:1:11",
															"nodeType": "VariableDeclaration",
															"scope": 1485,
															"src": "3361:9:11",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1464,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3361:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1467,
													"initialValue": {
														"hexValue": "30",
														"id": 1466,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3373:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3361:13:11"
												},
												"loopExpression": {
													"expression": {
														"id": 1472,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3388:3:11",
														"subExpression": {
															"id": 1471,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1465,
															"src": "3388:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1473,
													"nodeType": "ExpressionStatement",
													"src": "3388:3:11"
												},
												"nodeType": "ForStatement",
												"src": "3356:114:11"
											}
										]
									},
									"functionSelector": "5f8dead3",
									"id": 1487,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1439,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1438,
												"name": "onlyToken",
												"nameLocations": [
													"3145:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1119,
												"src": "3145:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "3145:9:11"
										}
									],
									"name": "created",
									"nameLocation": "3099:7:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1440,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3155:8:11"
									},
									"parameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "3115:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "3107:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3107:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "3128:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "3120:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3120:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3106:29:11"
									},
									"returnParameters": {
										"id": 1441,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:0:11"
									},
									"scope": 1667,
									"src": "3090:387:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1818
									],
									"body": {
										"id": 1541,
										"nodeType": "Block",
										"src": "3563:317:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1498,
																"name": "_from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1489,
																"src": "3582:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1501,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3599:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3591:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1499,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3591:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3591:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3582:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
															"id": 1504,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3603:33:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															},
															"value": "invalid argument - zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															}
														],
														"id": 1497,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3574:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3574:63:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1506,
												"nodeType": "ExpressionStatement",
												"src": "3574:63:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1508,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1491,
																"src": "3656:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1509,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3665:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3656:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420617267756d656e74202d206e6f2076616c7565206275726e",
															"id": 1511,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3668:34:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5a00bd734c7992f377cbeced90f5c16f281fb6575139ae7312aa5e8718ec4a06",
																"typeString": "literal_string \"invalid argument - no value burn\""
															},
															"value": "invalid argument - no value burn"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5a00bd734c7992f377cbeced90f5c16f281fb6575139ae7312aa5e8718ec4a06",
																"typeString": "literal_string \"invalid argument - no value burn\""
															}
														],
														"id": 1507,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3648:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3648:55:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1513,
												"nodeType": "ExpressionStatement",
												"src": "3648:55:11"
											},
											{
												"assignments": [
													1515
												],
												"declarations": [
													{
														"constant": false,
														"id": 1515,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "3722:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 1541,
														"src": "3714:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1514,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3714:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1518,
												"initialValue": {
													"expression": {
														"id": 1516,
														"name": "_modules",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1084,
														"src": "3731:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 1517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3740:6:11",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "3731:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3714:32:11"
											},
											{
												"body": {
													"id": 1539,
													"nodeType": "Block",
													"src": "3794:79:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1535,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1489,
																		"src": "3847:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1536,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1491,
																		"src": "3854:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"baseExpression": {
																					"id": 1530,
																					"name": "_modules",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1084,
																					"src": "3817:8:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1532,
																				"indexExpression": {
																					"id": 1531,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1520,
																					"src": "3826:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3817:11:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1529,
																			"name": "IModule",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1731,
																			"src": "3809:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IModule_$1731_$",
																				"typeString": "type(contract IModule)"
																			}
																		},
																		"id": 1533,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3809:20:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IModule_$1731",
																			"typeString": "contract IModule"
																		}
																	},
																	"id": 1534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3830:16:11",
																	"memberName": "moduleBurnAction",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1710,
																	"src": "3809:37:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256) external"
																	}
																},
																"id": 1537,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3809:52:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1538,
															"nodeType": "ExpressionStatement",
															"src": "3809:52:11"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1523,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1520,
														"src": "3777:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1524,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1515,
														"src": "3781:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3777:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1540,
												"initializationExpression": {
													"assignments": [
														1520
													],
													"declarations": [
														{
															"constant": false,
															"id": 1520,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3770:1:11",
															"nodeType": "VariableDeclaration",
															"scope": 1540,
															"src": "3762:9:11",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1519,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3762:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1522,
													"initialValue": {
														"hexValue": "30",
														"id": 1521,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3774:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3762:13:11"
												},
												"loopExpression": {
													"expression": {
														"id": 1527,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3789:3:11",
														"subExpression": {
															"id": 1526,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1520,
															"src": "3789:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1528,
													"nodeType": "ExpressionStatement",
													"src": "3789:3:11"
												},
												"nodeType": "ForStatement",
												"src": "3757:116:11"
											}
										]
									},
									"functionSelector": "8d2ea772",
									"id": 1542,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1494,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1493,
												"name": "onlyToken",
												"nameLocations": [
													"3544:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1119,
												"src": "3544:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "3544:9:11"
										}
									],
									"name": "destroyed",
									"nameLocation": "3494:9:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1495,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3554:8:11"
									},
									"parameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "3512:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "3504:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3504:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "3527:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "3519:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3519:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3503:31:11"
									},
									"returnParameters": {
										"id": 1496,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3563:0:11"
									},
									"scope": 1667,
									"src": "3485:395:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1792
									],
									"body": {
										"id": 1567,
										"nodeType": "Block",
										"src": "3986:646:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1553,
																"name": "_moduleBound",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1089,
																"src": "4005:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1555,
															"indexExpression": {
																"id": 1554,
																"name": "_module",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1546,
																"src": "4018:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4005:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "63616c6c206f6e6c79206f6e20626f756e64206d6f64756c65",
															"id": 1556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4028:27:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_db4dc5d7747dd41cae264893a34d079922ab272ca9cb8b8764be76354fbf8396",
																"typeString": "literal_string \"call only on bound module\""
															},
															"value": "call only on bound module"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_db4dc5d7747dd41cae264893a34d079922ab272ca9cb8b8764be76354fbf8396",
																"typeString": "literal_string \"call only on bound module\""
															}
														],
														"id": 1552,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3997:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3997:59:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1558,
												"nodeType": "ExpressionStatement",
												"src": "3997:59:11"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4076:482:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4091:36:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4122:4:11",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4116:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4116:11:11"
															},
															"variables": [
																{
																	"name": "freeMemoryPointer",
																	"nodeType": "YulTypedName",
																	"src": "4095:17:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "freeMemoryPointer",
																		"nodeType": "YulIdentifier",
																		"src": "4154:17:11"
																	},
																	{
																		"name": "callData.offset",
																		"nodeType": "YulIdentifier",
																		"src": "4173:15:11"
																	},
																	{
																		"name": "callData.length",
																		"nodeType": "YulIdentifier",
																		"src": "4190:15:11"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "4141:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4141:65:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4141:65:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4430:117:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4464:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4467:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nodeType": "YulIdentifier",
																						"src": "4470:14:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4470:16:11"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "4449:14:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4449:38:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4449:38:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4512:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nodeType": "YulIdentifier",
																						"src": "4515:14:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4515:16:11"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4505:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4505:27:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4505:27:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "gas",
																					"nodeType": "YulIdentifier",
																					"src": "4263:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4263:5:11"
																			},
																			{
																				"name": "_module",
																				"nodeType": "YulIdentifier",
																				"src": "4283:7:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4305:1:11",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"name": "freeMemoryPointer",
																				"nodeType": "YulIdentifier",
																				"src": "4321:17:11"
																			},
																			{
																				"name": "callData.length",
																				"nodeType": "YulIdentifier",
																				"src": "4353:15:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4383:1:11",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4399:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "call",
																			"nodeType": "YulIdentifier",
																			"src": "4244:4:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4244:171:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4223:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4223:193:11"
															},
															"nodeType": "YulIf",
															"src": "4220:327:11"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1546,
														"isOffset": false,
														"isSlot": false,
														"src": "4283:7:11",
														"valueSize": 1
													},
													{
														"declaration": 1544,
														"isOffset": false,
														"isSlot": false,
														"src": "4190:15:11",
														"suffix": "length",
														"valueSize": 1
													},
													{
														"declaration": 1544,
														"isOffset": false,
														"isSlot": false,
														"src": "4353:15:11",
														"suffix": "length",
														"valueSize": 1
													},
													{
														"declaration": 1544,
														"isOffset": true,
														"isSlot": false,
														"src": "4173:15:11",
														"suffix": "offset",
														"valueSize": 1
													}
												],
												"id": 1559,
												"nodeType": "InlineAssembly",
												"src": "4067:491:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1561,
															"name": "_module",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1546,
															"src": "4593:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1563,
																	"name": "callData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1544,
																	"src": "4612:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																],
																"id": 1562,
																"name": "_selector",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1666,
																"src": "4602:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																	"typeString": "function (bytes calldata) pure returns (bytes4)"
																}
															},
															"id": 1564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4602:19:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"id": 1560,
														"name": "ModuleInteraction",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1740,
														"src": "4575:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes4_$returns$__$",
															"typeString": "function (address,bytes4)"
														}
													},
													"id": 1565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4575:47:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1566,
												"nodeType": "EmitStatement",
												"src": "4570:52:11"
											}
										]
									},
									"functionSelector": "efb22d33",
									"id": 1568,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1550,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1549,
												"name": "onlyOwner",
												"nameLocations": [
													"3976:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 369,
												"src": "3976:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "3976:9:11"
										}
									],
									"name": "callModuleFunction",
									"nameLocation": "3897:18:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1548,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3967:8:11"
									},
									"parameters": {
										"id": 1547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "callData",
												"nameLocation": "3931:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "3916:23:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1543,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1546,
												"mutability": "mutable",
												"name": "_module",
												"nameLocation": "3949:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "3941:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3941:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3915:42:11"
									},
									"returnParameters": {
										"id": 1551,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3986:0:11"
									},
									"scope": 1667,
									"src": "3888:744:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1851
									],
									"body": {
										"id": 1580,
										"nodeType": "Block",
										"src": "4718:47:11",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1576,
														"name": "_moduleBound",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1089,
														"src": "4736:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1578,
													"indexExpression": {
														"id": 1577,
														"name": "_module",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1570,
														"src": "4749:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4736:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1575,
												"id": 1579,
												"nodeType": "Return",
												"src": "4729:28:11"
											}
										]
									},
									"functionSelector": "a446d49f",
									"id": 1581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isModuleBound",
									"nameLocation": "4649:13:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1572,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4694:8:11"
									},
									"parameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "_module",
												"nameLocation": "4671:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "4663:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4663:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4662:17:11"
									},
									"returnParameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "4712:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1573,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4712:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4711:6:11"
									},
									"scope": 1667,
									"src": "4640:125:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1837
									],
									"body": {
										"id": 1590,
										"nodeType": "Block",
										"src": "4845:34:11",
										"statements": [
											{
												"expression": {
													"id": 1588,
													"name": "_modules",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1084,
													"src": "4863:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 1587,
												"id": 1589,
												"nodeType": "Return",
												"src": "4856:15:11"
											}
										]
									},
									"functionSelector": "b2494df3",
									"id": 1591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getModules",
									"nameLocation": "4782:10:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1583,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4809:8:11"
									},
									"parameters": {
										"id": 1582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4792:2:11"
									},
									"returnParameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "4827:16:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1584,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4827:7:11",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1585,
													"nodeType": "ArrayTypeName",
													"src": "4827:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4826:18:11"
									},
									"scope": 1667,
									"src": "4773:106:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1843
									],
									"body": {
										"id": 1599,
										"nodeType": "Block",
										"src": "4953:37:11",
										"statements": [
											{
												"expression": {
													"id": 1597,
													"name": "_tokenBound",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1080,
													"src": "4971:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1596,
												"id": 1598,
												"nodeType": "Return",
												"src": "4964:18:11"
											}
										]
									},
									"functionSelector": "6a3edf28",
									"id": 1600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenBound",
									"nameLocation": "4896:13:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1593,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4926:8:11"
									},
									"parameters": {
										"id": 1592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4909:2:11"
									},
									"returnParameters": {
										"id": 1596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1600,
												"src": "4944:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4944:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4943:9:11"
									},
									"scope": 1667,
									"src": "4887:103:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1830
									],
									"body": {
										"id": 1650,
										"nodeType": "Block",
										"src": "5101:267:11",
										"statements": [
											{
												"assignments": [
													1613
												],
												"declarations": [
													{
														"constant": false,
														"id": 1613,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "5120:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 1650,
														"src": "5112:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5112:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1616,
												"initialValue": {
													"expression": {
														"id": 1614,
														"name": "_modules",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1084,
														"src": "5129:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 1615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5138:6:11",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "5129:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5112:32:11"
											},
											{
												"body": {
													"id": 1646,
													"nodeType": "Block",
													"src": "5192:147:11",
													"statements": [
														{
															"condition": {
																"id": 1641,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "5211:68:11",
																"subExpression": {
																	"arguments": [
																		{
																			"id": 1633,
																			"name": "_from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1602,
																			"src": "5245:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1634,
																			"name": "_to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1604,
																			"src": "5252:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1635,
																			"name": "_value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1606,
																			"src": "5257:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"arguments": [
																				{
																					"id": 1638,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "5273:4:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_ModularCompliance_$1667",
																						"typeString": "contract ModularCompliance"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_ModularCompliance_$1667",
																						"typeString": "contract ModularCompliance"
																					}
																				],
																				"id": 1637,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5265:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1636,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5265:7:11",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1639,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5265:13:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 1628,
																						"name": "_modules",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1084,
																						"src": "5220:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_address_$dyn_storage",
																							"typeString": "address[] storage ref"
																						}
																					},
																					"id": 1630,
																					"indexExpression": {
																						"id": 1629,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1618,
																						"src": "5229:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "5220:11:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1627,
																				"name": "IModule",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1731,
																				"src": "5212:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IModule_$1731_$",
																					"typeString": "type(contract IModule)"
																				}
																			},
																			"id": 1631,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5212:20:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IModule_$1731",
																				"typeString": "contract IModule"
																			}
																		},
																		"id": 1632,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5233:11:11",
																		"memberName": "moduleCheck",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1723,
																		"src": "5212:32:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256,address) view external returns (bool)"
																		}
																	},
																	"id": 1640,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5212:67:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1645,
															"nodeType": "IfStatement",
															"src": "5207:121:11",
															"trueBody": {
																"id": 1644,
																"nodeType": "Block",
																"src": "5281:47:11",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "66616c7365",
																			"id": 1642,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5307:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "false"
																		},
																		"functionReturnParameters": 1611,
																		"id": 1643,
																		"nodeType": "Return",
																		"src": "5300:12:11"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1621,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1618,
														"src": "5175:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1622,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1613,
														"src": "5179:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5175:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1647,
												"initializationExpression": {
													"assignments": [
														1618
													],
													"declarations": [
														{
															"constant": false,
															"id": 1618,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5168:1:11",
															"nodeType": "VariableDeclaration",
															"scope": 1647,
															"src": "5160:9:11",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1617,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5160:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1620,
													"initialValue": {
														"hexValue": "30",
														"id": 1619,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5172:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5160:13:11"
												},
												"loopExpression": {
													"expression": {
														"id": 1625,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "5187:3:11",
														"subExpression": {
															"id": 1624,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1618,
															"src": "5187:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1626,
													"nodeType": "ExpressionStatement",
													"src": "5187:3:11"
												},
												"nodeType": "ForStatement",
												"src": "5155:184:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1648,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5356:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1611,
												"id": 1649,
												"nodeType": "Return",
												"src": "5349:11:11"
											}
										]
									},
									"functionSelector": "e46638e6",
									"id": 1651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "canTransfer",
									"nameLocation": "5007:11:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1608,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5077:8:11"
									},
									"parameters": {
										"id": 1607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "5027:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "5019:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5019:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1604,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "5042:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "5034:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5034:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1606,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "5055:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "5047:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5047:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5018:44:11"
									},
									"returnParameters": {
										"id": 1611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1610,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "5095:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1609,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5095:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5094:6:11"
									},
									"scope": 1667,
									"src": "4998:370:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1665,
										"nodeType": "Block",
										"src": "5458:152:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1658,
															"name": "callData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1653,
															"src": "5473:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														},
														"id": 1659,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5482:6:11",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5473:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "34",
														"id": 1660,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5492:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "4"
													},
													"src": "5473:20:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1664,
												"nodeType": "IfStatement",
												"src": "5469:134:11",
												"trueBody": {
													"id": 1663,
													"nodeType": "Block",
													"src": "5495:108:11",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "5519:73:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5538:39:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "callData.offset",
																					"nodeType": "YulIdentifier",
																					"src": "5561:15:11"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nodeType": "YulIdentifier",
																				"src": "5548:12:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5548:29:11"
																		},
																		"variableNames": [
																			{
																				"name": "result",
																				"nodeType": "YulIdentifier",
																				"src": "5538:6:11"
																			}
																		]
																	}
																]
															},
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 1653,
																	"isOffset": true,
																	"isSlot": false,
																	"src": "5561:15:11",
																	"suffix": "offset",
																	"valueSize": 1
																},
																{
																	"declaration": 1656,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5538:6:11",
																	"valueSize": 1
																}
															],
															"id": 1662,
															"nodeType": "InlineAssembly",
															"src": "5510:82:11"
														}
													]
												}
											}
										]
									},
									"id": 1666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_selector",
									"nameLocation": "5385:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "callData",
												"nameLocation": "5410:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "5395:23:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1652,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5395:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5394:25:11"
									},
									"returnParameters": {
										"id": 1657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1656,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "5450:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "5443:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1655,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "5443:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5442:15:11"
									},
									"scope": 1667,
									"src": "5376:234:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1668,
							"src": "326:5287:11",
							"usedErrors": []
						}
					],
					"src": "33:5580:11"
				},
				"id": 11
			},
			"Tokeny Project/Compliance/modular/Modules/IModule.sol": {
				"ast": {
					"absolutePath": "Tokeny Project/Compliance/modular/Modules/IModule.sol",
					"exportedSymbols": {
						"IModule": [
							1731
						]
					},
					"id": 1732,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1669,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IModule",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1731,
							"linearizedBaseContracts": [
								1731
							],
							"name": "IModule",
							"nameLocation": "70:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "1f7b76c58fb697eb53c6c7c1becb96911516a136e24d7ced386b2355358b75a3",
									"id": 1673,
									"name": "ComplianceBound",
									"nameLocation": "104:15:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1671,
												"indexed": true,
												"mutability": "mutable",
												"name": "_compliance",
												"nameLocation": "136:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "120:27:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "120:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "119:29:12"
									},
									"src": "98:51:12"
								},
								{
									"anonymous": false,
									"eventSelector": "408b49d9be1c914c52a0227e18a077e5a892dddf32a26cfa94a5d9708fad7718",
									"id": 1677,
									"name": "ComplianceUnbound",
									"nameLocation": "163:17:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1675,
												"indexed": true,
												"mutability": "mutable",
												"name": "_compliance",
												"nameLocation": "197:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1677,
												"src": "181:27:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "181:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "180:29:12"
									},
									"src": "157:53:12"
								},
								{
									"functionSelector": "4a932544",
									"id": 1682,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "bindCompliance",
									"nameLocation": "241:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1679,
												"mutability": "mutable",
												"name": "_compliance",
												"nameLocation": "264:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1682,
												"src": "256:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "256:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "255:21:12"
									},
									"returnParameters": {
										"id": 1681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "285:0:12"
									},
									"scope": 1731,
									"src": "232:54:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0694a5fb",
									"id": 1687,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unbindCompliance",
									"nameLocation": "303:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1684,
												"mutability": "mutable",
												"name": "_compliance",
												"nameLocation": "328:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "320:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "320:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "319:21:12"
									},
									"returnParameters": {
										"id": 1686,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "349:0:12"
									},
									"scope": 1731,
									"src": "294:56:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2cb7e1ec",
									"id": 1696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "moduleTransferAction",
									"nameLocation": "367:20:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "396:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1696,
												"src": "388:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "388:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1691,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "411:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 1696,
												"src": "403:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "424:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1696,
												"src": "416:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "416:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "387:44:12"
									},
									"returnParameters": {
										"id": 1695,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "440:0:12"
									},
									"scope": 1731,
									"src": "358:83:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f104a8c9",
									"id": 1703,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "moduleMintAction",
									"nameLocation": "458:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1698,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "483:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "475:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1697,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "496:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "488:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "488:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:29:12"
									},
									"returnParameters": {
										"id": 1702,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "512:0:12"
									},
									"scope": 1731,
									"src": "449:64:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "372491a2",
									"id": 1710,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "moduleBurnAction",
									"nameLocation": "530:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "555:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "547:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "547:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1707,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "570:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "562:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "562:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:31:12"
									},
									"returnParameters": {
										"id": 1709,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "586:0:12"
									},
									"scope": 1731,
									"src": "521:66:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "013b7ce4",
									"id": 1723,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "moduleCheck",
									"nameLocation": "604:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1712,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "624:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "616:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "616:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1714,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "639:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "631:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1713,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "631:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "652:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "644:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "644:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1718,
												"mutability": "mutable",
												"name": "_compliance",
												"nameLocation": "668:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "660:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1717,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "615:65:12"
									},
									"returnParameters": {
										"id": 1722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1721,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "704:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1720,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "704:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "703:6:12"
									},
									"scope": 1731,
									"src": "595:115:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4cf4d295",
									"id": 1730,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isComplianceBound",
									"nameLocation": "727:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1725,
												"mutability": "mutable",
												"name": "_compliance",
												"nameLocation": "753:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1730,
												"src": "745:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "745:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "744:21:12"
									},
									"returnParameters": {
										"id": 1729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1730,
												"src": "789:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1727,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "789:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:6:12"
									},
									"scope": 1731,
									"src": "718:77:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1732,
							"src": "60:738:12",
							"usedErrors": []
						}
					],
					"src": "33:765:12"
				},
				"id": 12
			},
			"https://github.com/TokenySolutions/T-REX/blob/main/contracts/compliance/modular/IModularCompliance.sol": {
				"ast": {
					"absolutePath": "https://github.com/TokenySolutions/T-REX/blob/main/contracts/compliance/modular/IModularCompliance.sol",
					"exportedSymbols": {
						"IModularCompliance": [
							1852
						]
					},
					"id": 1853,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1733,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "3817:23:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IModularCompliance",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1852,
							"linearizedBaseContracts": [
								1852
							],
							"name": "IModularCompliance",
							"nameLocation": "3852:18:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1734,
										"nodeType": "StructuredDocumentation",
										"src": "3894:320:13",
										"text": "  @dev Event emitted for each executed interaction with a module contract.\n  For gas efficiency, only the interaction calldata selector (first 4\n  bytes) is included in the event. For interactions without calldata or\n  whose calldata is shorter than 4 bytes, the selector will be `0`."
									},
									"eventSelector": "20d79de70adcc6e9353d8a9a5646b46dc352710d0a310b1ad1f67faeca7ef891",
									"id": 1740,
									"name": "ModuleInteraction",
									"nameLocation": "4225:17:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1736,
												"indexed": true,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4259:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "4243:22:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1735,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4243:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1738,
												"indexed": false,
												"mutability": "mutable",
												"name": "selector",
												"nameLocation": "4274:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "4267:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1737,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "4267:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4242:41:13"
									},
									"src": "4219:65:13"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1741,
										"nodeType": "StructuredDocumentation",
										"src": "4290:204:13",
										"text": "  this event is emitted when a token has been bound to the compliance contract\n  the event is emitted by the bindToken function\n  `_token` is the address of the token to bind"
									},
									"eventSelector": "2de35142b19ed5a07796cf30791959c592018f70b1d2d7c460eef8ffe713692b",
									"id": 1745,
									"name": "TokenBound",
									"nameLocation": "4505:10:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1743,
												"indexed": false,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "4524:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "4516:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1742,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4516:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4515:16:13"
									},
									"src": "4499:33:13"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1746,
										"nodeType": "StructuredDocumentation",
										"src": "4538:212:13",
										"text": "  this event is emitted when a token has been unbound from the compliance contract\n  the event is emitted by the unbindToken function\n  `_token` is the address of the token to unbind"
									},
									"eventSelector": "28a4ca7134a3b3f9aff286e79ad3daadb4a06d1b43d037a3a98bdc074edd9b7a",
									"id": 1750,
									"name": "TokenUnbound",
									"nameLocation": "4761:12:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1748,
												"indexed": false,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "4782:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "4774:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1747,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4774:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4773:16:13"
									},
									"src": "4755:35:13"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1751,
										"nodeType": "StructuredDocumentation",
										"src": "4796:239:13",
										"text": "  this event is emitted when a module has been added to the list of modules bound to the compliance contract\n  the event is emitted by the addModule function\n  `_module` is the address of the compliance module"
									},
									"eventSelector": "ead6a006345da1073a106d5f32372d2d2204f46cb0b4bca8f5ebafcbbed12b8a",
									"id": 1755,
									"name": "ModuleAdded",
									"nameLocation": "5046:11:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1753,
												"indexed": true,
												"mutability": "mutable",
												"name": "_module",
												"nameLocation": "5074:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1755,
												"src": "5058:23:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5058:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5057:25:13"
									},
									"src": "5040:43:13"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1756,
										"nodeType": "StructuredDocumentation",
										"src": "5089:246:13",
										"text": "  this event is emitted when a module has been removed from the list of modules bound to the compliance contract\n  the event is emitted by the removeModule function\n  `_module` is the address of the compliance module"
									},
									"eventSelector": "0a1ee69f55c33d8467c69ca59ce2007a737a88603d75392972520bf67cb513b8",
									"id": 1760,
									"name": "ModuleRemoved",
									"nameLocation": "5346:13:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1758,
												"indexed": true,
												"mutability": "mutable",
												"name": "_module",
												"nameLocation": "5376:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1760,
												"src": "5360:23:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5360:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5359:25:13"
									},
									"src": "5340:45:13"
								},
								{
									"documentation": {
										"id": 1761,
										"nodeType": "StructuredDocumentation",
										"src": "5410:230:13",
										"text": "  @dev binds a token to the compliance contract\n  @param _token address of the token to bind\n  This function can be called ONLY by the owner of the compliance contract\n  Emits a TokenBound event"
									},
									"functionSelector": "3ff5aa02",
									"id": 1766,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "bindToken",
									"nameLocation": "5654:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1763,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "5672:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1766,
												"src": "5664:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5664:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5663:16:13"
									},
									"returnParameters": {
										"id": 1765,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5688:0:13"
									},
									"scope": 1852,
									"src": "5645:44:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1767,
										"nodeType": "StructuredDocumentation",
										"src": "5695:238:13",
										"text": "  @dev unbinds a token from the compliance contract\n  @param _token address of the token to unbind\n  This function can be called ONLY by the owner of the compliance contract\n  Emits a TokenUnbound event"
									},
									"functionSelector": "40db3b50",
									"id": 1772,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unbindToken",
									"nameLocation": "5947:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "5967:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1772,
												"src": "5959:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1768,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5959:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5958:16:13"
									},
									"returnParameters": {
										"id": 1771,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5983:0:13"
									},
									"scope": 1852,
									"src": "5938:46:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1773,
										"nodeType": "StructuredDocumentation",
										"src": "5990:337:13",
										"text": "  @dev adds a module to the list of compliance modules\n  @param _module address of the module to add\n  there cannot be more than 25 modules bound to the modular compliance for gas cost reasons\n  This function can be called ONLY by the owner of the compliance contract\n  Emits a ModuleAdded event"
									},
									"functionSelector": "1ed86f19",
									"id": 1778,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addModule",
									"nameLocation": "6341:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "_module",
												"nameLocation": "6359:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "6351:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1774,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6351:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6350:17:13"
									},
									"returnParameters": {
										"id": 1777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6376:0:13"
									},
									"scope": 1852,
									"src": "6332:45:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1779,
										"nodeType": "StructuredDocumentation",
										"src": "6383:249:13",
										"text": "  @dev removes a module from the list of compliance modules\n  @param _module address of the module to remove\n  This function can be called ONLY by the owner of the compliance contract\n  Emits a ModuleRemoved event"
									},
									"functionSelector": "a0632461",
									"id": 1784,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeModule",
									"nameLocation": "6646:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1781,
												"mutability": "mutable",
												"name": "_module",
												"nameLocation": "6667:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1784,
												"src": "6659:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1780,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6659:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6658:17:13"
									},
									"returnParameters": {
										"id": 1783,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6684:0:13"
									},
									"scope": 1852,
									"src": "6637:48:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1785,
										"nodeType": "StructuredDocumentation",
										"src": "6691:350:13",
										"text": "  @dev calls any function on bound modules\n  can be called only on bound modules\n  @param callData the bytecode for interaction with the module, abi encoded\n  @param _module The address of the module\n  This function can be called only by the modular compliance owner\n  emits a `ModuleInteraction` event"
									},
									"functionSelector": "efb22d33",
									"id": 1792,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "callModuleFunction",
									"nameLocation": "7055:18:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1787,
												"mutability": "mutable",
												"name": "callData",
												"nameLocation": "7089:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 1792,
												"src": "7074:23:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1786,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7074:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1789,
												"mutability": "mutable",
												"name": "_module",
												"nameLocation": "7107:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1792,
												"src": "7099:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7099:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7073:42:13"
									},
									"returnParameters": {
										"id": 1791,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7124:0:13"
									},
									"scope": 1852,
									"src": "7046:79:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1793,
										"nodeType": "StructuredDocumentation",
										"src": "7131:759:13",
										"text": "  @dev function called whenever tokens are transferred\n  from one wallet to another\n  this function can update state variables in the modules bound to the compliance\n  these state variables being used by the module checks to decide if a transfer\n  is compliant or not depending on the values stored in these state variables and on\n  the parameters of the modules\n  This function can be called ONLY by the token contract bound to the compliance\n  @param _from The address of the sender\n  @param _to The address of the receiver\n  @param _amount The amount of tokens involved in the transfer\n  This function calls moduleTransferAction() on each module bound to the compliance contract"
									},
									"functionSelector": "8baf29b4",
									"id": 1802,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferred",
									"nameLocation": "7904:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1795,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "7933:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1802,
												"src": "7925:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7925:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1797,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "7956:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 1802,
												"src": "7948:11:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7948:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1799,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "7977:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1802,
												"src": "7969:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7969:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7915:75:13"
									},
									"returnParameters": {
										"id": 1801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7999:0:13"
									},
									"scope": 1852,
									"src": "7895:105:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1803,
										"nodeType": "StructuredDocumentation",
										"src": "8006:680:13",
										"text": "  @dev function called whenever tokens are created on a wallet\n  this function can update state variables in the modules bound to the compliance\n  these state variables being used by the module checks to decide if a transfer\n  is compliant or not depending on the values stored in these state variables and on\n  the parameters of the modules\n  This function can be called ONLY by the token contract bound to the compliance\n  @param _to The address of the receiver\n  @param _amount The amount of tokens involved in the minting\n  This function calls moduleMintAction() on each module bound to the compliance contract"
									},
									"functionSelector": "5f8dead3",
									"id": 1810,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "created",
									"nameLocation": "8700:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1805,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "8716:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 1810,
												"src": "8708:11:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8708:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "8729:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1810,
												"src": "8721:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8721:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8707:30:13"
									},
									"returnParameters": {
										"id": 1809,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8746:0:13"
									},
									"scope": 1852,
									"src": "8691:56:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1811,
										"nodeType": "StructuredDocumentation",
										"src": "8753:693:13",
										"text": "  @dev function called whenever tokens are destroyed from a wallet\n  this function can update state variables in the modules bound to the compliance\n  these state variables being used by the module checks to decide if a transfer\n  is compliant or not depending on the values stored in these state variables and on\n  the parameters of the modules\n  This function can be called ONLY by the token contract bound to the compliance\n  @param _from The address on which tokens are burnt\n  @param _amount The amount of tokens involved in the burn\n  This function calls moduleBurnAction() on each module bound to the compliance contract"
									},
									"functionSelector": "8d2ea772",
									"id": 1818,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "destroyed",
									"nameLocation": "9460:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1813,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "9478:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1818,
												"src": "9470:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9470:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1815,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "9493:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1818,
												"src": "9485:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9485:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9469:32:13"
									},
									"returnParameters": {
										"id": 1817,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9510:0:13"
									},
									"scope": 1852,
									"src": "9451:60:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1819,
										"nodeType": "StructuredDocumentation",
										"src": "9517:585:13",
										"text": "  @dev checks that the transfer is compliant.\n  default compliance always returns true\n  READ ONLY FUNCTION, this function cannot be used to increment\n  counters, emit events, ...\n  @param _from The address of the sender\n  @param _to The address of the receiver\n  @param _amount The amount of tokens involved in the transfer\n  This function will call moduleCheck() on every module bound to the compliance\n  If each of the module checks return TRUE, this function will return TRUE as well\n  returns FALSE otherwise"
									},
									"functionSelector": "e46638e6",
									"id": 1830,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "canTransfer",
									"nameLocation": "10116:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "10145:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1830,
												"src": "10137:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1820,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10137:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "10168:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 1830,
												"src": "10160:11:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1822,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10160:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1825,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "10189:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1830,
												"src": "10181:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10181:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10127:75:13"
									},
									"returnParameters": {
										"id": 1829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1828,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1830,
												"src": "10226:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1827,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10226:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10225:6:13"
									},
									"scope": 1852,
									"src": "10107:125:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1831,
										"nodeType": "StructuredDocumentation",
										"src": "10238:154:13",
										"text": "  @dev getter for the modules bound to the compliance contract\n  returns address array of module contracts bound to the compliance"
									},
									"functionSelector": "b2494df3",
									"id": 1837,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getModules",
									"nameLocation": "10406:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1832,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10416:2:13"
									},
									"returnParameters": {
										"id": 1836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1835,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1837,
												"src": "10442:16:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1833,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "10442:7:13",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1834,
													"nodeType": "ArrayTypeName",
													"src": "10442:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10441:18:13"
									},
									"scope": 1852,
									"src": "10397:63:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1838,
										"nodeType": "StructuredDocumentation",
										"src": "10466:107:13",
										"text": "  @dev getter for the address of the token bound\n  returns the address of the token"
									},
									"functionSelector": "6a3edf28",
									"id": 1843,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenBound",
									"nameLocation": "10587:13:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10600:2:13"
									},
									"returnParameters": {
										"id": 1842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1841,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "10626:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10626:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10625:9:13"
									},
									"scope": 1852,
									"src": "10578:57:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1844,
										"nodeType": "StructuredDocumentation",
										"src": "10641:136:13",
										"text": "  @dev checks if a module is bound to the compliance contract\n  returns true if module is bound, false otherwise"
									},
									"functionSelector": "a446d49f",
									"id": 1851,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isModuleBound",
									"nameLocation": "10791:13:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1846,
												"mutability": "mutable",
												"name": "_module",
												"nameLocation": "10813:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1851,
												"src": "10805:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10805:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10804:17:13"
									},
									"returnParameters": {
										"id": 1850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1851,
												"src": "10845:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1848,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10845:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10844:6:13"
									},
									"scope": 1852,
									"src": "10782:69:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1853,
							"src": "3842:7011:13",
							"usedErrors": []
						}
					],
					"src": "3817:7037:13"
				},
				"id": 13
			},
			"https://github.com/TokenySolutions/T-REX/blob/main/contracts/registry/interface/IClaimTopicsRegistry.sol": {
				"ast": {
					"absolutePath": "https://github.com/TokenySolutions/T-REX/blob/main/contracts/registry/interface/IClaimTopicsRegistry.sol",
					"exportedSymbols": {
						"IClaimTopicsRegistry": [
							1884
						]
					},
					"id": 1885,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1854,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "3817:23:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IClaimTopicsRegistry",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1884,
							"linearizedBaseContracts": [
								1884
							],
							"name": "IClaimTopicsRegistry",
							"nameLocation": "3852:20:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1855,
										"nodeType": "StructuredDocumentation",
										"src": "3879:241:14",
										"text": "  this event is emitted when a claim topic has been added to the ClaimTopicsRegistry\n  the event is emitted by the 'addClaimTopic' function\n  `claimTopic` is the required claim added to the Claim Topics Registry"
									},
									"eventSelector": "01c928b7f7ade2949e92366aa9454dbef3a416b731cf6ec786ba9595bbd814d6",
									"id": 1859,
									"name": "ClaimTopicAdded",
									"nameLocation": "4131:15:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1857,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimTopic",
												"nameLocation": "4163:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 1859,
												"src": "4147:26:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4147:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4146:28:14"
									},
									"src": "4125:50:14"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1860,
										"nodeType": "StructuredDocumentation",
										"src": "4181:252:14",
										"text": "  this event is emitted when a claim topic has been removed from the ClaimTopicsRegistry\n  the event is emitted by the 'removeClaimTopic' function\n  `claimTopic` is the required claim removed from the Claim Topics Registry"
									},
									"eventSelector": "0b1381093c776453c1bbe54fd68be1b235c65db61d099cb50d194b2991e0eec5",
									"id": 1864,
									"name": "ClaimTopicRemoved",
									"nameLocation": "4444:17:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1862,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimTopic",
												"nameLocation": "4478:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 1864,
												"src": "4462:26:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4462:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4461:28:14"
									},
									"src": "4438:52:14"
								},
								{
									"documentation": {
										"id": 1865,
										"nodeType": "StructuredDocumentation",
										"src": "4496:280:14",
										"text": " @dev Add a trusted claim topic (For example: KYC=1, AML=2).\n Only owner can call.\n emits `ClaimTopicAdded` event\n cannot add more than 15 topics for 1 token as adding more could create gas issues\n @param _claimTopic The claim topic index"
									},
									"functionSelector": "c7b22551",
									"id": 1870,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addClaimTopic",
									"nameLocation": "4790:13:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "_claimTopic",
												"nameLocation": "4812:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 1870,
												"src": "4804:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4804:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4803:21:14"
									},
									"returnParameters": {
										"id": 1869,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4833:0:14"
									},
									"scope": 1884,
									"src": "4781:53:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1871,
										"nodeType": "StructuredDocumentation",
										"src": "4840:200:14",
										"text": "  @dev Remove a trusted claim topic (For example: KYC=1, AML=2).\n  Only owner can call.\n  emits `ClaimTopicRemoved` event\n  @param _claimTopic The claim topic index"
									},
									"functionSelector": "08297846",
									"id": 1876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeClaimTopic",
									"nameLocation": "5054:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1873,
												"mutability": "mutable",
												"name": "_claimTopic",
												"nameLocation": "5079:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 1876,
												"src": "5071:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1872,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5071:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5070:21:14"
									},
									"returnParameters": {
										"id": 1875,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5100:0:14"
									},
									"scope": 1884,
									"src": "5045:56:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1877,
										"nodeType": "StructuredDocumentation",
										"src": "5107:122:14",
										"text": "  @dev Get the trusted claim topics for the security token\n  @return Array of trusted claim topics"
									},
									"functionSelector": "df09d604",
									"id": 1883,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getClaimTopics",
									"nameLocation": "5243:14:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1878,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5257:2:14"
									},
									"returnParameters": {
										"id": 1882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1881,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1883,
												"src": "5283:16:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1879,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5283:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1880,
													"nodeType": "ArrayTypeName",
													"src": "5283:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5282:18:14"
									},
									"scope": 1884,
									"src": "5234:67:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1885,
							"src": "3842:1461:14",
							"usedErrors": []
						}
					],
					"src": "3817:1487:14"
				},
				"id": 14
			},
			"https://github.com/TokenySolutions/T-REX/blob/main/contracts/registry/interface/IIdentityRegistry.sol": {
				"ast": {
					"absolutePath": "https://github.com/TokenySolutions/T-REX/blob/main/contracts/registry/interface/IIdentityRegistry.sol",
					"exportedSymbols": {
						"IClaimIssuer": [
							59
						],
						"IClaimTopicsRegistry": [
							1884
						],
						"IERC734": [
							206
						],
						"IERC735": [
							314
						],
						"IIdentity": [
							323
						],
						"IIdentityRegistry": [
							2059
						],
						"IIdentityRegistryStorage": [
							2175
						],
						"ITrustedIssuersRegistry": [
							2276
						]
					},
					"id": 2060,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1886,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "3817:23:15"
						},
						{
							"absolutePath": "https://github.com/TokenySolutions/T-REX/blob/main/contracts/registry/interface/ITrustedIssuersRegistry.sol",
							"file": "./ITrustedIssuersRegistry.sol",
							"id": 1887,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2060,
							"sourceUnit": 2277,
							"src": "3842:39:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/TokenySolutions/T-REX/blob/main/contracts/registry/interface/IClaimTopicsRegistry.sol",
							"file": "./IClaimTopicsRegistry.sol",
							"id": 1888,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2060,
							"sourceUnit": 1885,
							"src": "3882:36:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/TokenySolutions/T-REX/blob/main/contracts/registry/interface/IIdentityRegistryStorage.sol",
							"file": "./IIdentityRegistryStorage.sol",
							"id": 1889,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2060,
							"sourceUnit": 2176,
							"src": "3919:40:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
							"file": "@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
							"id": 1890,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2060,
							"sourceUnit": 60,
							"src": "3961:67:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@onchain-id/solidity/contracts/interface/IIdentity.sol",
							"file": "@onchain-id/solidity/contracts/interface/IIdentity.sol",
							"id": 1891,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2060,
							"sourceUnit": 324,
							"src": "4029:64:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IIdentityRegistry",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2059,
							"linearizedBaseContracts": [
								2059
							],
							"name": "IIdentityRegistry",
							"nameLocation": "4105:17:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1892,
										"nodeType": "StructuredDocumentation",
										"src": "4129:256:15",
										"text": "  this event is emitted when the ClaimTopicsRegistry has been set for the IdentityRegistry\n  the event is emitted by the IdentityRegistry constructor\n  `claimTopicsRegistry` is the address of the Claim Topics Registry contract"
									},
									"eventSelector": "7170bf15b246e880b2369cd7c67d057760d8a35149e8c64dde91efa22bcc76d0",
									"id": 1896,
									"name": "ClaimTopicsRegistrySet",
									"nameLocation": "4396:22:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1894,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimTopicsRegistry",
												"nameLocation": "4435:19:15",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "4419:35:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4419:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4418:37:15"
									},
									"src": "4390:66:15"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1897,
										"nodeType": "StructuredDocumentation",
										"src": "4462:260:15",
										"text": "  this event is emitted when the IdentityRegistryStorage has been set for the IdentityRegistry\n  the event is emitted by the IdentityRegistry constructor\n  `identityStorage` is the address of the Identity Registry Storage contract"
									},
									"eventSelector": "2fa8b95c1db7afe99e3398f3792f008135cedc1fa26b0bb2ecd2352cd166d53c",
									"id": 1901,
									"name": "IdentityStorageSet",
									"nameLocation": "4733:18:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1899,
												"indexed": true,
												"mutability": "mutable",
												"name": "identityStorage",
												"nameLocation": "4768:15:15",
												"nodeType": "VariableDeclaration",
												"scope": 1901,
												"src": "4752:31:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1898,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4752:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4751:33:15"
									},
									"src": "4727:58:15"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1902,
										"nodeType": "StructuredDocumentation",
										"src": "4791:265:15",
										"text": "  this event is emitted when the TrustedIssuersRegistry has been set for the IdentityRegistry\n  the event is emitted by the IdentityRegistry constructor\n  `trustedIssuersRegistry` is the address of the Trusted Issuers Registry contract"
									},
									"eventSelector": "1b98cb79e6f73020175fe87333f1b91ad6a881519c0afe30340c2599b2b4bde0",
									"id": 1906,
									"name": "TrustedIssuersRegistrySet",
									"nameLocation": "5067:25:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1904,
												"indexed": true,
												"mutability": "mutable",
												"name": "trustedIssuersRegistry",
												"nameLocation": "5109:22:15",
												"nodeType": "VariableDeclaration",
												"scope": 1906,
												"src": "5093:38:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5093:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5092:40:15"
									},
									"src": "5061:72:15"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1907,
										"nodeType": "StructuredDocumentation",
										"src": "5139:307:15",
										"text": "  this event is emitted when an Identity is registered into the Identity Registry.\n  the event is emitted by the 'registerIdentity' function\n  `investorAddress` is the address of the investor's wallet\n  `identity` is the address of the Identity smart contract (onchainID)"
									},
									"eventSelector": "6ae73635c50d24a45af6fbd5e016ac4bed179addbc8bf24e04ff0fcc6d33af19",
									"id": 1914,
									"name": "IdentityRegistered",
									"nameLocation": "5457:18:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1909,
												"indexed": true,
												"mutability": "mutable",
												"name": "investorAddress",
												"nameLocation": "5492:15:15",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "5476:31:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5476:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1912,
												"indexed": true,
												"mutability": "mutable",
												"name": "identity",
												"nameLocation": "5527:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "5509:26:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$323",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 1911,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1910,
														"name": "IIdentity",
														"nameLocations": [
															"5509:9:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "5509:9:15"
													},
													"referencedDeclaration": 323,
													"src": "5509:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$323",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5475:61:15"
									},
									"src": "5451:86:15"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1915,
										"nodeType": "StructuredDocumentation",
										"src": "5543:302:15",
										"text": "  this event is emitted when an Identity is removed from the Identity Registry.\n  the event is emitted by the 'deleteIdentity' function\n  `investorAddress` is the address of the investor's wallet\n  `identity` is the address of the Identity smart contract (onchainID)"
									},
									"eventSelector": "59d6590e225b81befe259af056324092801080acbb7feab310eb34678871f327",
									"id": 1922,
									"name": "IdentityRemoved",
									"nameLocation": "5856:15:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1917,
												"indexed": true,
												"mutability": "mutable",
												"name": "investorAddress",
												"nameLocation": "5888:15:15",
												"nodeType": "VariableDeclaration",
												"scope": 1922,
												"src": "5872:31:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1916,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5872:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1920,
												"indexed": true,
												"mutability": "mutable",
												"name": "identity",
												"nameLocation": "5923:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 1922,
												"src": "5905:26:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$323",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 1919,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1918,
														"name": "IIdentity",
														"nameLocations": [
															"5905:9:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "5905:9:15"
													},
													"referencedDeclaration": 323,
													"src": "5905:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$323",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5871:61:15"
									},
									"src": "5850:83:15"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1923,
										"nodeType": "StructuredDocumentation",
										"src": "5939:261:15",
										"text": "  this event is emitted when an Identity has been updated\n  the event is emitted by the 'updateIdentity' function\n  `oldIdentity` is the old Identity contract's address to update\n  `newIdentity` is the new Identity contract's"
									},
									"eventSelector": "e98082932c8056a0f514da9104e4a66bc2cbaef102ad59d90c4b24220ebf6010",
									"id": 1931,
									"name": "IdentityUpdated",
									"nameLocation": "6211:15:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1926,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldIdentity",
												"nameLocation": "6245:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 1931,
												"src": "6227:29:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$323",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 1925,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1924,
														"name": "IIdentity",
														"nameLocations": [
															"6227:9:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "6227:9:15"
													},
													"referencedDeclaration": 323,
													"src": "6227:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$323",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1929,
												"indexed": true,
												"mutability": "mutable",
												"name": "newIdentity",
												"nameLocation": "6276:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 1931,
												"src": "6258:29:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$323",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 1928,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1927,
														"name": "IIdentity",
														"nameLocations": [
															"6258:9:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "6258:9:15"
													},
													"referencedDeclaration": 323,
													"src": "6258:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$323",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6226:62:15"
									},
									"src": "6205:84:15"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1932,
										"nodeType": "StructuredDocumentation",
										"src": "6295:295:15",
										"text": "  this event is emitted when an Identity's country has been updated\n  the event is emitted by the 'updateCountry' function\n  `investorAddress` is the address on which the country has been updated\n  `country` is the numeric code (ISO 3166-1) of the new country"
									},
									"eventSelector": "04ed3b726495c2dca1ff1215d9ca54e1a4030abb5e82b0f6ce55702416cee853",
									"id": 1938,
									"name": "CountryUpdated",
									"nameLocation": "6601:14:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1934,
												"indexed": true,
												"mutability": "mutable",
												"name": "investorAddress",
												"nameLocation": "6632:15:15",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "6616:31:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6616:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1936,
												"indexed": true,
												"mutability": "mutable",
												"name": "country",
												"nameLocation": "6664:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "6649:22:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1935,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "6649:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6615:57:15"
									},
									"src": "6595:78:15"
								},
								{
									"documentation": {
										"id": 1939,
										"nodeType": "StructuredDocumentation",
										"src": "6679:474:15",
										"text": "  @dev Register an identity contract corresponding to a user address.\n  Requires that the user doesn't have an identity contract already registered.\n  This function can only be called by a wallet set as agent of the smart contract\n  @param _userAddress The address of the user\n  @param _identity The address of the user's identity contract\n  @param _country The country of the investor\n  emits `IdentityRegistered` event"
									},
									"functionSelector": "454a03e0",
									"id": 1949,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registerIdentity",
									"nameLocation": "7167:16:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1941,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "7201:12:15",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "7193:20:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1940,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7193:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1944,
												"mutability": "mutable",
												"name": "_identity",
												"nameLocation": "7233:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "7223:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$323",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 1943,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1942,
														"name": "IIdentity",
														"nameLocations": [
															"7223:9:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "7223:9:15"
													},
													"referencedDeclaration": 323,
													"src": "7223:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$323",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1946,
												"mutability": "mutable",
												"name": "_country",
												"nameLocation": "7259:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "7252:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1945,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "7252:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7183:90:15"
									},
									"returnParameters": {
										"id": 1948,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7282:0:15"
									},
									"scope": 2059,
									"src": "7158:125:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1950,
										"nodeType": "StructuredDocumentation",
										"src": "7289:356:15",
										"text": "  @dev Removes an user from the identity registry.\n  Requires that the user have an identity contract already deployed that will be deleted.\n  This function can only be called by a wallet set as agent of the smart contract\n  @param _userAddress The address of the user to be removed\n  emits `IdentityRemoved` event"
									},
									"functionSelector": "a8d29d1d",
									"id": 1955,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deleteIdentity",
									"nameLocation": "7659:14:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1952,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "7682:12:15",
												"nodeType": "VariableDeclaration",
												"scope": 1955,
												"src": "7674:20:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7674:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7673:22:15"
									},
									"returnParameters": {
										"id": 1954,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7704:0:15"
									},
									"scope": 2059,
									"src": "7650:55:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1956,
										"nodeType": "StructuredDocumentation",
										"src": "7711:312:15",
										"text": "  @dev Replace the actual identityRegistryStorage contract with a new one.\n  This function can only be called by the wallet set as owner of the smart contract\n  @param _identityRegistryStorage The address of the new Identity Registry Storage\n  emits `IdentityStorageSet` event"
									},
									"functionSelector": "26d941ae",
									"id": 1961,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setIdentityRegistryStorage",
									"nameLocation": "8037:26:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1958,
												"mutability": "mutable",
												"name": "_identityRegistryStorage",
												"nameLocation": "8072:24:15",
												"nodeType": "VariableDeclaration",
												"scope": 1961,
												"src": "8064:32:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1957,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8064:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8063:34:15"
									},
									"returnParameters": {
										"id": 1960,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8106:0:15"
									},
									"scope": 2059,
									"src": "8028:79:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1962,
										"nodeType": "StructuredDocumentation",
										"src": "8113:304:15",
										"text": "  @dev Replace the actual claimTopicsRegistry contract with a new one.\n  This function can only be called by the wallet set as owner of the smart contract\n  @param _claimTopicsRegistry The address of the new claim Topics Registry\n  emits `ClaimTopicsRegistrySet` event"
									},
									"functionSelector": "670af6a9",
									"id": 1967,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setClaimTopicsRegistry",
									"nameLocation": "8431:22:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1964,
												"mutability": "mutable",
												"name": "_claimTopicsRegistry",
												"nameLocation": "8462:20:15",
												"nodeType": "VariableDeclaration",
												"scope": 1967,
												"src": "8454:28:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1963,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8454:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8453:30:15"
									},
									"returnParameters": {
										"id": 1966,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8492:0:15"
									},
									"scope": 2059,
									"src": "8422:71:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1968,
										"nodeType": "StructuredDocumentation",
										"src": "8499:316:15",
										"text": "  @dev Replace the actual trustedIssuersRegistry contract with a new one.\n  This function can only be called by the wallet set as owner of the smart contract\n  @param _trustedIssuersRegistry The address of the new Trusted Issuers Registry\n  emits `TrustedIssuersRegistrySet` event"
									},
									"functionSelector": "e744d789",
									"id": 1973,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setTrustedIssuersRegistry",
									"nameLocation": "8829:25:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1970,
												"mutability": "mutable",
												"name": "_trustedIssuersRegistry",
												"nameLocation": "8863:23:15",
												"nodeType": "VariableDeclaration",
												"scope": 1973,
												"src": "8855:31:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1969,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8855:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8854:33:15"
									},
									"returnParameters": {
										"id": 1972,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8896:0:15"
									},
									"scope": 2059,
									"src": "8820:77:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1974,
										"nodeType": "StructuredDocumentation",
										"src": "8903:410:15",
										"text": "  @dev Updates the country corresponding to a user address.\n  Requires that the user should have an identity contract already deployed that will be replaced.\n  This function can only be called by a wallet set as agent of the smart contract\n  @param _userAddress The address of the user\n  @param _country The new country of the user\n  emits `CountryUpdated` event"
									},
									"functionSelector": "3b239a7f",
									"id": 1981,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateCountry",
									"nameLocation": "9327:13:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1976,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "9349:12:15",
												"nodeType": "VariableDeclaration",
												"scope": 1981,
												"src": "9341:20:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1975,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9341:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1978,
												"mutability": "mutable",
												"name": "_country",
												"nameLocation": "9370:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 1981,
												"src": "9363:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1977,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "9363:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9340:39:15"
									},
									"returnParameters": {
										"id": 1980,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9388:0:15"
									},
									"scope": 2059,
									"src": "9318:71:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1982,
										"nodeType": "StructuredDocumentation",
										"src": "9395:526:15",
										"text": "  @dev Updates an identity contract corresponding to a user address.\n  Requires that the user address should be the owner of the identity contract.\n  Requires that the user should have an identity contract already deployed that will be replaced.\n  This function can only be called by a wallet set as agent of the smart contract\n  @param _userAddress The address of the user\n  @param _identity The address of the user's new identity contract\n  emits `IdentityUpdated` event"
									},
									"functionSelector": "8e098ca1",
									"id": 1990,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateIdentity",
									"nameLocation": "9935:14:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1984,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "9958:12:15",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "9950:20:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9950:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1987,
												"mutability": "mutable",
												"name": "_identity",
												"nameLocation": "9982:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "9972:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$323",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 1986,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1985,
														"name": "IIdentity",
														"nameLocations": [
															"9972:9:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "9972:9:15"
													},
													"referencedDeclaration": 323,
													"src": "9972:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$323",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9949:43:15"
									},
									"returnParameters": {
										"id": 1989,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10001:0:15"
									},
									"scope": 2059,
									"src": "9926:76:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1991,
										"nodeType": "StructuredDocumentation",
										"src": "10008:701:15",
										"text": "  @dev function allowing to register identities in batch\n  This function can only be called by a wallet set as agent of the smart contract\n  Requires that none of the users has an identity contract already registered.\n  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_userAddresses.length` IS TOO HIGH,\n  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \"OUT OF GAS\" TRANSACTION\n  @param _userAddresses The addresses of the users\n  @param _identities The addresses of the corresponding identity contracts\n  @param _countries The countries of the corresponding investors\n  emits _userAddresses.length `IdentityRegistered` events"
									},
									"functionSelector": "653dc9f1",
									"id": 2004,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "batchRegisterIdentity",
									"nameLocation": "10723:21:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1994,
												"mutability": "mutable",
												"name": "_userAddresses",
												"nameLocation": "10773:14:15",
												"nodeType": "VariableDeclaration",
												"scope": 2004,
												"src": "10754:33:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1992,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "10754:7:15",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1993,
													"nodeType": "ArrayTypeName",
													"src": "10754:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1998,
												"mutability": "mutable",
												"name": "_identities",
												"nameLocation": "10818:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 2004,
												"src": "10797:32:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IIdentity_$323_$dyn_calldata_ptr",
													"typeString": "contract IIdentity[]"
												},
												"typeName": {
													"baseType": {
														"id": 1996,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1995,
															"name": "IIdentity",
															"nameLocations": [
																"10797:9:15"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 323,
															"src": "10797:9:15"
														},
														"referencedDeclaration": 323,
														"src": "10797:9:15",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IIdentity_$323",
															"typeString": "contract IIdentity"
														}
													},
													"id": 1997,
													"nodeType": "ArrayTypeName",
													"src": "10797:11:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IIdentity_$323_$dyn_storage_ptr",
														"typeString": "contract IIdentity[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2001,
												"mutability": "mutable",
												"name": "_countries",
												"nameLocation": "10857:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 2004,
												"src": "10839:28:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint16_$dyn_calldata_ptr",
													"typeString": "uint16[]"
												},
												"typeName": {
													"baseType": {
														"id": 1999,
														"name": "uint16",
														"nodeType": "ElementaryTypeName",
														"src": "10839:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"id": 2000,
													"nodeType": "ArrayTypeName",
													"src": "10839:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint16_$dyn_storage_ptr",
														"typeString": "uint16[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10744:129:15"
									},
									"returnParameters": {
										"id": 2003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10882:0:15"
									},
									"scope": 2059,
									"src": "10714:169:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2005,
										"nodeType": "StructuredDocumentation",
										"src": "10889:292:15",
										"text": "  @dev This functions checks whether a wallet has its Identity registered or not\n  in the Identity Registry.\n  @param _userAddress The address of the user to be checked.\n  @return 'True' if the address is contained in the Identity Registry, 'false' if not."
									},
									"functionSelector": "5dbe47e8",
									"id": 2012,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "11195:8:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2007,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "11212:12:15",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "11204:20:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2006,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11204:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11203:22:15"
									},
									"returnParameters": {
										"id": 2011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2010,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "11249:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2009,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11249:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11248:6:15"
									},
									"scope": 2059,
									"src": "11186:69:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2013,
										"nodeType": "StructuredDocumentation",
										"src": "11261:391:15",
										"text": "  @dev This functions checks whether an identity contract\n  corresponding to the provided user address has the required claims or not based\n  on the data fetched from trusted issuers registry and from the claim topics registry\n  @param _userAddress The address of the user to be verified.\n  @return 'True' if the address is verified, 'false' if not."
									},
									"functionSelector": "b9209e33",
									"id": 2020,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isVerified",
									"nameLocation": "11666:10:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2015,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "11685:12:15",
												"nodeType": "VariableDeclaration",
												"scope": 2020,
												"src": "11677:20:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2014,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11677:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11676:22:15"
									},
									"returnParameters": {
										"id": 2019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2018,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2020,
												"src": "11722:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2017,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11722:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11721:6:15"
									},
									"scope": 2059,
									"src": "11657:71:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2021,
										"nodeType": "StructuredDocumentation",
										"src": "11734:117:15",
										"text": "  @dev Returns the onchainID of an investor.\n  @param _userAddress The wallet of the investor"
									},
									"functionSelector": "f0eb5e54",
									"id": 2029,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "identity",
									"nameLocation": "11865:8:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2023,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "11882:12:15",
												"nodeType": "VariableDeclaration",
												"scope": 2029,
												"src": "11874:20:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2022,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11874:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11873:22:15"
									},
									"returnParameters": {
										"id": 2028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2027,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2029,
												"src": "11919:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$323",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 2026,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2025,
														"name": "IIdentity",
														"nameLocations": [
															"11919:9:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "11919:9:15"
													},
													"referencedDeclaration": 323,
													"src": "11919:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$323",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11918:11:15"
									},
									"scope": 2059,
									"src": "11856:74:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2030,
										"nodeType": "StructuredDocumentation",
										"src": "11936:120:15",
										"text": "  @dev Returns the country code of an investor.\n  @param _userAddress The wallet of the investor"
									},
									"functionSelector": "7e42683b",
									"id": 2037,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "investorCountry",
									"nameLocation": "12070:15:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2032,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "12094:12:15",
												"nodeType": "VariableDeclaration",
												"scope": 2037,
												"src": "12086:20:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12086:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12085:22:15"
									},
									"returnParameters": {
										"id": 2036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2035,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2037,
												"src": "12131:6:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2034,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "12131:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12130:8:15"
									},
									"scope": 2059,
									"src": "12061:78:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2038,
										"nodeType": "StructuredDocumentation",
										"src": "12145:100:15",
										"text": "  @dev Returns the IdentityRegistryStorage linked to the current IdentityRegistry."
									},
									"functionSelector": "f11abfd8",
									"id": 2044,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "identityStorage",
									"nameLocation": "12259:15:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2039,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12274:2:15"
									},
									"returnParameters": {
										"id": 2043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2042,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "12300:24:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentityRegistryStorage_$2175",
													"typeString": "contract IIdentityRegistryStorage"
												},
												"typeName": {
													"id": 2041,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2040,
														"name": "IIdentityRegistryStorage",
														"nameLocations": [
															"12300:24:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2175,
														"src": "12300:24:15"
													},
													"referencedDeclaration": 2175,
													"src": "12300:24:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentityRegistryStorage_$2175",
														"typeString": "contract IIdentityRegistryStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12299:26:15"
									},
									"scope": 2059,
									"src": "12250:76:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2045,
										"nodeType": "StructuredDocumentation",
										"src": "12332:99:15",
										"text": "  @dev Returns the TrustedIssuersRegistry linked to the current IdentityRegistry."
									},
									"functionSelector": "b4f3fcb7",
									"id": 2051,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "issuersRegistry",
									"nameLocation": "12445:15:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2046,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12460:2:15"
									},
									"returnParameters": {
										"id": 2050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2049,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2051,
												"src": "12486:23:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ITrustedIssuersRegistry_$2276",
													"typeString": "contract ITrustedIssuersRegistry"
												},
												"typeName": {
													"id": 2048,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2047,
														"name": "ITrustedIssuersRegistry",
														"nameLocations": [
															"12486:23:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2276,
														"src": "12486:23:15"
													},
													"referencedDeclaration": 2276,
													"src": "12486:23:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ITrustedIssuersRegistry_$2276",
														"typeString": "contract ITrustedIssuersRegistry"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12485:25:15"
									},
									"scope": 2059,
									"src": "12436:75:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2052,
										"nodeType": "StructuredDocumentation",
										"src": "12517:96:15",
										"text": "  @dev Returns the ClaimTopicsRegistry linked to the current IdentityRegistry."
									},
									"functionSelector": "3b3e12f4",
									"id": 2058,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "topicsRegistry",
									"nameLocation": "12627:14:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2053,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12641:2:15"
									},
									"returnParameters": {
										"id": 2057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2056,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2058,
												"src": "12667:20:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimTopicsRegistry_$1884",
													"typeString": "contract IClaimTopicsRegistry"
												},
												"typeName": {
													"id": 2055,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2054,
														"name": "IClaimTopicsRegistry",
														"nameLocations": [
															"12667:20:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1884,
														"src": "12667:20:15"
													},
													"referencedDeclaration": 1884,
													"src": "12667:20:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimTopicsRegistry_$1884",
														"typeString": "contract IClaimTopicsRegistry"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12666:22:15"
									},
									"scope": 2059,
									"src": "12618:71:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2060,
							"src": "4095:8596:15",
							"usedErrors": []
						}
					],
					"src": "3817:8875:15"
				},
				"id": 15
			},
			"https://github.com/TokenySolutions/T-REX/blob/main/contracts/registry/interface/IIdentityRegistryStorage.sol": {
				"ast": {
					"absolutePath": "https://github.com/TokenySolutions/T-REX/blob/main/contracts/registry/interface/IIdentityRegistryStorage.sol",
					"exportedSymbols": {
						"IERC734": [
							206
						],
						"IERC735": [
							314
						],
						"IIdentity": [
							323
						],
						"IIdentityRegistryStorage": [
							2175
						]
					},
					"id": 2176,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2061,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "3817:23:16"
						},
						{
							"absolutePath": "@onchain-id/solidity/contracts/interface/IIdentity.sol",
							"file": "@onchain-id/solidity/contracts/interface/IIdentity.sol",
							"id": 2062,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2176,
							"sourceUnit": 324,
							"src": "3842:64:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IIdentityRegistryStorage",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2175,
							"linearizedBaseContracts": [
								2175
							],
							"name": "IIdentityRegistryStorage",
							"nameLocation": "3918:24:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 2063,
										"nodeType": "StructuredDocumentation",
										"src": "3966:306:16",
										"text": "  this event is emitted when an Identity is registered into the storage contract.\n  the event is emitted by the 'registerIdentity' function\n  `investorAddress` is the address of the investor's wallet\n  `identity` is the address of the Identity smart contract (onchainID)"
									},
									"eventSelector": "0030dea7e9c9afaa2e3c9810f2fc9b5181f1bad74ca5a8db85f746a33585e747",
									"id": 2070,
									"name": "IdentityStored",
									"nameLocation": "4283:14:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2065,
												"indexed": true,
												"mutability": "mutable",
												"name": "investorAddress",
												"nameLocation": "4314:15:16",
												"nodeType": "VariableDeclaration",
												"scope": 2070,
												"src": "4298:31:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2064,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4298:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2068,
												"indexed": true,
												"mutability": "mutable",
												"name": "identity",
												"nameLocation": "4349:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2070,
												"src": "4331:26:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$323",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 2067,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2066,
														"name": "IIdentity",
														"nameLocations": [
															"4331:9:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "4331:9:16"
													},
													"referencedDeclaration": 323,
													"src": "4331:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$323",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4297:61:16"
									},
									"src": "4277:82:16"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2071,
										"nodeType": "StructuredDocumentation",
										"src": "4365:301:16",
										"text": "  this event is emitted when an Identity is removed from the storage contract.\n  the event is emitted by the 'deleteIdentity' function\n  `investorAddress` is the address of the investor's wallet\n  `identity` is the address of the Identity smart contract (onchainID)"
									},
									"eventSelector": "ca6a4c3370b859312246e7f086284076e557997e10d856b716c23ab67067790b",
									"id": 2078,
									"name": "IdentityUnstored",
									"nameLocation": "4677:16:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2073,
												"indexed": true,
												"mutability": "mutable",
												"name": "investorAddress",
												"nameLocation": "4710:15:16",
												"nodeType": "VariableDeclaration",
												"scope": 2078,
												"src": "4694:31:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2072,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4694:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2076,
												"indexed": true,
												"mutability": "mutable",
												"name": "identity",
												"nameLocation": "4745:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2078,
												"src": "4727:26:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$323",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 2075,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2074,
														"name": "IIdentity",
														"nameLocations": [
															"4727:9:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "4727:9:16"
													},
													"referencedDeclaration": 323,
													"src": "4727:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$323",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4693:61:16"
									},
									"src": "4671:84:16"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2079,
										"nodeType": "StructuredDocumentation",
										"src": "4761:261:16",
										"text": "  this event is emitted when an Identity has been updated\n  the event is emitted by the 'updateIdentity' function\n  `oldIdentity` is the old Identity contract's address to update\n  `newIdentity` is the new Identity contract's"
									},
									"eventSelector": "556ce885dfcea52155c773f1ed2e58781c51945c13030ab8f793c61f51d1b808",
									"id": 2087,
									"name": "IdentityModified",
									"nameLocation": "5033:16:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2082,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldIdentity",
												"nameLocation": "5068:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2087,
												"src": "5050:29:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$323",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 2081,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2080,
														"name": "IIdentity",
														"nameLocations": [
															"5050:9:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "5050:9:16"
													},
													"referencedDeclaration": 323,
													"src": "5050:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$323",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2085,
												"indexed": true,
												"mutability": "mutable",
												"name": "newIdentity",
												"nameLocation": "5099:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2087,
												"src": "5081:29:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$323",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 2084,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2083,
														"name": "IIdentity",
														"nameLocations": [
															"5081:9:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "5081:9:16"
													},
													"referencedDeclaration": 323,
													"src": "5081:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$323",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5049:62:16"
									},
									"src": "5027:85:16"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2088,
										"nodeType": "StructuredDocumentation",
										"src": "5118:295:16",
										"text": "  this event is emitted when an Identity's country has been updated\n  the event is emitted by the 'updateCountry' function\n  `investorAddress` is the address on which the country has been updated\n  `country` is the numeric code (ISO 3166-1) of the new country"
									},
									"eventSelector": "20965fcdc6eed7ae398065b40ece4e732ba667992ca819fc54e80e9f2047c4cf",
									"id": 2094,
									"name": "CountryModified",
									"nameLocation": "5424:15:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2090,
												"indexed": true,
												"mutability": "mutable",
												"name": "investorAddress",
												"nameLocation": "5456:15:16",
												"nodeType": "VariableDeclaration",
												"scope": 2094,
												"src": "5440:31:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2089,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5440:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2092,
												"indexed": true,
												"mutability": "mutable",
												"name": "country",
												"nameLocation": "5488:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2094,
												"src": "5473:22:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2091,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "5473:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5439:57:16"
									},
									"src": "5418:79:16"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2095,
										"nodeType": "StructuredDocumentation",
										"src": "5503:240:16",
										"text": "  this event is emitted when an Identity Registry is bound to the storage contract\n  the event is emitted by the 'addIdentityRegistry' function\n  `identityRegistry` is the address of the identity registry added"
									},
									"eventSelector": "500c250171aa20e861b680f93502547b9d436eda7d4c537fc360db6e0c6eedfb",
									"id": 2099,
									"name": "IdentityRegistryBound",
									"nameLocation": "5754:21:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2097,
												"indexed": true,
												"mutability": "mutable",
												"name": "identityRegistry",
												"nameLocation": "5792:16:16",
												"nodeType": "VariableDeclaration",
												"scope": 2099,
												"src": "5776:32:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2096,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5776:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5775:34:16"
									},
									"src": "5748:62:16"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2100,
										"nodeType": "StructuredDocumentation",
										"src": "5816:249:16",
										"text": "  this event is emitted when an Identity Registry is unbound from the storage contract\n  the event is emitted by the 'removeIdentityRegistry' function\n  `identityRegistry` is the address of the identity registry removed"
									},
									"eventSelector": "51f353eb5801583fdf2706e43c045b62fdf6b1566820b349390616363ecf72c9",
									"id": 2104,
									"name": "IdentityRegistryUnbound",
									"nameLocation": "6076:23:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2102,
												"indexed": true,
												"mutability": "mutable",
												"name": "identityRegistry",
												"nameLocation": "6116:16:16",
												"nodeType": "VariableDeclaration",
												"scope": 2104,
												"src": "6100:32:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6100:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6099:34:16"
									},
									"src": "6070:64:16"
								},
								{
									"documentation": {
										"id": 2105,
										"nodeType": "StructuredDocumentation",
										"src": "6159:483:16",
										"text": "  @dev adds an identity contract corresponding to a user address in the storage.\n  Requires that the user doesn't have an identity contract already registered.\n  This function can only be called by an address set as agent of the smart contract\n  @param _userAddress The address of the user\n  @param _identity The address of the user's identity contract\n  @param _country The country of the investor\n  emits `IdentityStored` event"
									},
									"functionSelector": "a53410dd",
									"id": 2115,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addIdentityToStorage",
									"nameLocation": "6656:20:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2107,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "6694:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 2115,
												"src": "6686:20:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6686:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2110,
												"mutability": "mutable",
												"name": "_identity",
												"nameLocation": "6726:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 2115,
												"src": "6716:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$323",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 2109,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2108,
														"name": "IIdentity",
														"nameLocations": [
															"6716:9:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "6716:9:16"
													},
													"referencedDeclaration": 323,
													"src": "6716:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$323",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2112,
												"mutability": "mutable",
												"name": "_country",
												"nameLocation": "6752:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2115,
												"src": "6745:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2111,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "6745:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6676:90:16"
									},
									"returnParameters": {
										"id": 2114,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6775:0:16"
									},
									"scope": 2175,
									"src": "6647:129:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2116,
										"nodeType": "StructuredDocumentation",
										"src": "6782:349:16",
										"text": "  @dev Removes an user from the storage.\n  Requires that the user have an identity contract already deployed that will be deleted.\n  This function can only be called by an address set as agent of the smart contract\n  @param _userAddress The address of the user to be removed\n  emits `IdentityUnstored` event"
									},
									"functionSelector": "cf191bcd",
									"id": 2121,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeIdentityFromStorage",
									"nameLocation": "7145:25:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2118,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "7179:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 2121,
												"src": "7171:20:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7171:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7170:22:16"
									},
									"returnParameters": {
										"id": 2120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7201:0:16"
									},
									"scope": 2175,
									"src": "7136:66:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2122,
										"nodeType": "StructuredDocumentation",
										"src": "7208:413:16",
										"text": "  @dev Updates the country corresponding to a user address.\n  Requires that the user should have an identity contract already deployed that will be replaced.\n  This function can only be called by an address set as agent of the smart contract\n  @param _userAddress The address of the user\n  @param _country The new country of the user\n  emits `CountryModified` event"
									},
									"functionSelector": "9f3418d5",
									"id": 2129,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "modifyStoredInvestorCountry",
									"nameLocation": "7635:27:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2124,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "7671:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 2129,
												"src": "7663:20:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7663:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2126,
												"mutability": "mutable",
												"name": "_country",
												"nameLocation": "7692:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2129,
												"src": "7685:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2125,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "7685:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7662:39:16"
									},
									"returnParameters": {
										"id": 2128,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7710:0:16"
									},
									"scope": 2175,
									"src": "7626:85:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2130,
										"nodeType": "StructuredDocumentation",
										"src": "7717:529:16",
										"text": "  @dev Updates an identity contract corresponding to a user address.\n  Requires that the user address should be the owner of the identity contract.\n  Requires that the user should have an identity contract already deployed that will be replaced.\n  This function can only be called by an address set as agent of the smart contract\n  @param _userAddress The address of the user\n  @param _identity The address of the user's new identity contract\n  emits `IdentityModified` event"
									},
									"functionSelector": "e805cf86",
									"id": 2138,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "modifyStoredIdentity",
									"nameLocation": "8260:20:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2132,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "8289:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 2138,
												"src": "8281:20:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8281:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2135,
												"mutability": "mutable",
												"name": "_identity",
												"nameLocation": "8313:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 2138,
												"src": "8303:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$323",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 2134,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2133,
														"name": "IIdentity",
														"nameLocations": [
															"8303:9:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "8303:9:16"
													},
													"referencedDeclaration": 323,
													"src": "8303:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$323",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8280:43:16"
									},
									"returnParameters": {
										"id": 2137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8332:0:16"
									},
									"scope": 2175,
									"src": "8251:82:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2139,
										"nodeType": "StructuredDocumentation",
										"src": "8339:426:16",
										"text": "  @notice Adds an identity registry as agent of the Identity Registry Storage Contract.\n  This function can only be called by the wallet set as owner of the smart contract\n  This function adds the identity registry to the list of identityRegistries linked to the storage contract\n  cannot bind more than 300 IR to 1 IRS\n  @param _identityRegistry The identity registry address to add."
									},
									"functionSelector": "690a49f9",
									"id": 2144,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "bindIdentityRegistry",
									"nameLocation": "8779:20:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2141,
												"mutability": "mutable",
												"name": "_identityRegistry",
												"nameLocation": "8808:17:16",
												"nodeType": "VariableDeclaration",
												"scope": 2144,
												"src": "8800:25:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8800:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8799:27:16"
									},
									"returnParameters": {
										"id": 2143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8835:0:16"
									},
									"scope": 2175,
									"src": "8770:66:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2145,
										"nodeType": "StructuredDocumentation",
										"src": "8842:399:16",
										"text": "  @notice Removes an identity registry from being agent of the Identity Registry Storage Contract.\n  This function can only be called by the wallet set as owner of the smart contract\n  This function removes the identity registry from the list of identityRegistries linked to the storage contract\n  @param _identityRegistry The identity registry address to remove."
									},
									"functionSelector": "97a012f7",
									"id": 2150,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unbindIdentityRegistry",
									"nameLocation": "9255:22:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2147,
												"mutability": "mutable",
												"name": "_identityRegistry",
												"nameLocation": "9286:17:16",
												"nodeType": "VariableDeclaration",
												"scope": 2150,
												"src": "9278:25:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9278:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9277:27:16"
									},
									"returnParameters": {
										"id": 2149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9313:0:16"
									},
									"scope": 2175,
									"src": "9246:68:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2151,
										"nodeType": "StructuredDocumentation",
										"src": "9320:87:16",
										"text": "  @dev Returns the identity registries linked to the storage contract"
									},
									"functionSelector": "bf9eb959",
									"id": 2157,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "linkedIdentityRegistries",
									"nameLocation": "9421:24:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9445:2:16"
									},
									"returnParameters": {
										"id": 2156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2155,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2157,
												"src": "9471:16:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2153,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "9471:7:16",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2154,
													"nodeType": "ArrayTypeName",
													"src": "9471:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9470:18:16"
									},
									"scope": 2175,
									"src": "9412:77:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2158,
										"nodeType": "StructuredDocumentation",
										"src": "9495:117:16",
										"text": "  @dev Returns the onchainID of an investor.\n  @param _userAddress The wallet of the investor"
									},
									"functionSelector": "7988d3a5",
									"id": 2166,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "storedIdentity",
									"nameLocation": "9626:14:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2160,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "9649:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 2166,
												"src": "9641:20:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9641:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9640:22:16"
									},
									"returnParameters": {
										"id": 2165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2166,
												"src": "9686:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$323",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 2163,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2162,
														"name": "IIdentity",
														"nameLocations": [
															"9686:9:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "9686:9:16"
													},
													"referencedDeclaration": 323,
													"src": "9686:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$323",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9685:11:16"
									},
									"scope": 2175,
									"src": "9617:80:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2167,
										"nodeType": "StructuredDocumentation",
										"src": "9703:120:16",
										"text": "  @dev Returns the country code of an investor.\n  @param _userAddress The wallet of the investor"
									},
									"functionSelector": "727e13bc",
									"id": 2174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "storedInvestorCountry",
									"nameLocation": "9837:21:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2169,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "9867:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 2174,
												"src": "9859:20:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9859:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9858:22:16"
									},
									"returnParameters": {
										"id": 2173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2174,
												"src": "9904:6:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2171,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "9904:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9903:8:16"
									},
									"scope": 2175,
									"src": "9828:84:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2176,
							"src": "3908:6006:16",
							"usedErrors": []
						}
					],
					"src": "3817:6098:16"
				},
				"id": 16
			},
			"https://github.com/TokenySolutions/T-REX/blob/main/contracts/registry/interface/ITrustedIssuersRegistry.sol": {
				"ast": {
					"absolutePath": "https://github.com/TokenySolutions/T-REX/blob/main/contracts/registry/interface/ITrustedIssuersRegistry.sol",
					"exportedSymbols": {
						"IClaimIssuer": [
							59
						],
						"IERC734": [
							206
						],
						"IERC735": [
							314
						],
						"IIdentity": [
							323
						],
						"ITrustedIssuersRegistry": [
							2276
						]
					},
					"id": 2277,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2177,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "3818:23:17"
						},
						{
							"absolutePath": "@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
							"file": "@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
							"id": 2178,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2277,
							"sourceUnit": 60,
							"src": "3843:67:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ITrustedIssuersRegistry",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2276,
							"linearizedBaseContracts": [
								2276
							],
							"name": "ITrustedIssuersRegistry",
							"nameLocation": "3922:23:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 2179,
										"nodeType": "StructuredDocumentation",
										"src": "3952:321:17",
										"text": "  this event is emitted when a trusted issuer is added in the registry.\n  the event is emitted by the addTrustedIssuer function\n  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract\n  `claimTopics` is the set of claims that the trusted issuer is allowed to emit"
									},
									"eventSelector": "fedc33fd34859594822c0ff6f3f4f9fc279cc6d5cae53068f706a088e4500872",
									"id": 2187,
									"name": "TrustedIssuerAdded",
									"nameLocation": "4284:18:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2182,
												"indexed": true,
												"mutability": "mutable",
												"name": "trustedIssuer",
												"nameLocation": "4324:13:17",
												"nodeType": "VariableDeclaration",
												"scope": 2187,
												"src": "4303:34:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$59",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 2181,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2180,
														"name": "IClaimIssuer",
														"nameLocations": [
															"4303:12:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 59,
														"src": "4303:12:17"
													},
													"referencedDeclaration": 59,
													"src": "4303:12:17",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$59",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2185,
												"indexed": false,
												"mutability": "mutable",
												"name": "claimTopics",
												"nameLocation": "4349:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 2187,
												"src": "4339:21:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2183,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4339:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2184,
													"nodeType": "ArrayTypeName",
													"src": "4339:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4302:59:17"
									},
									"src": "4278:84:17"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2188,
										"nodeType": "StructuredDocumentation",
										"src": "4368:242:17",
										"text": "  this event is emitted when a trusted issuer is removed from the registry.\n  the event is emitted by the removeTrustedIssuer function\n  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract"
									},
									"eventSelector": "2214ded40113cc3fb63fc206cafee88270b0a903dac7245d54efdde30ebb0321",
									"id": 2193,
									"name": "TrustedIssuerRemoved",
									"nameLocation": "4621:20:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2191,
												"indexed": true,
												"mutability": "mutable",
												"name": "trustedIssuer",
												"nameLocation": "4663:13:17",
												"nodeType": "VariableDeclaration",
												"scope": 2193,
												"src": "4642:34:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$59",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 2190,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2189,
														"name": "IClaimIssuer",
														"nameLocations": [
															"4642:12:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 59,
														"src": "4642:12:17"
													},
													"referencedDeclaration": 59,
													"src": "4642:12:17",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$59",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4641:36:17"
									},
									"src": "4615:63:17"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2194,
										"nodeType": "StructuredDocumentation",
										"src": "4684:348:17",
										"text": "  this event is emitted when the set of claim topics is changed for a given trusted issuer.\n  the event is emitted by the updateIssuerClaimTopics function\n  `trustedIssuer` is the address of the trusted issuer's ClaimIssuer contract\n  `claimTopics` is the set of claims that the trusted issuer is allowed to emit"
									},
									"eventSelector": "ec753cfc52044f61676f18a11e500093a9f2b1cd5e4942bc476f2b0438159bcf",
									"id": 2202,
									"name": "ClaimTopicsUpdated",
									"nameLocation": "5043:18:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2197,
												"indexed": true,
												"mutability": "mutable",
												"name": "trustedIssuer",
												"nameLocation": "5083:13:17",
												"nodeType": "VariableDeclaration",
												"scope": 2202,
												"src": "5062:34:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$59",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 2196,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2195,
														"name": "IClaimIssuer",
														"nameLocations": [
															"5062:12:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 59,
														"src": "5062:12:17"
													},
													"referencedDeclaration": 59,
													"src": "5062:12:17",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$59",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2200,
												"indexed": false,
												"mutability": "mutable",
												"name": "claimTopics",
												"nameLocation": "5108:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 2202,
												"src": "5098:21:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2198,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5098:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2199,
													"nodeType": "ArrayTypeName",
													"src": "5098:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5061:59:17"
									},
									"src": "5037:84:17"
								},
								{
									"documentation": {
										"id": 2203,
										"nodeType": "StructuredDocumentation",
										"src": "5127:651:17",
										"text": "  @dev registers a ClaimIssuer contract as trusted claim issuer.\n  Requires that a ClaimIssuer contract doesn't already exist\n  Requires that the claimTopics set is not empty\n  Requires that there is no more than 15 claimTopics\n  Requires that there is no more than 50 Trusted issuers\n  @param _trustedIssuer The ClaimIssuer contract address of the trusted claim issuer.\n  @param _claimTopics the set of claim topics that the trusted issuer is allowed to emit\n  This function can only be called by the owner of the Trusted Issuers Registry contract\n  emits a `TrustedIssuerAdded` event"
									},
									"functionSelector": "9f63ea98",
									"id": 2212,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addTrustedIssuer",
									"nameLocation": "5792:16:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2206,
												"mutability": "mutable",
												"name": "_trustedIssuer",
												"nameLocation": "5822:14:17",
												"nodeType": "VariableDeclaration",
												"scope": 2212,
												"src": "5809:27:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$59",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 2205,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2204,
														"name": "IClaimIssuer",
														"nameLocations": [
															"5809:12:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 59,
														"src": "5809:12:17"
													},
													"referencedDeclaration": 59,
													"src": "5809:12:17",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$59",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2209,
												"mutability": "mutable",
												"name": "_claimTopics",
												"nameLocation": "5857:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 2212,
												"src": "5838:31:17",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2207,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5838:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2208,
													"nodeType": "ArrayTypeName",
													"src": "5838:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5808:62:17"
									},
									"returnParameters": {
										"id": 2211,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5879:0:17"
									},
									"scope": 2276,
									"src": "5783:97:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2213,
										"nodeType": "StructuredDocumentation",
										"src": "5886:353:17",
										"text": "  @dev Removes the ClaimIssuer contract of a trusted claim issuer.\n  Requires that the claim issuer contract to be registered first\n  @param _trustedIssuer the claim issuer to remove.\n  This function can only be called by the owner of the Trusted Issuers Registry contract\n  emits a `TrustedIssuerRemoved` event"
									},
									"functionSelector": "b93d28eb",
									"id": 2219,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeTrustedIssuer",
									"nameLocation": "6253:19:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2216,
												"mutability": "mutable",
												"name": "_trustedIssuer",
												"nameLocation": "6286:14:17",
												"nodeType": "VariableDeclaration",
												"scope": 2219,
												"src": "6273:27:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$59",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 2215,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2214,
														"name": "IClaimIssuer",
														"nameLocations": [
															"6273:12:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 59,
														"src": "6273:12:17"
													},
													"referencedDeclaration": 59,
													"src": "6273:12:17",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$59",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6272:29:17"
									},
									"returnParameters": {
										"id": 2218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6310:0:17"
									},
									"scope": 2276,
									"src": "6244:67:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2220,
										"nodeType": "StructuredDocumentation",
										"src": "6317:591:17",
										"text": "  @dev Updates the set of claim topics that a trusted issuer is allowed to emit.\n  Requires that this ClaimIssuer contract already exists in the registry\n  Requires that the provided claimTopics set is not empty\n  Requires that there is no more than 15 claimTopics\n  @param _trustedIssuer the claim issuer to update.\n  @param _claimTopics the set of claim topics that the trusted issuer is allowed to emit\n  This function can only be called by the owner of the Trusted Issuers Registry contract\n  emits a `ClaimTopicsUpdated` event"
									},
									"functionSelector": "04bc7e84",
									"id": 2229,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateIssuerClaimTopics",
									"nameLocation": "6922:23:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2223,
												"mutability": "mutable",
												"name": "_trustedIssuer",
												"nameLocation": "6959:14:17",
												"nodeType": "VariableDeclaration",
												"scope": 2229,
												"src": "6946:27:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$59",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 2222,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2221,
														"name": "IClaimIssuer",
														"nameLocations": [
															"6946:12:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 59,
														"src": "6946:12:17"
													},
													"referencedDeclaration": 59,
													"src": "6946:12:17",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$59",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2226,
												"mutability": "mutable",
												"name": "_claimTopics",
												"nameLocation": "6994:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 2229,
												"src": "6975:31:17",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2224,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6975:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2225,
													"nodeType": "ArrayTypeName",
													"src": "6975:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6945:62:17"
									},
									"returnParameters": {
										"id": 2228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7016:0:17"
									},
									"scope": 2276,
									"src": "6913:104:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2230,
										"nodeType": "StructuredDocumentation",
										"src": "7023:138:17",
										"text": "  @dev Function for getting all the trusted claim issuers stored.\n  @return array of all claim issuers registered."
									},
									"functionSelector": "d9dd24c5",
									"id": 2237,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTrustedIssuers",
									"nameLocation": "7175:17:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7192:2:17"
									},
									"returnParameters": {
										"id": 2236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2237,
												"src": "7218:21:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$59_$dyn_memory_ptr",
													"typeString": "contract IClaimIssuer[]"
												},
												"typeName": {
													"baseType": {
														"id": 2233,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2232,
															"name": "IClaimIssuer",
															"nameLocations": [
																"7218:12:17"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 59,
															"src": "7218:12:17"
														},
														"referencedDeclaration": 59,
														"src": "7218:12:17",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IClaimIssuer_$59",
															"typeString": "contract IClaimIssuer"
														}
													},
													"id": 2234,
													"nodeType": "ArrayTypeName",
													"src": "7218:14:17",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_ptr",
														"typeString": "contract IClaimIssuer[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7217:23:17"
									},
									"scope": 2276,
									"src": "7166:75:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2238,
										"nodeType": "StructuredDocumentation",
										"src": "7247:271:17",
										"text": "  @dev Function for getting all the trusted issuer allowed for a given claim topic.\n  @param claimTopic the claim topic to get the trusted issuers for.\n  @return array of all claim issuer addresses that are allowed for the given claim topic."
									},
									"functionSelector": "52c111d1",
									"id": 2247,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTrustedIssuersForClaimTopic",
									"nameLocation": "7532:30:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2240,
												"mutability": "mutable",
												"name": "claimTopic",
												"nameLocation": "7571:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 2247,
												"src": "7563:18:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7563:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7562:20:17"
									},
									"returnParameters": {
										"id": 2246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2247,
												"src": "7606:21:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$59_$dyn_memory_ptr",
													"typeString": "contract IClaimIssuer[]"
												},
												"typeName": {
													"baseType": {
														"id": 2243,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2242,
															"name": "IClaimIssuer",
															"nameLocations": [
																"7606:12:17"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 59,
															"src": "7606:12:17"
														},
														"referencedDeclaration": 59,
														"src": "7606:12:17",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IClaimIssuer_$59",
															"typeString": "contract IClaimIssuer"
														}
													},
													"id": 2244,
													"nodeType": "ArrayTypeName",
													"src": "7606:14:17",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_ptr",
														"typeString": "contract IClaimIssuer[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7605:23:17"
									},
									"scope": 2276,
									"src": "7523:106:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2248,
										"nodeType": "StructuredDocumentation",
										"src": "7635:197:17",
										"text": "  @dev Checks if the ClaimIssuer contract is trusted\n  @param _issuer the address of the ClaimIssuer contract\n  @return true if the issuer is trusted, false otherwise."
									},
									"functionSelector": "ef2ed1a4",
									"id": 2255,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isTrustedIssuer",
									"nameLocation": "7846:15:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2250,
												"mutability": "mutable",
												"name": "_issuer",
												"nameLocation": "7870:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2255,
												"src": "7862:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7862:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7861:17:17"
									},
									"returnParameters": {
										"id": 2254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2253,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2255,
												"src": "7902:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2252,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7902:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7901:6:17"
									},
									"scope": 2276,
									"src": "7837:71:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2256,
										"nodeType": "StructuredDocumentation",
										"src": "7914:333:17",
										"text": "  @dev Function for getting all the claim topic of trusted claim issuer\n  Requires the provided ClaimIssuer contract to be registered in the trusted issuers registry.\n  @param _trustedIssuer the trusted issuer concerned.\n  @return The set of claim topics that the trusted issuer is allowed to emit"
									},
									"functionSelector": "c28fb278",
									"id": 2265,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTrustedIssuerClaimTopics",
									"nameLocation": "8261:27:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2259,
												"mutability": "mutable",
												"name": "_trustedIssuer",
												"nameLocation": "8302:14:17",
												"nodeType": "VariableDeclaration",
												"scope": 2265,
												"src": "8289:27:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$59",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 2258,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2257,
														"name": "IClaimIssuer",
														"nameLocations": [
															"8289:12:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 59,
														"src": "8289:12:17"
													},
													"referencedDeclaration": 59,
													"src": "8289:12:17",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$59",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8288:29:17"
									},
									"returnParameters": {
										"id": 2264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2263,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2265,
												"src": "8341:16:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2261,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "8341:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2262,
													"nodeType": "ArrayTypeName",
													"src": "8341:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8340:18:17"
									},
									"scope": 2276,
									"src": "8252:107:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2266,
										"nodeType": "StructuredDocumentation",
										"src": "8365:383:17",
										"text": "  @dev Function for checking if the trusted claim issuer is allowed\n  to emit a certain claim topic\n  @param _issuer the address of the trusted issuer's ClaimIssuer contract\n  @param _claimTopic the Claim Topic that has to be checked to know if the `issuer` is allowed to emit it\n  @return true if the issuer is trusted for this claim topic."
									},
									"functionSelector": "34a89987",
									"id": 2275,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasClaimTopic",
									"nameLocation": "8762:13:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2268,
												"mutability": "mutable",
												"name": "_issuer",
												"nameLocation": "8784:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2275,
												"src": "8776:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2270,
												"mutability": "mutable",
												"name": "_claimTopic",
												"nameLocation": "8801:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 2275,
												"src": "8793:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8793:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8775:38:17"
									},
									"returnParameters": {
										"id": 2274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2275,
												"src": "8837:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2272,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8837:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8836:6:17"
									},
									"scope": 2276,
									"src": "8753:90:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2277,
							"src": "3912:4933:17",
							"usedErrors": []
						}
					],
					"src": "3818:5028:17"
				},
				"id": 17
			},
			"https://github.com/TokenySolutions/T-REX/blob/main/contracts/token/IToken.sol": {
				"ast": {
					"absolutePath": "https://github.com/TokenySolutions/T-REX/blob/main/contracts/token/IToken.sol",
					"exportedSymbols": {
						"IClaimIssuer": [
							59
						],
						"IClaimTopicsRegistry": [
							1884
						],
						"IERC20": [
							1074
						],
						"IERC734": [
							206
						],
						"IERC735": [
							314
						],
						"IIdentity": [
							323
						],
						"IIdentityRegistry": [
							2059
						],
						"IIdentityRegistryStorage": [
							2175
						],
						"IModularCompliance": [
							1852
						],
						"IToken": [
							2591
						],
						"ITrustedIssuersRegistry": [
							2276
						]
					},
					"id": 2592,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2278,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "3818:23:18"
						},
						{
							"absolutePath": "https://github.com/TokenySolutions/T-REX/blob/main/contracts/registry/interface/IIdentityRegistry.sol",
							"file": "../registry/interface/IIdentityRegistry.sol",
							"id": 2279,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2592,
							"sourceUnit": 2060,
							"src": "3843:53:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/TokenySolutions/T-REX/blob/main/contracts/compliance/modular/IModularCompliance.sol",
							"file": "../compliance/modular/IModularCompliance.sol",
							"id": 2280,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2592,
							"sourceUnit": 1853,
							"src": "3897:54:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 2281,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2592,
							"sourceUnit": 1075,
							"src": "3952:56:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2283,
										"name": "IERC20",
										"nameLocations": [
											"4049:6:18"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1074,
										"src": "4049:6:18"
									},
									"id": 2284,
									"nodeType": "InheritanceSpecifier",
									"src": "4049:6:18"
								}
							],
							"canonicalName": "IToken",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2282,
								"nodeType": "StructuredDocumentation",
								"src": "4010:19:18",
								"text": "@dev interface"
							},
							"fullyImplemented": false,
							"id": 2591,
							"linearizedBaseContracts": [
								2591,
								1074
							],
							"name": "IToken",
							"nameLocation": "4039:6:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 2285,
										"nodeType": "StructuredDocumentation",
										"src": "4079:463:18",
										"text": "  this event is emitted when the token information is updated.\n  the event is emitted by the token init function and by the setTokenInformation function\n  `_newName` is the name of the token\n  `_newSymbol` is the symbol of the token\n  `_newDecimals` is the decimals of the token\n  `_newVersion` is the version of the token, current version is 3.0\n  `_newOnchainID` is the address of the onchainID of the token"
									},
									"eventSelector": "6a1105ac8148a3c319adbc369f9072573e8a11d3a3d195e067e7c40767ec54d1",
									"id": 2297,
									"name": "UpdatedTokenInformation",
									"nameLocation": "4553:23:18",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2287,
												"indexed": true,
												"mutability": "mutable",
												"name": "_newName",
												"nameLocation": "4592:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 2297,
												"src": "4577:23:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2286,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4577:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2289,
												"indexed": true,
												"mutability": "mutable",
												"name": "_newSymbol",
												"nameLocation": "4617:10:18",
												"nodeType": "VariableDeclaration",
												"scope": 2297,
												"src": "4602:25:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2288,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4602:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2291,
												"indexed": false,
												"mutability": "mutable",
												"name": "_newDecimals",
												"nameLocation": "4635:12:18",
												"nodeType": "VariableDeclaration",
												"scope": 2297,
												"src": "4629:18:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2290,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4629:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2293,
												"indexed": false,
												"mutability": "mutable",
												"name": "_newVersion",
												"nameLocation": "4660:11:18",
												"nodeType": "VariableDeclaration",
												"scope": 2297,
												"src": "4649:22:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2292,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4649:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2295,
												"indexed": true,
												"mutability": "mutable",
												"name": "_newOnchainID",
												"nameLocation": "4689:13:18",
												"nodeType": "VariableDeclaration",
												"scope": 2297,
												"src": "4673:29:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4673:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4576:127:18"
									},
									"src": "4547:157:18"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2298,
										"nodeType": "StructuredDocumentation",
										"src": "4710:269:18",
										"text": "  this event is emitted when the IdentityRegistry has been set for the token\n  the event is emitted by the token constructor and by the setIdentityRegistry function\n  `_identityRegistry` is the address of the Identity Registry of the token"
									},
									"eventSelector": "d2be862d755bca7e0d39772b2cab3a5578da9c285f69199f4c063c2294a7f36c",
									"id": 2302,
									"name": "IdentityRegistryAdded",
									"nameLocation": "4990:21:18",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2300,
												"indexed": true,
												"mutability": "mutable",
												"name": "_identityRegistry",
												"nameLocation": "5028:17:18",
												"nodeType": "VariableDeclaration",
												"scope": 2302,
												"src": "5012:33:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5012:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5011:35:18"
									},
									"src": "4984:63:18"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2303,
										"nodeType": "StructuredDocumentation",
										"src": "5053:253:18",
										"text": "  this event is emitted when the Compliance has been set for the token\n  the event is emitted by the token constructor and by the setCompliance function\n  `_compliance` is the address of the Compliance contract of the token"
									},
									"eventSelector": "7f3a888862559648ec01d97deb7b5012bff86dc91e654a1de397170db40e35b6",
									"id": 2307,
									"name": "ComplianceAdded",
									"nameLocation": "5317:15:18",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2305,
												"indexed": true,
												"mutability": "mutable",
												"name": "_compliance",
												"nameLocation": "5349:11:18",
												"nodeType": "VariableDeclaration",
												"scope": 2307,
												"src": "5333:27:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5333:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5332:29:18"
									},
									"src": "5311:51:18"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2308,
										"nodeType": "StructuredDocumentation",
										"src": "5368:432:18",
										"text": "  this event is emitted when an investor successfully recovers his tokens\n  the event is emitted by the recoveryAddress function\n  `_lostWallet` is the address of the wallet that the investor lost access to\n  `_newWallet` is the address of the wallet that the investor provided for the recovery\n  `_investorOnchainID` is the address of the onchainID of the investor who asked for a recovery"
									},
									"eventSelector": "f0c9129a94f30f1caaceb63e44b9811d0a3edf1d6c23757f346093af5553fed0",
									"id": 2316,
									"name": "RecoverySuccess",
									"nameLocation": "5811:15:18",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2310,
												"indexed": true,
												"mutability": "mutable",
												"name": "_lostWallet",
												"nameLocation": "5843:11:18",
												"nodeType": "VariableDeclaration",
												"scope": 2316,
												"src": "5827:27:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5827:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2312,
												"indexed": true,
												"mutability": "mutable",
												"name": "_newWallet",
												"nameLocation": "5872:10:18",
												"nodeType": "VariableDeclaration",
												"scope": 2316,
												"src": "5856:26:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2314,
												"indexed": true,
												"mutability": "mutable",
												"name": "_investorOnchainID",
												"nameLocation": "5900:18:18",
												"nodeType": "VariableDeclaration",
												"scope": 2316,
												"src": "5884:34:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5884:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5826:93:18"
									},
									"src": "5805:115:18"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2317,
										"nodeType": "StructuredDocumentation",
										"src": "5926:595:18",
										"text": "  this event is emitted when the wallet of an investor is frozen or unfrozen\n  the event is emitted by setAddressFrozen and batchSetAddressFrozen functions\n  `_userAddress` is the wallet of the investor that is concerned by the freezing status\n  `_isFrozen` is the freezing status of the wallet\n  if `_isFrozen` equals `true` the wallet is frozen after emission of the event\n  if `_isFrozen` equals `false` the wallet is unfrozen after emission of the event\n  `_owner` is the address of the agent who called the function to freeze the wallet"
									},
									"eventSelector": "7fa523c84ab8d7fc5b72f08b9e46dbbf10c39e119a075b3e317002d14bc9f436",
									"id": 2325,
									"name": "AddressFrozen",
									"nameLocation": "6532:13:18",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2319,
												"indexed": true,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "6562:12:18",
												"nodeType": "VariableDeclaration",
												"scope": 2325,
												"src": "6546:28:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6546:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2321,
												"indexed": true,
												"mutability": "mutable",
												"name": "_isFrozen",
												"nameLocation": "6589:9:18",
												"nodeType": "VariableDeclaration",
												"scope": 2325,
												"src": "6576:22:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2320,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6576:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2323,
												"indexed": true,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "6616:6:18",
												"nodeType": "VariableDeclaration",
												"scope": 2325,
												"src": "6600:22:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6545:78:18"
									},
									"src": "6526:98:18"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2326,
										"nodeType": "StructuredDocumentation",
										"src": "6630:338:18",
										"text": "  this event is emitted when a certain amount of tokens is frozen on a wallet\n  the event is emitted by freezePartialTokens and batchFreezePartialTokens functions\n  `_userAddress` is the wallet of the investor that is concerned by the freezing status\n  `_amount` is the amount of tokens that are frozen"
									},
									"eventSelector": "a065e63c631c86f1b9f66a4a2f63f2093bf1c2168d23290259dbd969e0222a45",
									"id": 2332,
									"name": "TokensFrozen",
									"nameLocation": "6979:12:18",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2328,
												"indexed": true,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "7008:12:18",
												"nodeType": "VariableDeclaration",
												"scope": 2332,
												"src": "6992:28:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6992:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2330,
												"indexed": false,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "7030:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 2332,
												"src": "7022:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7022:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6991:47:18"
									},
									"src": "6973:66:18"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2333,
										"nodeType": "StructuredDocumentation",
										"src": "7045:346:18",
										"text": "  this event is emitted when a certain amount of tokens is unfrozen on a wallet\n  the event is emitted by unfreezePartialTokens and batchUnfreezePartialTokens functions\n  `_userAddress` is the wallet of the investor that is concerned by the freezing status\n  `_amount` is the amount of tokens that are unfrozen"
									},
									"eventSelector": "9bed35cb62ad0dba04f9d5bfee4b5bc91443e77da8a65c4c84834c51bb08b0d6",
									"id": 2339,
									"name": "TokensUnfrozen",
									"nameLocation": "7402:14:18",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2335,
												"indexed": true,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "7433:12:18",
												"nodeType": "VariableDeclaration",
												"scope": 2339,
												"src": "7417:28:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7417:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2337,
												"indexed": false,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "7455:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 2339,
												"src": "7447:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7447:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7416:47:18"
									},
									"src": "7396:68:18"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2340,
										"nodeType": "StructuredDocumentation",
										"src": "7470:200:18",
										"text": "  this event is emitted when the token is paused\n  the event is emitted by the pause function\n  `_userAddress` is the address of the wallet that called the pause function"
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 2344,
									"name": "Paused",
									"nameLocation": "7681:6:18",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2342,
												"indexed": false,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "7696:12:18",
												"nodeType": "VariableDeclaration",
												"scope": 2344,
												"src": "7688:20:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7688:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7687:22:18"
									},
									"src": "7675:35:18"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2345,
										"nodeType": "StructuredDocumentation",
										"src": "7716:206:18",
										"text": "  this event is emitted when the token is unpaused\n  the event is emitted by the unpause function\n  `_userAddress` is the address of the wallet that called the unpause function"
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 2349,
									"name": "Unpaused",
									"nameLocation": "7933:8:18",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2347,
												"indexed": false,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "7950:12:18",
												"nodeType": "VariableDeclaration",
												"scope": 2349,
												"src": "7942:20:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7942:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7941:22:18"
									},
									"src": "7927:37:18"
								},
								{
									"documentation": {
										"id": 2350,
										"nodeType": "StructuredDocumentation",
										"src": "7989:212:18",
										"text": "  @dev sets the token name\n  @param _name the name of token to set\n  Only the owner of the token smart contract can call this function\n  emits a `UpdatedTokenInformation` event"
									},
									"functionSelector": "c47f0027",
									"id": 2355,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setName",
									"nameLocation": "8215:7:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2352,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "8239:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 2355,
												"src": "8223:21:18",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2351,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8223:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8222:23:18"
									},
									"returnParameters": {
										"id": 2354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8254:0:18"
									},
									"scope": 2591,
									"src": "8206:49:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2356,
										"nodeType": "StructuredDocumentation",
										"src": "8261:215:18",
										"text": "  @dev sets the token symbol\n  @param _symbol the token symbol to set\n  Only the owner of the token smart contract can call this function\n  emits a `UpdatedTokenInformation` event"
									},
									"functionSelector": "b84c8246",
									"id": 2361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setSymbol",
									"nameLocation": "8490:9:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2358,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "8516:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 2361,
												"src": "8500:23:18",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2357,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8500:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8499:25:18"
									},
									"returnParameters": {
										"id": 2360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8533:0:18"
									},
									"scope": 2591,
									"src": "8481:53:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2362,
										"nodeType": "StructuredDocumentation",
										"src": "8540:242:18",
										"text": "  @dev sets the onchain ID of the token\n  @param _onchainID the address of the onchain ID to set\n  Only the owner of the token smart contract can call this function\n  emits a `UpdatedTokenInformation` event"
									},
									"functionSelector": "3d1ddc5b",
									"id": 2367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setOnchainID",
									"nameLocation": "8796:12:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2364,
												"mutability": "mutable",
												"name": "_onchainID",
												"nameLocation": "8817:10:18",
												"nodeType": "VariableDeclaration",
												"scope": 2367,
												"src": "8809:18:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8809:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8808:20:18"
									},
									"returnParameters": {
										"id": 2366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8837:0:18"
									},
									"scope": 2591,
									"src": "8787:51:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2368,
										"nodeType": "StructuredDocumentation",
										"src": "8844:226:18",
										"text": "  @dev pauses the token contract, when contract is paused investors cannot transfer tokens anymore\n  This function can only be called by a wallet set as agent of the token\n  emits a `Paused` event"
									},
									"functionSelector": "8456cb59",
									"id": 2371,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pause",
									"nameLocation": "9084:5:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9089:2:18"
									},
									"returnParameters": {
										"id": 2370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9100:0:18"
									},
									"scope": 2591,
									"src": "9075:26:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2372,
										"nodeType": "StructuredDocumentation",
										"src": "9107:324:18",
										"text": "  @dev unpauses the token contract, when contract is unpaused investors can transfer tokens\n  if their wallet is not blocked & if the amount to transfer is <= to the amount of free tokens\n  This function can only be called by a wallet set as agent of the token\n  emits an `Unpaused` event"
									},
									"functionSelector": "3f4ba83a",
									"id": 2375,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unpause",
									"nameLocation": "9445:7:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9452:2:18"
									},
									"returnParameters": {
										"id": 2374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9463:0:18"
									},
									"scope": 2591,
									"src": "9436:28:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2376,
										"nodeType": "StructuredDocumentation",
										"src": "9470:314:18",
										"text": "  @dev sets an address frozen status for this token.\n  @param _userAddress The address for which to update frozen status\n  @param _freeze Frozen status of the address\n  This function can only be called by a wallet set as agent of the token\n  emits an `AddressFrozen` event"
									},
									"functionSelector": "c69c09cf",
									"id": 2383,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setAddressFrozen",
									"nameLocation": "9798:16:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2378,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "9823:12:18",
												"nodeType": "VariableDeclaration",
												"scope": 2383,
												"src": "9815:20:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9815:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2380,
												"mutability": "mutable",
												"name": "_freeze",
												"nameLocation": "9842:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 2383,
												"src": "9837:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2379,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9837:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9814:36:18"
									},
									"returnParameters": {
										"id": 2382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9859:0:18"
									},
									"scope": 2591,
									"src": "9789:71:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2384,
										"nodeType": "StructuredDocumentation",
										"src": "9866:317:18",
										"text": "  @dev freezes token amount specified for given address.\n  @param _userAddress The address for which to update frozen tokens\n  @param _amount Amount of Tokens to be frozen\n  This function can only be called by a wallet set as agent of the token\n  emits a `TokensFrozen` event"
									},
									"functionSelector": "125c4a33",
									"id": 2391,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "freezePartialTokens",
									"nameLocation": "10197:19:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2386,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "10225:12:18",
												"nodeType": "VariableDeclaration",
												"scope": 2391,
												"src": "10217:20:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10217:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2388,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "10247:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 2391,
												"src": "10239:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10239:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10216:39:18"
									},
									"returnParameters": {
										"id": 2390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10264:0:18"
									},
									"scope": 2591,
									"src": "10188:77:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2392,
										"nodeType": "StructuredDocumentation",
										"src": "10271:322:18",
										"text": "  @dev unfreezes token amount specified for given address\n  @param _userAddress The address for which to update frozen tokens\n  @param _amount Amount of Tokens to be unfrozen\n  This function can only be called by a wallet set as agent of the token\n  emits a `TokensUnfrozen` event"
									},
									"functionSelector": "1fe56f7d",
									"id": 2399,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unfreezePartialTokens",
									"nameLocation": "10607:21:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2394,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "10637:12:18",
												"nodeType": "VariableDeclaration",
												"scope": 2399,
												"src": "10629:20:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10629:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2396,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "10659:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 2399,
												"src": "10651:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10651:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10628:39:18"
									},
									"returnParameters": {
										"id": 2398,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10676:0:18"
									},
									"scope": 2591,
									"src": "10598:79:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2400,
										"nodeType": "StructuredDocumentation",
										"src": "10683:263:18",
										"text": "  @dev sets the Identity Registry for the token\n  @param _identityRegistry the address of the Identity Registry to set\n  Only the owner of the token smart contract can call this function\n  emits an `IdentityRegistryAdded` event"
									},
									"functionSelector": "cbf3f861",
									"id": 2405,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setIdentityRegistry",
									"nameLocation": "10960:19:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2402,
												"mutability": "mutable",
												"name": "_identityRegistry",
												"nameLocation": "10988:17:18",
												"nodeType": "VariableDeclaration",
												"scope": 2405,
												"src": "10980:25:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10980:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10979:27:18"
									},
									"returnParameters": {
										"id": 2404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11015:0:18"
									},
									"scope": 2591,
									"src": "10951:65:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2406,
										"nodeType": "StructuredDocumentation",
										"src": "11022:304:18",
										"text": "  @dev sets the compliance contract of the token\n  @param _compliance the address of the compliance contract to set\n  Only the owner of the token smart contract can call this function\n  calls bindToken on the compliance contract\n  emits a `ComplianceAdded` event"
									},
									"functionSelector": "f8981789",
									"id": 2411,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setCompliance",
									"nameLocation": "11340:13:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2408,
												"mutability": "mutable",
												"name": "_compliance",
												"nameLocation": "11362:11:18",
												"nodeType": "VariableDeclaration",
												"scope": 2411,
												"src": "11354:19:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11354:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11353:21:18"
									},
									"returnParameters": {
										"id": 2410,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11383:0:18"
									},
									"scope": 2591,
									"src": "11331:53:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2412,
										"nodeType": "StructuredDocumentation",
										"src": "11390:940:18",
										"text": "  @dev force a transfer of tokens between 2 whitelisted wallets\n  In case the `from` address has not enough free tokens (unfrozen tokens)\n  but has a total balance higher or equal to the `amount`\n  the amount of frozen tokens is reduced in order to have enough free tokens\n  to proceed the transfer, in such a case, the remaining balance on the `from`\n  account is 100% composed of frozen tokens post-transfer.\n  Require that the `to` address is a verified address,\n  @param _from The address of the sender\n  @param _to The address of the receiver\n  @param _amount The number of tokens to transfer\n  @return `true` if successful and revert if unsuccessful\n  This function can only be called by a wallet set as agent of the token\n  emits a `TokensUnfrozen` event if `_amount` is higher than the free balance of `_from`\n  emits a `Transfer` event"
									},
									"functionSelector": "9fc1d0e7",
									"id": 2423,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "forcedTransfer",
									"nameLocation": "12344:14:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2414,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "12376:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 2423,
												"src": "12368:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12368:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2416,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "12399:3:18",
												"nodeType": "VariableDeclaration",
												"scope": 2423,
												"src": "12391:11:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12391:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2418,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "12420:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 2423,
												"src": "12412:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12412:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12358:75:18"
									},
									"returnParameters": {
										"id": 2422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2423,
												"src": "12452:4:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2420,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12452:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12451:6:18"
									},
									"scope": 2591,
									"src": "12335:123:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2424,
										"nodeType": "StructuredDocumentation",
										"src": "12464:411:18",
										"text": "  @dev mint tokens on a wallet\n  Improved version of default mint method. Tokens can be minted\n  to an address if only it is a verified address as per the security token.\n  @param _to Address to mint the tokens to.\n  @param _amount Amount of tokens to mint.\n  This function can only be called by a wallet set as agent of the token\n  emits a `Transfer` event"
									},
									"functionSelector": "40c10f19",
									"id": 2431,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "12889:4:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2426,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "12902:3:18",
												"nodeType": "VariableDeclaration",
												"scope": 2431,
												"src": "12894:11:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12894:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2428,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "12915:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 2431,
												"src": "12907:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12907:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12893:30:18"
									},
									"returnParameters": {
										"id": 2430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12932:0:18"
									},
									"scope": 2591,
									"src": "12880:53:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2432,
										"nodeType": "StructuredDocumentation",
										"src": "12939:752:18",
										"text": "  @dev burn tokens on a wallet\n  In case the `account` address has not enough free tokens (unfrozen tokens)\n  but has a total balance higher or equal to the `value` amount\n  the amount of frozen tokens is reduced in order to have enough free tokens\n  to proceed the burn, in such a case, the remaining balance on the `account`\n  is 100% composed of frozen tokens post-transaction.\n  @param _userAddress Address to burn the tokens from.\n  @param _amount Amount of tokens to burn.\n  This function can only be called by a wallet set as agent of the token\n  emits a `TokensUnfrozen` event if `_amount` is higher than the free balance of `_userAddress`\n  emits a `Transfer` event"
									},
									"functionSelector": "9dc29fac",
									"id": 2439,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "13705:4:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2434,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "13718:12:18",
												"nodeType": "VariableDeclaration",
												"scope": 2439,
												"src": "13710:20:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13710:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2436,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "13740:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 2439,
												"src": "13732:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13732:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13709:39:18"
									},
									"returnParameters": {
										"id": 2438,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13757:0:18"
									},
									"scope": 2591,
									"src": "13696:62:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2440,
										"nodeType": "StructuredDocumentation",
										"src": "13764:793:18",
										"text": "  @dev recovery function used to force transfer tokens from a\n  lost wallet to a new wallet for an investor.\n  @param _lostWallet the wallet that the investor lost\n  @param _newWallet the newly provided wallet on which tokens have to be transferred\n  @param _investorOnchainID the onchainID of the investor asking for a recovery\n  This function can only be called by a wallet set as agent of the token\n  emits a `TokensUnfrozen` event if there is some frozen tokens on the lost wallet if the recovery process is successful\n  emits a `Transfer` event if the recovery process is successful\n  emits a `RecoverySuccess` event if the recovery process is successful\n  emits a `RecoveryFails` event if the recovery process fails"
									},
									"functionSelector": "9285948a",
									"id": 2451,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "recoveryAddress",
									"nameLocation": "14571:15:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2442,
												"mutability": "mutable",
												"name": "_lostWallet",
												"nameLocation": "14604:11:18",
												"nodeType": "VariableDeclaration",
												"scope": 2451,
												"src": "14596:19:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14596:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2444,
												"mutability": "mutable",
												"name": "_newWallet",
												"nameLocation": "14633:10:18",
												"nodeType": "VariableDeclaration",
												"scope": 2451,
												"src": "14625:18:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14625:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2446,
												"mutability": "mutable",
												"name": "_investorOnchainID",
												"nameLocation": "14661:18:18",
												"nodeType": "VariableDeclaration",
												"scope": 2451,
												"src": "14653:26:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14653:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14586:99:18"
									},
									"returnParameters": {
										"id": 2450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2449,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2451,
												"src": "14704:4:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2448,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14704:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14703:6:18"
									},
									"scope": 2591,
									"src": "14562:148:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2452,
										"nodeType": "StructuredDocumentation",
										"src": "14716:645:18",
										"text": "  @dev function allowing to issue transfers in batch\n  Require that the msg.sender and `to` addresses are not frozen.\n  Require that the total value should not exceed available balance.\n  Require that the `to` addresses are all verified addresses,\n  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_toList.length` IS TOO HIGH,\n  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \"OUT OF GAS\" TRANSACTION\n  @param _toList The addresses of the receivers\n  @param _amounts The number of tokens to transfer to the corresponding receiver\n  emits _toList.length `Transfer` events"
									},
									"functionSelector": "88d695b2",
									"id": 2461,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "batchTransfer",
									"nameLocation": "15375:13:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2455,
												"mutability": "mutable",
												"name": "_toList",
												"nameLocation": "15408:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 2461,
												"src": "15389:26:18",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2453,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "15389:7:18",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2454,
													"nodeType": "ArrayTypeName",
													"src": "15389:9:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2458,
												"mutability": "mutable",
												"name": "_amounts",
												"nameLocation": "15436:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 2461,
												"src": "15417:27:18",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2456,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15417:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2457,
													"nodeType": "ArrayTypeName",
													"src": "15417:9:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15388:57:18"
									},
									"returnParameters": {
										"id": 2460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15454:0:18"
									},
									"scope": 2591,
									"src": "15366:89:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2462,
										"nodeType": "StructuredDocumentation",
										"src": "15461:843:18",
										"text": "  @dev function allowing to issue forced transfers in batch\n  Require that `_amounts[i]` should not exceed available balance of `_fromList[i]`.\n  Require that the `_toList` addresses are all verified addresses\n  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_fromList.length` IS TOO HIGH,\n  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \"OUT OF GAS\" TRANSACTION\n  @param _fromList The addresses of the senders\n  @param _toList The addresses of the receivers\n  @param _amounts The number of tokens to transfer to the corresponding receiver\n  This function can only be called by a wallet set as agent of the token\n  emits `TokensUnfrozen` events if `_amounts[i]` is higher than the free balance of `_fromList[i]`\n  emits _fromList.length `Transfer` events"
									},
									"functionSelector": "42a47abc",
									"id": 2474,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "batchForcedTransfer",
									"nameLocation": "16318:19:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2465,
												"mutability": "mutable",
												"name": "_fromList",
												"nameLocation": "16366:9:18",
												"nodeType": "VariableDeclaration",
												"scope": 2474,
												"src": "16347:28:18",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2463,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "16347:7:18",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2464,
													"nodeType": "ArrayTypeName",
													"src": "16347:9:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2468,
												"mutability": "mutable",
												"name": "_toList",
												"nameLocation": "16404:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 2474,
												"src": "16385:26:18",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2466,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "16385:7:18",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2467,
													"nodeType": "ArrayTypeName",
													"src": "16385:9:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2471,
												"mutability": "mutable",
												"name": "_amounts",
												"nameLocation": "16440:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 2474,
												"src": "16421:27:18",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2469,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16421:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2470,
													"nodeType": "ArrayTypeName",
													"src": "16421:9:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16337:117:18"
									},
									"returnParameters": {
										"id": 2473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16463:0:18"
									},
									"scope": 2591,
									"src": "16309:155:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2475,
										"nodeType": "StructuredDocumentation",
										"src": "16470:575:18",
										"text": "  @dev function allowing to mint tokens in batch\n  Require that the `_toList` addresses are all verified addresses\n  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_toList.length` IS TOO HIGH,\n  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \"OUT OF GAS\" TRANSACTION\n  @param _toList The addresses of the receivers\n  @param _amounts The number of tokens to mint to the corresponding receiver\n  This function can only be called by a wallet set as agent of the token\n  emits _toList.length `Transfer` events"
									},
									"functionSelector": "68573107",
									"id": 2484,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "batchMint",
									"nameLocation": "17059:9:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2478,
												"mutability": "mutable",
												"name": "_toList",
												"nameLocation": "17088:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 2484,
												"src": "17069:26:18",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2476,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "17069:7:18",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2477,
													"nodeType": "ArrayTypeName",
													"src": "17069:9:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2481,
												"mutability": "mutable",
												"name": "_amounts",
												"nameLocation": "17116:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 2484,
												"src": "17097:27:18",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2479,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "17097:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2480,
													"nodeType": "ArrayTypeName",
													"src": "17097:9:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17068:57:18"
									},
									"returnParameters": {
										"id": 2483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17134:0:18"
									},
									"scope": 2591,
									"src": "17050:85:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2485,
										"nodeType": "StructuredDocumentation",
										"src": "17141:624:18",
										"text": "  @dev function allowing to burn tokens in batch\n  Require that the `_userAddresses` addresses are all verified addresses\n  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_userAddresses.length` IS TOO HIGH,\n  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \"OUT OF GAS\" TRANSACTION\n  @param _userAddresses The addresses of the wallets concerned by the burn\n  @param _amounts The number of tokens to burn from the corresponding wallets\n  This function can only be called by a wallet set as agent of the token\n  emits _userAddresses.length `Transfer` events"
									},
									"functionSelector": "4a6cc677",
									"id": 2494,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "batchBurn",
									"nameLocation": "17779:9:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2488,
												"mutability": "mutable",
												"name": "_userAddresses",
												"nameLocation": "17808:14:18",
												"nodeType": "VariableDeclaration",
												"scope": 2494,
												"src": "17789:33:18",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2486,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "17789:7:18",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2487,
													"nodeType": "ArrayTypeName",
													"src": "17789:9:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2491,
												"mutability": "mutable",
												"name": "_amounts",
												"nameLocation": "17843:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 2494,
												"src": "17824:27:18",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2489,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "17824:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2490,
													"nodeType": "ArrayTypeName",
													"src": "17824:9:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17788:64:18"
									},
									"returnParameters": {
										"id": 2493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17861:0:18"
									},
									"scope": 2591,
									"src": "17770:92:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2495,
										"nodeType": "StructuredDocumentation",
										"src": "17868:538:18",
										"text": "  @dev function allowing to set frozen addresses in batch\n  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_userAddresses.length` IS TOO HIGH,\n  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \"OUT OF GAS\" TRANSACTION\n  @param _userAddresses The addresses for which to update frozen status\n  @param _freeze Frozen status of the corresponding address\n  This function can only be called by a wallet set as agent of the token\n  emits _userAddresses.length `AddressFrozen` events"
									},
									"functionSelector": "1a7af379",
									"id": 2504,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "batchSetAddressFrozen",
									"nameLocation": "18420:21:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2498,
												"mutability": "mutable",
												"name": "_userAddresses",
												"nameLocation": "18461:14:18",
												"nodeType": "VariableDeclaration",
												"scope": 2504,
												"src": "18442:33:18",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2496,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "18442:7:18",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2497,
													"nodeType": "ArrayTypeName",
													"src": "18442:9:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2501,
												"mutability": "mutable",
												"name": "_freeze",
												"nameLocation": "18493:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 2504,
												"src": "18477:23:18",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bool_$dyn_calldata_ptr",
													"typeString": "bool[]"
												},
												"typeName": {
													"baseType": {
														"id": 2499,
														"name": "bool",
														"nodeType": "ElementaryTypeName",
														"src": "18477:4:18",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 2500,
													"nodeType": "ArrayTypeName",
													"src": "18477:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
														"typeString": "bool[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18441:60:18"
									},
									"returnParameters": {
										"id": 2503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18510:0:18"
									},
									"scope": 2591,
									"src": "18411:100:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2505,
										"nodeType": "StructuredDocumentation",
										"src": "18517:558:18",
										"text": "  @dev function allowing to freeze tokens partially in batch\n  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_userAddresses.length` IS TOO HIGH,\n  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \"OUT OF GAS\" TRANSACTION\n  @param _userAddresses The addresses on which tokens need to be frozen\n  @param _amounts the amount of tokens to freeze on the corresponding address\n  This function can only be called by a wallet set as agent of the token\n  emits _userAddresses.length `TokensFrozen` events"
									},
									"functionSelector": "fc7e5fa8",
									"id": 2514,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "batchFreezePartialTokens",
									"nameLocation": "19089:24:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2508,
												"mutability": "mutable",
												"name": "_userAddresses",
												"nameLocation": "19133:14:18",
												"nodeType": "VariableDeclaration",
												"scope": 2514,
												"src": "19114:33:18",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2506,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "19114:7:18",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2507,
													"nodeType": "ArrayTypeName",
													"src": "19114:9:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2511,
												"mutability": "mutable",
												"name": "_amounts",
												"nameLocation": "19168:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 2514,
												"src": "19149:27:18",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2509,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "19149:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2510,
													"nodeType": "ArrayTypeName",
													"src": "19149:9:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19113:64:18"
									},
									"returnParameters": {
										"id": 2513,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19186:0:18"
									},
									"scope": 2591,
									"src": "19080:107:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2515,
										"nodeType": "StructuredDocumentation",
										"src": "19193:566:18",
										"text": "  @dev function allowing to unfreeze tokens partially in batch\n  IMPORTANT : THIS TRANSACTION COULD EXCEED GAS LIMIT IF `_userAddresses.length` IS TOO HIGH,\n  USE WITH CARE OR YOU COULD LOSE TX FEES WITH AN \"OUT OF GAS\" TRANSACTION\n  @param _userAddresses The addresses on which tokens need to be unfrozen\n  @param _amounts the amount of tokens to unfreeze on the corresponding address\n  This function can only be called by a wallet set as agent of the token\n  emits _userAddresses.length `TokensUnfrozen` events"
									},
									"functionSelector": "4710362d",
									"id": 2524,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "batchUnfreezePartialTokens",
									"nameLocation": "19773:26:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2518,
												"mutability": "mutable",
												"name": "_userAddresses",
												"nameLocation": "19819:14:18",
												"nodeType": "VariableDeclaration",
												"scope": 2524,
												"src": "19800:33:18",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2516,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "19800:7:18",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2517,
													"nodeType": "ArrayTypeName",
													"src": "19800:9:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2521,
												"mutability": "mutable",
												"name": "_amounts",
												"nameLocation": "19854:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 2524,
												"src": "19835:27:18",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2519,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "19835:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2520,
													"nodeType": "ArrayTypeName",
													"src": "19835:9:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19799:64:18"
									},
									"returnParameters": {
										"id": 2523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19872:0:18"
									},
									"scope": 2591,
									"src": "19764:109:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2525,
										"nodeType": "StructuredDocumentation",
										"src": "19879:523:18",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 1 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n balanceOf() and transfer()."
									},
									"functionSelector": "313ce567",
									"id": 2530,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "20416:8:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2526,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20424:2:18"
									},
									"returnParameters": {
										"id": 2529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2530,
												"src": "20450:5:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2527,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "20450:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20449:7:18"
									},
									"scope": 2591,
									"src": "20407:50:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2531,
										"nodeType": "StructuredDocumentation",
										"src": "20463:54:18",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 2536,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "20531:4:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2532,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20535:2:18"
									},
									"returnParameters": {
										"id": 2535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2534,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2536,
												"src": "20561:13:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2533,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "20561:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20560:15:18"
									},
									"scope": 2591,
									"src": "20522:54:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2537,
										"nodeType": "StructuredDocumentation",
										"src": "20582:216:18",
										"text": " @dev Returns the address of the onchainID of the token.\n the onchainID of the token gives all the information available\n about the token and is managed by the token issuer or his agent."
									},
									"functionSelector": "aba63705",
									"id": 2542,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onchainID",
									"nameLocation": "20812:9:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20821:2:18"
									},
									"returnParameters": {
										"id": 2541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2540,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2542,
												"src": "20847:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20847:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20846:9:18"
									},
									"scope": 2591,
									"src": "20803:53:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2543,
										"nodeType": "StructuredDocumentation",
										"src": "20862:102:18",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 2548,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "20978:6:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2544,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20984:2:18"
									},
									"returnParameters": {
										"id": 2547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2548,
												"src": "21010:13:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2545,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "21010:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21009:15:18"
									},
									"scope": 2591,
									"src": "20969:56:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2549,
										"nodeType": "StructuredDocumentation",
										"src": "21031:94:18",
										"text": " @dev Returns the TREX version of the token.\n current version is 3.0.0"
									},
									"functionSelector": "54fd4d50",
									"id": 2554,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "21139:7:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2550,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21146:2:18"
									},
									"returnParameters": {
										"id": 2553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2552,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2554,
												"src": "21172:13:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2551,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "21172:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21171:15:18"
									},
									"scope": 2591,
									"src": "21130:57:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2555,
										"nodeType": "StructuredDocumentation",
										"src": "21193:74:18",
										"text": "  @dev Returns the Identity Registry linked to the token"
									},
									"functionSelector": "134e18f4",
									"id": 2561,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "identityRegistry",
									"nameLocation": "21281:16:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21297:2:18"
									},
									"returnParameters": {
										"id": 2560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2559,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2561,
												"src": "21323:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentityRegistry_$2059",
													"typeString": "contract IIdentityRegistry"
												},
												"typeName": {
													"id": 2558,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2557,
														"name": "IIdentityRegistry",
														"nameLocations": [
															"21323:17:18"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2059,
														"src": "21323:17:18"
													},
													"referencedDeclaration": 2059,
													"src": "21323:17:18",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentityRegistry_$2059",
														"typeString": "contract IIdentityRegistry"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21322:19:18"
									},
									"scope": 2591,
									"src": "21272:70:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2562,
										"nodeType": "StructuredDocumentation",
										"src": "21348:76:18",
										"text": "  @dev Returns the Compliance contract linked to the token"
									},
									"functionSelector": "6290865d",
									"id": 2568,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "compliance",
									"nameLocation": "21438:10:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2563,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21448:2:18"
									},
									"returnParameters": {
										"id": 2567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2568,
												"src": "21474:18:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IModularCompliance_$1852",
													"typeString": "contract IModularCompliance"
												},
												"typeName": {
													"id": 2565,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2564,
														"name": "IModularCompliance",
														"nameLocations": [
															"21474:18:18"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1852,
														"src": "21474:18:18"
													},
													"referencedDeclaration": 1852,
													"src": "21474:18:18",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IModularCompliance_$1852",
														"typeString": "contract IModularCompliance"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21473:20:18"
									},
									"scope": 2591,
									"src": "21429:65:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2569,
										"nodeType": "StructuredDocumentation",
										"src": "21500:84:18",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 2574,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "21598:6:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21604:2:18"
									},
									"returnParameters": {
										"id": 2573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2572,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2574,
												"src": "21630:4:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2571,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "21630:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21629:6:18"
									},
									"scope": 2591,
									"src": "21589:47:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2575,
										"nodeType": "StructuredDocumentation",
										"src": "21642:433:18",
										"text": "  @dev Returns the freezing status of a wallet\n  if isFrozen returns `true` the wallet is frozen\n  if isFrozen returns `false` the wallet is not frozen\n  isFrozen returning `true` doesn't mean that the balance is free, tokens could be blocked by\n  a partial freeze or the whole token could be blocked by pause\n  @param _userAddress the address of the wallet on which isFrozen is called"
									},
									"functionSelector": "e5839836",
									"id": 2582,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isFrozen",
									"nameLocation": "22089:8:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2577,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "22106:12:18",
												"nodeType": "VariableDeclaration",
												"scope": 2582,
												"src": "22098:20:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22098:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22097:22:18"
									},
									"returnParameters": {
										"id": 2581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2580,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2582,
												"src": "22143:4:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2579,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "22143:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22142:6:18"
									},
									"scope": 2591,
									"src": "22080:69:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2583,
										"nodeType": "StructuredDocumentation",
										"src": "22155:264:18",
										"text": "  @dev Returns the amount of tokens that are partially frozen on a wallet\n  the amount of frozen tokens is always <= to the total balance of the wallet\n  @param _userAddress the address of the wallet on which getFrozenTokens is called"
									},
									"functionSelector": "158b1a57",
									"id": 2590,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getFrozenTokens",
									"nameLocation": "22433:15:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2585,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "22457:12:18",
												"nodeType": "VariableDeclaration",
												"scope": 2590,
												"src": "22449:20:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22449:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22448:22:18"
									},
									"returnParameters": {
										"id": 2589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2588,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2590,
												"src": "22494:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22494:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22493:9:18"
									},
									"scope": 2591,
									"src": "22424:79:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2592,
							"src": "4029:18476:18",
							"usedErrors": []
						}
					],
					"src": "3818:18688:18"
				},
				"id": 18
			}
		}
	}
}