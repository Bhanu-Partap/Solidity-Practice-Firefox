{
	"id": "e27227fe934a12b0e1e5af1e428ddbbd",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"erc3643/erc3643/Compliance/modular/ModularCompliance.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.17;\n\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"../../token/Itoken.sol\";\nimport \"./IModularCompliance.sol\";\nimport \"./MCStorage.sol\";\nimport \"./Modules/IModule.sol\";\n\ncontract ModularCompliance is\n    IModularCompliance,\n    OwnableUpgradeable,\n    MCStorage\n{\n    // modifiers\n    modifier onlyToken() {\n        require(\n            msg.sender == _tokenBound,\n            \"error : this address is not a token bound to the compliance contract\"\n        );\n        _;\n    }\n\n    function init() external initializer {\n        __Ownable_init();\n    }\n\n    function bindToken(address _token) external override {\n        require(\n            owner() == msg.sender ||\n                (_tokenBound == address(0) && msg.sender == _token),\n            \"only owner or token can call\"\n        );\n        require(_token != address(0), \"invalid argument - zero address\");\n        _tokenBound = _token; //here the _tokenBound is a variable that stores the address of the token w.r.t identity\n        emit TokenBound(_token);\n    }\n\n    function unbindToken(address _token) external override {\n        require(\n            owner() == msg.sender || msg.sender == _token,\n            \"only owner or token can call\"\n        );\n        require(_token == _tokenBound, \"This token is not bound\");\n        require(_token != address(0), \"invalid argument - zero address\");\n        delete _tokenBound;\n        emit TokenUnbound(_token);\n    }\n\n    function addModule(address _module) external override onlyOwner {\n        require(_module != address(0), \"invalid argument - zero address\");\n        require(!_moduleBound[_module], \"module already bound\");\n        require(_modules.length <= 24, \"cannot add more than 25 modules\");\n        IModule(_module).bindCompliance(address(this));\n        _modules.push(_module);\n        _moduleBound[_module] = true;\n        emit ModuleAdded(_module);\n    }\n\n    function removeModule(address _module) external override onlyOwner {\n        require(_module != address(0), \"invalid argument - zero address\");\n        require(_moduleBound[_module], \"module not bound\");\n        uint256 length = _modules.length;\n        for (uint256 i = 0; i < length; i++) {\n            if (_modules[i] == _module) {\n                IModule(_module).unbindCompliance(address(this));\n                _modules[i] = _modules[length - 1];\n                _modules.pop();\n                _moduleBound[_module] = false;\n                emit ModuleRemoved(_module);\n                break;\n            }\n        }\n    }\n\n    function transferred(\n        address _from,\n        address _to,\n        uint256 _value\n    ) external override onlyToken {\n        require(\n            _from != address(0) && _to != address(0),\n            \"invalid argument - zero address\"\n        );\n        require(_value > 0, \"invalid argument - no value transfer\");\n        uint256 length = _modules.length;\n        for (uint256 i = 0; i < length; i++) {\n            IModule(_modules[i]).moduleTransferAction(_from, _to, _value);\n        }\n    }\n\n    function created(address _to, uint256 _value) external override onlyToken {\n        require(_to != address(0), \"invalid argument - zero address\");\n        require(_value > 0, \"invalid argument - no value mint\");\n        uint256 length = _modules.length;\n        for (uint256 i = 0; i < length; i++) {\n            IModule(_modules[i]).moduleMintAction(_to, _value);\n        }\n    }\n\n    function destroyed(address _from, uint256 _value)\n        external\n        override\n        onlyToken\n    {\n        require(_from != address(0), \"invalid argument - zero address\");\n        require(_value > 0, \"invalid argument - no value burn\");\n        uint256 length = _modules.length;\n        for (uint256 i = 0; i < length; i++) {\n            IModule(_modules[i]).moduleBurnAction(_from, _value);\n        }\n    }\n\n    function callModuleFunction(bytes calldata callData, address _module)\n        external\n        override\n        onlyOwner\n    {\n        require(_moduleBound[_module], \"call only on bound module\");\n        assembly {\n            let freeMemoryPointer := mload(0x40)\n            calldatacopy(freeMemoryPointer, callData.offset, callData.length)\n            if iszero(\n                call(\n                    gas(),\n                    _module,\n                    0,\n                    freeMemoryPointer,\n                    callData.length,\n                    0,\n                    0\n                )\n            ) {\n                returndatacopy(0, 0, returndatasize())\n                revert(0, returndatasize())\n            }\n        }\n\n        emit ModuleInteraction(_module, _selector(callData));\n    }\n\n    function isModuleBound(address _module)\n        external\n        view\n        override\n        returns (bool)\n    {\n        return _moduleBound[_module];\n    }\n\n    function getModules() external view override returns (address[] memory) {\n        return _modules;\n    }\n\n    function getTokenBound() external view override returns (address) {\n        return _tokenBound;\n    }\n\n    function canTransfer(\n        address _from,\n        address _to,\n        uint256 _value\n    ) external view override returns (bool) {\n        uint256 length = _modules.length;\n        for (uint256 i = 0; i < length; i++) {\n            if (\n                !IModule(_modules[i]).moduleCheck(\n                    _from,\n                    _to,\n                    _value,\n                    address(this)\n                )\n            ) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    function _selector(bytes calldata callData)\n        internal\n        pure\n        returns (bytes4 result)\n    {\n        if (callData.length >= 4) {\n            assembly {\n                result := calldataload(callData.offset)\n            }\n        }\n    }\n}\n"
			},
			"erc3643/erc3643/Compliance/modular/Modules/IModule.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.17;\r\n\r\ninterface IModule {\r\n\r\n// events\r\n    event ComplianceBound(address indexed _compliance);\r\n\r\n    event ComplianceUnbound(address indexed _compliance);\r\n\r\n// functions\r\n    function bindCompliance(address _compliance) external;\r\n\r\n    function unbindCompliance(address _compliance) external;\r\n\r\n    function moduleTransferAction(address _from, address _to, uint256 _value) external;\r\n\r\n    function moduleMintAction(address _to, uint256 _value) external;\r\n\r\n    function moduleBurnAction(address _from, uint256 _value) external;\r\n\r\n    function moduleCheck(address _from, address _to, uint256 _value, address _compliance) external view returns (bool);\r\n\r\n    function isComplianceBound(address _compliance) external view returns (bool);\r\n}"
			},
			"erc3643/erc3643/Compliance/modular/MCStorage.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.8.17;\r\n\r\ncontract MCStorage {\r\n    /// token linked to the compliance contract\r\n    address internal _tokenBound;\r\n\r\n    /// Array of modules bound to the compliance\r\n    address[] internal _modules;\r\n\r\n    /// Mapping of module binding status\r\n    mapping(address => bool) internal _moduleBound;\r\n    \r\n    uint256[49] private __gap;\r\n}"
			},
			"erc3643/erc3643/Compliance/modular/IModularCompliance.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.17;\r\n\r\ninterface IModularCompliance {\r\n\r\n// events\r\n\r\n    event ModuleInteraction(address indexed target, bytes4 selector);\r\n\r\n    event TokenBound(address _token);\r\n\r\n    event TokenUnbound(address _token);\r\n\r\n    event ModuleAdded(address indexed _module);\r\n\r\n    event ModuleRemoved(address indexed _module);\r\n\r\n// functions\r\n\r\n    function bindToken(address _token) external;\r\n\r\n    function unbindToken(address _token) external;\r\n\r\n    function addModule(address _module) external;\r\n\r\n    function removeModule(address _module) external;\r\n\r\n    function callModuleFunction(bytes calldata callData, address _module) external;\r\n\r\n    function transferred(\r\n        address _from,\r\n        address _to,\r\n        uint256 _amount\r\n    ) external;\r\n\r\n    function created(address _to, uint256 _amount) external;\r\n\r\n    function destroyed(address _from, uint256 _amount) external;\r\n\r\n    function canTransfer(\r\n        address _from,\r\n        address _to,\r\n        uint256 _amount\r\n    ) external view returns (bool);\r\n\r\n    function getModules() external view returns (address[] memory);\r\n\r\n\r\n    function getTokenBound() external view returns (address);\r\n\r\n    function isModuleBound(address _module) external view returns (bool);\r\n}"
			},
			"erc3643/erc3643/token/Itoken.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity 0.8.17;\n\nimport \"../registry/interface/IIdentityRegistry.sol\";\n\nimport \"../Compliance/modular/IModularCompliance.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/// @dev interface\ninterface IToken is IERC20 {\n    event UpdatedTokenInformation(\n        string indexed _newName,\n        string indexed _newSymbol,\n        uint8 _newDecimals,\n        string _newVersion,\n        address indexed _newOnchainID\n    );\n\n    event IdentityRegistryAdded(address indexed _identityRegistry);\n\n    event ComplianceAdded(address indexed _compliance);\n\n    event RecoverySuccess(\n        address indexed _lostWallet,\n        address indexed _newWallet,\n        address indexed _investorOnchainID\n    );\n\n    event AddressFrozen(\n        address indexed _userAddress,\n        bool indexed _isFrozen,\n        address indexed _owner\n    );\n\n    event TokensFrozen(address indexed _userAddress, uint256 _amount);\n\n    event TokensUnfrozen(address indexed _userAddress, uint256 _amount);\n\n    event Paused(address _userAddress);\n\n    event Unpaused(address _userAddress);\n\n    function setName(string calldata _name) external;\n\n    function setSymbol(string calldata _symbol) external;\n\n    function setOnchainID(address _onchainID) external;\n\n    function pause() external;\n\n    function unpause() external;\n\n    function setAddressFrozen(address _userAddress, bool _freeze) external;\n\n    function freezePartialTokens(address _userAddress, uint256 _amount)\n        external;\n\n    function unfreezePartialTokens(address _userAddress, uint256 _amount)\n        external;\n\n    function setIdentityRegistry(address _identityRegistry) external;\n\n    function setCompliance(address _compliance) external;\n\n    function forcedTransfer(\n        address _from,\n        address _to,\n        uint256 _amount\n    ) external returns (bool);\n\n    function mint(address _to, uint256 _amount) external;\n\n    function burn(address _userAddress, uint256 _amount) external;\n\n    function recoveryAddress(\n        address _lostWallet,\n        address _newWallet,\n        address _investorOnchainID\n    ) external returns (bool);\n\n    function batchTransfer(\n        address[] calldata _toList,\n        uint256[] calldata _amounts\n    ) external;\n\n    function batchForcedTransfer(\n        address[] calldata _fromList,\n        address[] calldata _toList,\n        uint256[] calldata _amounts\n    ) external;\n\n    function batchMint(address[] calldata _toList, uint256[] calldata _amounts)\n        external;\n\n    function batchBurn(\n        address[] calldata _userAddresses,\n        uint256[] calldata _amounts\n    ) external;\n\n    function batchSetAddressFrozen(\n        address[] calldata _userAddresses,\n        bool[] calldata _freeze\n    ) external;\n\n    function batchFreezePartialTokens(\n        address[] calldata _userAddresses,\n        uint256[] calldata _amounts\n    ) external;\n\n    function batchUnfreezePartialTokens(\n        address[] calldata _userAddresses,\n        uint256[] calldata _amounts\n    ) external;\n\n    function decimals() external view returns (uint8);\n\n    function name() external view returns (string memory);\n\n    function onchainID() external view returns (address);\n\n    function symbol() external view returns (string memory);\n\n    function version() external view returns (string memory);\n\n    function identityRegistry() external view returns (IIdentityRegistry);\n\n    function compliance() external view returns (IModularCompliance);\n\n    function paused() external view returns (bool);\n\n    function isFrozen(address _userAddress) external view returns (bool);\n\n    function getFrozenTokens(address _userAddress)\n        external\n        view\n        returns (uint256);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function __Ownable_init() internal onlyInitializing {\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal onlyInitializing {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			},
			"erc3643/erc3643/registry/interface/IIdentityRegistry.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity 0.8.17;\n\nimport \"./ITrustedIssuersRegistry.sol\";\nimport \"./IClaimTopicsRegistry.sol\";\nimport \"./IIdentityRegistryStorage.sol\";\n\nimport \"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\";\nimport \"@onchain-id/solidity/contracts/interface/IIdentity.sol\";\n\ninterface IIdentityRegistry {\n    event ClaimTopicsRegistrySet(address indexed claimTopicsRegistry);\n\n    event IdentityStorageSet(address indexed identityStorage);\n\n    event TrustedIssuersRegistrySet(address indexed trustedIssuersRegistry);\n\n    event IdentityRegistered(\n        address indexed investorAddress,\n        IIdentity indexed identity\n    );\n\n    event IdentityRemoved(\n        address indexed investorAddress,\n        IIdentity indexed identity\n    );\n\n    event IdentityUpdated(\n        IIdentity indexed oldIdentity,\n        IIdentity indexed newIdentity\n    );\n\n    event CountryUpdated(\n        address indexed investorAddress,\n        uint16 indexed country\n    );\n\n    function registerIdentity(\n        address _userAddress,\n        IIdentity _identity,\n        uint16 _country\n    ) external;\n\n    function deleteIdentity(address _userAddress) external;\n\n    function setIdentityRegistryStorage(address _identityRegistryStorage)\n        external;\n\n    function setClaimTopicsRegistry(address _claimTopicsRegistry) external;\n\n    function setTrustedIssuersRegistry(address _trustedIssuersRegistry)\n        external;\n\n    function updateCountry(address _userAddress, uint16 _country) external;\n\n    function updateIdentity(address _userAddress, IIdentity _identity) external;\n\n    function batchRegisterIdentity(\n        address[] calldata _userAddresses,\n        IIdentity[] calldata _identities,\n        uint16[] calldata _countries\n    ) external;\n\n    function contains(address _userAddress) external view returns (bool);\n\n    function isVerified(address _userAddress) external view returns (bool);\n\n    function identity(address _userAddress) external view returns (IIdentity);\n\n    function investorCountry(address _userAddress)\n        external\n        view\n        returns (uint16);\n\n    function identityStorage() external view returns (IIdentityRegistryStorage);\n\n    function issuersRegistry() external view returns (ITrustedIssuersRegistry);\n\n    function topicsRegistry() external view returns (IClaimTopicsRegistry);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized != type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"@onchain-id/solidity/contracts/interface/IIdentity.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.17;\n\nimport \"./IERC734.sol\";\nimport \"./IERC735.sol\";\n\n// solhint-disable-next-line no-empty-blocks\ninterface IIdentity is IERC734, IERC735 {}\n"
			},
			"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.17;\n\nimport \"./IIdentity.sol\";\n\ninterface IClaimIssuer is IIdentity {\n\n    /**\n     * @dev Emitted when a claim is revoked.\n     *\n     * Specification: MUST be triggered when revoking a claim.\n     */\n    event ClaimRevoked(bytes indexed signature);\n\n    /**\n     * @dev Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\n     * @notice will fetch the claim from the identity contract (unsafe).\n     * @param _claimId the id of the claim\n     * @param _identity the address of the identity contract\n     * @return isRevoked true when the claim is revoked\n     */\n    function revokeClaim(bytes32 _claimId, address _identity) external returns(bool);\n\n    /**\n     * @dev Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\n     * @param signature the signature of the claim\n     */\n    function revokeClaimBySignature(bytes calldata signature) external;\n\n    /**\n     * @dev Returns revocation status of a claim.\n     * @param _sig the signature of the claim\n     * @return isRevoked true if the claim is revoked and false otherwise\n     */\n    function isClaimRevoked(bytes calldata _sig) external view returns (bool);\n\n    /**\n     * @dev Checks if a claim is valid.\n     * @param _identity the identity contract related to the claim\n     * @param claimTopic the claim topic of the claim\n     * @param sig the signature of the claim\n     * @param data the data field of the claim\n     * @return claimValid true if the claim is valid, false otherwise\n     */\n    function isClaimValid(\n        IIdentity _identity,\n        uint256 claimTopic,\n        bytes calldata sig,\n        bytes calldata data)\n    external view returns (bool);\n\n    /**\n     * @dev returns the address that signed the given data\n     * @param sig the signature of the data\n     * @param dataHash the data that was signed\n     * returns the address that signed dataHash and created the signature sig\n     */\n    function getRecoveredAddress(bytes calldata sig, bytes32 dataHash) external pure returns (address);\n}\n"
			},
			"erc3643/erc3643/registry/interface/IIdentityRegistryStorage.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity 0.8.17;\n\nimport \"@onchain-id/solidity/contracts/interface/IIdentity.sol\";\n\ninterface IIdentityRegistryStorage {\n    event IdentityStored(\n        address indexed investorAddress,\n        IIdentity indexed identity\n    );\n\n    event IdentityUnstored(\n        address indexed investorAddress,\n        IIdentity indexed identity\n    );\n\n    event IdentityModified(\n        IIdentity indexed oldIdentity,\n        IIdentity indexed newIdentity\n    );\n\n    event CountryModified(\n        address indexed investorAddress,\n        uint16 indexed country\n    );\n\n    event IdentityRegistryBound(address indexed identityRegistry);\n\n    event IdentityRegistryUnbound(address indexed identityRegistry);\n\n    /// functions\n\n    function addIdentityToStorage(\n        address _userAddress,\n        IIdentity _identity,\n        uint16 _country\n    ) external;\n\n    function removeIdentityFromStorage(address _userAddress) external;\n\n    function modifyStoredInvestorCountry(address _userAddress, uint16 _country)\n        external;\n\n    function modifyStoredIdentity(address _userAddress, IIdentity _identity)\n        external;\n\n    function bindIdentityRegistry(address _identityRegistry) external;\n\n    function unbindIdentityRegistry(address _identityRegistry) external;\n\n    function linkedIdentityRegistries()\n        external\n        view\n        returns (address[] memory);\n\n    function storedIdentity(address _userAddress)\n        external\n        view\n        returns (IIdentity);\n\n    function storedInvestorCountry(address _userAddress)\n        external\n        view\n        returns (uint16);\n}\n"
			},
			"erc3643/erc3643/registry/interface/IClaimTopicsRegistry.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity 0.8.17;\n\ninterface IClaimTopicsRegistry {\n    event ClaimTopicAdded(uint256 indexed claimTopic);\n\n    event ClaimTopicRemoved(uint256 indexed claimTopic);\n\n    function addClaimTopic(uint256 _claimTopic) external;\n\n    function removeClaimTopic(uint256 _claimTopic) external;\n\n    function getClaimTopics() external view returns (uint256[] memory);\n}\n"
			},
			"erc3643/erc3643/registry/interface/ITrustedIssuersRegistry.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity 0.8.17;\n\nimport \"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\";\n\ninterface ITrustedIssuersRegistry {\n    event TrustedIssuerAdded(\n        IClaimIssuer indexed trustedIssuer,\n        uint256[] claimTopics\n    );\n\n    event TrustedIssuerRemoved(IClaimIssuer indexed trustedIssuer);\n\n    event ClaimTopicsUpdated(\n        IClaimIssuer indexed trustedIssuer,\n        uint256[] claimTopics\n    );\n\n    function addTrustedIssuer(\n        IClaimIssuer _trustedIssuer,\n        uint256[] calldata _claimTopics\n    ) external;\n\n    function removeTrustedIssuer(IClaimIssuer _trustedIssuer) external;\n\n    function updateIssuerClaimTopics(\n        IClaimIssuer _trustedIssuer,\n        uint256[] calldata _claimTopics\n    ) external;\n\n    function getTrustedIssuers() external view returns (IClaimIssuer[] memory);\n\n    function getTrustedIssuersForClaimTopic(uint256 claimTopic)\n        external\n        view\n        returns (IClaimIssuer[] memory);\n\n    function isTrustedIssuer(address _issuer) external view returns (bool);\n\n    function getTrustedIssuerClaimTopics(IClaimIssuer _trustedIssuer)\n        external\n        view\n        returns (uint256[] memory);\n\n    function hasClaimTopic(address _issuer, uint256 _claimTopic)\n        external\n        view\n        returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@onchain-id/solidity/contracts/interface/IERC735.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.17;\n\n/**\n * @dev interface of the ERC735 (Claim Holder) standard as defined in the EIP.\n */\ninterface IERC735 {\n\n    /**\n     * @dev Emitted when a claim was added.\n     *\n     * Specification: MUST be triggered when a claim was successfully added.\n     */\n    event ClaimAdded(\n        bytes32 indexed claimId,\n        uint256 indexed topic,\n        uint256 scheme,\n        address indexed issuer,\n        bytes signature,\n        bytes data,\n        string uri);\n\n    /**\n     * @dev Emitted when a claim was removed.\n     *\n     * Specification: MUST be triggered when removeClaim was successfully called.\n     */\n    event ClaimRemoved(\n        bytes32 indexed claimId,\n        uint256 indexed topic,\n        uint256 scheme,\n        address indexed issuer,\n        bytes signature,\n        bytes data,\n        string uri);\n\n    /**\n     * @dev Emitted when a claim was changed.\n     *\n     * Specification: MUST be triggered when addClaim was successfully called on an existing claimId.\n     */\n    event ClaimChanged(\n        bytes32 indexed claimId,\n        uint256 indexed topic,\n        uint256 scheme,\n        address indexed issuer,\n        bytes signature,\n        bytes data,\n        string uri);\n\n    /**\n     * @dev Add or update a claim.\n     *\n     * Triggers Event: `ClaimAdded`, `ClaimChanged`\n     *\n     * Specification: Add or update a claim from an issuer.\n     *\n     * _signature is a signed message of the following structure:\n     * `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`.\n     * Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`.\n     */\n    function addClaim(\n        uint256 _topic,\n        uint256 _scheme,\n        address issuer,\n        bytes calldata _signature,\n        bytes calldata _data,\n        string calldata _uri)\n    external returns (bytes32 claimRequestId);\n\n    /**\n     * @dev Removes a claim.\n     *\n     * Triggers Event: `ClaimRemoved`\n     *\n     * Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\n     */\n    function removeClaim(bytes32 _claimId) external returns (bool success);\n\n    /**\n     * @dev Get a claim by its ID.\n     *\n     * Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\n     */\n    function getClaim(bytes32 _claimId)\n    external view returns(\n        uint256 topic,\n        uint256 scheme,\n        address issuer,\n        bytes memory signature,\n        bytes memory data,\n        string memory uri);\n\n    /**\n     * @dev Returns an array of claim IDs by topic.\n     */\n    function getClaimIdsByTopic(uint256 _topic) external view returns(bytes32[] memory claimIds);\n}\n"
			},
			"@onchain-id/solidity/contracts/interface/IERC734.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.17;\n\n/**\n * @dev interface of the ERC734 (Key Holder) standard as defined in the EIP.\n */\ninterface IERC734 {\n\n    /**\n     * @dev Emitted when an execution request was approved.\n     *\n     * Specification: MUST be triggered when approve was successfully called.\n     */\n    event Approved(uint256 indexed executionId, bool approved);\n\n    /**\n     * @dev Emitted when an execute operation was approved and successfully performed.\n     *\n     * Specification: MUST be triggered when approve was called and the execution was successfully approved.\n     */\n    event Executed(uint256 indexed executionId, address indexed to, uint256 indexed value, bytes data);\n\n    /**\n     * @dev Emitted when an execution request was performed via `execute`.\n     *\n     * Specification: MUST be triggered when execute was successfully called.\n     */\n    event ExecutionRequested(uint256 indexed executionId, address indexed to, uint256 indexed value, bytes data);\n\n    /**\n     * @dev Emitted when an execute operation was called and failed\n     *\n     * Specification: MUST be triggered when execute call failed\n     */\n    event ExecutionFailed(uint256 indexed executionId, address indexed to, uint256 indexed value, bytes data);\n\n    /**\n     * @dev Emitted when a key was added to the Identity.\n     *\n     * Specification: MUST be triggered when addKey was successfully called.\n     */\n    event KeyAdded(bytes32 indexed key, uint256 indexed purpose, uint256 indexed keyType);\n\n    /**\n     * @dev Emitted when a key was removed from the Identity.\n     *\n     * Specification: MUST be triggered when removeKey was successfully called.\n     */\n    event KeyRemoved(bytes32 indexed key, uint256 indexed purpose, uint256 indexed keyType);\n\n    /**\n     * @dev Adds a _key to the identity. The _purpose specifies the purpose of the key.\n     *\n     * Triggers Event: `KeyAdded`\n     *\n     * Specification: MUST only be done by keys of purpose 1, or the identity\n     * itself. If it's the identity itself, the approval process will determine its approval.\n     */\n    function addKey(bytes32 _key, uint256 _purpose, uint256 _keyType) external returns (bool success);\n\n    /**\n    * @dev Approves an execution.\n    *\n    * Triggers Event: `Approved`\n    * Triggers on execution successful Event: `Executed`\n    * Triggers on execution failure Event: `ExecutionFailed`\n    */\n    function approve(uint256 _id, bool _approve) external returns (bool success);\n\n    /**\n     * @dev Removes _purpose for _key from the identity.\n     *\n     * Triggers Event: `KeyRemoved`\n     *\n     * Specification: MUST only be done by keys of purpose 1, or the identity itself.\n     * If it's the identity itself, the approval process will determine its approval.\n     */\n    function removeKey(bytes32 _key, uint256 _purpose) external returns (bool success);\n\n    /**\n     * @dev Passes an execution instruction to an ERC734 identity.\n     * How the execution is handled is up to the identity implementation:\n     * An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to\n     * approve this execution.\n     * Execute COULD be used as the only accessor for `addKey` and `removeKey`.\n     *\n     * Triggers Event: ExecutionRequested\n     * Triggers on direct execution Event: Executed\n     */\n    function execute(address _to, uint256 _value, bytes calldata _data) external payable returns (uint256 executionId);\n\n    /**\n     * @dev Returns the full key data, if present in the identity.\n     */\n    function getKey(bytes32 _key) external view returns (uint256[] memory purposes, uint256 keyType, bytes32 key);\n\n    /**\n     * @dev Returns the list of purposes associated with a key.\n     */\n    function getKeyPurposes(bytes32 _key) external view returns(uint256[] memory _purposes);\n\n    /**\n     * @dev Returns an array of public key bytes32 held by this identity.\n     */\n    function getKeysByPurpose(uint256 _purpose) external view returns (bytes32[] memory keys);\n\n    /**\n     * @dev Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE.\n     */\n    function keyHasPurpose(bytes32 _key, uint256 _purpose) external view returns (bool exists);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol": {
				"IClaimIssuer": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "Approved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "ClaimRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "Executed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "ExecutionFailed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "ExecutionRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "purpose",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								}
							],
							"name": "KeyAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "purpose",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								}
							],
							"name": "KeyRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_topic",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_scheme",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "string",
									"name": "_uri",
									"type": "string"
								}
							],
							"name": "addClaim",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "claimRequestId",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_keyType",
									"type": "uint256"
								}
							],
							"name": "addKey",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_approve",
									"type": "bool"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "execute",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_claimId",
									"type": "bytes32"
								}
							],
							"name": "getClaim",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_topic",
									"type": "uint256"
								}
							],
							"name": "getClaimIdsByTopic",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "claimIds",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								}
							],
							"name": "getKey",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "purposes",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								}
							],
							"name": "getKeyPurposes",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "_purposes",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "getKeysByPurpose",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "keys",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "sig",
									"type": "bytes"
								},
								{
									"internalType": "bytes32",
									"name": "dataHash",
									"type": "bytes32"
								}
							],
							"name": "getRecoveredAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_sig",
									"type": "bytes"
								}
							],
							"name": "isClaimRevoked",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IIdentity",
									"name": "_identity",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "claimTopic",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "sig",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "isClaimValid",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "keyHasPurpose",
							"outputs": [
								{
									"internalType": "bool",
									"name": "exists",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_claimId",
									"type": "bytes32"
								}
							],
							"name": "removeClaim",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "removeKey",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_claimId",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "_identity",
									"type": "address"
								}
							],
							"name": "revokeClaim",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "revokeClaimBySignature",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"ClaimRevoked(bytes)": {
								"details": "Emitted when a claim is revoked. Specification: MUST be triggered when revoking a claim."
							}
						},
						"kind": "dev",
						"methods": {
							"addClaim(uint256,uint256,address,bytes,bytes,string)": {
								"details": "Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`."
							},
							"addKey(bytes32,uint256,uint256)": {
								"details": "Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."
							},
							"approve(uint256,bool)": {
								"details": "Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`"
							},
							"execute(address,uint256,bytes)": {
								"details": "Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed"
							},
							"getClaim(bytes32)": {
								"details": "Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
							},
							"getClaimIdsByTopic(uint256)": {
								"details": "Returns an array of claim IDs by topic."
							},
							"getKey(bytes32)": {
								"details": "Returns the full key data, if present in the identity."
							},
							"getKeyPurposes(bytes32)": {
								"details": "Returns the list of purposes associated with a key."
							},
							"getKeysByPurpose(uint256)": {
								"details": "Returns an array of public key bytes32 held by this identity."
							},
							"getRecoveredAddress(bytes,bytes32)": {
								"details": "returns the address that signed the given data",
								"params": {
									"dataHash": "the data that was signed returns the address that signed dataHash and created the signature sig",
									"sig": "the signature of the data"
								}
							},
							"isClaimRevoked(bytes)": {
								"details": "Returns revocation status of a claim.",
								"params": {
									"_sig": "the signature of the claim"
								},
								"returns": {
									"_0": "isRevoked true if the claim is revoked and false otherwise"
								}
							},
							"isClaimValid(address,uint256,bytes,bytes)": {
								"details": "Checks if a claim is valid.",
								"params": {
									"_identity": "the identity contract related to the claim",
									"claimTopic": "the claim topic of the claim",
									"data": "the data field of the claim",
									"sig": "the signature of the claim"
								},
								"returns": {
									"_0": "claimValid true if the claim is valid, false otherwise"
								}
							},
							"keyHasPurpose(bytes32,uint256)": {
								"details": "Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE."
							},
							"removeClaim(bytes32)": {
								"details": "Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
							},
							"removeKey(bytes32,uint256)": {
								"details": "Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."
							},
							"revokeClaim(bytes32,address)": {
								"details": "Revoke a claim previously issued, the claim is no longer considered as valid after revocation.",
								"params": {
									"_claimId": "the id of the claim",
									"_identity": "the address of the identity contract"
								},
								"returns": {
									"_0": "isRevoked true when the claim is revoked"
								}
							},
							"revokeClaimBySignature(bytes)": {
								"details": "Revoke a claim previously issued, the claim is no longer considered as valid after revocation.",
								"params": {
									"signature": "the signature of the claim"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addClaim(uint256,uint256,address,bytes,bytes,string)": "b1a34e0d",
							"addKey(bytes32,uint256,uint256)": "1d381240",
							"approve(uint256,bool)": "747442d3",
							"execute(address,uint256,bytes)": "b61d27f6",
							"getClaim(bytes32)": "c9100bcb",
							"getClaimIdsByTopic(uint256)": "80e9e9e1",
							"getKey(bytes32)": "12aaac70",
							"getKeyPurposes(bytes32)": "fb307b34",
							"getKeysByPurpose(uint256)": "9010f726",
							"getRecoveredAddress(bytes,bytes32)": "c3b129e3",
							"isClaimRevoked(bytes)": "2646b264",
							"isClaimValid(address,uint256,bytes,bytes)": "c0969a6e",
							"keyHasPurpose(bytes32,uint256)": "d202158d",
							"removeClaim(bytes32)": "4eee424a",
							"removeKey(bytes32,uint256)": "53d413c5",
							"revokeClaim(bytes32,address)": "73c33708",
							"revokeClaimBySignature(bytes)": "9f7f9edd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"Approved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"ClaimRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"addClaim\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"claimRequestId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_keyType\",\"type\":\"uint256\"}],\"name\":\"addKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_approve\",\"type\":\"bool\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"getClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"}],\"name\":\"getClaimIdsByTopic\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"claimIds\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKey\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"purposes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKeyPurposes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_purposes\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"getKeysByPurpose\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"keys\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"dataHash\",\"type\":\"bytes32\"}],\"name\":\"getRecoveredAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_sig\",\"type\":\"bytes\"}],\"name\":\"isClaimRevoked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IIdentity\",\"name\":\"_identity\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"isClaimValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"keyHasPurpose\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"removeClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"removeKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_identity\",\"type\":\"address\"}],\"name\":\"revokeClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"revokeClaimBySignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ClaimRevoked(bytes)\":{\"details\":\"Emitted when a claim is revoked. Specification: MUST be triggered when revoking a claim.\"}},\"kind\":\"dev\",\"methods\":{\"addClaim(uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`.\"},\"addKey(bytes32,uint256,uint256)\":{\"details\":\"Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"},\"approve(uint256,bool)\":{\"details\":\"Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`\"},\"execute(address,uint256,bytes)\":{\"details\":\"Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed\"},\"getClaim(bytes32)\":{\"details\":\"Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"},\"getClaimIdsByTopic(uint256)\":{\"details\":\"Returns an array of claim IDs by topic.\"},\"getKey(bytes32)\":{\"details\":\"Returns the full key data, if present in the identity.\"},\"getKeyPurposes(bytes32)\":{\"details\":\"Returns the list of purposes associated with a key.\"},\"getKeysByPurpose(uint256)\":{\"details\":\"Returns an array of public key bytes32 held by this identity.\"},\"getRecoveredAddress(bytes,bytes32)\":{\"details\":\"returns the address that signed the given data\",\"params\":{\"dataHash\":\"the data that was signed returns the address that signed dataHash and created the signature sig\",\"sig\":\"the signature of the data\"}},\"isClaimRevoked(bytes)\":{\"details\":\"Returns revocation status of a claim.\",\"params\":{\"_sig\":\"the signature of the claim\"},\"returns\":{\"_0\":\"isRevoked true if the claim is revoked and false otherwise\"}},\"isClaimValid(address,uint256,bytes,bytes)\":{\"details\":\"Checks if a claim is valid.\",\"params\":{\"_identity\":\"the identity contract related to the claim\",\"claimTopic\":\"the claim topic of the claim\",\"data\":\"the data field of the claim\",\"sig\":\"the signature of the claim\"},\"returns\":{\"_0\":\"claimValid true if the claim is valid, false otherwise\"}},\"keyHasPurpose(bytes32,uint256)\":{\"details\":\"Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE.\"},\"removeClaim(bytes32)\":{\"details\":\"Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"},\"removeKey(bytes32,uint256)\":{\"details\":\"Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"},\"revokeClaim(bytes32,address)\":{\"details\":\"Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\",\"params\":{\"_claimId\":\"the id of the claim\",\"_identity\":\"the address of the identity contract\"},\"returns\":{\"_0\":\"isRevoked true when the claim is revoked\"}},\"revokeClaimBySignature(bytes)\":{\"details\":\"Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\",\"params\":{\"signature\":\"the signature of the claim\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"revokeClaim(bytes32,address)\":{\"notice\":\"will fetch the claim from the identity contract (unsafe).\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\":\"IClaimIssuer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\":{\"keccak256\":\"0xa7372faa967bc7eaedf66ec51907a21ca789123ad8a6fd371b32f2d2a6f27817\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dcf7cf65c7aff1f78a9071c47b05865c0fbce9d7c965430e8438ba7a451a2ba4\",\"dweb:/ipfs/QmViSrFA2KQpFeWssbJWQtdpa62A9MeEWaxqgs8dyPssga\"]},\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x419198390ae57e3a090a454452931ac8a6605acfd296809c43d4966c9cea2d19\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8f8c7d8d74a6e7dff2858abd7f10aefe1cc88bb629ec6a0c164e4043e2c70eb7\",\"dweb:/ipfs/QmRg2WFW8T2YEt1zJ7PGSAFxcu1L46pNWxm6MZbuN7M4Qc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"revokeClaim(bytes32,address)": {
								"notice": "will fetch the claim from the identity contract (unsafe)."
							}
						},
						"version": 1
					}
				}
			},
			"@onchain-id/solidity/contracts/interface/IERC734.sol": {
				"IERC734": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "Approved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "Executed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "ExecutionFailed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "ExecutionRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "purpose",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								}
							],
							"name": "KeyAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "purpose",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								}
							],
							"name": "KeyRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_keyType",
									"type": "uint256"
								}
							],
							"name": "addKey",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_approve",
									"type": "bool"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "execute",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								}
							],
							"name": "getKey",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "purposes",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								}
							],
							"name": "getKeyPurposes",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "_purposes",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "getKeysByPurpose",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "keys",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "keyHasPurpose",
							"outputs": [
								{
									"internalType": "bool",
									"name": "exists",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "removeKey",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "interface of the ERC734 (Key Holder) standard as defined in the EIP.",
						"events": {
							"Approved(uint256,bool)": {
								"details": "Emitted when an execution request was approved. Specification: MUST be triggered when approve was successfully called."
							},
							"Executed(uint256,address,uint256,bytes)": {
								"details": "Emitted when an execute operation was approved and successfully performed. Specification: MUST be triggered when approve was called and the execution was successfully approved."
							},
							"ExecutionFailed(uint256,address,uint256,bytes)": {
								"details": "Emitted when an execute operation was called and failed Specification: MUST be triggered when execute call failed"
							},
							"ExecutionRequested(uint256,address,uint256,bytes)": {
								"details": "Emitted when an execution request was performed via `execute`. Specification: MUST be triggered when execute was successfully called."
							},
							"KeyAdded(bytes32,uint256,uint256)": {
								"details": "Emitted when a key was added to the Identity. Specification: MUST be triggered when addKey was successfully called."
							},
							"KeyRemoved(bytes32,uint256,uint256)": {
								"details": "Emitted when a key was removed from the Identity. Specification: MUST be triggered when removeKey was successfully called."
							}
						},
						"kind": "dev",
						"methods": {
							"addKey(bytes32,uint256,uint256)": {
								"details": "Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."
							},
							"approve(uint256,bool)": {
								"details": "Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`"
							},
							"execute(address,uint256,bytes)": {
								"details": "Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed"
							},
							"getKey(bytes32)": {
								"details": "Returns the full key data, if present in the identity."
							},
							"getKeyPurposes(bytes32)": {
								"details": "Returns the list of purposes associated with a key."
							},
							"getKeysByPurpose(uint256)": {
								"details": "Returns an array of public key bytes32 held by this identity."
							},
							"keyHasPurpose(bytes32,uint256)": {
								"details": "Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE."
							},
							"removeKey(bytes32,uint256)": {
								"details": "Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addKey(bytes32,uint256,uint256)": "1d381240",
							"approve(uint256,bool)": "747442d3",
							"execute(address,uint256,bytes)": "b61d27f6",
							"getKey(bytes32)": "12aaac70",
							"getKeyPurposes(bytes32)": "fb307b34",
							"getKeysByPurpose(uint256)": "9010f726",
							"keyHasPurpose(bytes32,uint256)": "d202158d",
							"removeKey(bytes32,uint256)": "53d413c5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"Approved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_keyType\",\"type\":\"uint256\"}],\"name\":\"addKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_approve\",\"type\":\"bool\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKey\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"purposes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKeyPurposes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_purposes\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"getKeysByPurpose\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"keys\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"keyHasPurpose\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"removeKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"interface of the ERC734 (Key Holder) standard as defined in the EIP.\",\"events\":{\"Approved(uint256,bool)\":{\"details\":\"Emitted when an execution request was approved. Specification: MUST be triggered when approve was successfully called.\"},\"Executed(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execute operation was approved and successfully performed. Specification: MUST be triggered when approve was called and the execution was successfully approved.\"},\"ExecutionFailed(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execute operation was called and failed Specification: MUST be triggered when execute call failed\"},\"ExecutionRequested(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execution request was performed via `execute`. Specification: MUST be triggered when execute was successfully called.\"},\"KeyAdded(bytes32,uint256,uint256)\":{\"details\":\"Emitted when a key was added to the Identity. Specification: MUST be triggered when addKey was successfully called.\"},\"KeyRemoved(bytes32,uint256,uint256)\":{\"details\":\"Emitted when a key was removed from the Identity. Specification: MUST be triggered when removeKey was successfully called.\"}},\"kind\":\"dev\",\"methods\":{\"addKey(bytes32,uint256,uint256)\":{\"details\":\"Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"},\"approve(uint256,bool)\":{\"details\":\"Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`\"},\"execute(address,uint256,bytes)\":{\"details\":\"Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed\"},\"getKey(bytes32)\":{\"details\":\"Returns the full key data, if present in the identity.\"},\"getKeyPurposes(bytes32)\":{\"details\":\"Returns the list of purposes associated with a key.\"},\"getKeysByPurpose(uint256)\":{\"details\":\"Returns an array of public key bytes32 held by this identity.\"},\"keyHasPurpose(bytes32,uint256)\":{\"details\":\"Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE.\"},\"removeKey(bytes32,uint256)\":{\"details\":\"Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@onchain-id/solidity/contracts/interface/IERC734.sol\":\"IERC734\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@onchain-id/solidity/contracts/interface/IERC735.sol": {
				"IERC735": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_topic",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_scheme",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "string",
									"name": "_uri",
									"type": "string"
								}
							],
							"name": "addClaim",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "claimRequestId",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_claimId",
									"type": "bytes32"
								}
							],
							"name": "getClaim",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_topic",
									"type": "uint256"
								}
							],
							"name": "getClaimIdsByTopic",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "claimIds",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_claimId",
									"type": "bytes32"
								}
							],
							"name": "removeClaim",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "interface of the ERC735 (Claim Holder) standard as defined in the EIP.",
						"events": {
							"ClaimAdded(bytes32,uint256,uint256,address,bytes,bytes,string)": {
								"details": "Emitted when a claim was added. Specification: MUST be triggered when a claim was successfully added."
							},
							"ClaimChanged(bytes32,uint256,uint256,address,bytes,bytes,string)": {
								"details": "Emitted when a claim was changed. Specification: MUST be triggered when addClaim was successfully called on an existing claimId."
							},
							"ClaimRemoved(bytes32,uint256,uint256,address,bytes,bytes,string)": {
								"details": "Emitted when a claim was removed. Specification: MUST be triggered when removeClaim was successfully called."
							}
						},
						"kind": "dev",
						"methods": {
							"addClaim(uint256,uint256,address,bytes,bytes,string)": {
								"details": "Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`."
							},
							"getClaim(bytes32)": {
								"details": "Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
							},
							"getClaimIdsByTopic(uint256)": {
								"details": "Returns an array of claim IDs by topic."
							},
							"removeClaim(bytes32)": {
								"details": "Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addClaim(uint256,uint256,address,bytes,bytes,string)": "b1a34e0d",
							"getClaim(bytes32)": "c9100bcb",
							"getClaimIdsByTopic(uint256)": "80e9e9e1",
							"removeClaim(bytes32)": "4eee424a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"addClaim\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"claimRequestId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"getClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"}],\"name\":\"getClaimIdsByTopic\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"claimIds\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"removeClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"interface of the ERC735 (Claim Holder) standard as defined in the EIP.\",\"events\":{\"ClaimAdded(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was added. Specification: MUST be triggered when a claim was successfully added.\"},\"ClaimChanged(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was changed. Specification: MUST be triggered when addClaim was successfully called on an existing claimId.\"},\"ClaimRemoved(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was removed. Specification: MUST be triggered when removeClaim was successfully called.\"}},\"kind\":\"dev\",\"methods\":{\"addClaim(uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`.\"},\"getClaim(bytes32)\":{\"details\":\"Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"},\"getClaimIdsByTopic(uint256)\":{\"details\":\"Returns an array of claim IDs by topic.\"},\"removeClaim(bytes32)\":{\"details\":\"Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@onchain-id/solidity/contracts/interface/IERC735.sol\":\"IERC735\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@onchain-id/solidity/contracts/interface/IIdentity.sol": {
				"IIdentity": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "Approved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "Executed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "ExecutionFailed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "ExecutionRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "purpose",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								}
							],
							"name": "KeyAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "purpose",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								}
							],
							"name": "KeyRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_topic",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_scheme",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "string",
									"name": "_uri",
									"type": "string"
								}
							],
							"name": "addClaim",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "claimRequestId",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_keyType",
									"type": "uint256"
								}
							],
							"name": "addKey",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_approve",
									"type": "bool"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "execute",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_claimId",
									"type": "bytes32"
								}
							],
							"name": "getClaim",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_topic",
									"type": "uint256"
								}
							],
							"name": "getClaimIdsByTopic",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "claimIds",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								}
							],
							"name": "getKey",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "purposes",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								}
							],
							"name": "getKeyPurposes",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "_purposes",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "getKeysByPurpose",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "keys",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "keyHasPurpose",
							"outputs": [
								{
									"internalType": "bool",
									"name": "exists",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_claimId",
									"type": "bytes32"
								}
							],
							"name": "removeClaim",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "removeKey",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"addClaim(uint256,uint256,address,bytes,bytes,string)": {
								"details": "Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`."
							},
							"addKey(bytes32,uint256,uint256)": {
								"details": "Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."
							},
							"approve(uint256,bool)": {
								"details": "Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`"
							},
							"execute(address,uint256,bytes)": {
								"details": "Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed"
							},
							"getClaim(bytes32)": {
								"details": "Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
							},
							"getClaimIdsByTopic(uint256)": {
								"details": "Returns an array of claim IDs by topic."
							},
							"getKey(bytes32)": {
								"details": "Returns the full key data, if present in the identity."
							},
							"getKeyPurposes(bytes32)": {
								"details": "Returns the list of purposes associated with a key."
							},
							"getKeysByPurpose(uint256)": {
								"details": "Returns an array of public key bytes32 held by this identity."
							},
							"keyHasPurpose(bytes32,uint256)": {
								"details": "Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE."
							},
							"removeClaim(bytes32)": {
								"details": "Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
							},
							"removeKey(bytes32,uint256)": {
								"details": "Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addClaim(uint256,uint256,address,bytes,bytes,string)": "b1a34e0d",
							"addKey(bytes32,uint256,uint256)": "1d381240",
							"approve(uint256,bool)": "747442d3",
							"execute(address,uint256,bytes)": "b61d27f6",
							"getClaim(bytes32)": "c9100bcb",
							"getClaimIdsByTopic(uint256)": "80e9e9e1",
							"getKey(bytes32)": "12aaac70",
							"getKeyPurposes(bytes32)": "fb307b34",
							"getKeysByPurpose(uint256)": "9010f726",
							"keyHasPurpose(bytes32,uint256)": "d202158d",
							"removeClaim(bytes32)": "4eee424a",
							"removeKey(bytes32,uint256)": "53d413c5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"Approved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"addClaim\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"claimRequestId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_keyType\",\"type\":\"uint256\"}],\"name\":\"addKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_approve\",\"type\":\"bool\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"getClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"}],\"name\":\"getClaimIdsByTopic\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"claimIds\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKey\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"purposes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKeyPurposes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_purposes\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"getKeysByPurpose\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"keys\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"keyHasPurpose\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"removeClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"removeKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addClaim(uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`.\"},\"addKey(bytes32,uint256,uint256)\":{\"details\":\"Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"},\"approve(uint256,bool)\":{\"details\":\"Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`\"},\"execute(address,uint256,bytes)\":{\"details\":\"Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed\"},\"getClaim(bytes32)\":{\"details\":\"Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"},\"getClaimIdsByTopic(uint256)\":{\"details\":\"Returns an array of claim IDs by topic.\"},\"getKey(bytes32)\":{\"details\":\"Returns the full key data, if present in the identity.\"},\"getKeyPurposes(bytes32)\":{\"details\":\"Returns the list of purposes associated with a key.\"},\"getKeysByPurpose(uint256)\":{\"details\":\"Returns an array of public key bytes32 held by this identity.\"},\"keyHasPurpose(bytes32,uint256)\":{\"details\":\"Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE.\"},\"removeClaim(bytes32)\":{\"details\":\"Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"},\"removeKey(bytes32,uint256)\":{\"details\":\"Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":\"IIdentity\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x419198390ae57e3a090a454452931ac8a6605acfd296809c43d4966c9cea2d19\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8f8c7d8d74a6e7dff2858abd7f10aefe1cc88bb629ec6a0c164e4043e2c70eb7\",\"dweb:/ipfs/QmRg2WFW8T2YEt1zJ7PGSAFxcu1L46pNWxm6MZbuN7M4Qc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 462,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 465,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 995,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 334,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_owner",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 454,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_initialized": {
								"custom:oz-retyped-from": "bool",
								"details": "Indicates that the contract has been initialized."
							},
							"_initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 462,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 465,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"AddressUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:9374  library AddressUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:9374  library AddressUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202266d23dc12ff1cc7fac7c3c8bf24c440e1b67cc8d2043a0abc016ca335310fc64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202266d23dc12ff1cc7fac7c3c8bf24c440e1b67cc8d2043a0abc016ca335310fc64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 PUSH7 0xD23DC12FF1CC7F 0xAC PUSH29 0x3C8BF24C440E1B67CC8D2043A0ABC016CA335310FC64736F6C63430008 GT STOP CALLER ",
							"sourceMap": "194:9180:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:9180:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202266d23dc12ff1cc7fac7c3c8bf24c440e1b67cc8d2043a0abc016ca335310fc64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 PUSH7 0xD23DC12FF1CC7F 0xAC PUSH29 0x3C8BF24C440E1B67CC8D2043A0ABC016CA335310FC64736F6C63430008 GT STOP CALLER ",
							"sourceMap": "194:9180:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202266d23dc12ff1cc7fac7c3c8bf24c440e1b67cc8d2043a0abc016ca335310fc64736f6c63430008110033",
									".code": [
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
								"@onchain-id/solidity/contracts/interface/IERC734.sol",
								"@onchain-id/solidity/contracts/interface/IERC735.sol",
								"@onchain-id/solidity/contracts/interface/IIdentity.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"erc3643/erc3643/Compliance/modular/IModularCompliance.sol",
								"erc3643/erc3643/Compliance/modular/MCStorage.sol",
								"erc3643/erc3643/Compliance/modular/ModularCompliance.sol",
								"erc3643/erc3643/Compliance/modular/Modules/IModule.sol",
								"erc3643/erc3643/registry/interface/IClaimTopicsRegistry.sol",
								"erc3643/erc3643/registry/interface/IIdentityRegistry.sol",
								"erc3643/erc3643/registry/interface/IIdentityRegistryStorage.sol",
								"erc3643/erc3643/registry/interface/ITrustedIssuersRegistry.sol",
								"erc3643/erc3643/token/Itoken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 462,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 465,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 995,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"erc3643/erc3643/Compliance/modular/IModularCompliance.sol": {
				"IModularCompliance": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_module",
									"type": "address"
								}
							],
							"name": "ModuleAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes4",
									"name": "selector",
									"type": "bytes4"
								}
							],
							"name": "ModuleInteraction",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_module",
									"type": "address"
								}
							],
							"name": "ModuleRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "TokenBound",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "TokenUnbound",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_module",
									"type": "address"
								}
							],
							"name": "addModule",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "bindToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "callData",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "_module",
									"type": "address"
								}
							],
							"name": "callModuleFunction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "canTransfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "created",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "destroyed",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getModules",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTokenBound",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_module",
									"type": "address"
								}
							],
							"name": "isModuleBound",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_module",
									"type": "address"
								}
							],
							"name": "removeModule",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "transferred",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "unbindToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addModule(address)": "1ed86f19",
							"bindToken(address)": "3ff5aa02",
							"callModuleFunction(bytes,address)": "efb22d33",
							"canTransfer(address,address,uint256)": "e46638e6",
							"created(address,uint256)": "5f8dead3",
							"destroyed(address,uint256)": "8d2ea772",
							"getModules()": "b2494df3",
							"getTokenBound()": "6a3edf28",
							"isModuleBound(address)": "a446d49f",
							"removeModule(address)": "a0632461",
							"transferred(address,address,uint256)": "8baf29b4",
							"unbindToken(address)": "40db3b50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"}],\"name\":\"ModuleAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"ModuleInteraction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"}],\"name\":\"ModuleRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"TokenBound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"TokenUnbound\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"}],\"name\":\"addModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"bindToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"}],\"name\":\"callModuleFunction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"canTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"created\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"destroyed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getModules\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenBound\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"}],\"name\":\"isModuleBound\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"}],\"name\":\"removeModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferred\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"unbindToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc3643/erc3643/Compliance/modular/IModularCompliance.sol\":\"IModularCompliance\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc3643/erc3643/Compliance/modular/IModularCompliance.sol\":{\"keccak256\":\"0xb007145580f9c5680438044ffd012a318ed509a64fa5433aa32da0105fd385f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc436b728498c03721d6d1075b106951f879e0a98ed6819b48ef971f0d9beca0\",\"dweb:/ipfs/QmXZeLGRz1dKSUSizcCzWpKB9KL4cJBPLZr2GndVdDMZDd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"erc3643/erc3643/Compliance/modular/MCStorage.sol": {
				"MCStorage": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"erc3643/erc3643/Compliance/modular/MCStorage.sol\":62:390  contract MCStorage {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"erc3643/erc3643/Compliance/modular/MCStorage.sol\":62:390  contract MCStorage {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122061fd18808bcb540782c119b98fb0f7521037b7344286a014f41947c35b6d7a0464736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea264697066735822122061fd18808bcb540782c119b98fb0f7521037b7344286a014f41947c35b6d7a0464736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xFD18 DUP1 DUP12 0xCB SLOAD SMOD DUP3 0xC1 NOT 0xB9 DUP16 0xB0 0xF7 MSTORE LT CALLDATACOPY 0xB7 CALLVALUE TIMESTAMP DUP7 LOG0 EQ DELEGATECALL NOT SELFBALANCE 0xC3 JUMPDEST PUSH14 0x7A0464736F6C6343000811003300 ",
							"sourceMap": "62:328:10:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea264697066735822122061fd18808bcb540782c119b98fb0f7521037b7344286a014f41947c35b6d7a0464736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xFD18 DUP1 DUP12 0xCB SLOAD SMOD DUP3 0xC1 NOT 0xB9 DUP16 0xB0 0xF7 MSTORE LT CALLDATACOPY 0xB7 CALLVALUE TIMESTAMP DUP7 LOG0 EQ DELEGATECALL NOT SELFBALANCE 0xC3 JUMPDEST PUSH14 0x7A0464736F6C6343000811003300 ",
							"sourceMap": "62:328:10:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 62,
									"end": 390,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 62,
									"end": 390,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 62,
									"end": 390,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 62,
									"end": 390,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 62,
									"end": 390,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 62,
									"end": 390,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 62,
									"end": 390,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 62,
									"end": 390,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 62,
									"end": 390,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 390,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 62,
									"end": 390,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 62,
									"end": 390,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 62,
									"end": 390,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 62,
									"end": 390,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 62,
									"end": 390,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 390,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 62,
									"end": 390,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 390,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 390,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 62,
									"end": 390,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 390,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122061fd18808bcb540782c119b98fb0f7521037b7344286a014f41947c35b6d7a0464736f6c63430008110033",
									".code": [
										{
											"begin": 62,
											"end": 390,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 62,
											"end": 390,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 62,
											"end": 390,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 62,
											"end": 390,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 62,
											"end": 390,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 62,
											"end": 390,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
								"@onchain-id/solidity/contracts/interface/IERC734.sol",
								"@onchain-id/solidity/contracts/interface/IERC735.sol",
								"@onchain-id/solidity/contracts/interface/IIdentity.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"erc3643/erc3643/Compliance/modular/IModularCompliance.sol",
								"erc3643/erc3643/Compliance/modular/MCStorage.sol",
								"erc3643/erc3643/Compliance/modular/ModularCompliance.sol",
								"erc3643/erc3643/Compliance/modular/Modules/IModule.sol",
								"erc3643/erc3643/registry/interface/IClaimTopicsRegistry.sol",
								"erc3643/erc3643/registry/interface/IIdentityRegistry.sol",
								"erc3643/erc3643/registry/interface/IIdentityRegistryStorage.sol",
								"erc3643/erc3643/registry/interface/ITrustedIssuersRegistry.sol",
								"erc3643/erc3643/token/Itoken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc3643/erc3643/Compliance/modular/MCStorage.sol\":\"MCStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc3643/erc3643/Compliance/modular/MCStorage.sol\":{\"keccak256\":\"0xc2f7353ffd1544ed9a32a686f08e19638cc8565ed11a813d82bb06b592cf1825\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1de12e376bc9dcbb70119a351a7b0d752b9554f8c3536bcfc07cee9a3e8462\",\"dweb:/ipfs/QmU46tA1a2c58kTv5J1XMCKutcQ6NotVSLLNGkzPgwwn4a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1183,
								"contract": "erc3643/erc3643/Compliance/modular/MCStorage.sol:MCStorage",
								"label": "_tokenBound",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1187,
								"contract": "erc3643/erc3643/Compliance/modular/MCStorage.sol:MCStorage",
								"label": "_modules",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 1192,
								"contract": "erc3643/erc3643/Compliance/modular/MCStorage.sol:MCStorage",
								"label": "_moduleBound",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1196,
								"contract": "erc3643/erc3643/Compliance/modular/MCStorage.sol:MCStorage",
								"label": "__gap",
								"offset": 0,
								"slot": "3",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"erc3643/erc3643/Compliance/modular/ModularCompliance.sol": {
				"ModularCompliance": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_module",
									"type": "address"
								}
							],
							"name": "ModuleAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes4",
									"name": "selector",
									"type": "bytes4"
								}
							],
							"name": "ModuleInteraction",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_module",
									"type": "address"
								}
							],
							"name": "ModuleRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "TokenBound",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "TokenUnbound",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_module",
									"type": "address"
								}
							],
							"name": "addModule",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "bindToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "callData",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "_module",
									"type": "address"
								}
							],
							"name": "callModuleFunction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "canTransfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "created",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "destroyed",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getModules",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTokenBound",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "init",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_module",
									"type": "address"
								}
							],
							"name": "isModuleBound",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_module",
									"type": "address"
								}
							],
							"name": "removeModule",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferred",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "unbindToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":264:5909  contract ModularCompliance is... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":264:5909  contract ModularCompliance is... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xe1c7392a\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xe1c7392a\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xe46638e6\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xefb22d33\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa0632461\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa446d49f\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xb2494df3\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x6a3edf28\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x6a3edf28\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8baf29b4\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8d2ea772\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0x1ed86f19\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3ff5aa02\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x40db3b50\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x5f8dead3\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1521:1968  function addModule(address _module) external override onlyOwner {... */\n    tag_3:\n      tag_22\n      tag_23\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      stop\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":650:1113  function bindToken(address _token) external override {... */\n    tag_4:\n      tag_22\n      tag_27\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_27:\n      tag_28\n      jump\t// in\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1119:1515  function unbindToken(address _token) external override {... */\n    tag_5:\n      tag_22\n      tag_30\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_30:\n      tag_31\n      jump\t// in\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3116:3496  function created(address _to, uint256 _value) external override onlyToken {... */\n    tag_6:\n      tag_22\n      tag_33\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":5018:5119  function getTokenBound() external view override returns (address) {... */\n    tag_7:\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":5101:5112  _tokenBound */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x65))\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":5018:5119  function getTokenBound() external view override returns (address) {... */\n    tag_36:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":806:838   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":788:839   */\n      dup2\n      mstore\n        /* \"#utility.yul\":776:778   */\n      0x20\n        /* \"#utility.yul\":761:779   */\n      add\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":5018:5119  function getTokenBound() external view override returns (address) {... */\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2064:2165  function renounceOwnership() public virtual onlyOwner {... */\n    tag_8:\n      tag_22\n      tag_41\n      jump\t// in\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2609:3110  function transferred(... */\n    tag_9:\n      tag_22\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3502:3918  function destroyed(address _from, uint256 _value)... */\n    tag_10:\n      tag_22\n      tag_47\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_47:\n      tag_48\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1441:1526  function owner() public view virtual returns (address) {... */\n    tag_11:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1513:1519  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x33))\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1441:1526  function owner() public view virtual returns (address) {... */\n      jump(tag_36)\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1974:2603  function removeModule(address _module) external override onlyOwner {... */\n    tag_12:\n      tag_22\n      tag_53\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":4743:4902  function isModuleBound(address _module)... */\n    tag_13:\n      tag_55\n      tag_56\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_56:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":4874:4895  _moduleBound[_module] */\n      and\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":4847:4851  bool */\n      0x00\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":4874:4895  _moduleBound[_module] */\n      swap1\n      dup2\n      mstore\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":4874:4886  _moduleBound */\n      0x67\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":4874:4895  _moduleBound[_module] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":4743:4902  function isModuleBound(address _module)... */\n      jump\n    tag_55:\n      mload(0x40)\n        /* \"#utility.yul\":1348:1362   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1341:1363   */\n      iszero\n        /* \"#utility.yul\":1323:1364   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1311:1313   */\n      0x20\n        /* \"#utility.yul\":1296:1314   */\n      add\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":4743:4902  function isModuleBound(address _module)... */\n      tag_38\n        /* \"#utility.yul\":1183:1370   */\n      jump\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":4908:5012  function getModules() external view override returns (address[] memory) {... */\n    tag_14:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":574:644  function init() external initializer {... */\n    tag_15:\n      tag_22\n      tag_65\n      jump\t// in\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":5125:5645  function canTransfer(... */\n    tag_16:\n      tag_55\n      tag_67\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3924:4737  function callModuleFunction(bytes calldata callData, address _module)... */\n    tag_17:\n      tag_22\n      tag_71\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2314:2512  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_18:\n      tag_22\n      tag_75\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1521:1968  function addModule(address _module) external override onlyOwner {... */\n    tag_25:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_78\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_79\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_78:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1603:1624  _module != address(0) */\n      dup2\n      and\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1595:1660  require(_module != address(0), \"invalid argument - zero address\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1679:1700  _moduleBound[_module] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1679:1691  _moduleBound */\n      0x67\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1679:1700  _moduleBound[_module] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1678:1700  !_moduleBound[_module] */\n      iszero\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1670:1725  require(!_moduleBound[_module], \"module already bound\") */\n      tag_84\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3276:3278   */\n      0x20\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1670:1725  require(!_moduleBound[_module], \"module already bound\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3258:3279   */\n      mstore\n        /* \"#utility.yul\":3315:3317   */\n      0x14\n        /* \"#utility.yul\":3295:3313   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3288:3318   */\n      mstore\n      shl(0x62, 0x1b5bd91d5b1948185b1c9958591e48189bdd5b99)\n        /* \"#utility.yul\":3334:3352   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3327:3377   */\n      mstore\n        /* \"#utility.yul\":3394:3412   */\n      0x64\n      add\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1670:1725  require(!_moduleBound[_module], \"module already bound\") */\n      tag_82\n        /* \"#utility.yul\":3074:3418   */\n      jump\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1670:1725  require(!_moduleBound[_module], \"module already bound\") */\n    tag_84:\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1743:1751  _modules */\n      0x66\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1743:1758  _modules.length */\n      sload\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1762:1764  24 */\n      0x18\n      lt\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1743:1764  _modules.length <= 24 */\n      iszero\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1735:1800  require(_modules.length <= 24, \"cannot add more than 25 modules\") */\n      tag_87\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3625:3627   */\n      0x20\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1735:1800  require(_modules.length <= 24, \"cannot add more than 25 modules\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3607:3628   */\n      mstore\n        /* \"#utility.yul\":3664:3666   */\n      0x1f\n        /* \"#utility.yul\":3644:3662   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3637:3667   */\n      mstore\n        /* \"#utility.yul\":3703:3736   */\n      0x63616e6e6f7420616464206d6f7265207468616e203235206d6f64756c657300\n        /* \"#utility.yul\":3683:3701   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3676:3737   */\n      mstore\n        /* \"#utility.yul\":3754:3772   */\n      0x64\n      add\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1735:1800  require(_modules.length <= 24, \"cannot add more than 25 modules\") */\n      tag_82\n        /* \"#utility.yul\":3423:3778   */\n      jump\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1735:1800  require(_modules.length <= 24, \"cannot add more than 25 modules\") */\n    tag_87:\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1810:1856  IModule(_module).bindCompliance(address(this)) */\n      mload(0x40)\n      shl(0xe2, 0x12a4c951)\n      dup2\n      mstore\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1850:1854  this */\n      address\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1810:1856  IModule(_module).bindCompliance(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":788:839   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1810:1841  IModule(_module).bindCompliance */\n      dup3\n      and\n      swap1\n      0x4a932544\n      swap1\n        /* \"#utility.yul\":761:779   */\n      0x24\n      add\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1810:1856  IModule(_module).bindCompliance(address(this)) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_93\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_93:\n      pop\n      pop\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1866:1874  _modules */\n      0x66\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1866:1888  _modules.push(_module) */\n      dup1\n      sload\n      0x01\n      dup1\n      dup3\n      add\n      swap1\n      swap3\n      sstore\n      0x46501879b8ca8525e8c2fd519e2fbfcfa2ebea26501294aa02cbfcfb12e94354\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n      0x00\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1898:1919  _moduleBound[_module] */\n      dup2\n      dup2\n      mstore\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1898:1910  _moduleBound */\n      0x67\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1866:1888  _modules.push(_module) */\n      0x20\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1898:1919  _moduleBound[_module] */\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1898:1926  _moduleBound[_module] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      swap5\n      or\n      swap1\n      swap4\n      sstore\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1941:1961  ModuleAdded(_module) */\n      swap2\n      mload\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1866:1888  _modules.push(_module) */\n      swap1\n      swap4\n      pop\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1941:1961  ModuleAdded(_module) */\n      0xead6a006345da1073a106d5f32372d2d2204f46cb0b4bca8f5ebafcbbed12b8a\n      swap3\n      pop\n      log2\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1521:1968  function addModule(address _module) external override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":650:1113  function bindToken(address _token) external override {... */\n    tag_28:\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":745:755  msg.sender */\n      caller\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":734:741  owner() */\n      tag_96\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1513:1519  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x33))\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1441:1526  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":734:741  owner() */\n    tag_96:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":734:755  owner() == msg.sender */\n      and\n      eq\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":734:826  owner() == msg.sender ||... */\n      dup1\n      tag_98\n      jumpi\n      pop\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":776:787  _tokenBound */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x65))\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":776:801  _tokenBound == address(0) */\n      iszero\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":776:825  _tokenBound == address(0) && msg.sender == _token */\n      dup1\n      iszero\n      tag_98\n      jumpi\n      pop\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":805:815  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":805:825  msg.sender == _token */\n      dup3\n      and\n      eq\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":776:825  _tokenBound == address(0) && msg.sender == _token */\n    tag_98:\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":713:880  require(... */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3985:3987   */\n      0x20\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":713:880  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3967:3988   */\n      mstore\n        /* \"#utility.yul\":4024:4026   */\n      0x1c\n        /* \"#utility.yul\":4004:4022   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3997:4027   */\n      mstore\n        /* \"#utility.yul\":4063:4093   */\n      0x6f6e6c79206f776e6572206f7220746f6b656e2063616e2063616c6c00000000\n        /* \"#utility.yul\":4043:4061   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4036:4094   */\n      mstore\n        /* \"#utility.yul\":4111:4129   */\n      0x64\n      add\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":713:880  require(... */\n      tag_82\n        /* \"#utility.yul\":3783:4135   */\n      jump\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":713:880  require(... */\n    tag_99:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":898:918  _token != address(0) */\n      dup2\n      and\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":890:954  require(_token != address(0), \"invalid argument - zero address\") */\n      tag_102\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_83\n      jump\t// in\n    tag_102:\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":964:975  _tokenBound */\n      0x65\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":964:984  _tokenBound = _token */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1088:1106  TokenBound(_token) */\n      mload(0x40)\n        /* \"#utility.yul\":788:839   */\n      swap1\n      dup2\n      mstore\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1088:1106  TokenBound(_token) */\n      0x2de35142b19ed5a07796cf30791959c592018f70b1d2d7c460eef8ffe713692b\n      swap1\n        /* \"#utility.yul\":776:778   */\n      0x20\n        /* \"#utility.yul\":761:779   */\n      add\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1088:1106  TokenBound(_token) */\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":650:1113  function bindToken(address _token) external override {... */\n      pop\n      jump\t// out\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1119:1515  function unbindToken(address _token) external override {... */\n    tag_31:\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1216:1226  msg.sender */\n      caller\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1205:1212  owner() */\n      tag_106\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1513:1519  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x33))\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1441:1526  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1205:1212  owner() */\n    tag_106:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1205:1226  owner() == msg.sender */\n      and\n      eq\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1205:1250  owner() == msg.sender || msg.sender == _token */\n      dup1\n      tag_107\n      jumpi\n      pop\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1230:1240  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1230:1250  msg.sender == _token */\n      dup3\n      and\n      eq\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1205:1250  owner() == msg.sender || msg.sender == _token */\n    tag_107:\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1184:1304  require(... */\n      tag_108\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3985:3987   */\n      0x20\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1184:1304  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3967:3988   */\n      mstore\n        /* \"#utility.yul\":4024:4026   */\n      0x1c\n        /* \"#utility.yul\":4004:4022   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3997:4027   */\n      mstore\n        /* \"#utility.yul\":4063:4093   */\n      0x6f6e6c79206f776e6572206f7220746f6b656e2063616e2063616c6c00000000\n        /* \"#utility.yul\":4043:4061   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4036:4094   */\n      mstore\n        /* \"#utility.yul\":4111:4129   */\n      0x64\n      add\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1184:1304  require(... */\n      tag_82\n        /* \"#utility.yul\":3783:4135   */\n      jump\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1184:1304  require(... */\n    tag_108:\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1332:1343  _tokenBound */\n      sload(0x65)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1322:1343  _token == _tokenBound */\n      dup3\n      dup2\n      and\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1332:1343  _tokenBound */\n      swap2\n      and\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1322:1343  _token == _tokenBound */\n      eq\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1314:1371  require(_token == _tokenBound, \"This token is not bound\") */\n      tag_110\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4342:4344   */\n      0x20\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1314:1371  require(_token == _tokenBound, \"This token is not bound\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4324:4345   */\n      mstore\n        /* \"#utility.yul\":4381:4383   */\n      0x17\n        /* \"#utility.yul\":4361:4379   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4354:4384   */\n      mstore\n        /* \"#utility.yul\":4420:4445   */\n      0x5468697320746f6b656e206973206e6f7420626f756e64000000000000000000\n        /* \"#utility.yul\":4400:4418   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4393:4446   */\n      mstore\n        /* \"#utility.yul\":4463:4481   */\n      0x64\n      add\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1314:1371  require(_token == _tokenBound, \"This token is not bound\") */\n      tag_82\n        /* \"#utility.yul\":4140:4487   */\n      jump\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1314:1371  require(_token == _tokenBound, \"This token is not bound\") */\n    tag_110:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1389:1409  _token != address(0) */\n      dup2\n      and\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1381:1445  require(_token != address(0), \"invalid argument - zero address\") */\n      tag_113\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_83\n      jump\t// in\n    tag_113:\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1462:1473  _tokenBound */\n      0x65\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1455:1473  delete _tokenBound */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1488:1508  TokenUnbound(_token) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":806:838   */\n      dup3\n      and\n        /* \"#utility.yul\":788:839   */\n      dup2\n      mstore\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1488:1508  TokenUnbound(_token) */\n      0x28a4ca7134a3b3f9aff286e79ad3daadb4a06d1b43d037a3a98bdc074edd9b7a\n      swap1\n        /* \"#utility.yul\":776:778   */\n      0x20\n        /* \"#utility.yul\":761:779   */\n      add\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1488:1508  TokenUnbound(_token) */\n      tag_104\n        /* \"#utility.yul\":642:845   */\n      jump\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3116:3496  function created(address _to, uint256 _value) external override onlyToken {... */\n    tag_35:\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":445:456  _tokenBound */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x65))\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":431:441  msg.sender */\n      caller\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":431:456  msg.sender == _tokenBound */\n      eq\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":410:550  require(... */\n      tag_117\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_119\n      jump\t// in\n    tag_117:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3208:3225  _to != address(0) */\n      dup3\n      and\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3200:3261  require(_to != address(0), \"invalid argument - zero address\") */\n      tag_121\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_83\n      jump\t// in\n    tag_121:\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3288:3289  0 */\n      0x00\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3279:3285  _value */\n      dup2\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3279:3289  _value > 0 */\n      gt\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3271:3326  require(_value > 0, \"invalid argument - no value mint\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5171:5173   */\n      0x20\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3271:3326  require(_value > 0, \"invalid argument - no value mint\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5153:5174   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":5190:5208   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5183:5213   */\n      mstore\n        /* \"#utility.yul\":5249:5283   */\n      0x696e76616c696420617267756d656e74202d206e6f2076616c7565206d696e74\n        /* \"#utility.yul\":5229:5247   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5222:5284   */\n      mstore\n        /* \"#utility.yul\":5301:5319   */\n      0x64\n      add\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3271:3326  require(_value > 0, \"invalid argument - no value mint\") */\n      tag_82\n        /* \"#utility.yul\":4969:5325   */\n      jump\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3271:3326  require(_value > 0, \"invalid argument - no value mint\") */\n    tag_123:\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3353:3361  _modules */\n      0x66\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3353:3368  _modules.length */\n      sload\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3336:3350  uint256 length */\n      0x00\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3378:3490  for (uint256 i = 0; i < length; i++) {... */\n    tag_126:\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3402:3408  length */\n      dup2\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3398:3399  i */\n      dup2\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3398:3408  i < length */\n      lt\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3378:3490  for (uint256 i = 0; i < length; i++) {... */\n      iszero\n      tag_127\n      jumpi\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3437:3445  _modules */\n      0x66\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3446:3447  i */\n      dup2\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3437:3448  _modules[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_130\n      jumpi\n      tag_130\n      tag_131\n      jump\t// in\n    tag_130:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3429:3479  IModule(_modules[i]).moduleMintAction(_to, _value) */\n      mload(0x40)\n      shl(0xe0, 0xf104a8c9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5654:5686   */\n      dup7\n      dup2\n      and\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3429:3479  IModule(_modules[i]).moduleMintAction(_to, _value) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":5636:5687   */\n      mstore\n        /* \"#utility.yul\":5703:5721   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5696:5730   */\n      dup7\n      swap1\n      mstore\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3437:3448  _modules[i] */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3429:3466  IModule(_modules[i]).moduleMintAction */\n      0xf104a8c9\n      swap1\n        /* \"#utility.yul\":5609:5627   */\n      0x44\n      add\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3429:3479  IModule(_modules[i]).moduleMintAction(_to, _value) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_135\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_135:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_137\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_137:\n      pop\n      pop\n      pop\n      pop\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3410:3413  i++ */\n      dup1\n      dup1\n      tag_138\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n      swap2\n      pop\n      pop\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3378:3490  for (uint256 i = 0; i < length; i++) {... */\n      jump(tag_126)\n    tag_127:\n      pop\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3190:3496  {... */\n      pop\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3116:3496  function created(address _to, uint256 _value) external override onlyToken {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2064:2165  function renounceOwnership() public virtual onlyOwner {... */\n    tag_41:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_142\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_79\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_142:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2128:2158  _transferOwnership(address(0)) */\n      tag_144\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2155:2156  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2128:2146  _transferOwnership */\n      tag_145\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2128:2158  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2064:2165  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2609:3110  function transferred(... */\n    tag_45:\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":445:456  _tokenBound */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x65))\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":431:441  msg.sender */\n      caller\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":431:456  msg.sender == _tokenBound */\n      eq\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":410:550  require(... */\n      tag_147\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_119\n      jump\t// in\n    tag_147:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2763:2782  _from != address(0) */\n      dup4\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2763:2803  _from != address(0) && _to != address(0) */\n      tag_150\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2786:2803  _to != address(0) */\n      dup3\n      and\n      iszero\n      iszero\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2763:2803  _from != address(0) && _to != address(0) */\n    tag_150:\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2742:2860  require(... */\n      tag_151\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_83\n      jump\t// in\n    tag_151:\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2887:2888  0 */\n      0x00\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2878:2884  _value */\n      dup2\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2878:2888  _value > 0 */\n      gt\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2870:2929  require(_value > 0, \"invalid argument - no value transfer\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6215:6217   */\n      0x20\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2870:2929  require(_value > 0, \"invalid argument - no value transfer\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6197:6218   */\n      mstore\n        /* \"#utility.yul\":6254:6256   */\n      0x24\n        /* \"#utility.yul\":6234:6252   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":6227:6257   */\n      mstore\n        /* \"#utility.yul\":6293:6327   */\n      0x696e76616c696420617267756d656e74202d206e6f2076616c7565207472616e\n        /* \"#utility.yul\":6273:6291   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6266:6328   */\n      mstore\n      shl(0xe1, 0x39b332b9)\n        /* \"#utility.yul\":6344:6362   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6337:6371   */\n      mstore\n        /* \"#utility.yul\":6388:6407   */\n      0x84\n      add\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2870:2929  require(_value > 0, \"invalid argument - no value transfer\") */\n      tag_82\n        /* \"#utility.yul\":6013:6413   */\n      jump\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2870:2929  require(_value > 0, \"invalid argument - no value transfer\") */\n    tag_153:\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2956:2964  _modules */\n      0x66\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2956:2971  _modules.length */\n      sload\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2939:2953  uint256 length */\n      0x00\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2981:3104  for (uint256 i = 0; i < length; i++) {... */\n    tag_156:\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3005:3011  length */\n      dup2\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3001:3002  i */\n      dup2\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3001:3011  i < length */\n      lt\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2981:3104  for (uint256 i = 0; i < length; i++) {... */\n      iszero\n      tag_157\n      jumpi\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3040:3048  _modules */\n      0x66\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3049:3050  i */\n      dup2\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3040:3051  _modules[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_160\n      jumpi\n      tag_160\n      tag_131\n      jump\t// in\n    tag_160:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3032:3093  IModule(_modules[i]).moduleTransferAction(_from, _to, _value) */\n      mload(0x40)\n      shl(0xe2, 0x0b2df87b)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6676:6691   */\n      dup8\n      dup2\n      and\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3032:3093  IModule(_modules[i]).moduleTransferAction(_from, _to, _value) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":6658:6692   */\n      mstore\n        /* \"#utility.yul\":6728:6743   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":6708:6726   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":6701:6744   */\n      mstore\n        /* \"#utility.yul\":6760:6778   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6753:6787   */\n      dup7\n      swap1\n      mstore\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3040:3051  _modules[i] */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3032:3073  IModule(_modules[i]).moduleTransferAction */\n      0x2cb7e1ec\n      swap1\n        /* \"#utility.yul\":6593:6611   */\n      0x64\n      add\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3032:3093  IModule(_modules[i]).moduleTransferAction(_from, _to, _value) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_164\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_164:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_166\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_166:\n      pop\n      pop\n      pop\n      pop\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3013:3016  i++ */\n      dup1\n      dup1\n      tag_167\n      swap1\n      tag_139\n      jump\t// in\n    tag_167:\n      swap2\n      pop\n      pop\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2981:3104  for (uint256 i = 0; i < length; i++) {... */\n      jump(tag_156)\n    tag_157:\n      pop\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2732:3110  {... */\n      pop\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2609:3110  function transferred(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3502:3918  function destroyed(address _from, uint256 _value)... */\n    tag_48:\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":445:456  _tokenBound */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x65))\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":431:441  msg.sender */\n      caller\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":431:456  msg.sender == _tokenBound */\n      eq\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":410:550  require(... */\n      tag_169\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_119\n      jump\t// in\n    tag_169:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3626:3645  _from != address(0) */\n      dup3\n      and\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3618:3681  require(_from != address(0), \"invalid argument - zero address\") */\n      tag_172\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_83\n      jump\t// in\n    tag_172:\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3708:3709  0 */\n      0x00\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3699:3705  _value */\n      dup2\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3699:3709  _value > 0 */\n      gt\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3691:3746  require(_value > 0, \"invalid argument - no value burn\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7000:7002   */\n      0x20\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3691:3746  require(_value > 0, \"invalid argument - no value burn\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6982:7003   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":7019:7037   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7012:7042   */\n      mstore\n        /* \"#utility.yul\":7078:7112   */\n      0x696e76616c696420617267756d656e74202d206e6f2076616c7565206275726e\n        /* \"#utility.yul\":7058:7076   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7051:7113   */\n      mstore\n        /* \"#utility.yul\":7130:7148   */\n      0x64\n      add\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3691:3746  require(_value > 0, \"invalid argument - no value burn\") */\n      tag_82\n        /* \"#utility.yul\":6798:7154   */\n      jump\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3691:3746  require(_value > 0, \"invalid argument - no value burn\") */\n    tag_174:\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3773:3781  _modules */\n      0x66\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3773:3788  _modules.length */\n      sload\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3756:3770  uint256 length */\n      0x00\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3798:3912  for (uint256 i = 0; i < length; i++) {... */\n    tag_177:\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3822:3828  length */\n      dup2\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3818:3819  i */\n      dup2\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3818:3828  i < length */\n      lt\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3798:3912  for (uint256 i = 0; i < length; i++) {... */\n      iszero\n      tag_127\n      jumpi\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3857:3865  _modules */\n      0x66\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3866:3867  i */\n      dup2\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3857:3868  _modules[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_181\n      jumpi\n      tag_181\n      tag_131\n      jump\t// in\n    tag_181:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3849:3901  IModule(_modules[i]).moduleBurnAction(_from, _value) */\n      mload(0x40)\n      shl(0xe1, 0x1b9248d1)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5654:5686   */\n      dup7\n      dup2\n      and\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3849:3901  IModule(_modules[i]).moduleBurnAction(_from, _value) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":5636:5687   */\n      mstore\n        /* \"#utility.yul\":5703:5721   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5696:5730   */\n      dup7\n      swap1\n      mstore\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3857:3868  _modules[i] */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3849:3886  IModule(_modules[i]).moduleBurnAction */\n      0x372491a2\n      swap1\n        /* \"#utility.yul\":5609:5627   */\n      0x44\n      add\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3849:3901  IModule(_modules[i]).moduleBurnAction(_from, _value) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_184\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_184:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_186\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_186:\n      pop\n      pop\n      pop\n      pop\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3830:3833  i++ */\n      dup1\n      dup1\n      tag_187\n      swap1\n      tag_139\n      jump\t// in\n    tag_187:\n      swap2\n      pop\n      pop\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3798:3912  for (uint256 i = 0; i < length; i++) {... */\n      jump(tag_177)\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1974:2603  function removeModule(address _module) external override onlyOwner {... */\n    tag_54:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_190\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_79\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_190:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2059:2080  _module != address(0) */\n      dup2\n      and\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2051:2116  require(_module != address(0), \"invalid argument - zero address\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_83\n      jump\t// in\n    tag_192:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2134:2155  _moduleBound[_module] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2134:2146  _moduleBound */\n      0x67\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2134:2155  _moduleBound[_module] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2126:2176  require(_moduleBound[_module], \"module not bound\") */\n      tag_194\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7361:7363   */\n      0x20\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2126:2176  require(_moduleBound[_module], \"module not bound\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7343:7364   */\n      mstore\n        /* \"#utility.yul\":7400:7402   */\n      0x10\n        /* \"#utility.yul\":7380:7398   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7373:7403   */\n      mstore\n      shl(0x82, 0x1b5bd91d5b19481b9bdd08189bdd5b99)\n        /* \"#utility.yul\":7419:7437   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7412:7458   */\n      mstore\n        /* \"#utility.yul\":7475:7493   */\n      0x64\n      add\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2126:2176  require(_moduleBound[_module], \"module not bound\") */\n      tag_82\n        /* \"#utility.yul\":7159:7499   */\n      jump\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2126:2176  require(_moduleBound[_module], \"module not bound\") */\n    tag_194:\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2203:2211  _modules */\n      0x66\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2203:2218  _modules.length */\n      sload\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2186:2200  uint256 length */\n      0x00\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2228:2597  for (uint256 i = 0; i < length; i++) {... */\n    tag_197:\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2252:2258  length */\n      dup2\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2248:2249  i */\n      dup2\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2248:2258  i < length */\n      lt\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2228:2597  for (uint256 i = 0; i < length; i++) {... */\n      iszero\n      tag_198\n      jumpi\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2298:2305  _module */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2283:2305  _modules[i] == _module */\n      and\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2283:2291  _modules */\n      0x66\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2292:2293  i */\n      dup3\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2283:2294  _modules[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_201\n      jumpi\n      tag_201\n      tag_131\n      jump\t// in\n    tag_201:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2283:2305  _modules[i] == _module */\n      sub\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2279:2587  if (_modules[i] == _module) {... */\n      tag_203\n      jumpi\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2325:2373  IModule(_module).unbindCompliance(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x0694a5fb)\n      dup2\n      mstore\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2367:2371  this */\n      address\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2325:2373  IModule(_module).unbindCompliance(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":788:839   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2325:2358  IModule(_module).unbindCompliance */\n      dup5\n      and\n      swap1\n      0x0694a5fb\n      swap1\n        /* \"#utility.yul\":761:779   */\n      0x24\n      add\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2325:2373  IModule(_module).unbindCompliance(address(this)) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_205\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_205:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_207\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_207:\n      pop\n      pop\n      pop\n      pop\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2405:2413  _modules */\n      0x66\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2423:2424  1 */\n      0x01\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2414:2420  length */\n      dup4\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2414:2424  length - 1 */\n      tag_208\n      swap2\n      swap1\n      tag_209\n      jump\t// in\n    tag_208:\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2405:2425  _modules[length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_211\n      jumpi\n      tag_211\n      tag_131\n      jump\t// in\n    tag_211:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2391:2399  _modules */\n      0x66\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2391:2402  _modules[i] */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2405:2425  _modules[length - 1] */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2400:2401  i */\n      dup4\n      swap1\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2391:2402  _modules[i] */\n      dup2\n      lt\n      tag_214\n      jumpi\n      tag_214\n      tag_131\n      jump\t// in\n    tag_214:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2391:2425  _modules[i] = _modules[length - 1] */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2443:2451  _modules */\n      0x66\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2443:2457  _modules.pop() */\n      dup1\n      sload\n      dup1\n      tag_217\n      jumpi\n      tag_217\n      tag_218\n      jump\t// in\n    tag_217:\n      0x00\n      dup3\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      keccak256\n      dup4\n      add\n      not(0x00)\n      swap1\n      dup2\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n      swap1\n      swap3\n      add\n      swap1\n      swap3\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2475:2496  _moduleBound[_module] */\n      dup6\n      and\n      dup1\n      dup4\n      mstore\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2475:2487  _moduleBound */\n      0x67\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2475:2496  _moduleBound[_module] */\n      swap1\n      swap2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2475:2504  _moduleBound[_module] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2527:2549  ModuleRemoved(_module) */\n      mload\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2475:2496  _moduleBound[_module] */\n      swap1\n      swap2\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2527:2549  ModuleRemoved(_module) */\n      0x0a1ee69f55c33d8467c69ca59ce2007a737a88603d75392972520bf67cb513b8\n      swap2\n      log2\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2228:2597  for (uint256 i = 0; i < length; i++) {... */\n      pop\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2041:2603  {... */\n      pop\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1974:2603  function removeModule(address _module) external override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2279:2587  if (_modules[i] == _module) {... */\n    tag_203:\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2260:2263  i++ */\n      dup1\n      tag_220\n      dup2\n      tag_139\n      jump\t// in\n    tag_220:\n      swap2\n      pop\n      pop\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2228:2597  for (uint256 i = 0; i < length; i++) {... */\n      jump(tag_197)\n    tag_198:\n      pop\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":2041:2603  {... */\n      pop\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":1974:2603  function removeModule(address _module) external override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":4908:5012  function getModules() external view override returns (address[] memory) {... */\n    tag_61:\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":4962:4978  address[] memory */\n      0x60\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":4997:5005  _modules */\n      0x66\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":4990:5005  return _modules */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_223\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_224:\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_224\n      jumpi\n    tag_223:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":4908:5012  function getModules() external view override returns (address[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":574:644  function init() external initializer {... */\n    tag_65:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3279:3298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3302:3315  _initializing */\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3301:3315  !_initializing */\n      iszero\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3347:3381  isTopLevelCall && _initialized < 1 */\n      dup1\n      iszero\n      tag_226\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3365:3377  _initialized */\n      sload(0x00)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3380:3381  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3365:3377  _initialized */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3365:3381  _initialized < 1 */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3347:3381  isTopLevelCall && _initialized < 1 */\n    tag_226:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3346:3454  (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1) */\n      dup1\n      tag_230\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3426:3430  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1713:1732  account.code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1713:1736  account.code.length > 0 */\n      iszero\n      dup1\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3387:3453  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n      tag_230\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3436:3448  _initialized */\n      and(0xff, sload(0x00))\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3436:3453  _initialized == 1 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3387:3453  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n    tag_230:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3325:3526  require(... */\n      tag_231\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7971:7973   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3325:3526  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7953:7974   */\n      mstore\n        /* \"#utility.yul\":8010:8012   */\n      0x2e\n        /* \"#utility.yul\":7990:8008   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7983:8013   */\n      mstore\n        /* \"#utility.yul\":8049:8083   */\n      0x496e697469616c697a61626c653a20636f6e747261637420697320616c726561\n        /* \"#utility.yul\":8029:8047   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8022:8084   */\n      mstore\n      shl(0x92, 0x191e481a5b9a5d1a585b1a5e9959)\n        /* \"#utility.yul\":8100:8118   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8093:8137   */\n      mstore\n        /* \"#utility.yul\":8154:8173   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3325:3526  require(... */\n      tag_82\n        /* \"#utility.yul\":7769:8179   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3325:3526  require(... */\n    tag_231:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3536:3548  _initialized */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3536:3552  _initialized = 1 */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3551:3552  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3536:3552  _initialized = 1 */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3562:3627  if (isTopLevelCall) {... */\n      dup1\n      iszero\n      tag_234\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3596:3609  _initializing */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3596:3616  _initializing = true */\n      dup1\n      sload\n      not(0xff00)\n      and\n      0x0100\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3562:3627  if (isTopLevelCall) {... */\n    tag_234:\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":621:637  __Ownable_init() */\n      tag_236\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":621:635  __Ownable_init */\n      tag_237\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":621:637  __Ownable_init() */\n      jump\t// in\n    tag_236:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3651:3665  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3647:3746  if (isTopLevelCall) {... */\n      iszero\n      tag_238\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3697:3702  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3681:3702  _initializing = false */\n      dup1\n      sload\n      not(0xff00)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3721:3735  Initialized(1) */\n      mload(0x40)\n      0x01\n        /* \"#utility.yul\":8336:8372   */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3721:3735  Initialized(1) */\n      0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498\n      swap1\n        /* \"#utility.yul\":8324:8326   */\n      0x20\n        /* \"#utility.yul\":8309:8327   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3721:3735  Initialized(1) */\n      tag_104\n        /* \"#utility.yul\":8184:8378   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3647:3746  if (isTopLevelCall) {... */\n    tag_238:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3269:3752  {... */\n      pop\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":574:644  function init() external initializer {... */\n      jump\t// out\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":5125:5645  function canTransfer(... */\n    tag_68:\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":5285:5293  _modules */\n      0x66\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":5285:5300  _modules.length */\n      sload\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":5252:5256  bool */\n      0x00\n      swap1\n      dup2\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":5310:5618  for (uint256 i = 0; i < length; i++) {... */\n    tag_242:\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":5334:5340  length */\n      dup2\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":5330:5331  i */\n      dup2\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":5330:5340  i < length */\n      lt\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":5310:5618  for (uint256 i = 0; i < length; i++) {... */\n      iszero\n      tag_243\n      jumpi\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":5391:5399  _modules */\n      0x66\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":5400:5401  i */\n      dup2\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":5391:5402  _modules[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_246\n      jumpi\n      tag_246\n      tag_131\n      jump\t// in\n    tag_246:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":5383:5548  IModule(_modules[i]).moduleCheck(... */\n      mload(0x40)\n      shl(0xe2, 0x4edf39)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8670:8685   */\n      dup9\n      dup2\n      and\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":5383:5548  IModule(_modules[i]).moduleCheck(... */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":8652:8686   */\n      mstore\n        /* \"#utility.yul\":8722:8737   */\n      dup8\n      dup2\n      and\n        /* \"#utility.yul\":8702:8720   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":8695:8738   */\n      mstore\n        /* \"#utility.yul\":8754:8772   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8747:8781   */\n      dup8\n      swap1\n      mstore\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":5525:5529  this */\n      address\n        /* \"#utility.yul\":8797:8815   */\n      0x64\n      dup4\n      add\n        /* \"#utility.yul\":8790:8833   */\n      mstore\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":5391:5402  _modules[i] */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":5383:5415  IModule(_modules[i]).moduleCheck */\n      0x013b7ce4\n      swap1\n        /* \"#utility.yul\":8586:8605   */\n      0x84\n      add\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":5383:5548  IModule(_modules[i]).moduleCheck(... */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_251\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_251:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_252\n      swap2\n      swap1\n      tag_253\n      jump\t// in\n    tag_252:\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":5361:5608  if (... */\n      tag_254\n      jumpi\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":5588:5593  false */\n      0x00\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":5581:5593  return false */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_241)\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":5361:5608  if (... */\n    tag_254:\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":5342:5345  i++ */\n      dup1\n      tag_255\n      dup2\n      tag_139\n      jump\t// in\n    tag_255:\n      swap2\n      pop\n      pop\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":5310:5618  for (uint256 i = 0; i < length; i++) {... */\n      jump(tag_242)\n    tag_243:\n      pop\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":5634:5638  true */\n      0x01\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":5627:5638  return true */\n      swap2\n      pop\n      pop\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":5125:5645  function canTransfer(... */\n    tag_241:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3924:4737  function callModuleFunction(bytes calldata callData, address _module)... */\n    tag_73:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_257\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_79\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_257:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":4068:4089  _moduleBound[_module] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":4068:4080  _moduleBound */\n      0x67\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":4068:4089  _moduleBound[_module] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":4060:4119  require(_moduleBound[_module], \"call only on bound module\") */\n      tag_259\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9328:9330   */\n      0x20\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":4060:4119  require(_moduleBound[_module], \"call only on bound module\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9310:9331   */\n      mstore\n        /* \"#utility.yul\":9367:9369   */\n      0x19\n        /* \"#utility.yul\":9347:9365   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9340:9370   */\n      mstore\n        /* \"#utility.yul\":9406:9433   */\n      0x63616c6c206f6e6c79206f6e20626f756e64206d6f64756c6500000000000000\n        /* \"#utility.yul\":9386:9404   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9379:9434   */\n      mstore\n        /* \"#utility.yul\":9451:9469   */\n      0x64\n      add\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":4060:4119  require(_moduleBound[_module], \"call only on bound module\") */\n      tag_82\n        /* \"#utility.yul\":9126:9475   */\n      jump\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":4060:4119  require(_moduleBound[_module], \"call only on bound module\") */\n    tag_259:\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":4183:4187  0x40 */\n      0x40\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":4177:4188  mload(0x40) */\n      mload\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":4250:4265  callData.length */\n      dup3\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":4233:4248  callData.offset */\n      dup5\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":4214:4231  freeMemoryPointer */\n      dup3\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":4201:4266  calldatacopy(freeMemoryPointer, callData.offset, callData.length) */\n      calldatacopy\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":4510:4511  0 */\n      0x00\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":4487:4488  0 */\n      dup1\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":4450:4465  callData.length */\n      dup5\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":4411:4428  freeMemoryPointer */\n      dup4\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":4388:4389  0 */\n      0x00\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":4359:4366  _module */\n      dup7\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":4332:4337  gas() */\n      gas\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":4306:4529  call(... */\n      call\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":4279:4658  if iszero(... */\n      tag_262\n      jumpi\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":4583:4599  returndatasize() */\n      returndatasize\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":4580:4581  0 */\n      0x00\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":4577:4578  0 */\n      dup1\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":4562:4600  returndatacopy(0, 0, returndatasize()) */\n      returndatacopy\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":4627:4643  returndatasize() */\n      returndatasize\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":4624:4625  0 */\n      0x00\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":4617:4644  revert(0, returndatasize()) */\n      revert\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":4279:4658  if iszero(... */\n    tag_262:\n      pop\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":4701:4708  _module */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":4683:4730  ModuleInteraction(_module, _selector(callData)) */\n      and\n      0x20d79de70adcc6e9353d8a9a5646b46dc352710d0a310b1ad1f67faeca7ef891\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":4710:4729  _selector(callData) */\n      tag_263\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":4720:4728  callData */\n      dup6\n      dup6\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":4710:4719  _selector */\n      tag_264\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":4710:4729  _selector(callData) */\n      jump\t// in\n    tag_263:\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":4683:4730  ModuleInteraction(_module, _selector(callData)) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":9642:9675   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":9624:9676   */\n      dup2\n      mstore\n        /* \"#utility.yul\":9612:9614   */\n      0x20\n        /* \"#utility.yul\":9597:9615   */\n      add\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":4683:4730  ModuleInteraction(_module, _selector(callData)) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":3924:4737  function callModuleFunction(bytes calldata callData, address _module)... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2314:2512  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_76:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_268\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_79\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_268:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2402:2424  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2394:2467  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_270\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9889:9891   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2394:2467  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9871:9892   */\n      mstore\n        /* \"#utility.yul\":9928:9930   */\n      0x26\n        /* \"#utility.yul\":9908:9926   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9901:9931   */\n      mstore\n        /* \"#utility.yul\":9967:10001   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":9947:9965   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9940:10002   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":10018:10036   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10011:10047   */\n      mstore\n        /* \"#utility.yul\":10064:10083   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2394:2467  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_82\n        /* \"#utility.yul\":9687:10089   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2394:2467  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_270:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2477:2505  _transferOwnership(newOwner) */\n      tag_238\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2496:2504  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2477:2495  _transferOwnership */\n      tag_145\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2477:2505  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1599:1729  function _checkOwner() internal view virtual {... */\n    tag_79:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1513:1519  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x33))\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1662:1685  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1654:1722  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_144\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10296:10298   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1654:1722  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10278:10299   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":10315:10333   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10308:10338   */\n      mstore\n        /* \"#utility.yul\":10374:10408   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":10354:10372   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10347:10409   */\n      mstore\n        /* \"#utility.yul\":10426:10444   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1654:1722  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_82\n        /* \"#utility.yul\":10094:10450   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2666:2853  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_145:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2758:2764  _owner */\n      0x33\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2774:2791  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2806:2846  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2758:2764  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2774:2791  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2758:2764  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2806:2846  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2739:2755  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2806:2846  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2729:2853  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2666:2853  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1003:1098  function __Ownable_init() internal onlyInitializing {... */\n    tag_237:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5374:5387  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5366:5435  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_284\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_286\n      jump\t// in\n    tag_284:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1065:1091  __Ownable_init_unchained() */\n      tag_144\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1065:1089  __Ownable_init_unchained */\n      tag_289\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1065:1091  __Ownable_init_unchained() */\n      jump\t// in\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":5651:5907  function _selector(bytes calldata callData)... */\n    tag_264:\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":5742:5755  bytes4 result */\n      0x00\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":5794:5795  4 */\n      0x04\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":5775:5795  callData.length >= 4 */\n      dup3\n      lt\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":5771:5901  if (callData.length >= 4) {... */\n      tag_291\n      jumpi\n      pop\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":5848:5877  calldataload(callData.offset) */\n      dup2\n      calldataload\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":5771:5901  if (callData.length >= 4) {... */\n    tag_291:\n        /* \"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":5651:5907  function _selector(bytes calldata callData)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1104:1215  function __Ownable_init_unchained() internal onlyInitializing {... */\n    tag_289:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5374:5387  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5366:5435  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_294\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_286\n      jump\t// in\n    tag_294:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1176:1208  _transferOwnership(_msgSender()) */\n      tag_144\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1176:1194  _transferOwnership */\n      tag_145\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1176:1208  _transferOwnership(_msgSender()) */\n      jump\t// in\n        /* \"#utility.yul\":14:187   */\n    tag_299:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_303\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_303:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_24:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_305\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_305:\n        /* \"#utility.yul\":343:372   */\n      tag_241\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_299\n      jump\t// in\n        /* \"#utility.yul\":383:637   */\n    tag_34:\n        /* \"#utility.yul\":451:457   */\n      0x00\n        /* \"#utility.yul\":459:465   */\n      dup1\n        /* \"#utility.yul\":512:514   */\n      0x40\n        /* \"#utility.yul\":500:509   */\n      dup4\n        /* \"#utility.yul\":491:498   */\n      dup6\n        /* \"#utility.yul\":487:510   */\n      sub\n        /* \"#utility.yul\":483:515   */\n      slt\n        /* \"#utility.yul\":480:532   */\n      iszero\n      tag_308\n      jumpi\n        /* \"#utility.yul\":528:529   */\n      0x00\n        /* \"#utility.yul\":525:526   */\n      dup1\n        /* \"#utility.yul\":518:530   */\n      revert\n        /* \"#utility.yul\":480:532   */\n    tag_308:\n        /* \"#utility.yul\":551:580   */\n      tag_309\n        /* \"#utility.yul\":570:579   */\n      dup4\n        /* \"#utility.yul\":551:580   */\n      tag_299\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":541:580   */\n      swap5\n        /* \"#utility.yul\":627:629   */\n      0x20\n        /* \"#utility.yul\":612:630   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":599:631   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":383:637   */\n      jump\t// out\n        /* \"#utility.yul\":850:1178   */\n    tag_44:\n        /* \"#utility.yul\":927:933   */\n      0x00\n        /* \"#utility.yul\":935:941   */\n      dup1\n        /* \"#utility.yul\":943:949   */\n      0x00\n        /* \"#utility.yul\":996:998   */\n      0x60\n        /* \"#utility.yul\":984:993   */\n      dup5\n        /* \"#utility.yul\":975:982   */\n      dup7\n        /* \"#utility.yul\":971:994   */\n      sub\n        /* \"#utility.yul\":967:999   */\n      slt\n        /* \"#utility.yul\":964:1016   */\n      iszero\n      tag_312\n      jumpi\n        /* \"#utility.yul\":1012:1013   */\n      0x00\n        /* \"#utility.yul\":1009:1010   */\n      dup1\n        /* \"#utility.yul\":1002:1014   */\n      revert\n        /* \"#utility.yul\":964:1016   */\n    tag_312:\n        /* \"#utility.yul\":1035:1064   */\n      tag_313\n        /* \"#utility.yul\":1054:1063   */\n      dup5\n        /* \"#utility.yul\":1035:1064   */\n      tag_299\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":1025:1064   */\n      swap3\n      pop\n        /* \"#utility.yul\":1083:1121   */\n      tag_314\n        /* \"#utility.yul\":1117:1119   */\n      0x20\n        /* \"#utility.yul\":1106:1115   */\n      dup6\n        /* \"#utility.yul\":1102:1120   */\n      add\n        /* \"#utility.yul\":1083:1121   */\n      tag_299\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":1073:1121   */\n      swap2\n      pop\n        /* \"#utility.yul\":1168:1170   */\n      0x40\n        /* \"#utility.yul\":1157:1166   */\n      dup5\n        /* \"#utility.yul\":1153:1171   */\n      add\n        /* \"#utility.yul\":1140:1172   */\n      calldataload\n        /* \"#utility.yul\":1130:1172   */\n      swap1\n      pop\n        /* \"#utility.yul\":850:1178   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1375:2033   */\n    tag_63:\n        /* \"#utility.yul\":1546:1548   */\n      0x20\n        /* \"#utility.yul\":1598:1619   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":1668:1681   */\n      dup3\n      mload\n        /* \"#utility.yul\":1571:1589   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":1690:1712   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":1517:1521   */\n      0x00\n      swap2\n        /* \"#utility.yul\":1546:1548   */\n      swap1\n        /* \"#utility.yul\":1769:1784   */\n      dup5\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":1743:1745   */\n      0x40\n        /* \"#utility.yul\":1728:1746   */\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":1517:1521   */\n      dup5\n        /* \"#utility.yul\":1812:2007   */\n    tag_317:\n        /* \"#utility.yul\":1826:1832   */\n      dup2\n        /* \"#utility.yul\":1823:1824   */\n      dup2\n        /* \"#utility.yul\":1820:1833   */\n      lt\n        /* \"#utility.yul\":1812:2007   */\n      iszero\n      tag_319\n      jumpi\n        /* \"#utility.yul\":1891:1904   */\n      dup4\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1887:1926   */\n      and\n        /* \"#utility.yul\":1875:1927   */\n      dup4\n      mstore\n        /* \"#utility.yul\":1982:1997   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":1947:1959   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":1923:1924   */\n      0x01\n        /* \"#utility.yul\":1841:1850   */\n      add\n        /* \"#utility.yul\":1812:2007   */\n      jump(tag_317)\n    tag_319:\n      pop\n        /* \"#utility.yul\":2024:2027   */\n      swap1\n      swap7\n        /* \"#utility.yul\":1375:2033   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2709   */\n    tag_72:\n        /* \"#utility.yul\":2117:2123   */\n      0x00\n        /* \"#utility.yul\":2125:2131   */\n      dup1\n        /* \"#utility.yul\":2133:2139   */\n      0x00\n        /* \"#utility.yul\":2186:2188   */\n      0x40\n        /* \"#utility.yul\":2174:2183   */\n      dup5\n        /* \"#utility.yul\":2165:2172   */\n      dup7\n        /* \"#utility.yul\":2161:2184   */\n      sub\n        /* \"#utility.yul\":2157:2189   */\n      slt\n        /* \"#utility.yul\":2154:2206   */\n      iszero\n      tag_321\n      jumpi\n        /* \"#utility.yul\":2202:2203   */\n      0x00\n        /* \"#utility.yul\":2199:2200   */\n      dup1\n        /* \"#utility.yul\":2192:2204   */\n      revert\n        /* \"#utility.yul\":2154:2206   */\n    tag_321:\n        /* \"#utility.yul\":2242:2251   */\n      dup4\n        /* \"#utility.yul\":2229:2252   */\n      calldataload\n        /* \"#utility.yul\":2271:2289   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2312:2314   */\n      dup1\n        /* \"#utility.yul\":2304:2310   */\n      dup3\n        /* \"#utility.yul\":2301:2315   */\n      gt\n        /* \"#utility.yul\":2298:2332   */\n      iszero\n      tag_322\n      jumpi\n        /* \"#utility.yul\":2328:2329   */\n      0x00\n        /* \"#utility.yul\":2325:2326   */\n      dup1\n        /* \"#utility.yul\":2318:2330   */\n      revert\n        /* \"#utility.yul\":2298:2332   */\n    tag_322:\n        /* \"#utility.yul\":2366:2372   */\n      dup2\n        /* \"#utility.yul\":2355:2364   */\n      dup7\n        /* \"#utility.yul\":2351:2373   */\n      add\n        /* \"#utility.yul\":2341:2373   */\n      swap2\n      pop\n        /* \"#utility.yul\":2411:2418   */\n      dup7\n        /* \"#utility.yul\":2404:2408   */\n      0x1f\n        /* \"#utility.yul\":2400:2402   */\n      dup4\n        /* \"#utility.yul\":2396:2409   */\n      add\n        /* \"#utility.yul\":2392:2419   */\n      slt\n        /* \"#utility.yul\":2382:2437   */\n      tag_323\n      jumpi\n        /* \"#utility.yul\":2433:2434   */\n      0x00\n        /* \"#utility.yul\":2430:2431   */\n      dup1\n        /* \"#utility.yul\":2423:2435   */\n      revert\n        /* \"#utility.yul\":2382:2437   */\n    tag_323:\n        /* \"#utility.yul\":2473:2475   */\n      dup2\n        /* \"#utility.yul\":2460:2476   */\n      calldataload\n        /* \"#utility.yul\":2499:2501   */\n      dup2\n        /* \"#utility.yul\":2491:2497   */\n      dup2\n        /* \"#utility.yul\":2488:2502   */\n      gt\n        /* \"#utility.yul\":2485:2519   */\n      iszero\n      tag_324\n      jumpi\n        /* \"#utility.yul\":2515:2516   */\n      0x00\n        /* \"#utility.yul\":2512:2513   */\n      dup1\n        /* \"#utility.yul\":2505:2517   */\n      revert\n        /* \"#utility.yul\":2485:2519   */\n    tag_324:\n        /* \"#utility.yul\":2562:2569   */\n      dup8\n        /* \"#utility.yul\":2555:2559   */\n      0x20\n        /* \"#utility.yul\":2546:2552   */\n      dup3\n        /* \"#utility.yul\":2542:2544   */\n      dup6\n        /* \"#utility.yul\":2538:2553   */\n      add\n        /* \"#utility.yul\":2534:2560   */\n      add\n        /* \"#utility.yul\":2531:2570   */\n      gt\n        /* \"#utility.yul\":2528:2587   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":2583:2584   */\n      0x00\n        /* \"#utility.yul\":2580:2581   */\n      dup1\n        /* \"#utility.yul\":2573:2585   */\n      revert\n        /* \"#utility.yul\":2528:2587   */\n    tag_325:\n        /* \"#utility.yul\":2614:2618   */\n      0x20\n        /* \"#utility.yul\":2606:2619   */\n      swap3\n      dup4\n      add\n      swap6\n      pop\n        /* \"#utility.yul\":2638:2644   */\n      swap4\n      pop\n        /* \"#utility.yul\":2663:2703   */\n      tag_326\n      swap2\n        /* \"#utility.yul\":2682:2702   */\n      dup7\n      add\n      swap1\n      pop\n        /* \"#utility.yul\":2663:2703   */\n      tag_299\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":2653:2703   */\n      swap1\n      pop\n        /* \"#utility.yul\":2038:2709   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2714:3069   */\n    tag_83:\n        /* \"#utility.yul\":2916:2918   */\n      0x20\n        /* \"#utility.yul\":2898:2919   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2955:2957   */\n      0x1f\n        /* \"#utility.yul\":2935:2953   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2928:2958   */\n      mstore\n        /* \"#utility.yul\":2994:3027   */\n      0x696e76616c696420617267756d656e74202d207a65726f206164647265737300\n        /* \"#utility.yul\":2989:2991   */\n      0x40\n        /* \"#utility.yul\":2974:2992   */\n      dup3\n      add\n        /* \"#utility.yul\":2967:3028   */\n      mstore\n        /* \"#utility.yul\":3060:3062   */\n      0x60\n        /* \"#utility.yul\":3045:3063   */\n      add\n      swap1\n        /* \"#utility.yul\":2714:3069   */\n      jump\t// out\n        /* \"#utility.yul\":4492:4964   */\n    tag_119:\n        /* \"#utility.yul\":4694:4696   */\n      0x20\n        /* \"#utility.yul\":4676:4697   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4733:4735   */\n      0x44\n        /* \"#utility.yul\":4713:4731   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4706:4736   */\n      mstore\n        /* \"#utility.yul\":4772:4806   */\n      0x6572726f72203a20746869732061646472657373206973206e6f74206120746f\n        /* \"#utility.yul\":4767:4769   */\n      0x40\n        /* \"#utility.yul\":4752:4770   */\n      dup3\n      add\n        /* \"#utility.yul\":4745:4807   */\n      mstore\n        /* \"#utility.yul\":4843:4877   */\n      0x6b656e20626f756e6420746f2074686520636f6d706c69616e636520636f6e74\n        /* \"#utility.yul\":4838:4840   */\n      0x60\n        /* \"#utility.yul\":4823:4841   */\n      dup3\n      add\n        /* \"#utility.yul\":4816:4878   */\n      mstore\n      shl(0xe2, 0x1c9858dd)\n        /* \"#utility.yul\":4909:4912   */\n      0x80\n        /* \"#utility.yul\":4894:4913   */\n      dup3\n      add\n        /* \"#utility.yul\":4887:4922   */\n      mstore\n        /* \"#utility.yul\":4954:4957   */\n      0xa0\n        /* \"#utility.yul\":4939:4958   */\n      add\n      swap1\n        /* \"#utility.yul\":4492:4964   */\n      jump\t// out\n        /* \"#utility.yul\":5330:5457   */\n    tag_131:\n        /* \"#utility.yul\":5391:5401   */\n      0x4e487b71\n        /* \"#utility.yul\":5386:5389   */\n      0xe0\n        /* \"#utility.yul\":5382:5402   */\n      shl\n        /* \"#utility.yul\":5379:5380   */\n      0x00\n        /* \"#utility.yul\":5372:5403   */\n      mstore\n        /* \"#utility.yul\":5422:5426   */\n      0x32\n        /* \"#utility.yul\":5419:5420   */\n      0x04\n        /* \"#utility.yul\":5412:5427   */\n      mstore\n        /* \"#utility.yul\":5446:5450   */\n      0x24\n        /* \"#utility.yul\":5443:5444   */\n      0x00\n        /* \"#utility.yul\":5436:5451   */\n      revert\n        /* \"#utility.yul\":5741:5868   */\n    tag_300:\n        /* \"#utility.yul\":5802:5812   */\n      0x4e487b71\n        /* \"#utility.yul\":5797:5800   */\n      0xe0\n        /* \"#utility.yul\":5793:5813   */\n      shl\n        /* \"#utility.yul\":5790:5791   */\n      0x00\n        /* \"#utility.yul\":5783:5814   */\n      mstore\n        /* \"#utility.yul\":5833:5837   */\n      0x11\n        /* \"#utility.yul\":5830:5831   */\n      0x04\n        /* \"#utility.yul\":5823:5838   */\n      mstore\n        /* \"#utility.yul\":5857:5861   */\n      0x24\n        /* \"#utility.yul\":5854:5855   */\n      0x00\n        /* \"#utility.yul\":5847:5862   */\n      revert\n        /* \"#utility.yul\":5873:6008   */\n    tag_139:\n        /* \"#utility.yul\":5912:5915   */\n      0x00\n        /* \"#utility.yul\":5933:5950   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":5930:5973   */\n      tag_339\n      jumpi\n        /* \"#utility.yul\":5953:5971   */\n      tag_339\n      tag_300\n      jump\t// in\n    tag_339:\n      pop\n        /* \"#utility.yul\":6000:6001   */\n      0x01\n        /* \"#utility.yul\":5989:6002   */\n      add\n      swap1\n        /* \"#utility.yul\":5873:6008   */\n      jump\t// out\n        /* \"#utility.yul\":7504:7632   */\n    tag_209:\n        /* \"#utility.yul\":7571:7580   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":7592:7603   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":7589:7626   */\n      iszero\n      tag_291\n      jumpi\n        /* \"#utility.yul\":7606:7624   */\n      tag_291\n      tag_300\n      jump\t// in\n        /* \"#utility.yul\":7637:7764   */\n    tag_218:\n        /* \"#utility.yul\":7698:7708   */\n      0x4e487b71\n        /* \"#utility.yul\":7693:7696   */\n      0xe0\n        /* \"#utility.yul\":7689:7709   */\n      shl\n        /* \"#utility.yul\":7686:7687   */\n      0x00\n        /* \"#utility.yul\":7679:7710   */\n      mstore\n        /* \"#utility.yul\":7729:7733   */\n      0x31\n        /* \"#utility.yul\":7726:7727   */\n      0x04\n        /* \"#utility.yul\":7719:7734   */\n      mstore\n        /* \"#utility.yul\":7753:7757   */\n      0x24\n        /* \"#utility.yul\":7750:7751   */\n      0x00\n        /* \"#utility.yul\":7743:7758   */\n      revert\n        /* \"#utility.yul\":8844:9121   */\n    tag_253:\n        /* \"#utility.yul\":8911:8917   */\n      0x00\n        /* \"#utility.yul\":8964:8966   */\n      0x20\n        /* \"#utility.yul\":8952:8961   */\n      dup3\n        /* \"#utility.yul\":8943:8950   */\n      dup5\n        /* \"#utility.yul\":8939:8962   */\n      sub\n        /* \"#utility.yul\":8935:8967   */\n      slt\n        /* \"#utility.yul\":8932:8984   */\n      iszero\n      tag_352\n      jumpi\n        /* \"#utility.yul\":8980:8981   */\n      0x00\n        /* \"#utility.yul\":8977:8978   */\n      dup1\n        /* \"#utility.yul\":8970:8982   */\n      revert\n        /* \"#utility.yul\":8932:8984   */\n    tag_352:\n        /* \"#utility.yul\":9012:9021   */\n      dup2\n        /* \"#utility.yul\":9006:9022   */\n      mload\n        /* \"#utility.yul\":9065:9070   */\n      dup1\n        /* \"#utility.yul\":9058:9071   */\n      iszero\n        /* \"#utility.yul\":9051:9072   */\n      iszero\n        /* \"#utility.yul\":9044:9049   */\n      dup2\n        /* \"#utility.yul\":9041:9073   */\n      eq\n        /* \"#utility.yul\":9031:9091   */\n      tag_241\n      jumpi\n        /* \"#utility.yul\":9087:9088   */\n      0x00\n        /* \"#utility.yul\":9084:9085   */\n      dup1\n        /* \"#utility.yul\":9077:9089   */\n      revert\n        /* \"#utility.yul\":10455:10862   */\n    tag_286:\n        /* \"#utility.yul\":10657:10659   */\n      0x20\n        /* \"#utility.yul\":10639:10660   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":10696:10698   */\n      0x2b\n        /* \"#utility.yul\":10676:10694   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":10669:10699   */\n      mstore\n        /* \"#utility.yul\":10735:10769   */\n      0x496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069\n        /* \"#utility.yul\":10730:10732   */\n      0x40\n        /* \"#utility.yul\":10715:10733   */\n      dup3\n      add\n        /* \"#utility.yul\":10708:10770   */\n      mstore\n      shl(0xa8, 0x6e697469616c697a696e67)\n        /* \"#utility.yul\":10801:10803   */\n      0x60\n        /* \"#utility.yul\":10786:10804   */\n      dup3\n      add\n        /* \"#utility.yul\":10779:10820   */\n      mstore\n        /* \"#utility.yul\":10852:10855   */\n      0x80\n        /* \"#utility.yul\":10837:10856   */\n      add\n      swap1\n        /* \"#utility.yul\":10455:10862   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e3a0932b8c23d0b2378f3feb3b0f6d18a8a196f65797aa4901bbc49c0306058564736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506114b6806100206000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80638da5cb5b11610097578063e1c7392a11610066578063e1c7392a14610220578063e46638e614610228578063efb22d331461023b578063f2fde38b1461024e57600080fd5b80638da5cb5b146101ab578063a0632461146101bc578063a446d49f146101cf578063b2494df31461020b57600080fd5b80636a3edf28116100d35780636a3edf2814610153578063715018a61461017d5780638baf29b4146101855780638d2ea7721461019857600080fd5b80631ed86f19146101055780633ff5aa021461011a57806340db3b501461012d5780635f8dead314610140575b600080fd5b6101186101133660046111b5565b610261565b005b6101186101283660046111b5565b610433565b61011861013b3660046111b5565b61053e565b61011861014e3660046111d0565b610686565b6065546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b6101186107cf565b6101186101933660046111fa565b6107e3565b6101186101a63660046111d0565b610957565b6033546001600160a01b0316610160565b6101186101ca3660046111b5565b610a9a565b6101fb6101dd3660046111b5565b6001600160a01b031660009081526067602052604090205460ff1690565b6040519015158152602001610174565b610213610cd2565b6040516101749190611236565b610118610d34565b6101fb6102363660046111fa565b610e41565b610118610249366004611283565b610f1e565b61011861025c3660046111b5565b611004565b61026961107a565b6001600160a01b0381166102985760405162461bcd60e51b815260040161028f90611304565b60405180910390fd5b6001600160a01b03811660009081526067602052604090205460ff16156102f85760405162461bcd60e51b81526020600482015260146024820152731b5bd91d5b1948185b1c9958591e48189bdd5b9960621b604482015260640161028f565b6066546018101561034b5760405162461bcd60e51b815260206004820152601f60248201527f63616e6e6f7420616464206d6f7265207468616e203235206d6f64756c657300604482015260640161028f565b6040516312a4c95160e21b81523060048201526001600160a01b03821690634a93254490602401600060405180830381600087803b15801561038c57600080fd5b505af11580156103a0573d6000803e3d6000fd5b50506066805460018082019092557f46501879b8ca8525e8c2fd519e2fbfcfa2ebea26501294aa02cbfcfb12e943540180546001600160a01b0319166001600160a01b038616908117909155600081815260676020526040808220805460ff191690941790935591519093507fead6a006345da1073a106d5f32372d2d2204f46cb0b4bca8f5ebafcbbed12b8a9250a250565b336104466033546001600160a01b031690565b6001600160a01b0316148061047757506065546001600160a01b03161580156104775750336001600160a01b038216145b6104c35760405162461bcd60e51b815260206004820152601c60248201527f6f6e6c79206f776e6572206f7220746f6b656e2063616e2063616c6c00000000604482015260640161028f565b6001600160a01b0381166104e95760405162461bcd60e51b815260040161028f90611304565b606580546001600160a01b0319166001600160a01b0383169081179091556040519081527f2de35142b19ed5a07796cf30791959c592018f70b1d2d7c460eef8ffe713692b906020015b60405180910390a150565b336105516033546001600160a01b031690565b6001600160a01b0316148061056e5750336001600160a01b038216145b6105ba5760405162461bcd60e51b815260206004820152601c60248201527f6f6e6c79206f776e6572206f7220746f6b656e2063616e2063616c6c00000000604482015260640161028f565b6065546001600160a01b038281169116146106175760405162461bcd60e51b815260206004820152601760248201527f5468697320746f6b656e206973206e6f7420626f756e64000000000000000000604482015260640161028f565b6001600160a01b03811661063d5760405162461bcd60e51b815260040161028f90611304565b606580546001600160a01b03191690556040516001600160a01b03821681527f28a4ca7134a3b3f9aff286e79ad3daadb4a06d1b43d037a3a98bdc074edd9b7a90602001610533565b6065546001600160a01b031633146106b05760405162461bcd60e51b815260040161028f9061133b565b6001600160a01b0382166106d65760405162461bcd60e51b815260040161028f90611304565b600081116107265760405162461bcd60e51b815260206004820181905260248201527f696e76616c696420617267756d656e74202d206e6f2076616c7565206d696e74604482015260640161028f565b60665460005b818110156107c95760668181548110610747576107476113a5565b60009182526020909120015460405163f104a8c960e01b81526001600160a01b038681166004830152602482018690529091169063f104a8c990604401600060405180830381600087803b15801561079e57600080fd5b505af11580156107b2573d6000803e3d6000fd5b5050505080806107c1906113d1565b91505061072c565b50505050565b6107d761107a565b6107e160006110d4565b565b6065546001600160a01b0316331461080d5760405162461bcd60e51b815260040161028f9061133b565b6001600160a01b0383161580159061082d57506001600160a01b03821615155b6108495760405162461bcd60e51b815260040161028f90611304565b600081116108a55760405162461bcd60e51b8152602060048201526024808201527f696e76616c696420617267756d656e74202d206e6f2076616c7565207472616e60448201526339b332b960e11b606482015260840161028f565b60665460005b8181101561095057606681815481106108c6576108c66113a5565b600091825260209091200154604051630b2df87b60e21b81526001600160a01b03878116600483015286811660248301526044820186905290911690632cb7e1ec90606401600060405180830381600087803b15801561092557600080fd5b505af1158015610939573d6000803e3d6000fd5b505050508080610948906113d1565b9150506108ab565b5050505050565b6065546001600160a01b031633146109815760405162461bcd60e51b815260040161028f9061133b565b6001600160a01b0382166109a75760405162461bcd60e51b815260040161028f90611304565b600081116109f75760405162461bcd60e51b815260206004820181905260248201527f696e76616c696420617267756d656e74202d206e6f2076616c7565206275726e604482015260640161028f565b60665460005b818110156107c95760668181548110610a1857610a186113a5565b600091825260209091200154604051631b9248d160e11b81526001600160a01b038681166004830152602482018690529091169063372491a290604401600060405180830381600087803b158015610a6f57600080fd5b505af1158015610a83573d6000803e3d6000fd5b505050508080610a92906113d1565b9150506109fd565b610aa261107a565b6001600160a01b038116610ac85760405162461bcd60e51b815260040161028f90611304565b6001600160a01b03811660009081526067602052604090205460ff16610b235760405162461bcd60e51b815260206004820152601060248201526f1b5bd91d5b19481b9bdd08189bdd5b9960821b604482015260640161028f565b60665460005b81811015610ccd57826001600160a01b031660668281548110610b4e57610b4e6113a5565b6000918252602090912001546001600160a01b031603610cbb57604051630694a5fb60e01b81523060048201526001600160a01b03841690630694a5fb90602401600060405180830381600087803b158015610ba957600080fd5b505af1158015610bbd573d6000803e3d6000fd5b505050506066600183610bd091906113ea565b81548110610be057610be06113a5565b600091825260209091200154606680546001600160a01b039092169183908110610c0c57610c0c6113a5565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506066805480610c4b57610c4b6113fd565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b03851680835260679091526040808320805460ff191690555190917f0a1ee69f55c33d8467c69ca59ce2007a737a88603d75392972520bf67cb513b891a2505050565b80610cc5816113d1565b915050610b29565b505050565b60606066805480602002602001604051908101604052809291908181526020018280548015610d2a57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610d0c575b5050505050905090565b600054610100900460ff1615808015610d545750600054600160ff909116105b80610d6e5750303b158015610d6e575060005460ff166001145b610dd15760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161028f565b6000805460ff191660011790558015610df4576000805461ff0019166101001790555b610dfc611126565b8015610e3e576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602001610533565b50565b606654600090815b81811015610f105760668181548110610e6457610e646113a5565b600091825260209091200154604051624edf3960e21b81526001600160a01b0388811660048301528781166024830152604482018790523060648301529091169063013b7ce490608401602060405180830381865afa158015610ecb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eef9190611413565b610efe57600092505050610f17565b80610f08816113d1565b915050610e49565b5060019150505b9392505050565b610f2661107a565b6001600160a01b03811660009081526067602052604090205460ff16610f8e5760405162461bcd60e51b815260206004820152601960248201527f63616c6c206f6e6c79206f6e20626f756e64206d6f64756c6500000000000000604482015260640161028f565b6040518284823760008084836000865af1610fad573d6000803e3d6000fd5b50806001600160a01b03167f20d79de70adcc6e9353d8a9a5646b46dc352710d0a310b1ad1f67faeca7ef891610fe38585611155565b6040516001600160e01b0319909116815260200160405180910390a2505050565b61100c61107a565b6001600160a01b0381166110715760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161028f565b610e3e816110d4565b6033546001600160a01b031633146107e15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161028f565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff1661114d5760405162461bcd60e51b815260040161028f90611435565b6107e1611169565b600060048210611163575081355b92915050565b600054610100900460ff166111905760405162461bcd60e51b815260040161028f90611435565b6107e1336110d4565b80356001600160a01b03811681146111b057600080fd5b919050565b6000602082840312156111c757600080fd5b610f1782611199565b600080604083850312156111e357600080fd5b6111ec83611199565b946020939093013593505050565b60008060006060848603121561120f57600080fd5b61121884611199565b925061122660208501611199565b9150604084013590509250925092565b6020808252825182820181905260009190848201906040850190845b818110156112775783516001600160a01b031683529284019291840191600101611252565b50909695505050505050565b60008060006040848603121561129857600080fd5b833567ffffffffffffffff808211156112b057600080fd5b818601915086601f8301126112c457600080fd5b8135818111156112d357600080fd5b8760208285010111156112e557600080fd5b6020928301955093506112fb9186019050611199565b90509250925092565b6020808252601f908201527f696e76616c696420617267756d656e74202d207a65726f206164647265737300604082015260600190565b60208082526044908201527f6572726f72203a20746869732061646472657373206973206e6f74206120746f60408201527f6b656e20626f756e6420746f2074686520636f6d706c69616e636520636f6e746060820152631c9858dd60e21b608082015260a00190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016113e3576113e36113bb565b5060010190565b81810381811115611163576111636113bb565b634e487b7160e01b600052603160045260246000fd5b60006020828403121561142557600080fd5b81518015158114610f1757600080fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea2646970667358221220e3a0932b8c23d0b2378f3feb3b0f6d18a8a196f65797aa4901bbc49c0306058564736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14B6 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE1C7392A GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xE1C7392A EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0xE46638E6 EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0xEFB22D33 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x24E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0xA0632461 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0xA446D49F EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0xB2494DF3 EQ PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6A3EDF28 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x6A3EDF28 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0x8BAF29B4 EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x8D2EA772 EQ PUSH2 0x198 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1ED86F19 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x3FF5AA02 EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x40DB3B50 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x5F8DEAD3 EQ PUSH2 0x140 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x113 CALLDATASIZE PUSH1 0x4 PUSH2 0x11B5 JUMP JUMPDEST PUSH2 0x261 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x118 PUSH2 0x128 CALLDATASIZE PUSH1 0x4 PUSH2 0x11B5 JUMP JUMPDEST PUSH2 0x433 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x13B CALLDATASIZE PUSH1 0x4 PUSH2 0x11B5 JUMP JUMPDEST PUSH2 0x53E JUMP JUMPDEST PUSH2 0x118 PUSH2 0x14E CALLDATASIZE PUSH1 0x4 PUSH2 0x11D0 JUMP JUMPDEST PUSH2 0x686 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x118 PUSH2 0x7CF JUMP JUMPDEST PUSH2 0x118 PUSH2 0x193 CALLDATASIZE PUSH1 0x4 PUSH2 0x11FA JUMP JUMPDEST PUSH2 0x7E3 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x1A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x11D0 JUMP JUMPDEST PUSH2 0x957 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x160 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x1CA CALLDATASIZE PUSH1 0x4 PUSH2 0x11B5 JUMP JUMPDEST PUSH2 0xA9A JUMP JUMPDEST PUSH2 0x1FB PUSH2 0x1DD CALLDATASIZE PUSH1 0x4 PUSH2 0x11B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x174 JUMP JUMPDEST PUSH2 0x213 PUSH2 0xCD2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x174 SWAP2 SWAP1 PUSH2 0x1236 JUMP JUMPDEST PUSH2 0x118 PUSH2 0xD34 JUMP JUMPDEST PUSH2 0x1FB PUSH2 0x236 CALLDATASIZE PUSH1 0x4 PUSH2 0x11FA JUMP JUMPDEST PUSH2 0xE41 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x249 CALLDATASIZE PUSH1 0x4 PUSH2 0x1283 JUMP JUMPDEST PUSH2 0xF1E JUMP JUMPDEST PUSH2 0x118 PUSH2 0x25C CALLDATASIZE PUSH1 0x4 PUSH2 0x11B5 JUMP JUMPDEST PUSH2 0x1004 JUMP JUMPDEST PUSH2 0x269 PUSH2 0x107A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x298 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28F SWAP1 PUSH2 0x1304 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x1B5BD91D5B1948185B1C9958591E48189BDD5B99 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28F JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x18 LT ISZERO PUSH2 0x34B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616E6E6F7420616464206D6F7265207468616E203235206D6F64756C657300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x12A4C951 PUSH1 0xE2 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x4A932544 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x38C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3A0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x66 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE PUSH32 0x46501879B8CA8525E8C2FD519E2FBFCFA2EBEA26501294AA02CBFCFB12E94354 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 SWAP4 POP PUSH32 0xEAD6A006345DA1073A106D5F32372D2D2204F46CB0B4BCA8F5EBAFCBBED12B8A SWAP3 POP LOG2 POP JUMP JUMPDEST CALLER PUSH2 0x446 PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x477 JUMPI POP PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 ISZERO PUSH2 0x477 JUMPI POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ JUMPDEST PUSH2 0x4C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C79206F776E6572206F7220746F6B656E2063616E2063616C6C00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x4E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28F SWAP1 PUSH2 0x1304 JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x2DE35142B19ED5A07796CF30791959C592018F70B1D2D7C460EEF8FFE713692B SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST CALLER PUSH2 0x551 PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x56E JUMPI POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ JUMPDEST PUSH2 0x5BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C79206F776E6572206F7220746F6B656E2063616E2063616C6C00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28F JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468697320746F6B656E206973206E6F7420626F756E64000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x63D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28F SWAP1 PUSH2 0x1304 JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP2 MSTORE PUSH32 0x28A4CA7134A3B3F9AFF286E79AD3DAADB4A06D1B43D037A3A98BDC074EDD9B7A SWAP1 PUSH1 0x20 ADD PUSH2 0x533 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28F SWAP1 PUSH2 0x133B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28F SWAP1 PUSH2 0x1304 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x726 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C696420617267756D656E74202D206E6F2076616C7565206D696E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28F JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7C9 JUMPI PUSH1 0x66 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x747 JUMPI PUSH2 0x747 PUSH2 0x13A5 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0xF104A8C9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xF104A8C9 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x79E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7B2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x7C1 SWAP1 PUSH2 0x13D1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x72C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x7D7 PUSH2 0x107A JUMP JUMPDEST PUSH2 0x7E1 PUSH1 0x0 PUSH2 0x10D4 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x80D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28F SWAP1 PUSH2 0x133B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x82D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST PUSH2 0x849 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28F SWAP1 PUSH2 0x1304 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x8A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x696E76616C696420617267756D656E74202D206E6F2076616C7565207472616E PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x39B332B9 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x28F JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x950 JUMPI PUSH1 0x66 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x8C6 JUMPI PUSH2 0x8C6 PUSH2 0x13A5 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0xB2DF87B PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP7 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x2CB7E1EC SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x925 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x939 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x948 SWAP1 PUSH2 0x13D1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8AB JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x981 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28F SWAP1 PUSH2 0x133B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28F SWAP1 PUSH2 0x1304 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x9F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C696420617267756D656E74202D206E6F2076616C7565206275726E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28F JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7C9 JUMPI PUSH1 0x66 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xA18 JUMPI PUSH2 0xA18 PUSH2 0x13A5 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x1B9248D1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x372491A2 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA83 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0xA92 SWAP1 PUSH2 0x13D1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x9FD JUMP JUMPDEST PUSH2 0xAA2 PUSH2 0x107A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xAC8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28F SWAP1 PUSH2 0x1304 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xB23 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x1B5BD91D5B19481B9BDD08189BDD5B99 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28F JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xCCD JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x66 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xB4E JUMPI PUSH2 0xB4E PUSH2 0x13A5 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xCBB JUMPI PUSH1 0x40 MLOAD PUSH4 0x694A5FB PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x694A5FB SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBBD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x66 PUSH1 0x1 DUP4 PUSH2 0xBD0 SWAP2 SWAP1 PUSH2 0x13EA JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xBE0 JUMPI PUSH2 0xBE0 PUSH2 0x13A5 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x66 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0xC0C JUMPI PUSH2 0xC0C PUSH2 0x13A5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x66 DUP1 SLOAD DUP1 PUSH2 0xC4B JUMPI PUSH2 0xC4B PUSH2 0x13FD JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 DUP4 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE SWAP1 SWAP3 ADD SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP4 MSTORE PUSH1 0x67 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD SWAP1 SWAP2 PUSH32 0xA1EE69F55C33D8467C69CA59CE2007A737A88603D75392972520BF67CB513B8 SWAP2 LOG2 POP POP POP JUMP JUMPDEST DUP1 PUSH2 0xCC5 DUP2 PUSH2 0x13D1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB29 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x66 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xD2A JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD0C JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0xD54 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0xD6E JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD6E JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0xDD1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x28F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0xDF4 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0xDFC PUSH2 0x1126 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE3E JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH2 0x533 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x0 SWAP1 DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF10 JUMPI PUSH1 0x66 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xE64 JUMPI PUSH2 0xE64 PUSH2 0x13A5 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH3 0x4EDF39 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP8 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP8 SWAP1 MSTORE ADDRESS PUSH1 0x64 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x13B7CE4 SWAP1 PUSH1 0x84 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xECB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEEF SWAP2 SWAP1 PUSH2 0x1413 JUMP JUMPDEST PUSH2 0xEFE JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0xF17 JUMP JUMPDEST DUP1 PUSH2 0xF08 DUP2 PUSH2 0x13D1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xE49 JUMP JUMPDEST POP PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xF26 PUSH2 0x107A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xF8E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616C6C206F6E6C79206F6E20626F756E64206D6F64756C6500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP5 DUP3 CALLDATACOPY PUSH1 0x0 DUP1 DUP5 DUP4 PUSH1 0x0 DUP7 GAS CALL PUSH2 0xFAD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x20D79DE70ADCC6E9353D8A9A5646B46DC352710D0A310B1AD1F67FAECA7EF891 PUSH2 0xFE3 DUP6 DUP6 PUSH2 0x1155 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x100C PUSH2 0x107A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1071 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x28F JUMP JUMPDEST PUSH2 0xE3E DUP2 PUSH2 0x10D4 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28F JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x114D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28F SWAP1 PUSH2 0x1435 JUMP JUMPDEST PUSH2 0x7E1 PUSH2 0x1169 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP3 LT PUSH2 0x1163 JUMPI POP DUP2 CALLDATALOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1190 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28F SWAP1 PUSH2 0x1435 JUMP JUMPDEST PUSH2 0x7E1 CALLER PUSH2 0x10D4 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x11B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF17 DUP3 PUSH2 0x1199 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11EC DUP4 PUSH2 0x1199 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x120F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1218 DUP5 PUSH2 0x1199 JUMP JUMPDEST SWAP3 POP PUSH2 0x1226 PUSH1 0x20 DUP6 ADD PUSH2 0x1199 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1277 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1252 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1298 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x12B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x12C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x12D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x12E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 DUP4 ADD SWAP6 POP SWAP4 POP PUSH2 0x12FB SWAP2 DUP7 ADD SWAP1 POP PUSH2 0x1199 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x696E76616C696420617267756D656E74202D207A65726F206164647265737300 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x44 SWAP1 DUP3 ADD MSTORE PUSH32 0x6572726F72203A20746869732061646472657373206973206E6F74206120746F PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6B656E20626F756E6420746F2074686520636F6D706C69616E636520636F6E74 PUSH1 0x60 DUP3 ADD MSTORE PUSH4 0x1C9858DD PUSH1 0xE2 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x13E3 JUMPI PUSH2 0x13E3 PUSH2 0x13BB JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1163 JUMPI PUSH2 0x1163 PUSH2 0x13BB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1425 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE3 LOG0 SWAP4 0x2B DUP13 0x23 0xD0 0xB2 CALLDATACOPY DUP16 EXTCODEHASH 0xEB EXTCODESIZE 0xF PUSH14 0x18A8A196F65797AA4901BBC49C03 MOD SDIV DUP6 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "264:5645:11:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@__Ownable_init_350": {
									"entryPoint": 4390,
									"id": 350,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_361": {
									"entryPoint": 4457,
									"id": 361,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_392": {
									"entryPoint": 4218,
									"id": 392,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_981": {
									"entryPoint": null,
									"id": 981,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_selector_1769": {
									"entryPoint": 4437,
									"id": 1769,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_transferOwnership_449": {
									"entryPoint": 4308,
									"id": 449,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addModule_1384": {
									"entryPoint": 609,
									"id": 1384,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@bindToken_1278": {
									"entryPoint": 1075,
									"id": 1278,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@callModuleFunction_1671": {
									"entryPoint": 3870,
									"id": 1671,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@canTransfer_1754": {
									"entryPoint": 3649,
									"id": 1754,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@created_1590": {
									"entryPoint": 1670,
									"id": 1590,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@destroyed_1645": {
									"entryPoint": 2391,
									"id": 1645,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@getModules_1694": {
									"entryPoint": 3282,
									"id": 1694,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTokenBound_1703": {
									"entryPoint": null,
									"id": 1703,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@init_1231": {
									"entryPoint": 3380,
									"id": 1231,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isContract_642": {
									"entryPoint": null,
									"id": 642,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isModuleBound_1684": {
									"entryPoint": null,
									"id": 1684,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_378": {
									"entryPoint": null,
									"id": 378,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeModule_1470": {
									"entryPoint": 2714,
									"id": 1470,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_406": {
									"entryPoint": 1999,
									"id": 406,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_429": {
									"entryPoint": 4100,
									"id": 429,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferred_1535": {
									"entryPoint": 2019,
									"id": 1535,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@unbindToken_1323": {
									"entryPoint": 1342,
									"id": 1323,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 4505,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4533,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4602,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4560,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 5139,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes_calldata_ptrt_address": {
									"entryPoint": 4739,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_address__to_t_address_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4662,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0de045b53a2696c4c58a2dd6a960eacc1f1718f54ec66cb0ba5f399ae9d1fb9e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3f029d9821dc476c0705c03fff9255d333d5235fef87cba00cede4d1409cd713__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_49f5e4419f8a1741d107c52289d66583a4bd31e41918484b4780f719774ab10e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5a00bd734c7992f377cbeced90f5c16f281fb6575139ae7312aa5e8718ec4a06__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5a68ed2bc0002f6d7777b41be5e0fbfbfe715cdad34adee170beb7e99ea964f1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4923,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_85ebbeb661b177a20113638bf35f6faae6d63a8b8162625e2d2ab0a760e9b8cf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4868,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bc637b520028211bbc531d42bfcff19a7cfbd2d183c129d537e63c33437371db__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c1dee6581c6aebc50da002deed9e99d1ce1dab6a498f29e5915ed31feaae5830__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5173,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_db4dc5d7747dd41cae264893a34d079922ab272ca9cb8b8764be76354fbf8396__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e9c7f121b6da7dac929ed2e7ad1b1b43e75c240016a001387d6d3f264c6c87e7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5098,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 5073,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5051,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 5117,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5029,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:10864:18",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:18",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:18"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:18"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:18",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:18",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:18"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:18"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:18"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:18"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:18"
															},
															"nodeType": "YulIf",
															"src": "111:70:18"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:18",
														"type": ""
													}
												],
												"src": "14:173:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:116:18",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:18"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:18"
															},
															"nodeType": "YulIf",
															"src": "272:52:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "333:39:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:29:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:18",
														"type": ""
													}
												],
												"src": "192:186:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "470:167:18",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "516:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "525:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "528:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "518:6:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "518:12:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "518:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "491:7:18"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "500:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "487:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "487:23:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "512:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "483:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "483:32:18"
															},
															"nodeType": "YulIf",
															"src": "480:52:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "541:39:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "570:9:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "551:18:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:29:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "541:6:18"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "589:42:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "616:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "627:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "612:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "612:18:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "599:12:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "599:32:18"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "589:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "428:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "439:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "451:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "459:6:18",
														"type": ""
													}
												],
												"src": "383:254:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "743:102:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "753:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "765:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "776:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "761:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "761:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "753:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "795:9:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "810:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "826:3:18",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "831:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "822:3:18"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "822:11:18"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "835:1:18",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "818:3:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "818:19:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "806:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "806:32:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "788:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "788:51:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "788:51:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "712:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "723:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "734:4:18",
														"type": ""
													}
												],
												"src": "642:203:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "954:224:18",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1000:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1009:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1012:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1002:6:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1002:12:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1002:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "975:7:18"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "984:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "971:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "971:23:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "996:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "967:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "967:32:18"
															},
															"nodeType": "YulIf",
															"src": "964:52:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1025:39:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1054:9:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1035:18:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1035:29:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1025:6:18"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1073:48:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1106:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1117:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1102:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1102:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1083:18:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1083:38:18"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1073:6:18"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1130:42:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1157:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1168:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1153:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1153:18:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1140:12:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1140:32:18"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1130:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "904:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "915:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "927:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "935:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "943:6:18",
														"type": ""
													}
												],
												"src": "850:328:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1278:92:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1288:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1300:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1311:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1296:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1296:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1288:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:18"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1355:6:18"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1348:6:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1348:14:18"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1341:6:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1341:22:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1323:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1323:41:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1323:41:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1247:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1258:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1269:4:18",
														"type": ""
													}
												],
												"src": "1183:187:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1526:507:18",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1536:12:18",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1546:2:18",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1540:2:18",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1557:32:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1575:9:18"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1586:2:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1571:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1571:18:18"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "1561:6:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1605:9:18"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1616:2:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1598:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1598:21:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1598:21:18"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1628:17:18",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "1639:6:18"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "1632:3:18",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1654:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1674:6:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1668:5:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1668:13:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1658:6:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "1697:6:18"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1705:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1690:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1690:22:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1690:22:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1721:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1732:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1743:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1728:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1728:18:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1721:3:18"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1755:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1773:6:18"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1781:2:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1769:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1769:15:18"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "1759:6:18",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1793:10:18",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1802:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1797:1:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1861:146:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "1882:3:18"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "1897:6:18"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "1891:5:18"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1891:13:18"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "1914:3:18",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "1919:1:18",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "1910:3:18"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1910:11:18"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1923:1:18",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "1906:3:18"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1906:19:18"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "1887:3:18"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1887:39:18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1875:6:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1875:52:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1875:52:18"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1940:19:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "1951:3:18"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1956:2:18"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1947:3:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1947:12:18"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1940:3:18"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1972:25:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "1986:6:18"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1994:2:18"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1982:3:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1982:15:18"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1972:6:18"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1823:1:18"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1826:6:18"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1820:2:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "1820:13:18"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1834:18:18",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1836:14:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1845:1:18"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1848:1:18",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1841:3:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1841:9:18"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1836:1:18"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1816:3:18",
																"statements": []
															},
															"src": "1812:195:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2016:11:18",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "2024:3:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2016:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1495:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1506:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1517:4:18",
														"type": ""
													}
												],
												"src": "1375:658:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2144:565:18",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2190:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2199:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2202:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2192:6:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2192:12:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2192:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2165:7:18"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2174:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2161:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2161:23:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2186:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2157:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "2157:32:18"
															},
															"nodeType": "YulIf",
															"src": "2154:52:18"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2215:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2242:9:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2229:12:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "2229:23:18"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2219:6:18",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2261:28:18",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2271:18:18",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2265:2:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2316:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2325:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2328:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2318:6:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2318:12:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2318:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2304:6:18"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2312:2:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2301:2:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "2301:14:18"
															},
															"nodeType": "YulIf",
															"src": "2298:34:18"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2341:32:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2355:9:18"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2366:6:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2351:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "2351:22:18"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "2345:2:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2421:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2430:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2433:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2423:6:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2423:12:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2423:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "2400:2:18"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2404:4:18",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2396:3:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2396:13:18"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2411:7:18"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2392:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2392:27:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2385:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "2385:35:18"
															},
															"nodeType": "YulIf",
															"src": "2382:55:18"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2446:30:18",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2473:2:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2460:12:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "2460:16:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2450:6:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2503:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2512:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2515:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2505:6:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2505:12:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2505:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2491:6:18"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2499:2:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2488:2:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "2488:14:18"
															},
															"nodeType": "YulIf",
															"src": "2485:34:18"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2571:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2580:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2583:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2573:6:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2573:12:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2573:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "2542:2:18"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "2546:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2538:3:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2538:15:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2555:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2534:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2534:26:18"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2562:7:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2531:2:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "2531:39:18"
															},
															"nodeType": "YulIf",
															"src": "2528:59:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2596:23:18",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2610:2:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2614:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2606:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "2606:13:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2596:6:18"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2628:16:18",
															"value": {
																"name": "length",
																"nodeType": "YulIdentifier",
																"src": "2638:6:18"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2628:6:18"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2653:50:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2686:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2697:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2682:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2682:20:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2663:18:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "2663:40:18"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2653:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_calldata_ptrt_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2094:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2105:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2117:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2125:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2133:6:18",
														"type": ""
													}
												],
												"src": "2038:671:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2888:181:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2905:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2916:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2898:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "2898:21:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2898:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2939:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2950:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2935:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2935:18:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2955:2:18",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2928:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "2928:30:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2928:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2978:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2989:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2974:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2974:18:18"
																	},
																	{
																		"hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2994:33:18",
																		"type": "",
																		"value": "invalid argument - zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2967:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "2967:61:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2967:61:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3037:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3049:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3060:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3045:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "3045:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3037:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2865:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2879:4:18",
														"type": ""
													}
												],
												"src": "2714:355:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3248:170:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3265:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3276:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3258:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "3258:21:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3258:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3299:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3310:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3295:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3295:18:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3315:2:18",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3288:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "3288:30:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3288:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3338:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3349:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3334:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3334:18:18"
																	},
																	{
																		"hexValue": "6d6f64756c6520616c726561647920626f756e64",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3354:22:18",
																		"type": "",
																		"value": "module already bound"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3327:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "3327:50:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3327:50:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3386:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3398:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3409:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3394:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "3394:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3386:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_49f5e4419f8a1741d107c52289d66583a4bd31e41918484b4780f719774ab10e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3225:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3239:4:18",
														"type": ""
													}
												],
												"src": "3074:344:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3597:181:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3614:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3625:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3607:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "3607:21:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3607:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3648:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3659:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3644:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3644:18:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3664:2:18",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3637:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "3637:30:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3637:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3687:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3698:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3683:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3683:18:18"
																	},
																	{
																		"hexValue": "63616e6e6f7420616464206d6f7265207468616e203235206d6f64756c6573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3703:33:18",
																		"type": "",
																		"value": "cannot add more than 25 modules"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3676:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "3676:61:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3676:61:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3746:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3758:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3769:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3754:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "3754:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3746:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c1dee6581c6aebc50da002deed9e99d1ce1dab6a498f29e5915ed31feaae5830__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3574:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3588:4:18",
														"type": ""
													}
												],
												"src": "3423:355:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3957:178:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3974:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3985:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3967:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "3967:21:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3967:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4008:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4019:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4004:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4004:18:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4024:2:18",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3997:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "3997:30:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3997:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4047:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4058:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4043:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4043:18:18"
																	},
																	{
																		"hexValue": "6f6e6c79206f776e6572206f7220746f6b656e2063616e2063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4063:30:18",
																		"type": "",
																		"value": "only owner or token can call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4036:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "4036:58:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4036:58:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4103:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4115:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4126:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4111:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "4111:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4103:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_85ebbeb661b177a20113638bf35f6faae6d63a8b8162625e2d2ab0a760e9b8cf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3934:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3948:4:18",
														"type": ""
													}
												],
												"src": "3783:352:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4314:173:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4331:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4342:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4324:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "4324:21:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4324:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4365:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4376:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4361:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4361:18:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4381:2:18",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4354:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "4354:30:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4354:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4404:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4415:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4400:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4400:18:18"
																	},
																	{
																		"hexValue": "5468697320746f6b656e206973206e6f7420626f756e64",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4420:25:18",
																		"type": "",
																		"value": "This token is not bound"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4393:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "4393:53:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4393:53:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4455:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4467:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4478:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4463:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "4463:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4455:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bc637b520028211bbc531d42bfcff19a7cfbd2d183c129d537e63c33437371db__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4291:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4305:4:18",
														"type": ""
													}
												],
												"src": "4140:347:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4666:298:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4683:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4694:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4676:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "4676:21:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4676:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4717:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4728:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4713:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4713:18:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4733:2:18",
																		"type": "",
																		"value": "68"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4706:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "4706:30:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4706:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4756:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4767:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4752:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4752:18:18"
																	},
																	{
																		"hexValue": "6572726f72203a20746869732061646472657373206973206e6f74206120746f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4772:34:18",
																		"type": "",
																		"value": "error : this address is not a to"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4745:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "4745:62:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4745:62:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4827:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4838:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4823:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4823:18:18"
																	},
																	{
																		"hexValue": "6b656e20626f756e6420746f2074686520636f6d706c69616e636520636f6e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4843:34:18",
																		"type": "",
																		"value": "ken bound to the compliance cont"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4816:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "4816:62:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4816:62:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4898:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4909:3:18",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4894:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4894:19:18"
																	},
																	{
																		"hexValue": "72616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4915:6:18",
																		"type": "",
																		"value": "ract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4887:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "4887:35:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4887:35:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4931:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4943:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4954:3:18",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4939:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "4939:19:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4931:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5a68ed2bc0002f6d7777b41be5e0fbfbfe715cdad34adee170beb7e99ea964f1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4643:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4657:4:18",
														"type": ""
													}
												],
												"src": "4492:472:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5143:182:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5160:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5171:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5153:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "5153:21:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5153:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5194:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5205:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5190:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5190:18:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5210:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5183:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "5183:30:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5183:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5233:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5244:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5229:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5229:18:18"
																	},
																	{
																		"hexValue": "696e76616c696420617267756d656e74202d206e6f2076616c7565206d696e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5249:34:18",
																		"type": "",
																		"value": "invalid argument - no value mint"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5222:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "5222:62:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5222:62:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5293:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5305:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5316:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5301:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "5301:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5293:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0de045b53a2696c4c58a2dd6a960eacc1f1718f54ec66cb0ba5f399ae9d1fb9e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5120:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5134:4:18",
														"type": ""
													}
												],
												"src": "4969:356:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5362:95:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5379:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5386:3:18",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5391:10:18",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5382:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5382:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5372:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "5372:31:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5372:31:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5419:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5422:4:18",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5412:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "5412:15:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5412:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5443:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5446:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5436:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "5436:15:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5436:15:18"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "5330:127:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5591:145:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5601:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5613:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5624:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5609:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "5609:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5601:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5643:9:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5658:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5674:3:18",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5679:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5670:3:18"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5670:11:18"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5683:1:18",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5666:3:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5666:19:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5654:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5654:32:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5636:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "5636:51:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5636:51:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5707:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5718:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5703:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5703:18:18"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5723:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5696:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "5696:34:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5696:34:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5552:9:18",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5563:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5571:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5582:4:18",
														"type": ""
													}
												],
												"src": "5462:274:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5773:95:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5790:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5797:3:18",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5802:10:18",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5793:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5793:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5783:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "5783:31:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5783:31:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5830:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5833:4:18",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5823:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "5823:15:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5823:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5854:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5857:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5847:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "5847:15:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5847:15:18"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "5741:127:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5920:88:18",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5951:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5953:16:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5953:18:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5953:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5936:5:18"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5947:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5943:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5943:6:18"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5933:2:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "5933:17:18"
															},
															"nodeType": "YulIf",
															"src": "5930:43:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5982:20:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5993:5:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6000:1:18",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5989:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "5989:13:18"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5982:3:18"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5902:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5912:3:18",
														"type": ""
													}
												],
												"src": "5873:135:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6187:226:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6204:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6215:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6197:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "6197:21:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6197:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6238:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6249:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6234:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6234:18:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6254:2:18",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6227:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "6227:30:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6227:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6277:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6288:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6273:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6273:18:18"
																	},
																	{
																		"hexValue": "696e76616c696420617267756d656e74202d206e6f2076616c7565207472616e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6293:34:18",
																		"type": "",
																		"value": "invalid argument - no value tran"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6266:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "6266:62:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6266:62:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6348:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6359:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6344:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6344:18:18"
																	},
																	{
																		"hexValue": "73666572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6364:6:18",
																		"type": "",
																		"value": "sfer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6337:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "6337:34:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6337:34:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6380:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6392:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6403:3:18",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6388:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "6388:19:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6380:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e9c7f121b6da7dac929ed2e7ad1b1b43e75c240016a001387d6d3f264c6c87e7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6164:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6178:4:18",
														"type": ""
													}
												],
												"src": "6013:400:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6575:218:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6585:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6597:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6608:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6593:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "6593:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6585:4:18"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6620:29:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6638:3:18",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6643:1:18",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6634:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6634:11:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6647:1:18",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6630:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "6630:19:18"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6624:2:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6665:9:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6680:6:18"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6688:2:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6676:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6676:15:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6658:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "6658:34:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6658:34:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6712:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6723:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6708:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6708:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "6732:6:18"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6740:2:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6728:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6728:15:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6701:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "6701:43:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6701:43:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6764:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6775:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6760:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6760:18:18"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6780:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6753:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "6753:34:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6753:34:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6528:9:18",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6539:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6547:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6555:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6566:4:18",
														"type": ""
													}
												],
												"src": "6418:375:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6972:182:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6989:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7000:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6982:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "6982:21:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6982:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7023:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7034:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7019:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7019:18:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7039:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7012:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "7012:30:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7012:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7062:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7073:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7058:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7058:18:18"
																	},
																	{
																		"hexValue": "696e76616c696420617267756d656e74202d206e6f2076616c7565206275726e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7078:34:18",
																		"type": "",
																		"value": "invalid argument - no value burn"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7051:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "7051:62:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7051:62:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7122:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7134:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7145:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7130:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "7130:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7122:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5a00bd734c7992f377cbeced90f5c16f281fb6575139ae7312aa5e8718ec4a06__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6949:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6963:4:18",
														"type": ""
													}
												],
												"src": "6798:356:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7333:166:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7350:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7361:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7343:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "7343:21:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7343:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7384:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7395:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7380:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7380:18:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7400:2:18",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7373:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "7373:30:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7373:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7423:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7434:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7419:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7419:18:18"
																	},
																	{
																		"hexValue": "6d6f64756c65206e6f7420626f756e64",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7439:18:18",
																		"type": "",
																		"value": "module not bound"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7412:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "7412:46:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7412:46:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7467:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7479:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7490:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7475:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "7475:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7467:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3f029d9821dc476c0705c03fff9255d333d5235fef87cba00cede4d1409cd713__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7310:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7324:4:18",
														"type": ""
													}
												],
												"src": "7159:340:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7553:79:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7563:17:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7575:1:18"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7578:1:18"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7571:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "7571:9:18"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "7563:4:18"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7604:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7606:16:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7606:18:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7606:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "7595:4:18"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7601:1:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7592:2:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "7592:11:18"
															},
															"nodeType": "YulIf",
															"src": "7589:37:18"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7535:1:18",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7538:1:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "7544:4:18",
														"type": ""
													}
												],
												"src": "7504:128:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7669:95:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7686:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7693:3:18",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7698:10:18",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7689:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7689:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7679:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "7679:31:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7679:31:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7726:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7729:4:18",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7719:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "7719:15:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7719:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7750:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7753:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7743:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "7743:15:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7743:15:18"
														}
													]
												},
												"name": "panic_error_0x31",
												"nodeType": "YulFunctionDefinition",
												"src": "7637:127:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7943:236:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7960:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7971:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7953:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "7953:21:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7953:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7994:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8005:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7990:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7990:18:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8010:2:18",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7983:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "7983:30:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7983:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8033:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8044:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8029:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8029:18:18"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8049:34:18",
																		"type": "",
																		"value": "Initializable: contract is alrea"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8022:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "8022:62:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8022:62:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8104:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8115:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8100:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8100:18:18"
																	},
																	{
																		"hexValue": "647920696e697469616c697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8120:16:18",
																		"type": "",
																		"value": "dy initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8093:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "8093:44:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8093:44:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8146:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8158:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8169:3:18",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8154:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "8154:19:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8146:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7920:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7934:4:18",
														"type": ""
													}
												],
												"src": "7769:410:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8291:87:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8301:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8313:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8324:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8309:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "8309:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8301:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8343:9:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8358:6:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8366:4:18",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8354:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8354:17:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8336:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "8336:36:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8336:36:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8260:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8271:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8282:4:18",
														"type": ""
													}
												],
												"src": "8184:194:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8568:271:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8578:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8590:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8601:3:18",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8586:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "8586:19:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8578:4:18"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8614:29:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8632:3:18",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8637:1:18",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8628:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8628:11:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8641:1:18",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8624:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "8624:19:18"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "8618:2:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8659:9:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8674:6:18"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8682:2:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8670:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8670:15:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8652:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "8652:34:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8652:34:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8706:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8717:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8702:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8702:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "8726:6:18"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8734:2:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8722:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8722:15:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8695:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "8695:43:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8695:43:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8758:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8769:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8754:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8754:18:18"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8774:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8747:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "8747:34:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8747:34:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8801:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8812:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8797:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8797:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "8821:6:18"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8829:2:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8817:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8817:15:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8790:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "8790:43:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8790:43:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_address__to_t_address_t_address_t_uint256_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8513:9:18",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8524:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8532:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8540:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8548:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8559:4:18",
														"type": ""
													}
												],
												"src": "8383:456:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8922:199:18",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8968:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8977:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8980:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8970:6:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8970:12:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8970:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8943:7:18"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8952:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8939:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8939:23:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8964:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8935:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "8935:32:18"
															},
															"nodeType": "YulIf",
															"src": "8932:52:18"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8993:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9012:9:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9006:5:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "9006:16:18"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "8997:5:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9075:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9084:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9087:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9077:6:18"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9077:12:18"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9077:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9044:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "9065:5:18"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "9058:6:18"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9058:13:18"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9051:6:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9051:21:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9041:2:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9041:32:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9034:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "9034:40:18"
															},
															"nodeType": "YulIf",
															"src": "9031:60:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9100:15:18",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "9110:5:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "9100:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8888:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8899:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8911:6:18",
														"type": ""
													}
												],
												"src": "8844:277:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9300:175:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9317:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9328:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9310:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "9310:21:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9310:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9351:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9362:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9347:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9347:18:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9367:2:18",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9340:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "9340:30:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9340:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9390:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9401:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9386:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9386:18:18"
																	},
																	{
																		"hexValue": "63616c6c206f6e6c79206f6e20626f756e64206d6f64756c65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9406:27:18",
																		"type": "",
																		"value": "call only on bound module"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9379:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "9379:55:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9379:55:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9443:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9455:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9466:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9451:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "9451:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9443:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_db4dc5d7747dd41cae264893a34d079922ab272ca9cb8b8764be76354fbf8396__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9277:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9291:4:18",
														"type": ""
													}
												],
												"src": "9126:349:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9579:103:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9589:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9601:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9612:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9597:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "9597:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9589:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9631:9:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9646:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9658:3:18",
																						"type": "",
																						"value": "224"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9663:10:18",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "9654:3:18"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9654:20:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9642:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9642:33:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9624:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "9624:52:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9624:52:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9548:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9559:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9570:4:18",
														"type": ""
													}
												],
												"src": "9480:202:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9861:228:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9878:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9889:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9871:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "9871:21:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9871:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9912:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9923:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9908:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9908:18:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9928:2:18",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9901:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "9901:30:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9901:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9951:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9962:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9947:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9947:18:18"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9967:34:18",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9940:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "9940:62:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9940:62:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10022:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10033:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10018:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10018:18:18"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10038:8:18",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10011:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "10011:36:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10011:36:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10056:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10068:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10079:3:18",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10064:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "10064:19:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10056:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9838:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9852:4:18",
														"type": ""
													}
												],
												"src": "9687:402:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10268:182:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10285:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10296:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10278:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "10278:21:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10278:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10319:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10330:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10315:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10315:18:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10335:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10308:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "10308:30:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10308:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10358:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10369:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10354:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10354:18:18"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10374:34:18",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10347:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "10347:62:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10347:62:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10418:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10430:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10441:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10426:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "10426:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10418:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10245:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10259:4:18",
														"type": ""
													}
												],
												"src": "10094:356:18"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10629:233:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10646:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10657:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10639:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "10639:21:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10639:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10680:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10691:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10676:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10676:18:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10696:2:18",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10669:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "10669:30:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10669:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10719:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10730:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10715:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10715:18:18"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10735:34:18",
																		"type": "",
																		"value": "Initializable: contract is not i"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10708:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "10708:62:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10708:62:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10790:9:18"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10801:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10786:3:18"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10786:18:18"
																	},
																	{
																		"hexValue": "6e697469616c697a696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10806:13:18",
																		"type": "",
																		"value": "nitializing"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10779:6:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "10779:41:18"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10779:41:18"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10829:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10841:9:18"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10852:3:18",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10837:3:18"
																},
																"nodeType": "YulFunctionCall",
																"src": "10837:19:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10829:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10606:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10620:4:18",
														"type": ""
													}
												],
												"src": "10455:407:18"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_bytes_calldata_ptrt_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 0x20), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 0x20)\n        value1 := length\n        value2 := abi_decode_address(add(headStart, 0x20))\n    }\n    function abi_encode_tuple_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"invalid argument - zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_49f5e4419f8a1741d107c52289d66583a4bd31e41918484b4780f719774ab10e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"module already bound\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c1dee6581c6aebc50da002deed9e99d1ce1dab6a498f29e5915ed31feaae5830__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"cannot add more than 25 modules\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_85ebbeb661b177a20113638bf35f6faae6d63a8b8162625e2d2ab0a760e9b8cf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"only owner or token can call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_bc637b520028211bbc531d42bfcff19a7cfbd2d183c129d537e63c33437371db__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"This token is not bound\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5a68ed2bc0002f6d7777b41be5e0fbfbfe715cdad34adee170beb7e99ea964f1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 68)\n        mstore(add(headStart, 64), \"error : this address is not a to\")\n        mstore(add(headStart, 96), \"ken bound to the compliance cont\")\n        mstore(add(headStart, 128), \"ract\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_0de045b53a2696c4c58a2dd6a960eacc1f1718f54ec66cb0ba5f399ae9d1fb9e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"invalid argument - no value mint\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_e9c7f121b6da7dac929ed2e7ad1b1b43e75c240016a001387d6d3f264c6c87e7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"invalid argument - no value tran\")\n        mstore(add(headStart, 96), \"sfer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_5a00bd734c7992f377cbeced90f5c16f281fb6575139ae7312aa5e8718ec4a06__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"invalid argument - no value burn\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3f029d9821dc476c0705c03fff9255d333d5235fef87cba00cede4d1409cd713__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"module not bound\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_address__to_t_address_t_address_t_uint256_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, _1))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_db4dc5d7747dd41cae264893a34d079922ab272ca9cb8b8764be76354fbf8396__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"call only on bound module\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Initializable: contract is not i\")\n        mstore(add(headStart, 96), \"nitializing\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 18,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101005760003560e01c80638da5cb5b11610097578063e1c7392a11610066578063e1c7392a14610220578063e46638e614610228578063efb22d331461023b578063f2fde38b1461024e57600080fd5b80638da5cb5b146101ab578063a0632461146101bc578063a446d49f146101cf578063b2494df31461020b57600080fd5b80636a3edf28116100d35780636a3edf2814610153578063715018a61461017d5780638baf29b4146101855780638d2ea7721461019857600080fd5b80631ed86f19146101055780633ff5aa021461011a57806340db3b501461012d5780635f8dead314610140575b600080fd5b6101186101133660046111b5565b610261565b005b6101186101283660046111b5565b610433565b61011861013b3660046111b5565b61053e565b61011861014e3660046111d0565b610686565b6065546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b6101186107cf565b6101186101933660046111fa565b6107e3565b6101186101a63660046111d0565b610957565b6033546001600160a01b0316610160565b6101186101ca3660046111b5565b610a9a565b6101fb6101dd3660046111b5565b6001600160a01b031660009081526067602052604090205460ff1690565b6040519015158152602001610174565b610213610cd2565b6040516101749190611236565b610118610d34565b6101fb6102363660046111fa565b610e41565b610118610249366004611283565b610f1e565b61011861025c3660046111b5565b611004565b61026961107a565b6001600160a01b0381166102985760405162461bcd60e51b815260040161028f90611304565b60405180910390fd5b6001600160a01b03811660009081526067602052604090205460ff16156102f85760405162461bcd60e51b81526020600482015260146024820152731b5bd91d5b1948185b1c9958591e48189bdd5b9960621b604482015260640161028f565b6066546018101561034b5760405162461bcd60e51b815260206004820152601f60248201527f63616e6e6f7420616464206d6f7265207468616e203235206d6f64756c657300604482015260640161028f565b6040516312a4c95160e21b81523060048201526001600160a01b03821690634a93254490602401600060405180830381600087803b15801561038c57600080fd5b505af11580156103a0573d6000803e3d6000fd5b50506066805460018082019092557f46501879b8ca8525e8c2fd519e2fbfcfa2ebea26501294aa02cbfcfb12e943540180546001600160a01b0319166001600160a01b038616908117909155600081815260676020526040808220805460ff191690941790935591519093507fead6a006345da1073a106d5f32372d2d2204f46cb0b4bca8f5ebafcbbed12b8a9250a250565b336104466033546001600160a01b031690565b6001600160a01b0316148061047757506065546001600160a01b03161580156104775750336001600160a01b038216145b6104c35760405162461bcd60e51b815260206004820152601c60248201527f6f6e6c79206f776e6572206f7220746f6b656e2063616e2063616c6c00000000604482015260640161028f565b6001600160a01b0381166104e95760405162461bcd60e51b815260040161028f90611304565b606580546001600160a01b0319166001600160a01b0383169081179091556040519081527f2de35142b19ed5a07796cf30791959c592018f70b1d2d7c460eef8ffe713692b906020015b60405180910390a150565b336105516033546001600160a01b031690565b6001600160a01b0316148061056e5750336001600160a01b038216145b6105ba5760405162461bcd60e51b815260206004820152601c60248201527f6f6e6c79206f776e6572206f7220746f6b656e2063616e2063616c6c00000000604482015260640161028f565b6065546001600160a01b038281169116146106175760405162461bcd60e51b815260206004820152601760248201527f5468697320746f6b656e206973206e6f7420626f756e64000000000000000000604482015260640161028f565b6001600160a01b03811661063d5760405162461bcd60e51b815260040161028f90611304565b606580546001600160a01b03191690556040516001600160a01b03821681527f28a4ca7134a3b3f9aff286e79ad3daadb4a06d1b43d037a3a98bdc074edd9b7a90602001610533565b6065546001600160a01b031633146106b05760405162461bcd60e51b815260040161028f9061133b565b6001600160a01b0382166106d65760405162461bcd60e51b815260040161028f90611304565b600081116107265760405162461bcd60e51b815260206004820181905260248201527f696e76616c696420617267756d656e74202d206e6f2076616c7565206d696e74604482015260640161028f565b60665460005b818110156107c95760668181548110610747576107476113a5565b60009182526020909120015460405163f104a8c960e01b81526001600160a01b038681166004830152602482018690529091169063f104a8c990604401600060405180830381600087803b15801561079e57600080fd5b505af11580156107b2573d6000803e3d6000fd5b5050505080806107c1906113d1565b91505061072c565b50505050565b6107d761107a565b6107e160006110d4565b565b6065546001600160a01b0316331461080d5760405162461bcd60e51b815260040161028f9061133b565b6001600160a01b0383161580159061082d57506001600160a01b03821615155b6108495760405162461bcd60e51b815260040161028f90611304565b600081116108a55760405162461bcd60e51b8152602060048201526024808201527f696e76616c696420617267756d656e74202d206e6f2076616c7565207472616e60448201526339b332b960e11b606482015260840161028f565b60665460005b8181101561095057606681815481106108c6576108c66113a5565b600091825260209091200154604051630b2df87b60e21b81526001600160a01b03878116600483015286811660248301526044820186905290911690632cb7e1ec90606401600060405180830381600087803b15801561092557600080fd5b505af1158015610939573d6000803e3d6000fd5b505050508080610948906113d1565b9150506108ab565b5050505050565b6065546001600160a01b031633146109815760405162461bcd60e51b815260040161028f9061133b565b6001600160a01b0382166109a75760405162461bcd60e51b815260040161028f90611304565b600081116109f75760405162461bcd60e51b815260206004820181905260248201527f696e76616c696420617267756d656e74202d206e6f2076616c7565206275726e604482015260640161028f565b60665460005b818110156107c95760668181548110610a1857610a186113a5565b600091825260209091200154604051631b9248d160e11b81526001600160a01b038681166004830152602482018690529091169063372491a290604401600060405180830381600087803b158015610a6f57600080fd5b505af1158015610a83573d6000803e3d6000fd5b505050508080610a92906113d1565b9150506109fd565b610aa261107a565b6001600160a01b038116610ac85760405162461bcd60e51b815260040161028f90611304565b6001600160a01b03811660009081526067602052604090205460ff16610b235760405162461bcd60e51b815260206004820152601060248201526f1b5bd91d5b19481b9bdd08189bdd5b9960821b604482015260640161028f565b60665460005b81811015610ccd57826001600160a01b031660668281548110610b4e57610b4e6113a5565b6000918252602090912001546001600160a01b031603610cbb57604051630694a5fb60e01b81523060048201526001600160a01b03841690630694a5fb90602401600060405180830381600087803b158015610ba957600080fd5b505af1158015610bbd573d6000803e3d6000fd5b505050506066600183610bd091906113ea565b81548110610be057610be06113a5565b600091825260209091200154606680546001600160a01b039092169183908110610c0c57610c0c6113a5565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506066805480610c4b57610c4b6113fd565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b03851680835260679091526040808320805460ff191690555190917f0a1ee69f55c33d8467c69ca59ce2007a737a88603d75392972520bf67cb513b891a2505050565b80610cc5816113d1565b915050610b29565b505050565b60606066805480602002602001604051908101604052809291908181526020018280548015610d2a57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610d0c575b5050505050905090565b600054610100900460ff1615808015610d545750600054600160ff909116105b80610d6e5750303b158015610d6e575060005460ff166001145b610dd15760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161028f565b6000805460ff191660011790558015610df4576000805461ff0019166101001790555b610dfc611126565b8015610e3e576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602001610533565b50565b606654600090815b81811015610f105760668181548110610e6457610e646113a5565b600091825260209091200154604051624edf3960e21b81526001600160a01b0388811660048301528781166024830152604482018790523060648301529091169063013b7ce490608401602060405180830381865afa158015610ecb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eef9190611413565b610efe57600092505050610f17565b80610f08816113d1565b915050610e49565b5060019150505b9392505050565b610f2661107a565b6001600160a01b03811660009081526067602052604090205460ff16610f8e5760405162461bcd60e51b815260206004820152601960248201527f63616c6c206f6e6c79206f6e20626f756e64206d6f64756c6500000000000000604482015260640161028f565b6040518284823760008084836000865af1610fad573d6000803e3d6000fd5b50806001600160a01b03167f20d79de70adcc6e9353d8a9a5646b46dc352710d0a310b1ad1f67faeca7ef891610fe38585611155565b6040516001600160e01b0319909116815260200160405180910390a2505050565b61100c61107a565b6001600160a01b0381166110715760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161028f565b610e3e816110d4565b6033546001600160a01b031633146107e15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161028f565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff1661114d5760405162461bcd60e51b815260040161028f90611435565b6107e1611169565b600060048210611163575081355b92915050565b600054610100900460ff166111905760405162461bcd60e51b815260040161028f90611435565b6107e1336110d4565b80356001600160a01b03811681146111b057600080fd5b919050565b6000602082840312156111c757600080fd5b610f1782611199565b600080604083850312156111e357600080fd5b6111ec83611199565b946020939093013593505050565b60008060006060848603121561120f57600080fd5b61121884611199565b925061122660208501611199565b9150604084013590509250925092565b6020808252825182820181905260009190848201906040850190845b818110156112775783516001600160a01b031683529284019291840191600101611252565b50909695505050505050565b60008060006040848603121561129857600080fd5b833567ffffffffffffffff808211156112b057600080fd5b818601915086601f8301126112c457600080fd5b8135818111156112d357600080fd5b8760208285010111156112e557600080fd5b6020928301955093506112fb9186019050611199565b90509250925092565b6020808252601f908201527f696e76616c696420617267756d656e74202d207a65726f206164647265737300604082015260600190565b60208082526044908201527f6572726f72203a20746869732061646472657373206973206e6f74206120746f60408201527f6b656e20626f756e6420746f2074686520636f6d706c69616e636520636f6e746060820152631c9858dd60e21b608082015260a00190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016113e3576113e36113bb565b5060010190565b81810381811115611163576111636113bb565b634e487b7160e01b600052603160045260246000fd5b60006020828403121561142557600080fd5b81518015158114610f1757600080fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea2646970667358221220e3a0932b8c23d0b2378f3feb3b0f6d18a8a196f65797aa4901bbc49c0306058564736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE1C7392A GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xE1C7392A EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0xE46638E6 EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0xEFB22D33 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x24E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0xA0632461 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0xA446D49F EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0xB2494DF3 EQ PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6A3EDF28 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x6A3EDF28 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0x8BAF29B4 EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x8D2EA772 EQ PUSH2 0x198 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1ED86F19 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x3FF5AA02 EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x40DB3B50 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x5F8DEAD3 EQ PUSH2 0x140 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x113 CALLDATASIZE PUSH1 0x4 PUSH2 0x11B5 JUMP JUMPDEST PUSH2 0x261 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x118 PUSH2 0x128 CALLDATASIZE PUSH1 0x4 PUSH2 0x11B5 JUMP JUMPDEST PUSH2 0x433 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x13B CALLDATASIZE PUSH1 0x4 PUSH2 0x11B5 JUMP JUMPDEST PUSH2 0x53E JUMP JUMPDEST PUSH2 0x118 PUSH2 0x14E CALLDATASIZE PUSH1 0x4 PUSH2 0x11D0 JUMP JUMPDEST PUSH2 0x686 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x118 PUSH2 0x7CF JUMP JUMPDEST PUSH2 0x118 PUSH2 0x193 CALLDATASIZE PUSH1 0x4 PUSH2 0x11FA JUMP JUMPDEST PUSH2 0x7E3 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x1A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x11D0 JUMP JUMPDEST PUSH2 0x957 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x160 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x1CA CALLDATASIZE PUSH1 0x4 PUSH2 0x11B5 JUMP JUMPDEST PUSH2 0xA9A JUMP JUMPDEST PUSH2 0x1FB PUSH2 0x1DD CALLDATASIZE PUSH1 0x4 PUSH2 0x11B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x174 JUMP JUMPDEST PUSH2 0x213 PUSH2 0xCD2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x174 SWAP2 SWAP1 PUSH2 0x1236 JUMP JUMPDEST PUSH2 0x118 PUSH2 0xD34 JUMP JUMPDEST PUSH2 0x1FB PUSH2 0x236 CALLDATASIZE PUSH1 0x4 PUSH2 0x11FA JUMP JUMPDEST PUSH2 0xE41 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x249 CALLDATASIZE PUSH1 0x4 PUSH2 0x1283 JUMP JUMPDEST PUSH2 0xF1E JUMP JUMPDEST PUSH2 0x118 PUSH2 0x25C CALLDATASIZE PUSH1 0x4 PUSH2 0x11B5 JUMP JUMPDEST PUSH2 0x1004 JUMP JUMPDEST PUSH2 0x269 PUSH2 0x107A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x298 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28F SWAP1 PUSH2 0x1304 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x1B5BD91D5B1948185B1C9958591E48189BDD5B99 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28F JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x18 LT ISZERO PUSH2 0x34B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616E6E6F7420616464206D6F7265207468616E203235206D6F64756C657300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x12A4C951 PUSH1 0xE2 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x4A932544 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x38C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3A0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x66 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE PUSH32 0x46501879B8CA8525E8C2FD519E2FBFCFA2EBEA26501294AA02CBFCFB12E94354 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 SWAP4 POP PUSH32 0xEAD6A006345DA1073A106D5F32372D2D2204F46CB0B4BCA8F5EBAFCBBED12B8A SWAP3 POP LOG2 POP JUMP JUMPDEST CALLER PUSH2 0x446 PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x477 JUMPI POP PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 ISZERO PUSH2 0x477 JUMPI POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ JUMPDEST PUSH2 0x4C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C79206F776E6572206F7220746F6B656E2063616E2063616C6C00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x4E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28F SWAP1 PUSH2 0x1304 JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x2DE35142B19ED5A07796CF30791959C592018F70B1D2D7C460EEF8FFE713692B SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST CALLER PUSH2 0x551 PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x56E JUMPI POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ JUMPDEST PUSH2 0x5BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C79206F776E6572206F7220746F6B656E2063616E2063616C6C00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28F JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468697320746F6B656E206973206E6F7420626F756E64000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x63D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28F SWAP1 PUSH2 0x1304 JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP2 MSTORE PUSH32 0x28A4CA7134A3B3F9AFF286E79AD3DAADB4A06D1B43D037A3A98BDC074EDD9B7A SWAP1 PUSH1 0x20 ADD PUSH2 0x533 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28F SWAP1 PUSH2 0x133B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28F SWAP1 PUSH2 0x1304 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x726 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C696420617267756D656E74202D206E6F2076616C7565206D696E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28F JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7C9 JUMPI PUSH1 0x66 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x747 JUMPI PUSH2 0x747 PUSH2 0x13A5 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0xF104A8C9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xF104A8C9 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x79E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7B2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x7C1 SWAP1 PUSH2 0x13D1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x72C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x7D7 PUSH2 0x107A JUMP JUMPDEST PUSH2 0x7E1 PUSH1 0x0 PUSH2 0x10D4 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x80D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28F SWAP1 PUSH2 0x133B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x82D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST PUSH2 0x849 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28F SWAP1 PUSH2 0x1304 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x8A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x696E76616C696420617267756D656E74202D206E6F2076616C7565207472616E PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x39B332B9 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x28F JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x950 JUMPI PUSH1 0x66 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x8C6 JUMPI PUSH2 0x8C6 PUSH2 0x13A5 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0xB2DF87B PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP7 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x2CB7E1EC SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x925 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x939 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x948 SWAP1 PUSH2 0x13D1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8AB JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x981 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28F SWAP1 PUSH2 0x133B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28F SWAP1 PUSH2 0x1304 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x9F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C696420617267756D656E74202D206E6F2076616C7565206275726E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28F JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7C9 JUMPI PUSH1 0x66 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xA18 JUMPI PUSH2 0xA18 PUSH2 0x13A5 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x1B9248D1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x372491A2 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA83 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0xA92 SWAP1 PUSH2 0x13D1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x9FD JUMP JUMPDEST PUSH2 0xAA2 PUSH2 0x107A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xAC8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28F SWAP1 PUSH2 0x1304 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xB23 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x1B5BD91D5B19481B9BDD08189BDD5B99 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28F JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xCCD JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x66 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xB4E JUMPI PUSH2 0xB4E PUSH2 0x13A5 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xCBB JUMPI PUSH1 0x40 MLOAD PUSH4 0x694A5FB PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x694A5FB SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBBD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x66 PUSH1 0x1 DUP4 PUSH2 0xBD0 SWAP2 SWAP1 PUSH2 0x13EA JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xBE0 JUMPI PUSH2 0xBE0 PUSH2 0x13A5 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x66 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0xC0C JUMPI PUSH2 0xC0C PUSH2 0x13A5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x66 DUP1 SLOAD DUP1 PUSH2 0xC4B JUMPI PUSH2 0xC4B PUSH2 0x13FD JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 DUP4 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE SWAP1 SWAP3 ADD SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP4 MSTORE PUSH1 0x67 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD SWAP1 SWAP2 PUSH32 0xA1EE69F55C33D8467C69CA59CE2007A737A88603D75392972520BF67CB513B8 SWAP2 LOG2 POP POP POP JUMP JUMPDEST DUP1 PUSH2 0xCC5 DUP2 PUSH2 0x13D1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB29 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x66 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xD2A JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD0C JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0xD54 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0xD6E JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD6E JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0xDD1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x28F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0xDF4 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0xDFC PUSH2 0x1126 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE3E JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH2 0x533 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x0 SWAP1 DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF10 JUMPI PUSH1 0x66 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xE64 JUMPI PUSH2 0xE64 PUSH2 0x13A5 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH3 0x4EDF39 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP8 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP8 SWAP1 MSTORE ADDRESS PUSH1 0x64 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x13B7CE4 SWAP1 PUSH1 0x84 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xECB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEEF SWAP2 SWAP1 PUSH2 0x1413 JUMP JUMPDEST PUSH2 0xEFE JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0xF17 JUMP JUMPDEST DUP1 PUSH2 0xF08 DUP2 PUSH2 0x13D1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xE49 JUMP JUMPDEST POP PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xF26 PUSH2 0x107A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xF8E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616C6C206F6E6C79206F6E20626F756E64206D6F64756C6500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP5 DUP3 CALLDATACOPY PUSH1 0x0 DUP1 DUP5 DUP4 PUSH1 0x0 DUP7 GAS CALL PUSH2 0xFAD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x20D79DE70ADCC6E9353D8A9A5646B46DC352710D0A310B1AD1F67FAECA7EF891 PUSH2 0xFE3 DUP6 DUP6 PUSH2 0x1155 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x100C PUSH2 0x107A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1071 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x28F JUMP JUMPDEST PUSH2 0xE3E DUP2 PUSH2 0x10D4 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x28F JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x114D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28F SWAP1 PUSH2 0x1435 JUMP JUMPDEST PUSH2 0x7E1 PUSH2 0x1169 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP3 LT PUSH2 0x1163 JUMPI POP DUP2 CALLDATALOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1190 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28F SWAP1 PUSH2 0x1435 JUMP JUMPDEST PUSH2 0x7E1 CALLER PUSH2 0x10D4 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x11B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF17 DUP3 PUSH2 0x1199 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11EC DUP4 PUSH2 0x1199 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x120F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1218 DUP5 PUSH2 0x1199 JUMP JUMPDEST SWAP3 POP PUSH2 0x1226 PUSH1 0x20 DUP6 ADD PUSH2 0x1199 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1277 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1252 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1298 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x12B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x12C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x12D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x12E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 DUP4 ADD SWAP6 POP SWAP4 POP PUSH2 0x12FB SWAP2 DUP7 ADD SWAP1 POP PUSH2 0x1199 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x696E76616C696420617267756D656E74202D207A65726F206164647265737300 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x44 SWAP1 DUP3 ADD MSTORE PUSH32 0x6572726F72203A20746869732061646472657373206973206E6F74206120746F PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6B656E20626F756E6420746F2074686520636F6D706C69616E636520636F6E74 PUSH1 0x60 DUP3 ADD MSTORE PUSH4 0x1C9858DD PUSH1 0xE2 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x13E3 JUMPI PUSH2 0x13E3 PUSH2 0x13BB JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1163 JUMPI PUSH2 0x1163 PUSH2 0x13BB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1425 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE3 LOG0 SWAP4 0x2B DUP13 0x23 0xD0 0xB2 CALLDATACOPY DUP16 EXTCODEHASH 0xEB EXTCODESIZE 0xF PUSH14 0x18A8A196F65797AA4901BBC49C03 MOD SDIV DUP6 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "264:5645:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1521:447;;;;;;:::i;:::-;;:::i;:::-;;650:463;;;;;;:::i;:::-;;:::i;1119:396::-;;;;;;:::i;:::-;;:::i;3116:380::-;;;;;;:::i;:::-;;:::i;5018:101::-;5101:11;;-1:-1:-1;;;;;5101:11:11;5018:101;;;-1:-1:-1;;;;;806:32:18;;;788:51;;776:2;761:18;5018:101:11;;;;;;;;2064::4;;;:::i;2609:501:11:-;;;;;;:::i;:::-;;:::i;3502:416::-;;;;;;:::i;:::-;;:::i;1441:85:4:-;1513:6;;-1:-1:-1;;;;;1513:6:4;1441:85;;1974:629:11;;;;;;:::i;:::-;;:::i;4743:159::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4874:21:11;4847:4;4874:21;;;:12;:21;;;;;;;;;4743:159;;;;1348:14:18;;1341:22;1323:41;;1311:2;1296:18;4743:159:11;1183:187:18;4908:104:11;;;:::i;:::-;;;;;;;:::i;574:70::-;;;:::i;5125:520::-;;;;;;:::i;:::-;;:::i;3924:813::-;;;;;;:::i;:::-;;:::i;2314:198:4:-;;;;;;:::i;:::-;;:::i;1521:447:11:-;1334:13:4;:11;:13::i;:::-;-1:-1:-1;;;;;1603:21:11;::::1;1595:65;;;;-1:-1:-1::0;;;1595:65:11::1;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1::0;;;;;1679:21:11;::::1;;::::0;;;:12:::1;:21;::::0;;;;;::::1;;1678:22;1670:55;;;::::0;-1:-1:-1;;;1670:55:11;;3276:2:18;1670:55:11::1;::::0;::::1;3258:21:18::0;3315:2;3295:18;;;3288:30;-1:-1:-1;;;3334:18:18;;;3327:50;3394:18;;1670:55:11::1;3074:344:18::0;1670:55:11::1;1743:8;:15:::0;1762:2:::1;-1:-1:-1::0;1743:21:11::1;1735:65;;;::::0;-1:-1:-1;;;1735:65:11;;3625:2:18;1735:65:11::1;::::0;::::1;3607:21:18::0;3664:2;3644:18;;;3637:30;3703:33;3683:18;;;3676:61;3754:18;;1735:65:11::1;3423:355:18::0;1735:65:11::1;1810:46;::::0;-1:-1:-1;;;1810:46:11;;1850:4:::1;1810:46;::::0;::::1;788:51:18::0;-1:-1:-1;;;;;1810:31:11;::::1;::::0;::::1;::::0;761:18:18;;1810:46:11::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;1866:8:11::1;:22:::0;;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;-1:-1:-1;;;;;;1866:22:11::1;-1:-1:-1::0;;;;;1866:22:11;::::1;::::0;;::::1;::::0;;;-1:-1:-1;1898:21:11;;;:12:::1;1866:22;1898:21:::0;;;;;:28;;-1:-1:-1;;1898:28:11::1;::::0;;::::1;::::0;;;1941:20;;1866:22;;-1:-1:-1;1941:20:11::1;::::0;-1:-1:-1;1941:20:11::1;1521:447:::0;:::o;650:463::-;745:10;734:7;1513:6:4;;-1:-1:-1;;;;;1513:6:4;;1441:85;734:7:11;-1:-1:-1;;;;;734:21:11;;:92;;;-1:-1:-1;776:11:11;;-1:-1:-1;;;;;776:11:11;:25;:49;;;;-1:-1:-1;805:10:11;-1:-1:-1;;;;;805:20:11;;;776:49;713:167;;;;-1:-1:-1;;;713:167:11;;3985:2:18;713:167:11;;;3967:21:18;4024:2;4004:18;;;3997:30;4063;4043:18;;;4036:58;4111:18;;713:167:11;3783:352:18;713:167:11;-1:-1:-1;;;;;898:20:11;;890:64;;;;-1:-1:-1;;;890:64:11;;;;;;;:::i;:::-;964:11;:20;;-1:-1:-1;;;;;;964:20:11;-1:-1:-1;;;;;964:20:11;;;;;;;;1088:18;;788:51:18;;;1088:18:11;;776:2:18;761:18;1088::11;;;;;;;;650:463;:::o;1119:396::-;1216:10;1205:7;1513:6:4;;-1:-1:-1;;;;;1513:6:4;;1441:85;1205:7:11;-1:-1:-1;;;;;1205:21:11;;:45;;;-1:-1:-1;1230:10:11;-1:-1:-1;;;;;1230:20:11;;;1205:45;1184:120;;;;-1:-1:-1;;;1184:120:11;;3985:2:18;1184:120:11;;;3967:21:18;4024:2;4004:18;;;3997:30;4063;4043:18;;;4036:58;4111:18;;1184:120:11;3783:352:18;1184:120:11;1332:11;;-1:-1:-1;;;;;1322:21:11;;;1332:11;;1322:21;1314:57;;;;-1:-1:-1;;;1314:57:11;;4342:2:18;1314:57:11;;;4324:21:18;4381:2;4361:18;;;4354:30;4420:25;4400:18;;;4393:53;4463:18;;1314:57:11;4140:347:18;1314:57:11;-1:-1:-1;;;;;1389:20:11;;1381:64;;;;-1:-1:-1;;;1381:64:11;;;;;;;:::i;:::-;1462:11;1455:18;;-1:-1:-1;;;;;;1455:18:11;;;1488:20;;-1:-1:-1;;;;;806:32:18;;788:51;;1488:20:11;;776:2:18;761:18;1488:20:11;642:203:18;3116:380:11;445:11;;-1:-1:-1;;;;;445:11:11;431:10;:25;410:140;;;;-1:-1:-1;;;410:140:11;;;;;;;:::i;:::-;-1:-1:-1;;;;;3208:17:11;::::1;3200:61;;;;-1:-1:-1::0;;;3200:61:11::1;;;;;;;:::i;:::-;3288:1;3279:6;:10;3271:55;;;::::0;-1:-1:-1;;;3271:55:11;;5171:2:18;3271:55:11::1;::::0;::::1;5153:21:18::0;;;5190:18;;;5183:30;5249:34;5229:18;;;5222:62;5301:18;;3271:55:11::1;4969:356:18::0;3271:55:11::1;3353:8;:15:::0;3336:14:::1;3378:112;3402:6;3398:1;:10;3378:112;;;3437:8;3446:1;3437:11;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;3429:50:::1;::::0;-1:-1:-1;;;3429:50:11;;-1:-1:-1;;;;;5654:32:18;;;3429:50:11::1;::::0;::::1;5636:51:18::0;5703:18;;;5696:34;;;3437:11:11;;::::1;::::0;3429:37:::1;::::0;5609:18:18;;3429:50:11::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3410:3;;;;;:::i;:::-;;;;3378:112;;;;3190:306;3116:380:::0;;:::o;2064:101:4:-;1334:13;:11;:13::i;:::-;2128:30:::1;2155:1;2128:18;:30::i;:::-;2064:101::o:0;2609:501:11:-;445:11;;-1:-1:-1;;;;;445:11:11;431:10;:25;410:140;;;;-1:-1:-1;;;410:140:11;;;;;;;:::i;:::-;-1:-1:-1;;;;;2763:19:11;::::1;::::0;;::::1;::::0;:40:::1;;-1:-1:-1::0;;;;;;2786:17:11;::::1;::::0;::::1;2763:40;2742:118;;;;-1:-1:-1::0;;;2742:118:11::1;;;;;;;:::i;:::-;2887:1;2878:6;:10;2870:59;;;::::0;-1:-1:-1;;;2870:59:11;;6215:2:18;2870:59:11::1;::::0;::::1;6197:21:18::0;6254:2;6234:18;;;6227:30;6293:34;6273:18;;;6266:62;-1:-1:-1;;;6344:18:18;;;6337:34;6388:19;;2870:59:11::1;6013:400:18::0;2870:59:11::1;2956:8;:15:::0;2939:14:::1;2981:123;3005:6;3001:1;:10;2981:123;;;3040:8;3049:1;3040:11;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;3032:61:::1;::::0;-1:-1:-1;;;3032:61:11;;-1:-1:-1;;;;;6676:15:18;;;3032:61:11::1;::::0;::::1;6658:34:18::0;6728:15;;;6708:18;;;6701:43;6760:18;;;6753:34;;;3040:11:11;;::::1;::::0;3032:41:::1;::::0;6593:18:18;;3032:61:11::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3013:3;;;;;:::i;:::-;;;;2981:123;;;;2732:378;2609:501:::0;;;:::o;3502:416::-;445:11;;-1:-1:-1;;;;;445:11:11;431:10;:25;410:140;;;;-1:-1:-1;;;410:140:11;;;;;;;:::i;:::-;-1:-1:-1;;;;;3626:19:11;::::1;3618:63;;;;-1:-1:-1::0;;;3618:63:11::1;;;;;;;:::i;:::-;3708:1;3699:6;:10;3691:55;;;::::0;-1:-1:-1;;;3691:55:11;;7000:2:18;3691:55:11::1;::::0;::::1;6982:21:18::0;;;7019:18;;;7012:30;7078:34;7058:18;;;7051:62;7130:18;;3691:55:11::1;6798:356:18::0;3691:55:11::1;3773:8;:15:::0;3756:14:::1;3798:114;3822:6;3818:1;:10;3798:114;;;3857:8;3866:1;3857:11;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;3849:52:::1;::::0;-1:-1:-1;;;3849:52:11;;-1:-1:-1;;;;;5654:32:18;;;3849:52:11::1;::::0;::::1;5636:51:18::0;5703:18;;;5696:34;;;3857:11:11;;::::1;::::0;3849:37:::1;::::0;5609:18:18;;3849:52:11::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3830:3;;;;;:::i;:::-;;;;3798:114;;1974:629:::0;1334:13:4;:11;:13::i;:::-;-1:-1:-1;;;;;2059:21:11;::::1;2051:65;;;;-1:-1:-1::0;;;2051:65:11::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2134:21:11;::::1;;::::0;;;:12:::1;:21;::::0;;;;;::::1;;2126:50;;;::::0;-1:-1:-1;;;2126:50:11;;7361:2:18;2126:50:11::1;::::0;::::1;7343:21:18::0;7400:2;7380:18;;;7373:30;-1:-1:-1;;;7419:18:18;;;7412:46;7475:18;;2126:50:11::1;7159:340:18::0;2126:50:11::1;2203:8;:15:::0;2186:14:::1;2228:369;2252:6;2248:1;:10;2228:369;;;2298:7;-1:-1:-1::0;;;;;2283:22:11::1;:8;2292:1;2283:11;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;2283:11:11::1;:22:::0;2279:308:::1;;2325:48;::::0;-1:-1:-1;;;2325:48:11;;2367:4:::1;2325:48;::::0;::::1;788:51:18::0;-1:-1:-1;;;;;2325:33:11;::::1;::::0;::::1;::::0;761:18:18;;2325:48:11::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2405:8;2423:1;2414:6;:10;;;;:::i;:::-;2405:20;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;2391:8:::1;:11:::0;;-1:-1:-1;;;;;2405:20:11;;::::1;::::0;2400:1;;2391:11;::::1;;;;;:::i;:::-;;;;;;;;;:34;;;;;-1:-1:-1::0;;;;;2391:34:11::1;;;;;-1:-1:-1::0;;;;;2391:34:11::1;;;;;;2443:8;:14;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;-1:-1:-1;;2443:14:11;;;;;-1:-1:-1;;;;;;2443:14:11::1;::::0;;;;;;;;-1:-1:-1;;;;;2475:21:11;::::1;::::0;;;:12:::1;:21:::0;;;;;;;:29;;-1:-1:-1;;2475:29:11::1;::::0;;2527:22;2475:21;;2527:22:::1;::::0;::::1;2228:369;2041:562;1974:629:::0;:::o;2279:308::-:1;2260:3:::0;::::1;::::0;::::1;:::i;:::-;;;;2228:369;;;;2041:562;1974:629:::0;:::o;4908:104::-;4962:16;4997:8;4990:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4990:15:11;;;;;;;;;;;;;;;;;;;;;;;4908:104;:::o;574:70::-;3279:19:5;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:5;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:5;1713:19:6;:23;;;3387:66:5;;-1:-1:-1;3436:12:5;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:5;;7971:2:18;3325:201:5;;;7953:21:18;8010:2;7990:18;;;7983:30;8049:34;8029:18;;;8022:62;-1:-1:-1;;;8100:18:18;;;8093:44;8154:19;;3325:201:5;7769:410:18;3325:201:5;3536:12;:16;;-1:-1:-1;;3536:16:5;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:5;;;;;3562:65;621:16:11::1;:14;:16::i;:::-;3651:14:5::0;3647:99;;;3697:5;3681:21;;-1:-1:-1;;3681:21:5;;;3721:14;;-1:-1:-1;8336:36:18;;3721:14:5;;8324:2:18;8309:18;3721:14:5;8184:194:18;3647:99:5;3269:483;574:70:11:o;5125:520::-;5285:8;:15;5252:4;;;5310:308;5334:6;5330:1;:10;5310:308;;;5391:8;5400:1;5391:11;;;;;;;;:::i;:::-;;;;;;;;;;;5383:165;;-1:-1:-1;;;5383:165:11;;-1:-1:-1;;;;;8670:15:18;;;5383:165:11;;;8652:34:18;8722:15;;;8702:18;;;8695:43;8754:18;;;8747:34;;;5525:4:11;8797:18:18;;;8790:43;5391:11:11;;;;5383:32;;8586:19:18;;5383:165:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5361:247;;5588:5;5581:12;;;;;;5361:247;5342:3;;;;:::i;:::-;;;;5310:308;;;;5634:4;5627:11;;;5125:520;;;;;;:::o;3924:813::-;1334:13:4;:11;:13::i;:::-;-1:-1:-1;;;;;4068:21:11;::::1;;::::0;;;:12:::1;:21;::::0;;;;;::::1;;4060:59;;;::::0;-1:-1:-1;;;4060:59:11;;9328:2:18;4060:59:11::1;::::0;::::1;9310:21:18::0;9367:2;9347:18;;;9340:30;9406:27;9386:18;;;9379:55;9451:18;;4060:59:11::1;9126:349:18::0;4060:59:11::1;4183:4;4177:11;4250:15;4233;4214:17;4201:65;4510:1;4487::::0;4450:15:::1;4411:17;4388:1;4359:7;4332:5;4306:223;4279:379;;4583:16;4580:1;4577::::0;4562:38:::1;4627:16;4624:1;4617:27;4279:379;;4701:7;-1:-1:-1::0;;;;;4683:47:11::1;;4710:19;4720:8;;4710:9;:19::i;:::-;4683:47;::::0;-1:-1:-1;;;;;;9642:33:18;;;9624:52;;9612:2;9597:18;4683:47:11::1;;;;;;;3924:813:::0;;;:::o;2314:198:4:-;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2402:22:4;::::1;2394:73;;;::::0;-1:-1:-1;;;2394:73:4;;9889:2:18;2394:73:4::1;::::0;::::1;9871:21:18::0;9928:2;9908:18;;;9901:30;9967:34;9947:18;;;9940:62;-1:-1:-1;;;10018:18:18;;;10011:36;10064:19;;2394:73:4::1;9687:402:18::0;2394:73:4::1;2477:28;2496:8;2477:18;:28::i;1599:130::-:0;1513:6;;-1:-1:-1;;;;;1513:6:4;929:10:7;1662:23:4;1654:68;;;;-1:-1:-1;;;1654:68:4;;10296:2:18;1654:68:4;;;10278:21:18;;;10315:18;;;10308:30;10374:34;10354:18;;;10347:62;10426:18;;1654:68:4;10094:356:18;2666:187:4;2758:6;;;-1:-1:-1;;;;;2774:17:4;;;-1:-1:-1;;;;;;2774:17:4;;;;;;;2806:40;;2758:6;;;2774:17;2758:6;;2806:40;;2739:16;;2806:40;2729:124;2666:187;:::o;1003:95::-;5374:13:5;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:5;;;;;;;:::i;:::-;1065:26:4::1;:24;:26::i;5651:256:11:-:0;5742:13;5794:1;5775:20;;5771:130;;-1:-1:-1;5848:29:11;;5771:130;5651:256;;;;:::o;1104:111:4:-;5374:13:5;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:5;;;;;;;:::i;:::-;1176:32:4::1;929:10:7::0;1176:18:4::1;:32::i;14:173:18:-:0;82:20;;-1:-1:-1;;;;;131:31:18;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;383:254::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;:::-;541:39;627:2;612:18;;;;599:32;;-1:-1:-1;;;383:254:18:o;850:328::-;927:6;935;943;996:2;984:9;975:7;971:23;967:32;964:52;;;1012:1;1009;1002:12;964:52;1035:29;1054:9;1035:29;:::i;:::-;1025:39;;1083:38;1117:2;1106:9;1102:18;1083:38;:::i;:::-;1073:48;;1168:2;1157:9;1153:18;1140:32;1130:42;;850:328;;;;;:::o;1375:658::-;1546:2;1598:21;;;1668:13;;1571:18;;;1690:22;;;1517:4;;1546:2;1769:15;;;;1743:2;1728:18;;;1517:4;1812:195;1826:6;1823:1;1820:13;1812:195;;;1891:13;;-1:-1:-1;;;;;1887:39:18;1875:52;;1982:15;;;;1947:12;;;;1923:1;1841:9;1812:195;;;-1:-1:-1;2024:3:18;;1375:658;-1:-1:-1;;;;;;1375:658:18:o;2038:671::-;2117:6;2125;2133;2186:2;2174:9;2165:7;2161:23;2157:32;2154:52;;;2202:1;2199;2192:12;2154:52;2242:9;2229:23;2271:18;2312:2;2304:6;2301:14;2298:34;;;2328:1;2325;2318:12;2298:34;2366:6;2355:9;2351:22;2341:32;;2411:7;2404:4;2400:2;2396:13;2392:27;2382:55;;2433:1;2430;2423:12;2382:55;2473:2;2460:16;2499:2;2491:6;2488:14;2485:34;;;2515:1;2512;2505:12;2485:34;2562:7;2555:4;2546:6;2542:2;2538:15;2534:26;2531:39;2528:59;;;2583:1;2580;2573:12;2528:59;2614:4;2606:13;;;;-1:-1:-1;2638:6:18;-1:-1:-1;2663:40:18;;2682:20;;;-1:-1:-1;2663:40:18;:::i;:::-;2653:50;;2038:671;;;;;:::o;2714:355::-;2916:2;2898:21;;;2955:2;2935:18;;;2928:30;2994:33;2989:2;2974:18;;2967:61;3060:2;3045:18;;2714:355::o;4492:472::-;4694:2;4676:21;;;4733:2;4713:18;;;4706:30;4772:34;4767:2;4752:18;;4745:62;4843:34;4838:2;4823:18;;4816:62;-1:-1:-1;;;4909:3:18;4894:19;;4887:35;4954:3;4939:19;;4492:472::o;5330:127::-;5391:10;5386:3;5382:20;5379:1;5372:31;5422:4;5419:1;5412:15;5446:4;5443:1;5436:15;5741:127;5802:10;5797:3;5793:20;5790:1;5783:31;5833:4;5830:1;5823:15;5857:4;5854:1;5847:15;5873:135;5912:3;5933:17;;;5930:43;;5953:18;;:::i;:::-;-1:-1:-1;6000:1:18;5989:13;;5873:135::o;7504:128::-;7571:9;;;7592:11;;;7589:37;;;7606:18;;:::i;7637:127::-;7698:10;7693:3;7689:20;7686:1;7679:31;7729:4;7726:1;7719:15;7753:4;7750:1;7743:15;8844:277;8911:6;8964:2;8952:9;8943:7;8939:23;8935:32;8932:52;;;8980:1;8977;8970:12;8932:52;9012:9;9006:16;9065:5;9058:13;9051:21;9044:5;9041:32;9031:60;;9087:1;9084;9077:12;10455:407;10657:2;10639:21;;;10696:2;10676:18;;;10669:30;10735:34;10730:2;10715:18;;10708:62;-1:-1:-1;;;10801:2:18;10786:18;;10779:41;10852:3;10837:19;;10455:407::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1060400",
								"executionCost": "1100",
								"totalCost": "1061500"
							},
							"external": {
								"addModule(address)": "infinite",
								"bindToken(address)": "30069",
								"callModuleFunction(bytes,address)": "infinite",
								"canTransfer(address,address,uint256)": "infinite",
								"created(address,uint256)": "infinite",
								"destroyed(address,uint256)": "infinite",
								"getModules()": "infinite",
								"getTokenBound()": "2332",
								"init()": "infinite",
								"isModuleBound(address)": "2616",
								"owner()": "2343",
								"removeModule(address)": "infinite",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "28424",
								"transferred(address,address,uint256)": "infinite",
								"unbindToken(address)": "30092"
							},
							"internal": {
								"_selector(bytes calldata)": "53"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 264,
									"end": 5909,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 264,
									"end": 5909,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 264,
									"end": 5909,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 264,
									"end": 5909,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 264,
									"end": 5909,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 264,
									"end": 5909,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 264,
									"end": 5909,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 264,
									"end": 5909,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 264,
									"end": 5909,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 264,
									"end": 5909,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 264,
									"end": 5909,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 264,
									"end": 5909,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 264,
									"end": 5909,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 264,
									"end": 5909,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 264,
									"end": 5909,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 264,
									"end": 5909,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 264,
									"end": 5909,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 264,
									"end": 5909,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 264,
									"end": 5909,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 264,
									"end": 5909,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 264,
									"end": 5909,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e3a0932b8c23d0b2378f3feb3b0f6d18a8a196f65797aa4901bbc49c0306058564736f6c63430008110033",
									".code": [
										{
											"begin": 264,
											"end": 5909,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "PUSH",
											"source": 11,
											"value": "8DA5CB5B"
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "PUSH",
											"source": 11,
											"value": "E1C7392A"
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "PUSH",
											"source": 11,
											"value": "E1C7392A"
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "PUSH",
											"source": 11,
											"value": "E46638E6"
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "PUSH",
											"source": 11,
											"value": "EFB22D33"
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "PUSH",
											"source": 11,
											"value": "F2FDE38B"
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "PUSH",
											"source": 11,
											"value": "8DA5CB5B"
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "PUSH",
											"source": 11,
											"value": "A0632461"
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "PUSH",
											"source": 11,
											"value": "A446D49F"
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "PUSH",
											"source": 11,
											"value": "B2494DF3"
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "tag",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "PUSH",
											"source": 11,
											"value": "6A3EDF28"
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "PUSH",
											"source": 11,
											"value": "6A3EDF28"
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "PUSH",
											"source": 11,
											"value": "715018A6"
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "PUSH",
											"source": 11,
											"value": "8BAF29B4"
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "PUSH",
											"source": 11,
											"value": "8D2EA772"
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "tag",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "PUSH",
											"source": 11,
											"value": "1ED86F19"
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "PUSH",
											"source": 11,
											"value": "3FF5AA02"
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "PUSH",
											"source": 11,
											"value": "40DB3B50"
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "PUSH",
											"source": 11,
											"value": "5F8DEAD3"
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 264,
											"end": 5909,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1521,
											"end": 1968,
											"name": "tag",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 1521,
											"end": 1968,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1521,
											"end": 1968,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 1521,
											"end": 1968,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 1521,
											"end": 1968,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1521,
											"end": 1968,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1521,
											"end": 1968,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 1521,
											"end": 1968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1521,
											"end": 1968,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 1521,
											"end": 1968,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1521,
											"end": 1968,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 1521,
											"end": 1968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1521,
											"end": 1968,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 1521,
											"end": 1968,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1521,
											"end": 1968,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 650,
											"end": 1113,
											"name": "tag",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 650,
											"end": 1113,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 650,
											"end": 1113,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 650,
											"end": 1113,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 650,
											"end": 1113,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 650,
											"end": 1113,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 650,
											"end": 1113,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 650,
											"end": 1113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 650,
											"end": 1113,
											"name": "tag",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 650,
											"end": 1113,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 650,
											"end": 1113,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 650,
											"end": 1113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1119,
											"end": 1515,
											"name": "tag",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 1119,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1119,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 1119,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 1119,
											"end": 1515,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1119,
											"end": 1515,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1119,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 1119,
											"end": 1515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1119,
											"end": 1515,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 1119,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1119,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 1119,
											"end": 1515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3116,
											"end": 3496,
											"name": "tag",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 3116,
											"end": 3496,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3116,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 3116,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 3116,
											"end": 3496,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 3116,
											"end": 3496,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3116,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 3116,
											"end": 3496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3116,
											"end": 3496,
											"name": "tag",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 3116,
											"end": 3496,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3116,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 3116,
											"end": 3496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5018,
											"end": 5119,
											"name": "tag",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 5018,
											"end": 5119,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5101,
											"end": 5112,
											"name": "PUSH",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 5101,
											"end": 5112,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5101,
											"end": 5112,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5018,
											"end": 5119,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 5018,
											"end": 5119,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5018,
											"end": 5119,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5018,
											"end": 5119,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 806,
											"end": 838,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 806,
											"end": 838,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 806,
											"end": 838,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 788,
											"end": 839,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 788,
											"end": 839,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 776,
											"end": 778,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 761,
											"end": 779,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5018,
											"end": 5119,
											"name": "tag",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 5018,
											"end": 5119,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5018,
											"end": 5119,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5018,
											"end": 5119,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5018,
											"end": 5119,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5018,
											"end": 5119,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5018,
											"end": 5119,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5018,
											"end": 5119,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5018,
											"end": 5119,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2064,
											"end": 2165,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 2064,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2064,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 2064,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 2064,
											"end": 2165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 3110,
											"name": "tag",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 2609,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2609,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 2609,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 2609,
											"end": 3110,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2609,
											"end": 3110,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2609,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 2609,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2609,
											"end": 3110,
											"name": "tag",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 2609,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2609,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 2609,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3502,
											"end": 3918,
											"name": "tag",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 3502,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3502,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 3502,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 3502,
											"end": 3918,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 3502,
											"end": 3918,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3502,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 3502,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3502,
											"end": 3918,
											"name": "tag",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 3502,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3502,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 3502,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2603,
											"name": "tag",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 1974,
											"end": 2603,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1974,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 1974,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 1974,
											"end": 2603,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1974,
											"end": 2603,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1974,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 1974,
											"end": 2603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1974,
											"end": 2603,
											"name": "tag",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 1974,
											"end": 2603,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1974,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 1974,
											"end": 2603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4743,
											"end": 4902,
											"name": "tag",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 4743,
											"end": 4902,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4743,
											"end": 4902,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 4743,
											"end": 4902,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 4743,
											"end": 4902,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4743,
											"end": 4902,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4743,
											"end": 4902,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 4743,
											"end": 4902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4743,
											"end": 4902,
											"name": "tag",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 4743,
											"end": 4902,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4874,
											"end": 4895,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4847,
											"end": 4851,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4874,
											"end": 4895,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4874,
											"end": 4895,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4874,
											"end": 4895,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4874,
											"end": 4886,
											"name": "PUSH",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 4874,
											"end": 4895,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4874,
											"end": 4895,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4874,
											"end": 4895,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4874,
											"end": 4895,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4874,
											"end": 4895,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4874,
											"end": 4895,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4874,
											"end": 4895,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 4874,
											"end": 4895,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4874,
											"end": 4895,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4743,
											"end": 4902,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4743,
											"end": 4902,
											"name": "tag",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 4743,
											"end": 4902,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4743,
											"end": 4902,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4743,
											"end": 4902,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1348,
											"end": 1362,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1348,
											"end": 1362,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1341,
											"end": 1363,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1323,
											"end": 1364,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1323,
											"end": 1364,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1311,
											"end": 1313,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1296,
											"end": 1314,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4743,
											"end": 4902,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 1183,
											"end": 1370,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4908,
											"end": 5012,
											"name": "tag",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 4908,
											"end": 5012,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4908,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 4908,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 4908,
											"end": 5012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4908,
											"end": 5012,
											"name": "tag",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 4908,
											"end": 5012,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4908,
											"end": 5012,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 5012,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4908,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 4908,
											"end": 5012,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4908,
											"end": 5012,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4908,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 4908,
											"end": 5012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 574,
											"end": 644,
											"name": "tag",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 574,
											"end": 644,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 574,
											"end": 644,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 574,
											"end": 644,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 574,
											"end": 644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5125,
											"end": 5645,
											"name": "tag",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 5125,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5125,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 5125,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 5125,
											"end": 5645,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 5125,
											"end": 5645,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5125,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 5125,
											"end": 5645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5125,
											"end": 5645,
											"name": "tag",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 5125,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5125,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 5125,
											"end": 5645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3924,
											"end": 4737,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 3924,
											"end": 4737,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3924,
											"end": 4737,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 3924,
											"end": 4737,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 3924,
											"end": 4737,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 3924,
											"end": 4737,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3924,
											"end": 4737,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 3924,
											"end": 4737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3924,
											"end": 4737,
											"name": "tag",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 3924,
											"end": 4737,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3924,
											"end": 4737,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 3924,
											"end": 4737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2314,
											"end": 2512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2314,
											"end": 2512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1521,
											"end": 1968,
											"name": "tag",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 1521,
											"end": 1968,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1334,
											"end": 1347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1603,
											"end": 1624,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1603,
											"end": 1624,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1595,
											"end": 1660,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "81"
										},
										{
											"begin": 1595,
											"end": 1660,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1595,
											"end": 1660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1595,
											"end": 1660,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1595,
											"end": 1660,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1595,
											"end": 1660,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1595,
											"end": 1660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1595,
											"end": 1660,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1595,
											"end": 1660,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 1595,
											"end": 1660,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1595,
											"end": 1660,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 1595,
											"end": 1660,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1595,
											"end": 1660,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 1595,
											"end": 1660,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1595,
											"end": 1660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1595,
											"end": 1660,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1595,
											"end": 1660,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1595,
											"end": 1660,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1595,
											"end": 1660,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1595,
											"end": 1660,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1595,
											"end": 1660,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1595,
											"end": 1660,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "81"
										},
										{
											"begin": 1595,
											"end": 1660,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1679,
											"end": 1700,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1679,
											"end": 1700,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1679,
											"end": 1700,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1679,
											"end": 1700,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1679,
											"end": 1700,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1679,
											"end": 1700,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1679,
											"end": 1691,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 1679,
											"end": 1700,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1679,
											"end": 1700,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1679,
											"end": 1700,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1679,
											"end": 1700,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1679,
											"end": 1700,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1679,
											"end": 1700,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1679,
											"end": 1700,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 1679,
											"end": 1700,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1678,
											"end": 1700,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1670,
											"end": 1725,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 1670,
											"end": 1725,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1670,
											"end": 1725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1670,
											"end": 1725,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1670,
											"end": 1725,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1670,
											"end": 1725,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3276,
											"end": 3278,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1670,
											"end": 1725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1670,
											"end": 1725,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1670,
											"end": 1725,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3258,
											"end": 3279,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3315,
											"end": 3317,
											"name": "PUSH",
											"source": 18,
											"value": "14"
										},
										{
											"begin": 3295,
											"end": 3313,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 3295,
											"end": 3313,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3295,
											"end": 3313,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3288,
											"end": 3318,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B5BD91D5B1948185B1C9958591E48189BDD5B99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3334,
											"end": 3352,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 3334,
											"end": 3352,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3334,
											"end": 3352,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3327,
											"end": 3377,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3394,
											"end": 3412,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 3394,
											"end": 3412,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1670,
											"end": 1725,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 3074,
											"end": 3418,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1670,
											"end": 1725,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 1670,
											"end": 1725,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1743,
											"end": 1751,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 1743,
											"end": 1758,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1762,
											"end": 1764,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "18"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 1743,
											"end": 1764,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1735,
											"end": 1800,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 1735,
											"end": 1800,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1735,
											"end": 1800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1735,
											"end": 1800,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1735,
											"end": 1800,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1735,
											"end": 1800,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3625,
											"end": 3627,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1735,
											"end": 1800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1735,
											"end": 1800,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1735,
											"end": 1800,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3664,
											"end": 3666,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 3644,
											"end": 3662,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 3644,
											"end": 3662,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3644,
											"end": 3662,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3703,
											"end": 3736,
											"name": "PUSH",
											"source": 18,
											"value": "63616E6E6F7420616464206D6F7265207468616E203235206D6F64756C657300"
										},
										{
											"begin": 3683,
											"end": 3701,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 3683,
											"end": 3701,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3683,
											"end": 3701,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3676,
											"end": 3737,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3754,
											"end": 3772,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 3754,
											"end": 3772,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1735,
											"end": 1800,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 3423,
											"end": 3778,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1735,
											"end": 1800,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 1735,
											"end": 1800,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1810,
											"end": 1856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1810,
											"end": 1856,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "12A4C951"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1810,
											"end": 1856,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1810,
											"end": 1856,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1850,
											"end": 1854,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 1810,
											"end": 1856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1810,
											"end": 1856,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1810,
											"end": 1856,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 788,
											"end": 839,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1810,
											"end": 1841,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1810,
											"end": 1841,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1810,
											"end": 1841,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1810,
											"end": 1841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4A932544"
										},
										{
											"begin": 1810,
											"end": 1841,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 761,
											"end": 779,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 761,
											"end": 779,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1810,
											"end": 1856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1810,
											"end": 1856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1810,
											"end": 1856,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1810,
											"end": 1856,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1810,
											"end": 1856,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1810,
											"end": 1856,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1810,
											"end": 1856,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1810,
											"end": 1856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1810,
											"end": 1856,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 1810,
											"end": 1856,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1810,
											"end": 1856,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 1810,
											"end": 1856,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1810,
											"end": 1856,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1810,
											"end": 1856,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1810,
											"end": 1856,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 1810,
											"end": 1856,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1810,
											"end": 1856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1810,
											"end": 1856,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1810,
											"end": 1856,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1810,
											"end": 1856,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 1810,
											"end": 1856,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1810,
											"end": 1856,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1810,
											"end": 1856,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 1810,
											"end": 1856,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 1810,
											"end": 1856,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1810,
											"end": 1856,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1810,
											"end": 1856,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1810,
											"end": 1856,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 1810,
											"end": 1856,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1810,
											"end": 1856,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1810,
											"end": 1856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1810,
											"end": 1856,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1810,
											"end": 1856,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 1810,
											"end": 1856,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1810,
											"end": 1856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1810,
											"end": 1856,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1810,
											"end": 1856,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 1810,
											"end": 1856,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1866,
											"end": 1874,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 1866,
											"end": 1888,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1866,
											"end": 1888,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1866,
											"end": 1888,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1866,
											"end": 1888,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1866,
											"end": 1888,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1866,
											"end": 1888,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1866,
											"end": 1888,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1866,
											"end": 1888,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1866,
											"end": 1888,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1866,
											"end": 1888,
											"name": "PUSH",
											"source": 11,
											"value": "46501879B8CA8525E8C2FD519E2FBFCFA2EBEA26501294AA02CBFCFB12E94354"
										},
										{
											"begin": 1866,
											"end": 1888,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1866,
											"end": 1888,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1866,
											"end": 1888,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1866,
											"end": 1888,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1866,
											"end": 1888,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1866,
											"end": 1888,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1866,
											"end": 1888,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1866,
											"end": 1888,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1866,
											"end": 1888,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 1866,
											"end": 1888,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1866,
											"end": 1888,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1866,
											"end": 1888,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1898,
											"end": 1919,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1898,
											"end": 1919,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1898,
											"end": 1919,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1898,
											"end": 1910,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 1866,
											"end": 1888,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1898,
											"end": 1919,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1898,
											"end": 1919,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1898,
											"end": 1919,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1898,
											"end": 1919,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1898,
											"end": 1919,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1898,
											"end": 1926,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1898,
											"end": 1926,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1898,
											"end": 1926,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1898,
											"end": 1926,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1898,
											"end": 1926,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 1898,
											"end": 1926,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 1898,
											"end": 1926,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1898,
											"end": 1926,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 1898,
											"end": 1926,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1941,
											"end": 1961,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1941,
											"end": 1961,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1866,
											"end": 1888,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1866,
											"end": 1888,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1941,
											"end": 1961,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "EAD6A006345DA1073A106D5F32372D2D2204F46CB0B4BCA8F5EBAFCBBED12B8A"
										},
										{
											"begin": 1941,
											"end": 1961,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1941,
											"end": 1961,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 1521,
											"end": 1968,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1521,
											"end": 1968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 650,
											"end": 1113,
											"name": "tag",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 650,
											"end": 1113,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 745,
											"end": 755,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 734,
											"end": 741,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 734,
											"end": 741,
											"name": "tag",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 734,
											"end": 741,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 734,
											"end": 755,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 734,
											"end": 755,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 734,
											"end": 826,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 734,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 734,
											"end": 826,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 776,
											"end": 787,
											"name": "PUSH",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 776,
											"end": 787,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 776,
											"end": 787,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 776,
											"end": 801,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 776,
											"end": 825,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 776,
											"end": 825,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 776,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 776,
											"end": 825,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 805,
											"end": 815,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 805,
											"end": 825,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 805,
											"end": 825,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 805,
											"end": 825,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 776,
											"end": 825,
											"name": "tag",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 776,
											"end": 825,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 713,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 713,
											"end": 880,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 713,
											"end": 880,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 713,
											"end": 880,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 713,
											"end": 880,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 713,
											"end": 880,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3985,
											"end": 3987,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 713,
											"end": 880,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 713,
											"end": 880,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 713,
											"end": 880,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3967,
											"end": 3988,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4024,
											"end": 4026,
											"name": "PUSH",
											"source": 18,
											"value": "1C"
										},
										{
											"begin": 4004,
											"end": 4022,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 4004,
											"end": 4022,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4004,
											"end": 4022,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3997,
											"end": 4027,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4063,
											"end": 4093,
											"name": "PUSH",
											"source": 18,
											"value": "6F6E6C79206F776E6572206F7220746F6B656E2063616E2063616C6C00000000"
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4036,
											"end": 4094,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4111,
											"end": 4129,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 4111,
											"end": 4129,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 713,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 3783,
											"end": 4135,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 713,
											"end": 880,
											"name": "tag",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 713,
											"end": 880,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 898,
											"end": 918,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 898,
											"end": 918,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 890,
											"end": 954,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 890,
											"end": 954,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 890,
											"end": 954,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 890,
											"end": 954,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 890,
											"end": 954,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 890,
											"end": 954,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 890,
											"end": 954,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 890,
											"end": 954,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 890,
											"end": 954,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 890,
											"end": 954,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 890,
											"end": 954,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 890,
											"end": 954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 890,
											"end": 954,
											"name": "tag",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 890,
											"end": 954,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 964,
											"end": 975,
											"name": "PUSH",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 964,
											"end": 984,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 964,
											"end": 984,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 964,
											"end": 984,
											"name": "AND",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 964,
											"end": 984,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 964,
											"end": 984,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 964,
											"end": 984,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 964,
											"end": 984,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 964,
											"end": 984,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 964,
											"end": 984,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 964,
											"end": 984,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 964,
											"end": 984,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1088,
											"end": 1106,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1088,
											"end": 1106,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 788,
											"end": 839,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 788,
											"end": 839,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 788,
											"end": 839,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1088,
											"end": 1106,
											"name": "PUSH",
											"source": 11,
											"value": "2DE35142B19ED5A07796CF30791959C592018F70B1D2D7C460EEF8FFE713692B"
										},
										{
											"begin": 1088,
											"end": 1106,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 776,
											"end": 778,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 761,
											"end": 779,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1088,
											"end": 1106,
											"name": "tag",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 1088,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1088,
											"end": 1106,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1088,
											"end": 1106,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1088,
											"end": 1106,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1088,
											"end": 1106,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1088,
											"end": 1106,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1088,
											"end": 1106,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1088,
											"end": 1106,
											"name": "LOG1",
											"source": 11
										},
										{
											"begin": 650,
											"end": 1113,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 650,
											"end": 1113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1119,
											"end": 1515,
											"name": "tag",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 1119,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1216,
											"end": 1226,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1205,
											"end": 1212,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1212,
											"name": "tag",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 1205,
											"end": 1212,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1205,
											"end": 1226,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1205,
											"end": 1226,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1205,
											"end": 1250,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1205,
											"end": 1250,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 1205,
											"end": 1250,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1230,
											"end": 1240,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1230,
											"end": 1250,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1230,
											"end": 1250,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1230,
											"end": 1250,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1205,
											"end": 1250,
											"name": "tag",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 1205,
											"end": 1250,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1184,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 1184,
											"end": 1304,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1184,
											"end": 1304,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1184,
											"end": 1304,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1184,
											"end": 1304,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1184,
											"end": 1304,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3985,
											"end": 3987,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1184,
											"end": 1304,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1184,
											"end": 1304,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1184,
											"end": 1304,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3967,
											"end": 3988,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4024,
											"end": 4026,
											"name": "PUSH",
											"source": 18,
											"value": "1C"
										},
										{
											"begin": 4004,
											"end": 4022,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 4004,
											"end": 4022,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4004,
											"end": 4022,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3997,
											"end": 4027,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4063,
											"end": 4093,
											"name": "PUSH",
											"source": 18,
											"value": "6F6E6C79206F776E6572206F7220746F6B656E2063616E2063616C6C00000000"
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4036,
											"end": 4094,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4111,
											"end": 4129,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 4111,
											"end": 4129,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1184,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 3783,
											"end": 4135,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1184,
											"end": 1304,
											"name": "tag",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 1184,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1343,
											"name": "PUSH",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 1332,
											"end": 1343,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1322,
											"end": 1343,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1322,
											"end": 1343,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1322,
											"end": 1343,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1343,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1343,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1322,
											"end": 1343,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1314,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 1314,
											"end": 1371,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1314,
											"end": 1371,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1314,
											"end": 1371,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1314,
											"end": 1371,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1314,
											"end": 1371,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4344,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1314,
											"end": 1371,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1314,
											"end": 1371,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1314,
											"end": 1371,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4324,
											"end": 4345,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4381,
											"end": 4383,
											"name": "PUSH",
											"source": 18,
											"value": "17"
										},
										{
											"begin": 4361,
											"end": 4379,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 4361,
											"end": 4379,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4361,
											"end": 4379,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4354,
											"end": 4384,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4420,
											"end": 4445,
											"name": "PUSH",
											"source": 18,
											"value": "5468697320746F6B656E206973206E6F7420626F756E64000000000000000000"
										},
										{
											"begin": 4400,
											"end": 4418,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 4400,
											"end": 4418,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4400,
											"end": 4418,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4393,
											"end": 4446,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4463,
											"end": 4481,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 4463,
											"end": 4481,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1314,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 4140,
											"end": 4487,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1314,
											"end": 1371,
											"name": "tag",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 1314,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1389,
											"end": 1409,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1389,
											"end": 1409,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 1381,
											"end": 1445,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1445,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1381,
											"end": 1445,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1381,
											"end": 1445,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1445,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1445,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1381,
											"end": 1445,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 1381,
											"end": 1445,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 1381,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1445,
											"name": "tag",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 1381,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1462,
											"end": 1473,
											"name": "PUSH",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 1455,
											"end": 1473,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1455,
											"end": 1473,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1455,
											"end": 1473,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1455,
											"end": 1473,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1455,
											"end": 1473,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1488,
											"end": 1508,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1488,
											"end": 1508,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 806,
											"end": 838,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 806,
											"end": 838,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 788,
											"end": 839,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 788,
											"end": 839,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1488,
											"end": 1508,
											"name": "PUSH",
											"source": 11,
											"value": "28A4CA7134A3B3F9AFF286E79AD3DAADB4A06D1B43D037A3A98BDC074EDD9B7A"
										},
										{
											"begin": 1488,
											"end": 1508,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 776,
											"end": 778,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 761,
											"end": 779,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1488,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 642,
											"end": 845,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3116,
											"end": 3496,
											"name": "tag",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 3116,
											"end": 3496,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 445,
											"end": 456,
											"name": "PUSH",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 445,
											"end": 456,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 445,
											"end": 456,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 431,
											"end": 441,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 431,
											"end": 456,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 410,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 410,
											"end": 550,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 410,
											"end": 550,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 410,
											"end": 550,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 410,
											"end": 550,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 410,
											"end": 550,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 410,
											"end": 550,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 410,
											"end": 550,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 410,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 410,
											"end": 550,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 410,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 410,
											"end": 550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 410,
											"end": 550,
											"name": "tag",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 410,
											"end": 550,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3208,
											"end": 3225,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3208,
											"end": 3225,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3200,
											"end": 3261,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 3200,
											"end": 3261,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3200,
											"end": 3261,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3200,
											"end": 3261,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3200,
											"end": 3261,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3200,
											"end": 3261,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3200,
											"end": 3261,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3200,
											"end": 3261,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3200,
											"end": 3261,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 3200,
											"end": 3261,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3200,
											"end": 3261,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 3200,
											"end": 3261,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3200,
											"end": 3261,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 3200,
											"end": 3261,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3288,
											"end": 3289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3279,
											"end": 3285,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3279,
											"end": 3289,
											"modifierDepth": 1,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3271,
											"end": 3326,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 3271,
											"end": 3326,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3271,
											"end": 3326,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3271,
											"end": 3326,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3271,
											"end": 3326,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3271,
											"end": 3326,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5171,
											"end": 5173,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3271,
											"end": 3326,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3271,
											"end": 3326,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3271,
											"end": 3326,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5153,
											"end": 5174,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5153,
											"end": 5174,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5153,
											"end": 5174,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5190,
											"end": 5208,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 5190,
											"end": 5208,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5190,
											"end": 5208,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5183,
											"end": 5213,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5249,
											"end": 5283,
											"name": "PUSH",
											"source": 18,
											"value": "696E76616C696420617267756D656E74202D206E6F2076616C7565206D696E74"
										},
										{
											"begin": 5229,
											"end": 5247,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 5229,
											"end": 5247,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5229,
											"end": 5247,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5222,
											"end": 5284,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5301,
											"end": 5319,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 5301,
											"end": 5319,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3271,
											"end": 3326,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 4969,
											"end": 5325,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3271,
											"end": 3326,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 3271,
											"end": 3326,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3353,
											"end": 3361,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 3353,
											"end": 3368,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3336,
											"end": 3350,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3378,
											"end": 3490,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 3378,
											"end": 3490,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3402,
											"end": 3408,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3398,
											"end": 3399,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3398,
											"end": 3408,
											"modifierDepth": 1,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 3378,
											"end": 3490,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3378,
											"end": 3490,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 3378,
											"end": 3490,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3437,
											"end": 3445,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 3446,
											"end": 3447,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3437,
											"end": 3448,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3437,
											"end": 3448,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3437,
											"end": 3448,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3437,
											"end": 3448,
											"modifierDepth": 1,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 3437,
											"end": 3448,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 3437,
											"end": 3448,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3437,
											"end": 3448,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 3437,
											"end": 3448,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 3437,
											"end": 3448,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3437,
											"end": 3448,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 3437,
											"end": 3448,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3437,
											"end": 3448,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3437,
											"end": 3448,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3437,
											"end": 3448,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3437,
											"end": 3448,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3437,
											"end": 3448,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3437,
											"end": 3448,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3437,
											"end": 3448,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3437,
											"end": 3448,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3437,
											"end": 3448,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3437,
											"end": 3448,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3429,
											"end": 3479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3429,
											"end": 3479,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F104A8C9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3429,
											"end": 3479,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3429,
											"end": 3479,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5654,
											"end": 5686,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 5654,
											"end": 5686,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5654,
											"end": 5686,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3429,
											"end": 3479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3429,
											"end": 3479,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3429,
											"end": 3479,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5636,
											"end": 5687,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5703,
											"end": 5721,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 5703,
											"end": 5721,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5703,
											"end": 5721,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5696,
											"end": 5730,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 5696,
											"end": 5730,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5696,
											"end": 5730,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3437,
											"end": 3448,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3437,
											"end": 3448,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3437,
											"end": 3448,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3437,
											"end": 3448,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3429,
											"end": 3466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "F104A8C9"
										},
										{
											"begin": 3429,
											"end": 3466,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5609,
											"end": 5627,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 5609,
											"end": 5627,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3429,
											"end": 3479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3429,
											"end": 3479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3429,
											"end": 3479,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3429,
											"end": 3479,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3429,
											"end": 3479,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3429,
											"end": 3479,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3429,
											"end": 3479,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3429,
											"end": 3479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3429,
											"end": 3479,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3429,
											"end": 3479,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3429,
											"end": 3479,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 3429,
											"end": 3479,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3429,
											"end": 3479,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3429,
											"end": 3479,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3429,
											"end": 3479,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 3429,
											"end": 3479,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3429,
											"end": 3479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3429,
											"end": 3479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3429,
											"end": 3479,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3429,
											"end": 3479,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 3429,
											"end": 3479,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3429,
											"end": 3479,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3429,
											"end": 3479,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 3429,
											"end": 3479,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 3429,
											"end": 3479,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3429,
											"end": 3479,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3429,
											"end": 3479,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3429,
											"end": 3479,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 3429,
											"end": 3479,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3429,
											"end": 3479,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3429,
											"end": 3479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3429,
											"end": 3479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3429,
											"end": 3479,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 3429,
											"end": 3479,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3429,
											"end": 3479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3429,
											"end": 3479,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3429,
											"end": 3479,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 3429,
											"end": 3479,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3429,
											"end": 3479,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3429,
											"end": 3479,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3429,
											"end": 3479,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3429,
											"end": 3479,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3410,
											"end": 3413,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3410,
											"end": 3413,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3410,
											"end": 3413,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 3410,
											"end": 3413,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3410,
											"end": 3413,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 3410,
											"end": 3413,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3410,
											"end": 3413,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 3410,
											"end": 3413,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3410,
											"end": 3413,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3410,
											"end": 3413,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3410,
											"end": 3413,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3378,
											"end": 3490,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 3378,
											"end": 3490,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3378,
											"end": 3490,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 3378,
											"end": 3490,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3378,
											"end": 3490,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3190,
											"end": 3496,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3116,
											"end": 3496,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3116,
											"end": 3496,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3116,
											"end": 3496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2064,
											"end": 2165,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 2064,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1334,
											"end": 1347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2158,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 2155,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2128,
											"end": 2146,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 2128,
											"end": 2158,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2158,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 2128,
											"end": 2158,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2064,
											"end": 2165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 3110,
											"name": "tag",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 2609,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 445,
											"end": 456,
											"name": "PUSH",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 445,
											"end": 456,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 445,
											"end": 456,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 431,
											"end": 441,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 431,
											"end": 456,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 410,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 410,
											"end": 550,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 410,
											"end": 550,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 410,
											"end": 550,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 410,
											"end": 550,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 410,
											"end": 550,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 410,
											"end": 550,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 410,
											"end": 550,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 410,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 410,
											"end": 550,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 410,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 410,
											"end": 550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 410,
											"end": 550,
											"name": "tag",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 410,
											"end": 550,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2763,
											"end": 2782,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2763,
											"end": 2782,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2763,
											"end": 2782,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2763,
											"end": 2782,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2763,
											"end": 2782,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2763,
											"end": 2782,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2763,
											"end": 2803,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 2763,
											"end": 2803,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2786,
											"end": 2803,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2786,
											"end": 2803,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2786,
											"end": 2803,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2786,
											"end": 2803,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2763,
											"end": 2803,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 2763,
											"end": 2803,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2742,
											"end": 2860,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 2742,
											"end": 2860,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2742,
											"end": 2860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2742,
											"end": 2860,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2742,
											"end": 2860,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2742,
											"end": 2860,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2742,
											"end": 2860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2742,
											"end": 2860,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2742,
											"end": 2860,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 2742,
											"end": 2860,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2742,
											"end": 2860,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 2742,
											"end": 2860,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2742,
											"end": 2860,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 2742,
											"end": 2860,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2887,
											"end": 2888,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2878,
											"end": 2884,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2878,
											"end": 2888,
											"modifierDepth": 1,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2870,
											"end": 2929,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 2870,
											"end": 2929,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2870,
											"end": 2929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2870,
											"end": 2929,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2870,
											"end": 2929,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2870,
											"end": 2929,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6215,
											"end": 6217,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2870,
											"end": 2929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2870,
											"end": 2929,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2870,
											"end": 2929,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6197,
											"end": 6218,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6254,
											"end": 6256,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 6234,
											"end": 6252,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6234,
											"end": 6252,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6234,
											"end": 6252,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6227,
											"end": 6257,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6293,
											"end": 6327,
											"name": "PUSH",
											"source": 18,
											"value": "696E76616C696420617267756D656E74202D206E6F2076616C7565207472616E"
										},
										{
											"begin": 6273,
											"end": 6291,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 6273,
											"end": 6291,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6273,
											"end": 6291,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6266,
											"end": 6328,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39B332B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6344,
											"end": 6362,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 6344,
											"end": 6362,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6344,
											"end": 6362,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6337,
											"end": 6371,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6388,
											"end": 6407,
											"name": "PUSH",
											"source": 18,
											"value": "84"
										},
										{
											"begin": 6388,
											"end": 6407,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2870,
											"end": 2929,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 6013,
											"end": 6413,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2870,
											"end": 2929,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 2870,
											"end": 2929,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2956,
											"end": 2964,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 2956,
											"end": 2971,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2939,
											"end": 2953,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2981,
											"end": 3104,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 2981,
											"end": 3104,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3005,
											"end": 3011,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3001,
											"end": 3002,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3001,
											"end": 3011,
											"modifierDepth": 1,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2981,
											"end": 3104,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2981,
											"end": 3104,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 2981,
											"end": 3104,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3040,
											"end": 3048,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 3049,
											"end": 3050,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3040,
											"end": 3051,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3040,
											"end": 3051,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3040,
											"end": 3051,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3040,
											"end": 3051,
											"modifierDepth": 1,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 3040,
											"end": 3051,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 3040,
											"end": 3051,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3040,
											"end": 3051,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 3040,
											"end": 3051,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 3040,
											"end": 3051,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3040,
											"end": 3051,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 3040,
											"end": 3051,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3040,
											"end": 3051,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3040,
											"end": 3051,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3040,
											"end": 3051,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3040,
											"end": 3051,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3040,
											"end": 3051,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3040,
											"end": 3051,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3040,
											"end": 3051,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3040,
											"end": 3051,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3040,
											"end": 3051,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3040,
											"end": 3051,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3032,
											"end": 3093,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3032,
											"end": 3093,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2DF87B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3032,
											"end": 3093,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3032,
											"end": 3093,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6676,
											"end": 6691,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 6676,
											"end": 6691,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6676,
											"end": 6691,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3032,
											"end": 3093,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3032,
											"end": 3093,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3032,
											"end": 3093,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6658,
											"end": 6692,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6728,
											"end": 6743,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 6728,
											"end": 6743,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6728,
											"end": 6743,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 6708,
											"end": 6726,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 6708,
											"end": 6726,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 6708,
											"end": 6726,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6701,
											"end": 6744,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6760,
											"end": 6778,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 6760,
											"end": 6778,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6760,
											"end": 6778,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6753,
											"end": 6787,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 6753,
											"end": 6787,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6753,
											"end": 6787,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3040,
											"end": 3051,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3040,
											"end": 3051,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3040,
											"end": 3051,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3040,
											"end": 3051,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3032,
											"end": 3073,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2CB7E1EC"
										},
										{
											"begin": 3032,
											"end": 3073,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6593,
											"end": 6611,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 6593,
											"end": 6611,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3032,
											"end": 3093,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3032,
											"end": 3093,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3032,
											"end": 3093,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3032,
											"end": 3093,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3032,
											"end": 3093,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3032,
											"end": 3093,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3032,
											"end": 3093,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3032,
											"end": 3093,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3032,
											"end": 3093,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3032,
											"end": 3093,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3032,
											"end": 3093,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 3032,
											"end": 3093,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3032,
											"end": 3093,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3032,
											"end": 3093,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3032,
											"end": 3093,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 3032,
											"end": 3093,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3032,
											"end": 3093,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3032,
											"end": 3093,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3032,
											"end": 3093,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3032,
											"end": 3093,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 3032,
											"end": 3093,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3032,
											"end": 3093,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3032,
											"end": 3093,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 3032,
											"end": 3093,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 3032,
											"end": 3093,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3032,
											"end": 3093,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3032,
											"end": 3093,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3032,
											"end": 3093,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "166"
										},
										{
											"begin": 3032,
											"end": 3093,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3032,
											"end": 3093,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3032,
											"end": 3093,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3032,
											"end": 3093,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3032,
											"end": 3093,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 3032,
											"end": 3093,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3032,
											"end": 3093,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3032,
											"end": 3093,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3032,
											"end": 3093,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "166"
										},
										{
											"begin": 3032,
											"end": 3093,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3032,
											"end": 3093,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3032,
											"end": 3093,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3032,
											"end": 3093,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3032,
											"end": 3093,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3013,
											"end": 3016,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3013,
											"end": 3016,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3013,
											"end": 3016,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 3013,
											"end": 3016,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3013,
											"end": 3016,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 3013,
											"end": 3016,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3013,
											"end": 3016,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 3013,
											"end": 3016,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3013,
											"end": 3016,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3013,
											"end": 3016,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3013,
											"end": 3016,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2981,
											"end": 3104,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 2981,
											"end": 3104,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2981,
											"end": 3104,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 2981,
											"end": 3104,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2981,
											"end": 3104,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2732,
											"end": 3110,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2609,
											"end": 3110,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2609,
											"end": 3110,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2609,
											"end": 3110,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2609,
											"end": 3110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3502,
											"end": 3918,
											"name": "tag",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 3502,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 445,
											"end": 456,
											"name": "PUSH",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 445,
											"end": 456,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 445,
											"end": 456,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 431,
											"end": 441,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 431,
											"end": 456,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 410,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 410,
											"end": 550,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 410,
											"end": 550,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 410,
											"end": 550,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 410,
											"end": 550,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 410,
											"end": 550,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 410,
											"end": 550,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 410,
											"end": 550,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 410,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 410,
											"end": 550,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 410,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 410,
											"end": 550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 410,
											"end": 550,
											"name": "tag",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 410,
											"end": 550,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3626,
											"end": 3645,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3626,
											"end": 3645,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3618,
											"end": 3681,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 3618,
											"end": 3681,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3618,
											"end": 3681,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3618,
											"end": 3681,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3618,
											"end": 3681,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3618,
											"end": 3681,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3618,
											"end": 3681,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3618,
											"end": 3681,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3618,
											"end": 3681,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 3618,
											"end": 3681,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3618,
											"end": 3681,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 3618,
											"end": 3681,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3618,
											"end": 3681,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 3618,
											"end": 3681,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3708,
											"end": 3709,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3699,
											"end": 3705,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3699,
											"end": 3709,
											"modifierDepth": 1,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3691,
											"end": 3746,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 3691,
											"end": 3746,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3691,
											"end": 3746,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3691,
											"end": 3746,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3691,
											"end": 3746,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3691,
											"end": 3746,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7000,
											"end": 7002,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3691,
											"end": 3746,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3691,
											"end": 3746,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3691,
											"end": 3746,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6982,
											"end": 7003,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6982,
											"end": 7003,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6982,
											"end": 7003,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7019,
											"end": 7037,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 7019,
											"end": 7037,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7019,
											"end": 7037,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7012,
											"end": 7042,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7078,
											"end": 7112,
											"name": "PUSH",
											"source": 18,
											"value": "696E76616C696420617267756D656E74202D206E6F2076616C7565206275726E"
										},
										{
											"begin": 7058,
											"end": 7076,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 7058,
											"end": 7076,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7058,
											"end": 7076,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7051,
											"end": 7113,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7130,
											"end": 7148,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 7130,
											"end": 7148,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3691,
											"end": 3746,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 6798,
											"end": 7154,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3691,
											"end": 3746,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 3691,
											"end": 3746,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3773,
											"end": 3781,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 3773,
											"end": 3788,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3756,
											"end": 3770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3798,
											"end": 3912,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 3798,
											"end": 3912,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3822,
											"end": 3828,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3818,
											"end": 3819,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3818,
											"end": 3828,
											"modifierDepth": 1,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 3798,
											"end": 3912,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3798,
											"end": 3912,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 3798,
											"end": 3912,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3857,
											"end": 3865,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 3866,
											"end": 3867,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3857,
											"end": 3868,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3857,
											"end": 3868,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3857,
											"end": 3868,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3857,
											"end": 3868,
											"modifierDepth": 1,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 3857,
											"end": 3868,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 3857,
											"end": 3868,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3857,
											"end": 3868,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 3857,
											"end": 3868,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 3857,
											"end": 3868,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3857,
											"end": 3868,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 3857,
											"end": 3868,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3857,
											"end": 3868,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3857,
											"end": 3868,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3857,
											"end": 3868,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3857,
											"end": 3868,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3857,
											"end": 3868,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3857,
											"end": 3868,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3857,
											"end": 3868,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3857,
											"end": 3868,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3857,
											"end": 3868,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3857,
											"end": 3868,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3849,
											"end": 3901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3849,
											"end": 3901,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B9248D1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3849,
											"end": 3901,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3849,
											"end": 3901,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5654,
											"end": 5686,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 5654,
											"end": 5686,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5654,
											"end": 5686,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3849,
											"end": 3901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3849,
											"end": 3901,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3849,
											"end": 3901,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5636,
											"end": 5687,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5703,
											"end": 5721,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 5703,
											"end": 5721,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5703,
											"end": 5721,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5696,
											"end": 5730,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 5696,
											"end": 5730,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5696,
											"end": 5730,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3857,
											"end": 3868,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3857,
											"end": 3868,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3857,
											"end": 3868,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3857,
											"end": 3868,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3849,
											"end": 3886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "372491A2"
										},
										{
											"begin": 3849,
											"end": 3886,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5609,
											"end": 5627,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 5609,
											"end": 5627,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3849,
											"end": 3901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3849,
											"end": 3901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3849,
											"end": 3901,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3849,
											"end": 3901,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3849,
											"end": 3901,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3849,
											"end": 3901,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3849,
											"end": 3901,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3849,
											"end": 3901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3849,
											"end": 3901,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3849,
											"end": 3901,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3849,
											"end": 3901,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 3849,
											"end": 3901,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3849,
											"end": 3901,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3849,
											"end": 3901,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3849,
											"end": 3901,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 3849,
											"end": 3901,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3849,
											"end": 3901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3849,
											"end": 3901,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3849,
											"end": 3901,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3849,
											"end": 3901,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 3849,
											"end": 3901,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3849,
											"end": 3901,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3849,
											"end": 3901,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 3849,
											"end": 3901,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 3849,
											"end": 3901,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3849,
											"end": 3901,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3849,
											"end": 3901,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3849,
											"end": 3901,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 3849,
											"end": 3901,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3849,
											"end": 3901,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3849,
											"end": 3901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3849,
											"end": 3901,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3849,
											"end": 3901,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 3849,
											"end": 3901,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3849,
											"end": 3901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3849,
											"end": 3901,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3849,
											"end": 3901,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 3849,
											"end": 3901,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3849,
											"end": 3901,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3849,
											"end": 3901,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3849,
											"end": 3901,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3849,
											"end": 3901,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3830,
											"end": 3833,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3830,
											"end": 3833,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3830,
											"end": 3833,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 3830,
											"end": 3833,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3830,
											"end": 3833,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 3830,
											"end": 3833,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3830,
											"end": 3833,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 3830,
											"end": 3833,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3830,
											"end": 3833,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3830,
											"end": 3833,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3830,
											"end": 3833,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3798,
											"end": 3912,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 3798,
											"end": 3912,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1974,
											"end": 2603,
											"name": "tag",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 1974,
											"end": 2603,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1334,
											"end": 1347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2059,
											"end": 2080,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2059,
											"end": 2080,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2051,
											"end": 2116,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 2051,
											"end": 2116,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2051,
											"end": 2116,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2051,
											"end": 2116,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2051,
											"end": 2116,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2051,
											"end": 2116,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2051,
											"end": 2116,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2051,
											"end": 2116,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2051,
											"end": 2116,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 2051,
											"end": 2116,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2051,
											"end": 2116,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 2051,
											"end": 2116,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2051,
											"end": 2116,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 2051,
											"end": 2116,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2134,
											"end": 2155,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2134,
											"end": 2155,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2134,
											"end": 2155,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2134,
											"end": 2155,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2134,
											"end": 2155,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2134,
											"end": 2155,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2134,
											"end": 2146,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 2134,
											"end": 2155,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2134,
											"end": 2155,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2134,
											"end": 2155,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2134,
											"end": 2155,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2134,
											"end": 2155,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2134,
											"end": 2155,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2134,
											"end": 2155,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 2134,
											"end": 2155,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2126,
											"end": 2176,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 2126,
											"end": 2176,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2126,
											"end": 2176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2126,
											"end": 2176,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2126,
											"end": 2176,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2126,
											"end": 2176,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2126,
											"end": 2176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2126,
											"end": 2176,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2126,
											"end": 2176,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7343,
											"end": 7364,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7400,
											"end": 7402,
											"name": "PUSH",
											"source": 18,
											"value": "10"
										},
										{
											"begin": 7380,
											"end": 7398,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 7380,
											"end": 7398,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7380,
											"end": 7398,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7373,
											"end": 7403,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B5BD91D5B19481B9BDD08189BDD5B99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7419,
											"end": 7437,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 7419,
											"end": 7437,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7419,
											"end": 7437,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7412,
											"end": 7458,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7475,
											"end": 7493,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 7475,
											"end": 7493,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2126,
											"end": 2176,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 7159,
											"end": 7499,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2126,
											"end": 2176,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 2126,
											"end": 2176,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2203,
											"end": 2211,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 2203,
											"end": 2218,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2186,
											"end": 2200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2228,
											"end": 2597,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 2228,
											"end": 2597,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2252,
											"end": 2258,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2248,
											"end": 2249,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2248,
											"end": 2258,
											"modifierDepth": 1,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2228,
											"end": 2597,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2228,
											"end": 2597,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 2228,
											"end": 2597,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2298,
											"end": 2305,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2283,
											"end": 2305,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2283,
											"end": 2291,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 2292,
											"end": 2293,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2283,
											"end": 2294,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2283,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2283,
											"end": 2294,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2283,
											"end": 2294,
											"modifierDepth": 1,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2283,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 2283,
											"end": 2294,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2283,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 2283,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 2283,
											"end": 2294,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2283,
											"end": 2294,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 2283,
											"end": 2294,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2283,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2283,
											"end": 2294,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2283,
											"end": 2294,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2283,
											"end": 2294,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2283,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2283,
											"end": 2294,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2283,
											"end": 2294,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2283,
											"end": 2294,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2283,
											"end": 2294,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2283,
											"end": 2294,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2283,
											"end": 2294,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2283,
											"end": 2305,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2279,
											"end": 2587,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 2279,
											"end": 2587,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2325,
											"end": 2373,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "694A5FB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2325,
											"end": 2373,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2325,
											"end": 2373,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2367,
											"end": 2371,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2325,
											"end": 2373,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 788,
											"end": 839,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2325,
											"end": 2358,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2325,
											"end": 2358,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2325,
											"end": 2358,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2325,
											"end": 2358,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "694A5FB"
										},
										{
											"begin": 2325,
											"end": 2358,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 761,
											"end": 779,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 761,
											"end": 779,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2373,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2373,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2405,
											"end": 2413,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 2423,
											"end": 2424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2414,
											"end": 2420,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2414,
											"end": 2424,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 2414,
											"end": 2424,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2414,
											"end": 2424,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2414,
											"end": 2424,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 2414,
											"end": 2424,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2414,
											"end": 2424,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 2414,
											"end": 2424,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2405,
											"end": 2425,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2405,
											"end": 2425,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2405,
											"end": 2425,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2405,
											"end": 2425,
											"modifierDepth": 1,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2405,
											"end": 2425,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 2405,
											"end": 2425,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2405,
											"end": 2425,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 2405,
											"end": 2425,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 2405,
											"end": 2425,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2405,
											"end": 2425,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 2405,
											"end": 2425,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2405,
											"end": 2425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2405,
											"end": 2425,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2405,
											"end": 2425,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2405,
											"end": 2425,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2405,
											"end": 2425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2405,
											"end": 2425,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2405,
											"end": 2425,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2405,
											"end": 2425,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2405,
											"end": 2425,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2405,
											"end": 2425,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2391,
											"end": 2399,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 2391,
											"end": 2402,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2391,
											"end": 2402,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2405,
											"end": 2425,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2405,
											"end": 2425,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2405,
											"end": 2425,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2405,
											"end": 2425,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2400,
											"end": 2401,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2400,
											"end": 2401,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2391,
											"end": 2402,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2391,
											"end": 2402,
											"modifierDepth": 1,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2391,
											"end": 2402,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 2391,
											"end": 2402,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2391,
											"end": 2402,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 2391,
											"end": 2402,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 2391,
											"end": 2402,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2391,
											"end": 2402,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 2391,
											"end": 2402,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2391,
											"end": 2402,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2391,
											"end": 2402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2391,
											"end": 2402,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2391,
											"end": 2402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2391,
											"end": 2402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2391,
											"end": 2402,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2391,
											"end": 2402,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2391,
											"end": 2402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2391,
											"end": 2425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2391,
											"end": 2425,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2391,
											"end": 2425,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2391,
											"end": 2425,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2391,
											"end": 2425,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2391,
											"end": 2425,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2391,
											"end": 2425,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2391,
											"end": 2425,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2391,
											"end": 2425,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2391,
											"end": 2425,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2391,
											"end": 2425,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2391,
											"end": 2425,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2391,
											"end": 2425,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2391,
											"end": 2425,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2391,
											"end": 2425,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2391,
											"end": 2425,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2443,
											"end": 2451,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 2443,
											"end": 2457,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2443,
											"end": 2457,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2443,
											"end": 2457,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2443,
											"end": 2457,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 2443,
											"end": 2457,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2443,
											"end": 2457,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 2443,
											"end": 2457,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 2443,
											"end": 2457,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2443,
											"end": 2457,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 2443,
											"end": 2457,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2443,
											"end": 2457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2443,
											"end": 2457,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2443,
											"end": 2457,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2443,
											"end": 2457,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2443,
											"end": 2457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2443,
											"end": 2457,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2443,
											"end": 2457,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2443,
											"end": 2457,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2443,
											"end": 2457,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2443,
											"end": 2457,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2443,
											"end": 2457,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2443,
											"end": 2457,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2443,
											"end": 2457,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2443,
											"end": 2457,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2443,
											"end": 2457,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2443,
											"end": 2457,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2443,
											"end": 2457,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2443,
											"end": 2457,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2443,
											"end": 2457,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2443,
											"end": 2457,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2443,
											"end": 2457,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2443,
											"end": 2457,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2443,
											"end": 2457,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2443,
											"end": 2457,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2475,
											"end": 2496,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2475,
											"end": 2496,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2475,
											"end": 2496,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2475,
											"end": 2496,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2475,
											"end": 2496,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2475,
											"end": 2487,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 2475,
											"end": 2496,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2475,
											"end": 2496,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2475,
											"end": 2496,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2475,
											"end": 2496,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2475,
											"end": 2496,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2475,
											"end": 2496,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2475,
											"end": 2496,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2475,
											"end": 2504,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2475,
											"end": 2504,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2475,
											"end": 2504,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2475,
											"end": 2504,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2475,
											"end": 2504,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2527,
											"end": 2549,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2475,
											"end": 2496,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2475,
											"end": 2496,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2527,
											"end": 2549,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "A1EE69F55C33D8467C69CA59CE2007A737A88603D75392972520BF67CB513B8"
										},
										{
											"begin": 2527,
											"end": 2549,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2527,
											"end": 2549,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 2228,
											"end": 2597,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2041,
											"end": 2603,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1974,
											"end": 2603,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1974,
											"end": 2603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2279,
											"end": 2587,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 2279,
											"end": 2587,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2260,
											"end": 2263,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2260,
											"end": 2263,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 2260,
											"end": 2263,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2260,
											"end": 2263,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 2260,
											"end": 2263,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2260,
											"end": 2263,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 2260,
											"end": 2263,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2260,
											"end": 2263,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2260,
											"end": 2263,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2260,
											"end": 2263,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2228,
											"end": 2597,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 2228,
											"end": 2597,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2228,
											"end": 2597,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 2228,
											"end": 2597,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2228,
											"end": 2597,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2041,
											"end": 2603,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1974,
											"end": 2603,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1974,
											"end": 2603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4908,
											"end": 5012,
											"name": "tag",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 4908,
											"end": 5012,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4962,
											"end": 4978,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 4997,
											"end": 5005,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "tag",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "tag",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4908,
											"end": 5012,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4908,
											"end": 5012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 574,
											"end": 644,
											"name": "tag",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 574,
											"end": 644,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3279,
											"end": 3298,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3301,
											"end": 3315,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3301,
											"end": 3315,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3380,
											"end": 3381,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3365,
											"end": 3381,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3346,
											"end": 3454,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3346,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 3346,
											"end": 3454,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3426,
											"end": 3430,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1736,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1736,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1736,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3436,
											"end": 3453,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7971,
											"end": 7973,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7953,
											"end": 7974,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8010,
											"end": 8012,
											"name": "PUSH",
											"source": 18,
											"value": "2E"
										},
										{
											"begin": 7990,
											"end": 8008,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 7990,
											"end": 8008,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7990,
											"end": 8008,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7983,
											"end": 8013,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8049,
											"end": 8083,
											"name": "PUSH",
											"source": 18,
											"value": "496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
										},
										{
											"begin": 8029,
											"end": 8047,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 8029,
											"end": 8047,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8029,
											"end": 8047,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8022,
											"end": 8084,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "191E481A5B9A5D1A585B1A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8100,
											"end": 8118,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 8100,
											"end": 8118,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8100,
											"end": 8118,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8093,
											"end": 8137,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8154,
											"end": 8173,
											"name": "PUSH",
											"source": 18,
											"value": "84"
										},
										{
											"begin": 8154,
											"end": 8173,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 7769,
											"end": 8179,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3536,
											"end": 3548,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3552,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3609,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 621,
											"end": 637,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 621,
											"end": 635,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 621,
											"end": 637,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 621,
											"end": 637,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 621,
											"end": 637,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3651,
											"end": 3665,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3697,
											"end": 3702,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 8336,
											"end": 8372,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8336,
											"end": 8372,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH",
											"source": 5,
											"value": "7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8324,
											"end": 8326,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8309,
											"end": 8327,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 8184,
											"end": 8378,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3269,
											"end": 3752,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 574,
											"end": 644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5125,
											"end": 5645,
											"name": "tag",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 5125,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5285,
											"end": 5293,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 5285,
											"end": 5300,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5252,
											"end": 5256,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5252,
											"end": 5256,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5252,
											"end": 5256,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5310,
											"end": 5618,
											"name": "tag",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 5310,
											"end": 5618,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5334,
											"end": 5340,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5330,
											"end": 5331,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5330,
											"end": 5340,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 5310,
											"end": 5618,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5310,
											"end": 5618,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 5310,
											"end": 5618,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5391,
											"end": 5399,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 5400,
											"end": 5401,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5391,
											"end": 5402,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5391,
											"end": 5402,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5391,
											"end": 5402,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5391,
											"end": 5402,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 5391,
											"end": 5402,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 5391,
											"end": 5402,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5391,
											"end": 5402,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 5391,
											"end": 5402,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 5391,
											"end": 5402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5391,
											"end": 5402,
											"name": "tag",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 5391,
											"end": 5402,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5391,
											"end": 5402,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5391,
											"end": 5402,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5391,
											"end": 5402,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5391,
											"end": 5402,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5391,
											"end": 5402,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5391,
											"end": 5402,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5391,
											"end": 5402,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5391,
											"end": 5402,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5391,
											"end": 5402,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5391,
											"end": 5402,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5383,
											"end": 5548,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5383,
											"end": 5548,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4EDF39"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5383,
											"end": 5548,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5383,
											"end": 5548,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8670,
											"end": 8685,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 8670,
											"end": 8685,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8670,
											"end": 8685,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 5383,
											"end": 5548,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5383,
											"end": 5548,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5383,
											"end": 5548,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8652,
											"end": 8686,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8722,
											"end": 8737,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 8722,
											"end": 8737,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8722,
											"end": 8737,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 8702,
											"end": 8720,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 8702,
											"end": 8720,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8702,
											"end": 8720,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8695,
											"end": 8738,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8754,
											"end": 8772,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 8754,
											"end": 8772,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8754,
											"end": 8772,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8747,
											"end": 8781,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 8747,
											"end": 8781,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8747,
											"end": 8781,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5525,
											"end": 5529,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 8797,
											"end": 8815,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 8797,
											"end": 8815,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8797,
											"end": 8815,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8790,
											"end": 8833,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5391,
											"end": 5402,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5391,
											"end": 5402,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5391,
											"end": 5402,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5391,
											"end": 5402,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5383,
											"end": 5415,
											"name": "PUSH",
											"source": 11,
											"value": "13B7CE4"
										},
										{
											"begin": 5383,
											"end": 5415,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8586,
											"end": 8605,
											"name": "PUSH",
											"source": 18,
											"value": "84"
										},
										{
											"begin": 8586,
											"end": 8605,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5383,
											"end": 5548,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5383,
											"end": 5548,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5383,
											"end": 5548,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5383,
											"end": 5548,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5383,
											"end": 5548,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5383,
											"end": 5548,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5383,
											"end": 5548,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5383,
											"end": 5548,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5383,
											"end": 5548,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 5383,
											"end": 5548,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 5383,
											"end": 5548,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5383,
											"end": 5548,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5383,
											"end": 5548,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5383,
											"end": 5548,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 5383,
											"end": 5548,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5383,
											"end": 5548,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5383,
											"end": 5548,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5383,
											"end": 5548,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5383,
											"end": 5548,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 5383,
											"end": 5548,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5383,
											"end": 5548,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5383,
											"end": 5548,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5383,
											"end": 5548,
											"name": "tag",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 5383,
											"end": 5548,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5383,
											"end": 5548,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5383,
											"end": 5548,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5383,
											"end": 5548,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5383,
											"end": 5548,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5383,
											"end": 5548,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5383,
											"end": 5548,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5383,
											"end": 5548,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5383,
											"end": 5548,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 5383,
											"end": 5548,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 5383,
											"end": 5548,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 5383,
											"end": 5548,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5383,
											"end": 5548,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5383,
											"end": 5548,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5383,
											"end": 5548,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5383,
											"end": 5548,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5383,
											"end": 5548,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5383,
											"end": 5548,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5383,
											"end": 5548,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5383,
											"end": 5548,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5383,
											"end": 5548,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5383,
											"end": 5548,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5383,
											"end": 5548,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5383,
											"end": 5548,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 5383,
											"end": 5548,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5383,
											"end": 5548,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5383,
											"end": 5548,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 5383,
											"end": 5548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5383,
											"end": 5548,
											"name": "tag",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 5383,
											"end": 5548,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5361,
											"end": 5608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 5361,
											"end": 5608,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5588,
											"end": 5593,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5581,
											"end": 5593,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5581,
											"end": 5593,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5581,
											"end": 5593,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5581,
											"end": 5593,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5581,
											"end": 5593,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 5581,
											"end": 5593,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5361,
											"end": 5608,
											"name": "tag",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 5361,
											"end": 5608,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5342,
											"end": 5345,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5342,
											"end": 5345,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 5342,
											"end": 5345,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5342,
											"end": 5345,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 5342,
											"end": 5345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5342,
											"end": 5345,
											"name": "tag",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 5342,
											"end": 5345,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5342,
											"end": 5345,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5342,
											"end": 5345,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5342,
											"end": 5345,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5310,
											"end": 5618,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 5310,
											"end": 5618,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5310,
											"end": 5618,
											"name": "tag",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 5310,
											"end": 5618,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5310,
											"end": 5618,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5634,
											"end": 5638,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5627,
											"end": 5638,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5627,
											"end": 5638,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5627,
											"end": 5638,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5125,
											"end": 5645,
											"name": "tag",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 5125,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5125,
											"end": 5645,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 5125,
											"end": 5645,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5125,
											"end": 5645,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5125,
											"end": 5645,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5125,
											"end": 5645,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5125,
											"end": 5645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3924,
											"end": 4737,
											"name": "tag",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 3924,
											"end": 4737,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1334,
											"end": 1347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4068,
											"end": 4089,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4068,
											"end": 4089,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4068,
											"end": 4089,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4068,
											"end": 4089,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4068,
											"end": 4089,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4068,
											"end": 4089,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4068,
											"end": 4080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 4068,
											"end": 4089,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4068,
											"end": 4089,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4068,
											"end": 4089,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4068,
											"end": 4089,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4068,
											"end": 4089,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4068,
											"end": 4089,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4068,
											"end": 4089,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 4068,
											"end": 4089,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4060,
											"end": 4119,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 4060,
											"end": 4119,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4060,
											"end": 4119,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4060,
											"end": 4119,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4060,
											"end": 4119,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4060,
											"end": 4119,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9328,
											"end": 9330,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4060,
											"end": 4119,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4060,
											"end": 4119,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4060,
											"end": 4119,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9310,
											"end": 9331,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9367,
											"end": 9369,
											"name": "PUSH",
											"source": 18,
											"value": "19"
										},
										{
											"begin": 9347,
											"end": 9365,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 9347,
											"end": 9365,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9347,
											"end": 9365,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9340,
											"end": 9370,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9406,
											"end": 9433,
											"name": "PUSH",
											"source": 18,
											"value": "63616C6C206F6E6C79206F6E20626F756E64206D6F64756C6500000000000000"
										},
										{
											"begin": 9386,
											"end": 9404,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 9386,
											"end": 9404,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9386,
											"end": 9404,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9379,
											"end": 9434,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9451,
											"end": 9469,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 9451,
											"end": 9469,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4060,
											"end": 4119,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 9126,
											"end": 9475,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4060,
											"end": 4119,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 4060,
											"end": 4119,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4183,
											"end": 4187,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4177,
											"end": 4188,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4250,
											"end": 4265,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4233,
											"end": 4248,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4214,
											"end": 4231,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4201,
											"end": 4266,
											"modifierDepth": 1,
											"name": "CALLDATACOPY",
											"source": 11
										},
										{
											"begin": 4510,
											"end": 4511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4487,
											"end": 4488,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4450,
											"end": 4465,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4411,
											"end": 4428,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4388,
											"end": 4389,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4359,
											"end": 4366,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4332,
											"end": 4337,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 4306,
											"end": 4529,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 4279,
											"end": 4658,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 4279,
											"end": 4658,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4583,
											"end": 4599,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4580,
											"end": 4581,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4577,
											"end": 4578,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4562,
											"end": 4600,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 4627,
											"end": 4643,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4624,
											"end": 4625,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4617,
											"end": 4644,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4279,
											"end": 4658,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 4279,
											"end": 4658,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4279,
											"end": 4658,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4701,
											"end": 4708,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4683,
											"end": 4730,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4683,
											"end": 4730,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20D79DE70ADCC6E9353D8A9A5646B46DC352710D0A310B1AD1F67FAECA7EF891"
										},
										{
											"begin": 4710,
											"end": 4729,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 4720,
											"end": 4728,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4720,
											"end": 4728,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4710,
											"end": 4719,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 4710,
											"end": 4729,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4710,
											"end": 4729,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 4710,
											"end": 4729,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4683,
											"end": 4730,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4683,
											"end": 4730,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9642,
											"end": 9675,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9642,
											"end": 9675,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 9642,
											"end": 9675,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 9624,
											"end": 9676,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9624,
											"end": 9676,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9612,
											"end": 9614,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 9597,
											"end": 9615,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4683,
											"end": 4730,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4683,
											"end": 4730,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4683,
											"end": 4730,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4683,
											"end": 4730,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4683,
											"end": 4730,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4683,
											"end": 4730,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4683,
											"end": 4730,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 3924,
											"end": 4737,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3924,
											"end": 4737,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3924,
											"end": 4737,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3924,
											"end": 4737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1334,
											"end": 1347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2402,
											"end": 2424,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2424,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2394,
											"end": 2467,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2394,
											"end": 2467,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2394,
											"end": 2467,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9889,
											"end": 9891,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2394,
											"end": 2467,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9871,
											"end": 9892,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9928,
											"end": 9930,
											"name": "PUSH",
											"source": 18,
											"value": "26"
										},
										{
											"begin": 9908,
											"end": 9926,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 9908,
											"end": 9926,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9908,
											"end": 9926,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9901,
											"end": 9931,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9967,
											"end": 10001,
											"name": "PUSH",
											"source": 18,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 9947,
											"end": 9965,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 9947,
											"end": 9965,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9947,
											"end": 9965,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9940,
											"end": 10002,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10018,
											"end": 10036,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 10018,
											"end": 10036,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10018,
											"end": 10036,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10011,
											"end": 10047,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10064,
											"end": 10083,
											"name": "PUSH",
											"source": 18,
											"value": "84"
										},
										{
											"begin": 10064,
											"end": 10083,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 9687,
											"end": 10089,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2505,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 2496,
											"end": 2504,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2495,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 2477,
											"end": 2505,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1599,
											"end": 1729,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1599,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1685,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10296,
											"end": 10298,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10278,
											"end": 10299,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10278,
											"end": 10299,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10278,
											"end": 10299,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10315,
											"end": 10333,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 10315,
											"end": 10333,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10315,
											"end": 10333,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10308,
											"end": 10338,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10374,
											"end": 10408,
											"name": "PUSH",
											"source": 18,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 10354,
											"end": 10372,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 10354,
											"end": 10372,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10354,
											"end": 10372,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10347,
											"end": 10409,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10426,
											"end": 10444,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 10426,
											"end": 10444,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 10094,
											"end": 10450,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2666,
											"end": 2853,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 2666,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "PUSH",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2806,
											"end": 2846,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2806,
											"end": 2846,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2806,
											"end": 2846,
											"name": "PUSH",
											"source": 4,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2806,
											"end": 2846,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2739,
											"end": 2755,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2739,
											"end": 2755,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2806,
											"end": 2846,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 2729,
											"end": 2853,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2853,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1003,
											"end": 1098,
											"name": "tag",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 1003,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 5366,
											"end": 5435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "tag",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1065,
											"end": 1091,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 1065,
											"end": 1089,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 1065,
											"end": 1091,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5651,
											"end": 5907,
											"name": "tag",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 5651,
											"end": 5907,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5742,
											"end": 5755,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5794,
											"end": 5795,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5775,
											"end": 5795,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5775,
											"end": 5795,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 5771,
											"end": 5901,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 5771,
											"end": 5901,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5848,
											"end": 5877,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5848,
											"end": 5877,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 5771,
											"end": 5901,
											"name": "tag",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 5771,
											"end": 5901,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5651,
											"end": 5907,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5651,
											"end": 5907,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5651,
											"end": 5907,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5651,
											"end": 5907,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5651,
											"end": 5907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1104,
											"end": 1215,
											"name": "tag",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 1104,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 5366,
											"end": 5435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "tag",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 1176,
											"end": 1208,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 18,
											"value": "299"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "303"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 18,
											"value": "303"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "305"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 18,
											"value": "305"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "241"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "299"
										},
										{
											"begin": 343,
											"end": 372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 383,
											"end": 637,
											"name": "tag",
											"source": 18,
											"value": "34"
										},
										{
											"begin": 383,
											"end": 637,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 451,
											"end": 457,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 459,
											"end": 465,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 512,
											"end": 514,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 509,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 491,
											"end": 498,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 487,
											"end": 510,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 483,
											"end": 515,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 480,
											"end": 532,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 480,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "308"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 528,
											"end": 529,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 526,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 518,
											"end": 530,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 480,
											"end": 532,
											"name": "tag",
											"source": 18,
											"value": "308"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "309"
										},
										{
											"begin": 570,
											"end": 579,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "299"
										},
										{
											"begin": 551,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 551,
											"end": 580,
											"name": "tag",
											"source": 18,
											"value": "309"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 541,
											"end": 580,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 627,
											"end": 629,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 612,
											"end": 630,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 612,
											"end": 630,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 612,
											"end": 630,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 612,
											"end": 630,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 599,
											"end": 631,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 599,
											"end": 631,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 383,
											"end": 637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 850,
											"end": 1178,
											"name": "tag",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 850,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 927,
											"end": 933,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 935,
											"end": 941,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 943,
											"end": 949,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 996,
											"end": 998,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 984,
											"end": 993,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 975,
											"end": 982,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 971,
											"end": 994,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 967,
											"end": 999,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 964,
											"end": 1016,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 964,
											"end": 1016,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "312"
										},
										{
											"begin": 964,
											"end": 1016,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1012,
											"end": 1013,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1009,
											"end": 1010,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 964,
											"end": 1016,
											"name": "tag",
											"source": 18,
											"value": "312"
										},
										{
											"begin": 964,
											"end": 1016,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1035,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "313"
										},
										{
											"begin": 1054,
											"end": 1063,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1035,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "299"
										},
										{
											"begin": 1035,
											"end": 1064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1035,
											"end": 1064,
											"name": "tag",
											"source": 18,
											"value": "313"
										},
										{
											"begin": 1035,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1025,
											"end": 1064,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1025,
											"end": 1064,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1083,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "314"
										},
										{
											"begin": 1117,
											"end": 1119,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1106,
											"end": 1115,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 1102,
											"end": 1120,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1083,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "299"
										},
										{
											"begin": 1083,
											"end": 1121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1083,
											"end": 1121,
											"name": "tag",
											"source": 18,
											"value": "314"
										},
										{
											"begin": 1083,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1073,
											"end": 1121,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1073,
											"end": 1121,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1168,
											"end": 1170,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1157,
											"end": 1166,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1153,
											"end": 1171,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1140,
											"end": 1172,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 1130,
											"end": 1172,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1130,
											"end": 1172,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 850,
											"end": 1178,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 850,
											"end": 1178,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 850,
											"end": 1178,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 850,
											"end": 1178,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 850,
											"end": 1178,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 850,
											"end": 1178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1375,
											"end": 2033,
											"name": "tag",
											"source": 18,
											"value": "63"
										},
										{
											"begin": 1375,
											"end": 2033,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1546,
											"end": 1548,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1598,
											"end": 1619,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1598,
											"end": 1619,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1598,
											"end": 1619,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1668,
											"end": 1681,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1668,
											"end": 1681,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1571,
											"end": 1589,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1571,
											"end": 1589,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1571,
											"end": 1589,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1690,
											"end": 1712,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1690,
											"end": 1712,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1690,
											"end": 1712,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1517,
											"end": 1521,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1517,
											"end": 1521,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1546,
											"end": 1548,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1769,
											"end": 1784,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1769,
											"end": 1784,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1769,
											"end": 1784,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1769,
											"end": 1784,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1743,
											"end": 1745,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1728,
											"end": 1746,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 1728,
											"end": 1746,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1728,
											"end": 1746,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1517,
											"end": 1521,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1812,
											"end": 2007,
											"name": "tag",
											"source": 18,
											"value": "317"
										},
										{
											"begin": 1812,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1826,
											"end": 1832,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1823,
											"end": 1824,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1820,
											"end": 1833,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 1812,
											"end": 2007,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1812,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "319"
										},
										{
											"begin": 1812,
											"end": 2007,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1891,
											"end": 1904,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1891,
											"end": 1904,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1887,
											"end": 1926,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1875,
											"end": 1927,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1875,
											"end": 1927,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1982,
											"end": 1997,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1982,
											"end": 1997,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1982,
											"end": 1997,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1982,
											"end": 1997,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1947,
											"end": 1959,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1947,
											"end": 1959,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1947,
											"end": 1959,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1947,
											"end": 1959,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1923,
											"end": 1924,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 1841,
											"end": 1850,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1812,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "317"
										},
										{
											"begin": 1812,
											"end": 2007,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1812,
											"end": 2007,
											"name": "tag",
											"source": 18,
											"value": "319"
										},
										{
											"begin": 1812,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2024,
											"end": 2027,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2024,
											"end": 2027,
											"name": "SWAP7",
											"source": 18
										},
										{
											"begin": 1375,
											"end": 2033,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1375,
											"end": 2033,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2038,
											"end": 2709,
											"name": "tag",
											"source": 18,
											"value": "72"
										},
										{
											"begin": 2038,
											"end": 2709,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2117,
											"end": 2123,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2125,
											"end": 2131,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2133,
											"end": 2139,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2186,
											"end": 2188,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2174,
											"end": 2183,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2165,
											"end": 2172,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 2161,
											"end": 2184,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2157,
											"end": 2189,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 2154,
											"end": 2206,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2154,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "321"
										},
										{
											"begin": 2154,
											"end": 2206,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2202,
											"end": 2203,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2199,
											"end": 2200,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2192,
											"end": 2204,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2154,
											"end": 2206,
											"name": "tag",
											"source": 18,
											"value": "321"
										},
										{
											"begin": 2154,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2242,
											"end": 2251,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2229,
											"end": 2252,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 2271,
											"end": 2289,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2312,
											"end": 2314,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2304,
											"end": 2310,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2301,
											"end": 2315,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 2298,
											"end": 2332,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2298,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "322"
										},
										{
											"begin": 2298,
											"end": 2332,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2328,
											"end": 2329,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2326,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2318,
											"end": 2330,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2298,
											"end": 2332,
											"name": "tag",
											"source": 18,
											"value": "322"
										},
										{
											"begin": 2298,
											"end": 2332,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2366,
											"end": 2372,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2355,
											"end": 2364,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 2351,
											"end": 2373,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2341,
											"end": 2373,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2341,
											"end": 2373,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2418,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 2404,
											"end": 2408,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 2400,
											"end": 2402,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2396,
											"end": 2409,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2392,
											"end": 2419,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 2382,
											"end": 2437,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "323"
										},
										{
											"begin": 2382,
											"end": 2437,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2433,
											"end": 2434,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2430,
											"end": 2431,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2423,
											"end": 2435,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2382,
											"end": 2437,
											"name": "tag",
											"source": 18,
											"value": "323"
										},
										{
											"begin": 2382,
											"end": 2437,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2473,
											"end": 2475,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2460,
											"end": 2476,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 2499,
											"end": 2501,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2491,
											"end": 2497,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2488,
											"end": 2502,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 2485,
											"end": 2519,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2485,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "324"
										},
										{
											"begin": 2485,
											"end": 2519,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2515,
											"end": 2516,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2512,
											"end": 2513,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2505,
											"end": 2517,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2485,
											"end": 2519,
											"name": "tag",
											"source": 18,
											"value": "324"
										},
										{
											"begin": 2485,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2562,
											"end": 2569,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 2555,
											"end": 2559,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2546,
											"end": 2552,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2542,
											"end": 2544,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2538,
											"end": 2553,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2534,
											"end": 2560,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2531,
											"end": 2570,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 2528,
											"end": 2587,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2528,
											"end": 2587,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "325"
										},
										{
											"begin": 2528,
											"end": 2587,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2583,
											"end": 2584,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2580,
											"end": 2581,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2573,
											"end": 2585,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2528,
											"end": 2587,
											"name": "tag",
											"source": 18,
											"value": "325"
										},
										{
											"begin": 2528,
											"end": 2587,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2614,
											"end": 2618,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2606,
											"end": 2619,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2606,
											"end": 2619,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2606,
											"end": 2619,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2606,
											"end": 2619,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2638,
											"end": 2644,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2663,
											"end": 2703,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "326"
										},
										{
											"begin": 2663,
											"end": 2703,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2682,
											"end": 2702,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 2682,
											"end": 2702,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2682,
											"end": 2702,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2663,
											"end": 2703,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "299"
										},
										{
											"begin": 2663,
											"end": 2703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2663,
											"end": 2703,
											"name": "tag",
											"source": 18,
											"value": "326"
										},
										{
											"begin": 2663,
											"end": 2703,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2653,
											"end": 2703,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2653,
											"end": 2703,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2038,
											"end": 2709,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2038,
											"end": 2709,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2038,
											"end": 2709,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2038,
											"end": 2709,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2038,
											"end": 2709,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2038,
											"end": 2709,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2714,
											"end": 3069,
											"name": "tag",
											"source": 18,
											"value": "83"
										},
										{
											"begin": 2714,
											"end": 3069,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2916,
											"end": 2918,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2898,
											"end": 2919,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2898,
											"end": 2919,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2898,
											"end": 2919,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2955,
											"end": 2957,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 2935,
											"end": 2953,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2935,
											"end": 2953,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2935,
											"end": 2953,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2928,
											"end": 2958,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2994,
											"end": 3027,
											"name": "PUSH",
											"source": 18,
											"value": "696E76616C696420617267756D656E74202D207A65726F206164647265737300"
										},
										{
											"begin": 2989,
											"end": 2991,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2974,
											"end": 2992,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2974,
											"end": 2992,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2967,
											"end": 3028,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3060,
											"end": 3062,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 3045,
											"end": 3063,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3045,
											"end": 3063,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2714,
											"end": 3069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4492,
											"end": 4964,
											"name": "tag",
											"source": 18,
											"value": "119"
										},
										{
											"begin": 4492,
											"end": 4964,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4694,
											"end": 4696,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4676,
											"end": 4697,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4676,
											"end": 4697,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4676,
											"end": 4697,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4733,
											"end": 4735,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 4713,
											"end": 4731,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4713,
											"end": 4731,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4713,
											"end": 4731,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4706,
											"end": 4736,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4772,
											"end": 4806,
											"name": "PUSH",
											"source": 18,
											"value": "6572726F72203A20746869732061646472657373206973206E6F74206120746F"
										},
										{
											"begin": 4767,
											"end": 4769,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 4752,
											"end": 4770,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4752,
											"end": 4770,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4745,
											"end": 4807,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4843,
											"end": 4877,
											"name": "PUSH",
											"source": 18,
											"value": "6B656E20626F756E6420746F2074686520636F6D706C69616E636520636F6E74"
										},
										{
											"begin": 4838,
											"end": 4840,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 4823,
											"end": 4841,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4823,
											"end": 4841,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4816,
											"end": 4878,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C9858DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4909,
											"end": 4912,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 4894,
											"end": 4913,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4894,
											"end": 4913,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4887,
											"end": 4922,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4954,
											"end": 4957,
											"name": "PUSH",
											"source": 18,
											"value": "A0"
										},
										{
											"begin": 4939,
											"end": 4958,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4939,
											"end": 4958,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4492,
											"end": 4964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5330,
											"end": 5457,
											"name": "tag",
											"source": 18,
											"value": "131"
										},
										{
											"begin": 5330,
											"end": 5457,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5391,
											"end": 5401,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B71"
										},
										{
											"begin": 5386,
											"end": 5389,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 5382,
											"end": 5402,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 5379,
											"end": 5380,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5372,
											"end": 5403,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5422,
											"end": 5426,
											"name": "PUSH",
											"source": 18,
											"value": "32"
										},
										{
											"begin": 5419,
											"end": 5420,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 5412,
											"end": 5427,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5446,
											"end": 5450,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 5443,
											"end": 5444,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5436,
											"end": 5451,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 5741,
											"end": 5868,
											"name": "tag",
											"source": 18,
											"value": "300"
										},
										{
											"begin": 5741,
											"end": 5868,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5802,
											"end": 5812,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B71"
										},
										{
											"begin": 5797,
											"end": 5800,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 5793,
											"end": 5813,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 5790,
											"end": 5791,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5783,
											"end": 5814,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5833,
											"end": 5837,
											"name": "PUSH",
											"source": 18,
											"value": "11"
										},
										{
											"begin": 5830,
											"end": 5831,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 5823,
											"end": 5838,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5857,
											"end": 5861,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 5854,
											"end": 5855,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5847,
											"end": 5862,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 5873,
											"end": 6008,
											"name": "tag",
											"source": 18,
											"value": "139"
										},
										{
											"begin": 5873,
											"end": 6008,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5912,
											"end": 5915,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5933,
											"end": 5950,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 5933,
											"end": 5950,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5933,
											"end": 5950,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5930,
											"end": 5973,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "339"
										},
										{
											"begin": 5930,
											"end": 5973,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 5953,
											"end": 5971,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "339"
										},
										{
											"begin": 5953,
											"end": 5971,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "300"
										},
										{
											"begin": 5953,
											"end": 5971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5953,
											"end": 5971,
											"name": "tag",
											"source": 18,
											"value": "339"
										},
										{
											"begin": 5953,
											"end": 5971,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6000,
											"end": 6001,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 5989,
											"end": 6002,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5989,
											"end": 6002,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5873,
											"end": 6008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7504,
											"end": 7632,
											"name": "tag",
											"source": 18,
											"value": "209"
										},
										{
											"begin": 7504,
											"end": 7632,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7571,
											"end": 7580,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7571,
											"end": 7580,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7571,
											"end": 7580,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 7592,
											"end": 7603,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7592,
											"end": 7603,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7592,
											"end": 7603,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 7589,
											"end": 7626,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 7589,
											"end": 7626,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "291"
										},
										{
											"begin": 7589,
											"end": 7626,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 7606,
											"end": 7624,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "291"
										},
										{
											"begin": 7606,
											"end": 7624,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "300"
										},
										{
											"begin": 7606,
											"end": 7624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7637,
											"end": 7764,
											"name": "tag",
											"source": 18,
											"value": "218"
										},
										{
											"begin": 7637,
											"end": 7764,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7698,
											"end": 7708,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B71"
										},
										{
											"begin": 7693,
											"end": 7696,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 7689,
											"end": 7709,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 7686,
											"end": 7687,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7679,
											"end": 7710,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7729,
											"end": 7733,
											"name": "PUSH",
											"source": 18,
											"value": "31"
										},
										{
											"begin": 7726,
											"end": 7727,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 7719,
											"end": 7734,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7753,
											"end": 7757,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 7750,
											"end": 7751,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7743,
											"end": 7758,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 8844,
											"end": 9121,
											"name": "tag",
											"source": 18,
											"value": "253"
										},
										{
											"begin": 8844,
											"end": 9121,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8911,
											"end": 8917,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8964,
											"end": 8966,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8952,
											"end": 8961,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8943,
											"end": 8950,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8939,
											"end": 8962,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 8935,
											"end": 8967,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 8932,
											"end": 8984,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 8932,
											"end": 8984,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "352"
										},
										{
											"begin": 8932,
											"end": 8984,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 8980,
											"end": 8981,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8977,
											"end": 8978,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 8970,
											"end": 8982,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 8932,
											"end": 8984,
											"name": "tag",
											"source": 18,
											"value": "352"
										},
										{
											"begin": 8932,
											"end": 8984,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9012,
											"end": 9021,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9006,
											"end": 9022,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 9065,
											"end": 9070,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 9058,
											"end": 9071,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 9051,
											"end": 9072,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 9044,
											"end": 9049,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9041,
											"end": 9073,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 9031,
											"end": 9091,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "241"
										},
										{
											"begin": 9031,
											"end": 9091,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 9087,
											"end": 9088,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9084,
											"end": 9085,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 9077,
											"end": 9089,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 10455,
											"end": 10862,
											"name": "tag",
											"source": 18,
											"value": "286"
										},
										{
											"begin": 10455,
											"end": 10862,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10657,
											"end": 10659,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 10639,
											"end": 10660,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 10639,
											"end": 10660,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10639,
											"end": 10660,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10696,
											"end": 10698,
											"name": "PUSH",
											"source": 18,
											"value": "2B"
										},
										{
											"begin": 10676,
											"end": 10694,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10676,
											"end": 10694,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10676,
											"end": 10694,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10669,
											"end": 10699,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10735,
											"end": 10769,
											"name": "PUSH",
											"source": 18,
											"value": "496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069"
										},
										{
											"begin": 10730,
											"end": 10732,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 10715,
											"end": 10733,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10715,
											"end": 10733,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10708,
											"end": 10770,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E697469616C697A696E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10801,
											"end": 10803,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 10786,
											"end": 10804,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10786,
											"end": 10804,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10779,
											"end": 10820,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10852,
											"end": 10855,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 10837,
											"end": 10856,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10837,
											"end": 10856,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10455,
											"end": 10862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										}
									]
								}
							},
							"sourceList": [
								"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
								"@onchain-id/solidity/contracts/interface/IERC734.sol",
								"@onchain-id/solidity/contracts/interface/IERC735.sol",
								"@onchain-id/solidity/contracts/interface/IIdentity.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"erc3643/erc3643/Compliance/modular/IModularCompliance.sol",
								"erc3643/erc3643/Compliance/modular/MCStorage.sol",
								"erc3643/erc3643/Compliance/modular/ModularCompliance.sol",
								"erc3643/erc3643/Compliance/modular/Modules/IModule.sol",
								"erc3643/erc3643/registry/interface/IClaimTopicsRegistry.sol",
								"erc3643/erc3643/registry/interface/IIdentityRegistry.sol",
								"erc3643/erc3643/registry/interface/IIdentityRegistryStorage.sol",
								"erc3643/erc3643/registry/interface/ITrustedIssuersRegistry.sol",
								"erc3643/erc3643/token/Itoken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addModule(address)": "1ed86f19",
							"bindToken(address)": "3ff5aa02",
							"callModuleFunction(bytes,address)": "efb22d33",
							"canTransfer(address,address,uint256)": "e46638e6",
							"created(address,uint256)": "5f8dead3",
							"destroyed(address,uint256)": "8d2ea772",
							"getModules()": "b2494df3",
							"getTokenBound()": "6a3edf28",
							"init()": "e1c7392a",
							"isModuleBound(address)": "a446d49f",
							"owner()": "8da5cb5b",
							"removeModule(address)": "a0632461",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"transferred(address,address,uint256)": "8baf29b4",
							"unbindToken(address)": "40db3b50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"}],\"name\":\"ModuleAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"ModuleInteraction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"}],\"name\":\"ModuleRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"TokenBound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"TokenUnbound\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"}],\"name\":\"addModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"bindToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"}],\"name\":\"callModuleFunction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"canTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"created\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"destroyed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getModules\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenBound\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"}],\"name\":\"isModuleBound\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"}],\"name\":\"removeModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferred\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"unbindToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":\"ModularCompliance\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\":{\"keccak256\":\"0xa7372faa967bc7eaedf66ec51907a21ca789123ad8a6fd371b32f2d2a6f27817\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dcf7cf65c7aff1f78a9071c47b05865c0fbce9d7c965430e8438ba7a451a2ba4\",\"dweb:/ipfs/QmViSrFA2KQpFeWssbJWQtdpa62A9MeEWaxqgs8dyPssga\"]},\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x419198390ae57e3a090a454452931ac8a6605acfd296809c43d4966c9cea2d19\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8f8c7d8d74a6e7dff2858abd7f10aefe1cc88bb629ec6a0c164e4043e2c70eb7\",\"dweb:/ipfs/QmRg2WFW8T2YEt1zJ7PGSAFxcu1L46pNWxm6MZbuN7M4Qc\"]},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"erc3643/erc3643/Compliance/modular/IModularCompliance.sol\":{\"keccak256\":\"0xb007145580f9c5680438044ffd012a318ed509a64fa5433aa32da0105fd385f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc436b728498c03721d6d1075b106951f879e0a98ed6819b48ef971f0d9beca0\",\"dweb:/ipfs/QmXZeLGRz1dKSUSizcCzWpKB9KL4cJBPLZr2GndVdDMZDd\"]},\"erc3643/erc3643/Compliance/modular/MCStorage.sol\":{\"keccak256\":\"0xc2f7353ffd1544ed9a32a686f08e19638cc8565ed11a813d82bb06b592cf1825\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1de12e376bc9dcbb70119a351a7b0d752b9554f8c3536bcfc07cee9a3e8462\",\"dweb:/ipfs/QmU46tA1a2c58kTv5J1XMCKutcQ6NotVSLLNGkzPgwwn4a\"]},\"erc3643/erc3643/Compliance/modular/ModularCompliance.sol\":{\"keccak256\":\"0xd208e1b327f50f83a5af720b5b98d29ab91669536a7e5cb043a0b8e0c88f842e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://7b7a39dd1b3a1bbf2e884867f7163871e0fb8a556ab03d05cc5a5aa91dacd9cc\",\"dweb:/ipfs/Qmc9LKoSbkjUCTn61zueGJiPx7MDPoyX4awpb6iE9YBtPM\"]},\"erc3643/erc3643/Compliance/modular/Modules/IModule.sol\":{\"keccak256\":\"0xe3d553f04d43623b2b8702292e44a09a47c3db736b0f5463de2b606c2eee7545\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://632ad70eca95a71a179c8c319b62fccb3b98a2cc04b24e10945a7d274bf2eba4\",\"dweb:/ipfs/QmNisz3w7zy73dcYKTfYG1SqtGqDheht3cCzPo4T9ZYeWH\"]},\"erc3643/erc3643/registry/interface/IClaimTopicsRegistry.sol\":{\"keccak256\":\"0x209963b4e545f78c8fbf76bd3779bedc134bd3f3419b4b8eb0af63249689f2ea\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b0633ef0e22df28c198104c5f076f927a3171b73b1e24ab28d8127c7ed191ce1\",\"dweb:/ipfs/QmT7QJHzkoBvx4Xp58BhL2PRhHMdtJKPNgcpvhBfPjnNyf\"]},\"erc3643/erc3643/registry/interface/IIdentityRegistry.sol\":{\"keccak256\":\"0x0a78c51c1a0b9adf7f90741828b7c48d504340f5c5753a8f45f867233b6e03c2\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://42dea7e5cb01a71df62c32eacf53d521dafa3177c5153ea98b47d2842378f219\",\"dweb:/ipfs/QmV4EjwueWYU8Dw2Erpps74esHUKbBr3Pmdx2zQUNXuMry\"]},\"erc3643/erc3643/registry/interface/IIdentityRegistryStorage.sol\":{\"keccak256\":\"0x1bceb5cfc0da1a742c663fe4425001ccbdb2112e7718173cfb3243088e5999bd\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b1f71e93952528462a65db44e568ac64a74ee01b44031f0c9e4ace353396827c\",\"dweb:/ipfs/QmcF5uQzZpFZ7qC53afv4osebpAYAHupUyrQD6nmv17E9U\"]},\"erc3643/erc3643/registry/interface/ITrustedIssuersRegistry.sol\":{\"keccak256\":\"0x461f5ba0f4e76ee6106a484a2d010009aa540202cb5c917a6ee9f91ae42351c2\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c6d8abd21d71763eade0cd28deb6f93e3fcbce49bfca2e2e2d8e983755534e34\",\"dweb:/ipfs/QmcYoXQ5AujdqVnJDjBSygDTibum4WMubZKeUt98uiT6P9\"]},\"erc3643/erc3643/token/Itoken.sol\":{\"keccak256\":\"0x5cd33a944e8ac78cd58e8a30d89680bbe693c15d9e232c796d3a1d4d5671094c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://cc262003af1e66af97860888c8d427a616337cb49cfdc5d310244db02e23782f\",\"dweb:/ipfs/QmRXQyHQWMkwC3XKuZdAnmtWHUZcfK6qfPByz94Rkvz5Jh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 462,
								"contract": "erc3643/erc3643/Compliance/modular/ModularCompliance.sol:ModularCompliance",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 465,
								"contract": "erc3643/erc3643/Compliance/modular/ModularCompliance.sol:ModularCompliance",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 995,
								"contract": "erc3643/erc3643/Compliance/modular/ModularCompliance.sol:ModularCompliance",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 334,
								"contract": "erc3643/erc3643/Compliance/modular/ModularCompliance.sol:ModularCompliance",
								"label": "_owner",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 454,
								"contract": "erc3643/erc3643/Compliance/modular/ModularCompliance.sol:ModularCompliance",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 1183,
								"contract": "erc3643/erc3643/Compliance/modular/ModularCompliance.sol:ModularCompliance",
								"label": "_tokenBound",
								"offset": 0,
								"slot": "101",
								"type": "t_address"
							},
							{
								"astId": 1187,
								"contract": "erc3643/erc3643/Compliance/modular/ModularCompliance.sol:ModularCompliance",
								"label": "_modules",
								"offset": 0,
								"slot": "102",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 1192,
								"contract": "erc3643/erc3643/Compliance/modular/ModularCompliance.sol:ModularCompliance",
								"label": "_moduleBound",
								"offset": 0,
								"slot": "103",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1196,
								"contract": "erc3643/erc3643/Compliance/modular/ModularCompliance.sol:ModularCompliance",
								"label": "__gap",
								"offset": 0,
								"slot": "104",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"erc3643/erc3643/Compliance/modular/Modules/IModule.sol": {
				"IModule": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_compliance",
									"type": "address"
								}
							],
							"name": "ComplianceBound",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_compliance",
									"type": "address"
								}
							],
							"name": "ComplianceUnbound",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_compliance",
									"type": "address"
								}
							],
							"name": "bindCompliance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_compliance",
									"type": "address"
								}
							],
							"name": "isComplianceBound",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "moduleBurnAction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_compliance",
									"type": "address"
								}
							],
							"name": "moduleCheck",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "moduleMintAction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "moduleTransferAction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_compliance",
									"type": "address"
								}
							],
							"name": "unbindCompliance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"bindCompliance(address)": "4a932544",
							"isComplianceBound(address)": "4cf4d295",
							"moduleBurnAction(address,uint256)": "372491a2",
							"moduleCheck(address,address,uint256,address)": "013b7ce4",
							"moduleMintAction(address,uint256)": "f104a8c9",
							"moduleTransferAction(address,address,uint256)": "2cb7e1ec",
							"unbindCompliance(address)": "0694a5fb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_compliance\",\"type\":\"address\"}],\"name\":\"ComplianceBound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_compliance\",\"type\":\"address\"}],\"name\":\"ComplianceUnbound\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_compliance\",\"type\":\"address\"}],\"name\":\"bindCompliance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_compliance\",\"type\":\"address\"}],\"name\":\"isComplianceBound\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"moduleBurnAction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_compliance\",\"type\":\"address\"}],\"name\":\"moduleCheck\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"moduleMintAction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"moduleTransferAction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_compliance\",\"type\":\"address\"}],\"name\":\"unbindCompliance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc3643/erc3643/Compliance/modular/Modules/IModule.sol\":\"IModule\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc3643/erc3643/Compliance/modular/Modules/IModule.sol\":{\"keccak256\":\"0xe3d553f04d43623b2b8702292e44a09a47c3db736b0f5463de2b606c2eee7545\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://632ad70eca95a71a179c8c319b62fccb3b98a2cc04b24e10945a7d274bf2eba4\",\"dweb:/ipfs/QmNisz3w7zy73dcYKTfYG1SqtGqDheht3cCzPo4T9ZYeWH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"erc3643/erc3643/registry/interface/IClaimTopicsRegistry.sol": {
				"IClaimTopicsRegistry": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "claimTopic",
									"type": "uint256"
								}
							],
							"name": "ClaimTopicAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "claimTopic",
									"type": "uint256"
								}
							],
							"name": "ClaimTopicRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_claimTopic",
									"type": "uint256"
								}
							],
							"name": "addClaimTopic",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getClaimTopics",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_claimTopic",
									"type": "uint256"
								}
							],
							"name": "removeClaimTopic",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addClaimTopic(uint256)": "c7b22551",
							"getClaimTopics()": "df09d604",
							"removeClaimTopic(uint256)": "08297846"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"}],\"name\":\"ClaimTopicAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"}],\"name\":\"ClaimTopicRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_claimTopic\",\"type\":\"uint256\"}],\"name\":\"addClaimTopic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getClaimTopics\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_claimTopic\",\"type\":\"uint256\"}],\"name\":\"removeClaimTopic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc3643/erc3643/registry/interface/IClaimTopicsRegistry.sol\":\"IClaimTopicsRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc3643/erc3643/registry/interface/IClaimTopicsRegistry.sol\":{\"keccak256\":\"0x209963b4e545f78c8fbf76bd3779bedc134bd3f3419b4b8eb0af63249689f2ea\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b0633ef0e22df28c198104c5f076f927a3171b73b1e24ab28d8127c7ed191ce1\",\"dweb:/ipfs/QmT7QJHzkoBvx4Xp58BhL2PRhHMdtJKPNgcpvhBfPjnNyf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"erc3643/erc3643/registry/interface/IIdentityRegistry.sol": {
				"IIdentityRegistry": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "claimTopicsRegistry",
									"type": "address"
								}
							],
							"name": "ClaimTopicsRegistrySet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "investorAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint16",
									"name": "country",
									"type": "uint16"
								}
							],
							"name": "CountryUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "investorAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "contract IIdentity",
									"name": "identity",
									"type": "address"
								}
							],
							"name": "IdentityRegistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "investorAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "contract IIdentity",
									"name": "identity",
									"type": "address"
								}
							],
							"name": "IdentityRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "identityStorage",
									"type": "address"
								}
							],
							"name": "IdentityStorageSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IIdentity",
									"name": "oldIdentity",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "contract IIdentity",
									"name": "newIdentity",
									"type": "address"
								}
							],
							"name": "IdentityUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "trustedIssuersRegistry",
									"type": "address"
								}
							],
							"name": "TrustedIssuersRegistrySet",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_userAddresses",
									"type": "address[]"
								},
								{
									"internalType": "contract IIdentity[]",
									"name": "_identities",
									"type": "address[]"
								},
								{
									"internalType": "uint16[]",
									"name": "_countries",
									"type": "uint16[]"
								}
							],
							"name": "batchRegisterIdentity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "contains",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "deleteIdentity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "identity",
							"outputs": [
								{
									"internalType": "contract IIdentity",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "identityStorage",
							"outputs": [
								{
									"internalType": "contract IIdentityRegistryStorage",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "investorCountry",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "isVerified",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "issuersRegistry",
							"outputs": [
								{
									"internalType": "contract ITrustedIssuersRegistry",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "contract IIdentity",
									"name": "_identity",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "_country",
									"type": "uint16"
								}
							],
							"name": "registerIdentity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_claimTopicsRegistry",
									"type": "address"
								}
							],
							"name": "setClaimTopicsRegistry",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_identityRegistryStorage",
									"type": "address"
								}
							],
							"name": "setIdentityRegistryStorage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_trustedIssuersRegistry",
									"type": "address"
								}
							],
							"name": "setTrustedIssuersRegistry",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "topicsRegistry",
							"outputs": [
								{
									"internalType": "contract IClaimTopicsRegistry",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "_country",
									"type": "uint16"
								}
							],
							"name": "updateCountry",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "contract IIdentity",
									"name": "_identity",
									"type": "address"
								}
							],
							"name": "updateIdentity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"batchRegisterIdentity(address[],address[],uint16[])": "653dc9f1",
							"contains(address)": "5dbe47e8",
							"deleteIdentity(address)": "a8d29d1d",
							"identity(address)": "f0eb5e54",
							"identityStorage()": "f11abfd8",
							"investorCountry(address)": "7e42683b",
							"isVerified(address)": "b9209e33",
							"issuersRegistry()": "b4f3fcb7",
							"registerIdentity(address,address,uint16)": "454a03e0",
							"setClaimTopicsRegistry(address)": "670af6a9",
							"setIdentityRegistryStorage(address)": "26d941ae",
							"setTrustedIssuersRegistry(address)": "e744d789",
							"topicsRegistry()": "3b3e12f4",
							"updateCountry(address,uint16)": "3b239a7f",
							"updateIdentity(address,address)": "8e098ca1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimTopicsRegistry\",\"type\":\"address\"}],\"name\":\"ClaimTopicsRegistrySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"country\",\"type\":\"uint16\"}],\"name\":\"CountryUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"identity\",\"type\":\"address\"}],\"name\":\"IdentityRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"identity\",\"type\":\"address\"}],\"name\":\"IdentityRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"identityStorage\",\"type\":\"address\"}],\"name\":\"IdentityStorageSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"oldIdentity\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"newIdentity\",\"type\":\"address\"}],\"name\":\"IdentityUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trustedIssuersRegistry\",\"type\":\"address\"}],\"name\":\"TrustedIssuersRegistrySet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_userAddresses\",\"type\":\"address[]\"},{\"internalType\":\"contract IIdentity[]\",\"name\":\"_identities\",\"type\":\"address[]\"},{\"internalType\":\"uint16[]\",\"name\":\"_countries\",\"type\":\"uint16[]\"}],\"name\":\"batchRegisterIdentity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"contains\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"deleteIdentity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"identity\",\"outputs\":[{\"internalType\":\"contract IIdentity\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"identityStorage\",\"outputs\":[{\"internalType\":\"contract IIdentityRegistryStorage\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"investorCountry\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"isVerified\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"issuersRegistry\",\"outputs\":[{\"internalType\":\"contract ITrustedIssuersRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"contract IIdentity\",\"name\":\"_identity\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_country\",\"type\":\"uint16\"}],\"name\":\"registerIdentity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_claimTopicsRegistry\",\"type\":\"address\"}],\"name\":\"setClaimTopicsRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_identityRegistryStorage\",\"type\":\"address\"}],\"name\":\"setIdentityRegistryStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trustedIssuersRegistry\",\"type\":\"address\"}],\"name\":\"setTrustedIssuersRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"topicsRegistry\",\"outputs\":[{\"internalType\":\"contract IClaimTopicsRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_country\",\"type\":\"uint16\"}],\"name\":\"updateCountry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"contract IIdentity\",\"name\":\"_identity\",\"type\":\"address\"}],\"name\":\"updateIdentity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc3643/erc3643/registry/interface/IIdentityRegistry.sol\":\"IIdentityRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\":{\"keccak256\":\"0xa7372faa967bc7eaedf66ec51907a21ca789123ad8a6fd371b32f2d2a6f27817\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dcf7cf65c7aff1f78a9071c47b05865c0fbce9d7c965430e8438ba7a451a2ba4\",\"dweb:/ipfs/QmViSrFA2KQpFeWssbJWQtdpa62A9MeEWaxqgs8dyPssga\"]},\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x419198390ae57e3a090a454452931ac8a6605acfd296809c43d4966c9cea2d19\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8f8c7d8d74a6e7dff2858abd7f10aefe1cc88bb629ec6a0c164e4043e2c70eb7\",\"dweb:/ipfs/QmRg2WFW8T2YEt1zJ7PGSAFxcu1L46pNWxm6MZbuN7M4Qc\"]},\"erc3643/erc3643/registry/interface/IClaimTopicsRegistry.sol\":{\"keccak256\":\"0x209963b4e545f78c8fbf76bd3779bedc134bd3f3419b4b8eb0af63249689f2ea\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b0633ef0e22df28c198104c5f076f927a3171b73b1e24ab28d8127c7ed191ce1\",\"dweb:/ipfs/QmT7QJHzkoBvx4Xp58BhL2PRhHMdtJKPNgcpvhBfPjnNyf\"]},\"erc3643/erc3643/registry/interface/IIdentityRegistry.sol\":{\"keccak256\":\"0x0a78c51c1a0b9adf7f90741828b7c48d504340f5c5753a8f45f867233b6e03c2\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://42dea7e5cb01a71df62c32eacf53d521dafa3177c5153ea98b47d2842378f219\",\"dweb:/ipfs/QmV4EjwueWYU8Dw2Erpps74esHUKbBr3Pmdx2zQUNXuMry\"]},\"erc3643/erc3643/registry/interface/IIdentityRegistryStorage.sol\":{\"keccak256\":\"0x1bceb5cfc0da1a742c663fe4425001ccbdb2112e7718173cfb3243088e5999bd\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b1f71e93952528462a65db44e568ac64a74ee01b44031f0c9e4ace353396827c\",\"dweb:/ipfs/QmcF5uQzZpFZ7qC53afv4osebpAYAHupUyrQD6nmv17E9U\"]},\"erc3643/erc3643/registry/interface/ITrustedIssuersRegistry.sol\":{\"keccak256\":\"0x461f5ba0f4e76ee6106a484a2d010009aa540202cb5c917a6ee9f91ae42351c2\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c6d8abd21d71763eade0cd28deb6f93e3fcbce49bfca2e2e2d8e983755534e34\",\"dweb:/ipfs/QmcYoXQ5AujdqVnJDjBSygDTibum4WMubZKeUt98uiT6P9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"erc3643/erc3643/registry/interface/IIdentityRegistryStorage.sol": {
				"IIdentityRegistryStorage": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "investorAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint16",
									"name": "country",
									"type": "uint16"
								}
							],
							"name": "CountryModified",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IIdentity",
									"name": "oldIdentity",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "contract IIdentity",
									"name": "newIdentity",
									"type": "address"
								}
							],
							"name": "IdentityModified",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "identityRegistry",
									"type": "address"
								}
							],
							"name": "IdentityRegistryBound",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "identityRegistry",
									"type": "address"
								}
							],
							"name": "IdentityRegistryUnbound",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "investorAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "contract IIdentity",
									"name": "identity",
									"type": "address"
								}
							],
							"name": "IdentityStored",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "investorAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "contract IIdentity",
									"name": "identity",
									"type": "address"
								}
							],
							"name": "IdentityUnstored",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "contract IIdentity",
									"name": "_identity",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "_country",
									"type": "uint16"
								}
							],
							"name": "addIdentityToStorage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_identityRegistry",
									"type": "address"
								}
							],
							"name": "bindIdentityRegistry",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "linkedIdentityRegistries",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "contract IIdentity",
									"name": "_identity",
									"type": "address"
								}
							],
							"name": "modifyStoredIdentity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "_country",
									"type": "uint16"
								}
							],
							"name": "modifyStoredInvestorCountry",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "removeIdentityFromStorage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "storedIdentity",
							"outputs": [
								{
									"internalType": "contract IIdentity",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "storedInvestorCountry",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_identityRegistry",
									"type": "address"
								}
							],
							"name": "unbindIdentityRegistry",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addIdentityToStorage(address,address,uint16)": "a53410dd",
							"bindIdentityRegistry(address)": "690a49f9",
							"linkedIdentityRegistries()": "bf9eb959",
							"modifyStoredIdentity(address,address)": "e805cf86",
							"modifyStoredInvestorCountry(address,uint16)": "9f3418d5",
							"removeIdentityFromStorage(address)": "cf191bcd",
							"storedIdentity(address)": "7988d3a5",
							"storedInvestorCountry(address)": "727e13bc",
							"unbindIdentityRegistry(address)": "97a012f7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"country\",\"type\":\"uint16\"}],\"name\":\"CountryModified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"oldIdentity\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"newIdentity\",\"type\":\"address\"}],\"name\":\"IdentityModified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"identityRegistry\",\"type\":\"address\"}],\"name\":\"IdentityRegistryBound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"identityRegistry\",\"type\":\"address\"}],\"name\":\"IdentityRegistryUnbound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"identity\",\"type\":\"address\"}],\"name\":\"IdentityStored\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"identity\",\"type\":\"address\"}],\"name\":\"IdentityUnstored\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"contract IIdentity\",\"name\":\"_identity\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_country\",\"type\":\"uint16\"}],\"name\":\"addIdentityToStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_identityRegistry\",\"type\":\"address\"}],\"name\":\"bindIdentityRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"linkedIdentityRegistries\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"contract IIdentity\",\"name\":\"_identity\",\"type\":\"address\"}],\"name\":\"modifyStoredIdentity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_country\",\"type\":\"uint16\"}],\"name\":\"modifyStoredInvestorCountry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"removeIdentityFromStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"storedIdentity\",\"outputs\":[{\"internalType\":\"contract IIdentity\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"storedInvestorCountry\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_identityRegistry\",\"type\":\"address\"}],\"name\":\"unbindIdentityRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addIdentityToStorage(address,address,uint16)\":{\"notice\":\"functions\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc3643/erc3643/registry/interface/IIdentityRegistryStorage.sol\":\"IIdentityRegistryStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x419198390ae57e3a090a454452931ac8a6605acfd296809c43d4966c9cea2d19\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8f8c7d8d74a6e7dff2858abd7f10aefe1cc88bb629ec6a0c164e4043e2c70eb7\",\"dweb:/ipfs/QmRg2WFW8T2YEt1zJ7PGSAFxcu1L46pNWxm6MZbuN7M4Qc\"]},\"erc3643/erc3643/registry/interface/IIdentityRegistryStorage.sol\":{\"keccak256\":\"0x1bceb5cfc0da1a742c663fe4425001ccbdb2112e7718173cfb3243088e5999bd\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b1f71e93952528462a65db44e568ac64a74ee01b44031f0c9e4ace353396827c\",\"dweb:/ipfs/QmcF5uQzZpFZ7qC53afv4osebpAYAHupUyrQD6nmv17E9U\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"addIdentityToStorage(address,address,uint16)": {
								"notice": "functions"
							}
						},
						"version": 1
					}
				}
			},
			"erc3643/erc3643/registry/interface/ITrustedIssuersRegistry.sol": {
				"ITrustedIssuersRegistry": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IClaimIssuer",
									"name": "trustedIssuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "claimTopics",
									"type": "uint256[]"
								}
							],
							"name": "ClaimTopicsUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IClaimIssuer",
									"name": "trustedIssuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "claimTopics",
									"type": "uint256[]"
								}
							],
							"name": "TrustedIssuerAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IClaimIssuer",
									"name": "trustedIssuer",
									"type": "address"
								}
							],
							"name": "TrustedIssuerRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "contract IClaimIssuer",
									"name": "_trustedIssuer",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "_claimTopics",
									"type": "uint256[]"
								}
							],
							"name": "addTrustedIssuer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IClaimIssuer",
									"name": "_trustedIssuer",
									"type": "address"
								}
							],
							"name": "getTrustedIssuerClaimTopics",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTrustedIssuers",
							"outputs": [
								{
									"internalType": "contract IClaimIssuer[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "claimTopic",
									"type": "uint256"
								}
							],
							"name": "getTrustedIssuersForClaimTopic",
							"outputs": [
								{
									"internalType": "contract IClaimIssuer[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_issuer",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_claimTopic",
									"type": "uint256"
								}
							],
							"name": "hasClaimTopic",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_issuer",
									"type": "address"
								}
							],
							"name": "isTrustedIssuer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IClaimIssuer",
									"name": "_trustedIssuer",
									"type": "address"
								}
							],
							"name": "removeTrustedIssuer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IClaimIssuer",
									"name": "_trustedIssuer",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "_claimTopics",
									"type": "uint256[]"
								}
							],
							"name": "updateIssuerClaimTopics",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addTrustedIssuer(address,uint256[])": "9f63ea98",
							"getTrustedIssuerClaimTopics(address)": "c28fb278",
							"getTrustedIssuers()": "d9dd24c5",
							"getTrustedIssuersForClaimTopic(uint256)": "52c111d1",
							"hasClaimTopic(address,uint256)": "34a89987",
							"isTrustedIssuer(address)": "ef2ed1a4",
							"removeTrustedIssuer(address)": "b93d28eb",
							"updateIssuerClaimTopics(address,uint256[])": "04bc7e84"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IClaimIssuer\",\"name\":\"trustedIssuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"claimTopics\",\"type\":\"uint256[]\"}],\"name\":\"ClaimTopicsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IClaimIssuer\",\"name\":\"trustedIssuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"claimTopics\",\"type\":\"uint256[]\"}],\"name\":\"TrustedIssuerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IClaimIssuer\",\"name\":\"trustedIssuer\",\"type\":\"address\"}],\"name\":\"TrustedIssuerRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_trustedIssuer\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_claimTopics\",\"type\":\"uint256[]\"}],\"name\":\"addTrustedIssuer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_trustedIssuer\",\"type\":\"address\"}],\"name\":\"getTrustedIssuerClaimTopics\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTrustedIssuers\",\"outputs\":[{\"internalType\":\"contract IClaimIssuer[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"}],\"name\":\"getTrustedIssuersForClaimTopic\",\"outputs\":[{\"internalType\":\"contract IClaimIssuer[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_issuer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_claimTopic\",\"type\":\"uint256\"}],\"name\":\"hasClaimTopic\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_issuer\",\"type\":\"address\"}],\"name\":\"isTrustedIssuer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_trustedIssuer\",\"type\":\"address\"}],\"name\":\"removeTrustedIssuer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_trustedIssuer\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_claimTopics\",\"type\":\"uint256[]\"}],\"name\":\"updateIssuerClaimTopics\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc3643/erc3643/registry/interface/ITrustedIssuersRegistry.sol\":\"ITrustedIssuersRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\":{\"keccak256\":\"0xa7372faa967bc7eaedf66ec51907a21ca789123ad8a6fd371b32f2d2a6f27817\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dcf7cf65c7aff1f78a9071c47b05865c0fbce9d7c965430e8438ba7a451a2ba4\",\"dweb:/ipfs/QmViSrFA2KQpFeWssbJWQtdpa62A9MeEWaxqgs8dyPssga\"]},\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x419198390ae57e3a090a454452931ac8a6605acfd296809c43d4966c9cea2d19\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8f8c7d8d74a6e7dff2858abd7f10aefe1cc88bb629ec6a0c164e4043e2c70eb7\",\"dweb:/ipfs/QmRg2WFW8T2YEt1zJ7PGSAFxcu1L46pNWxm6MZbuN7M4Qc\"]},\"erc3643/erc3643/registry/interface/ITrustedIssuersRegistry.sol\":{\"keccak256\":\"0x461f5ba0f4e76ee6106a484a2d010009aa540202cb5c917a6ee9f91ae42351c2\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c6d8abd21d71763eade0cd28deb6f93e3fcbce49bfca2e2e2d8e983755534e34\",\"dweb:/ipfs/QmcYoXQ5AujdqVnJDjBSygDTibum4WMubZKeUt98uiT6P9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"erc3643/erc3643/token/Itoken.sol": {
				"IToken": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "bool",
									"name": "_isFrozen",
									"type": "bool"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "AddressFrozen",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_compliance",
									"type": "address"
								}
							],
							"name": "ComplianceAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_identityRegistry",
									"type": "address"
								}
							],
							"name": "IdentityRegistryAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_lostWallet",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_newWallet",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_investorOnchainID",
									"type": "address"
								}
							],
							"name": "RecoverySuccess",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "TokensFrozen",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "TokensUnfrozen",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "string",
									"name": "_newName",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "string",
									"name": "_newSymbol",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "_newDecimals",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "_newVersion",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_newOnchainID",
									"type": "address"
								}
							],
							"name": "UpdatedTokenInformation",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_userAddresses",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_amounts",
									"type": "uint256[]"
								}
							],
							"name": "batchBurn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_fromList",
									"type": "address[]"
								},
								{
									"internalType": "address[]",
									"name": "_toList",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_amounts",
									"type": "uint256[]"
								}
							],
							"name": "batchForcedTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_userAddresses",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_amounts",
									"type": "uint256[]"
								}
							],
							"name": "batchFreezePartialTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_toList",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_amounts",
									"type": "uint256[]"
								}
							],
							"name": "batchMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_userAddresses",
									"type": "address[]"
								},
								{
									"internalType": "bool[]",
									"name": "_freeze",
									"type": "bool[]"
								}
							],
							"name": "batchSetAddressFrozen",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_toList",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_amounts",
									"type": "uint256[]"
								}
							],
							"name": "batchTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_userAddresses",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_amounts",
									"type": "uint256[]"
								}
							],
							"name": "batchUnfreezePartialTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "compliance",
							"outputs": [
								{
									"internalType": "contract IModularCompliance",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "forcedTransfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "freezePartialTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "getFrozenTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "identityRegistry",
							"outputs": [
								{
									"internalType": "contract IIdentityRegistry",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "isFrozen",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "onchainID",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_lostWallet",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_newWallet",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_investorOnchainID",
									"type": "address"
								}
							],
							"name": "recoveryAddress",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_freeze",
									"type": "bool"
								}
							],
							"name": "setAddressFrozen",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_compliance",
									"type": "address"
								}
							],
							"name": "setCompliance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_identityRegistry",
									"type": "address"
								}
							],
							"name": "setIdentityRegistry",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								}
							],
							"name": "setName",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_onchainID",
									"type": "address"
								}
							],
							"name": "setOnchainID",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								}
							],
							"name": "setSymbol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "unfreezePartialTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "interface",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"batchBurn(address[],uint256[])": "4a6cc677",
							"batchForcedTransfer(address[],address[],uint256[])": "42a47abc",
							"batchFreezePartialTokens(address[],uint256[])": "fc7e5fa8",
							"batchMint(address[],uint256[])": "68573107",
							"batchSetAddressFrozen(address[],bool[])": "1a7af379",
							"batchTransfer(address[],uint256[])": "88d695b2",
							"batchUnfreezePartialTokens(address[],uint256[])": "4710362d",
							"burn(address,uint256)": "9dc29fac",
							"compliance()": "6290865d",
							"decimals()": "313ce567",
							"forcedTransfer(address,address,uint256)": "9fc1d0e7",
							"freezePartialTokens(address,uint256)": "125c4a33",
							"getFrozenTokens(address)": "158b1a57",
							"identityRegistry()": "134e18f4",
							"isFrozen(address)": "e5839836",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"onchainID()": "aba63705",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"recoveryAddress(address,address,address)": "9285948a",
							"setAddressFrozen(address,bool)": "c69c09cf",
							"setCompliance(address)": "f8981789",
							"setIdentityRegistry(address)": "cbf3f861",
							"setName(string)": "c47f0027",
							"setOnchainID(address)": "3d1ddc5b",
							"setSymbol(string)": "b84c8246",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"unfreezePartialTokens(address,uint256)": "1fe56f7d",
							"unpause()": "3f4ba83a",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"_isFrozen\",\"type\":\"bool\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"AddressFrozen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_compliance\",\"type\":\"address\"}],\"name\":\"ComplianceAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_identityRegistry\",\"type\":\"address\"}],\"name\":\"IdentityRegistryAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_lostWallet\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_newWallet\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_investorOnchainID\",\"type\":\"address\"}],\"name\":\"RecoverySuccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"TokensFrozen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"TokensUnfrozen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"_newName\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"_newSymbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"_newDecimals\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_newVersion\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_newOnchainID\",\"type\":\"address\"}],\"name\":\"UpdatedTokenInformation\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_userAddresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"batchBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_fromList\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_toList\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"batchForcedTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_userAddresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"batchFreezePartialTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_toList\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"batchMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_userAddresses\",\"type\":\"address[]\"},{\"internalType\":\"bool[]\",\"name\":\"_freeze\",\"type\":\"bool[]\"}],\"name\":\"batchSetAddressFrozen\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_toList\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"batchTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_userAddresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"batchUnfreezePartialTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"compliance\",\"outputs\":[{\"internalType\":\"contract IModularCompliance\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"forcedTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"freezePartialTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"getFrozenTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"identityRegistry\",\"outputs\":[{\"internalType\":\"contract IIdentityRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"isFrozen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"onchainID\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lostWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_newWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_investorOnchainID\",\"type\":\"address\"}],\"name\":\"recoveryAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_freeze\",\"type\":\"bool\"}],\"name\":\"setAddressFrozen\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_compliance\",\"type\":\"address\"}],\"name\":\"setCompliance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_identityRegistry\",\"type\":\"address\"}],\"name\":\"setIdentityRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"setName\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_onchainID\",\"type\":\"address\"}],\"name\":\"setOnchainID\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"name\":\"setSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"unfreezePartialTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"interface\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc3643/erc3643/token/Itoken.sol\":\"IToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\":{\"keccak256\":\"0xa7372faa967bc7eaedf66ec51907a21ca789123ad8a6fd371b32f2d2a6f27817\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dcf7cf65c7aff1f78a9071c47b05865c0fbce9d7c965430e8438ba7a451a2ba4\",\"dweb:/ipfs/QmViSrFA2KQpFeWssbJWQtdpa62A9MeEWaxqgs8dyPssga\"]},\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x419198390ae57e3a090a454452931ac8a6605acfd296809c43d4966c9cea2d19\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8f8c7d8d74a6e7dff2858abd7f10aefe1cc88bb629ec6a0c164e4043e2c70eb7\",\"dweb:/ipfs/QmRg2WFW8T2YEt1zJ7PGSAFxcu1L46pNWxm6MZbuN7M4Qc\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"erc3643/erc3643/Compliance/modular/IModularCompliance.sol\":{\"keccak256\":\"0xb007145580f9c5680438044ffd012a318ed509a64fa5433aa32da0105fd385f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc436b728498c03721d6d1075b106951f879e0a98ed6819b48ef971f0d9beca0\",\"dweb:/ipfs/QmXZeLGRz1dKSUSizcCzWpKB9KL4cJBPLZr2GndVdDMZDd\"]},\"erc3643/erc3643/registry/interface/IClaimTopicsRegistry.sol\":{\"keccak256\":\"0x209963b4e545f78c8fbf76bd3779bedc134bd3f3419b4b8eb0af63249689f2ea\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b0633ef0e22df28c198104c5f076f927a3171b73b1e24ab28d8127c7ed191ce1\",\"dweb:/ipfs/QmT7QJHzkoBvx4Xp58BhL2PRhHMdtJKPNgcpvhBfPjnNyf\"]},\"erc3643/erc3643/registry/interface/IIdentityRegistry.sol\":{\"keccak256\":\"0x0a78c51c1a0b9adf7f90741828b7c48d504340f5c5753a8f45f867233b6e03c2\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://42dea7e5cb01a71df62c32eacf53d521dafa3177c5153ea98b47d2842378f219\",\"dweb:/ipfs/QmV4EjwueWYU8Dw2Erpps74esHUKbBr3Pmdx2zQUNXuMry\"]},\"erc3643/erc3643/registry/interface/IIdentityRegistryStorage.sol\":{\"keccak256\":\"0x1bceb5cfc0da1a742c663fe4425001ccbdb2112e7718173cfb3243088e5999bd\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b1f71e93952528462a65db44e568ac64a74ee01b44031f0c9e4ace353396827c\",\"dweb:/ipfs/QmcF5uQzZpFZ7qC53afv4osebpAYAHupUyrQD6nmv17E9U\"]},\"erc3643/erc3643/registry/interface/ITrustedIssuersRegistry.sol\":{\"keccak256\":\"0x461f5ba0f4e76ee6106a484a2d010009aa540202cb5c917a6ee9f91ae42351c2\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c6d8abd21d71763eade0cd28deb6f93e3fcbce49bfca2e2e2d8e983755534e34\",\"dweb:/ipfs/QmcYoXQ5AujdqVnJDjBSygDTibum4WMubZKeUt98uiT6P9\"]},\"erc3643/erc3643/token/Itoken.sol\":{\"keccak256\":\"0x5cd33a944e8ac78cd58e8a30d89680bbe693c15d9e232c796d3a1d4d5671094c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://cc262003af1e66af97860888c8d427a616337cb49cfdc5d310244db02e23782f\",\"dweb:/ipfs/QmRXQyHQWMkwC3XKuZdAnmtWHUZcfK6qfPByz94Rkvz5Jh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol": {
				"ast": {
					"absolutePath": "@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
					"exportedSymbols": {
						"IClaimIssuer": [
							59
						],
						"IERC734": [
							206
						],
						"IERC735": [
							314
						],
						"IIdentity": [
							323
						]
					},
					"id": 60,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:0"
						},
						{
							"absolutePath": "@onchain-id/solidity/contracts/interface/IIdentity.sol",
							"file": "./IIdentity.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 60,
							"sourceUnit": 324,
							"src": "61:25:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "IIdentity",
										"nameLocations": [
											"114:9:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 323,
										"src": "114:9:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "114:9:0"
								}
							],
							"canonicalName": "IClaimIssuer",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 59,
							"linearizedBaseContracts": [
								59,
								323,
								314,
								206
							],
							"name": "IClaimIssuer",
							"nameLocation": "98:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 5,
										"nodeType": "StructuredDocumentation",
										"src": "131:126:0",
										"text": " @dev Emitted when a claim is revoked.\n Specification: MUST be triggered when revoking a claim."
									},
									"eventSelector": "7f484e37f24c0a92f81dd74afa3027b3ea31f2e9fb6b9fa29fe9865f81ac5569",
									"id": 9,
									"name": "ClaimRevoked",
									"nameLocation": "268:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "295:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "281:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 6,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "281:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "280:25:0"
									},
									"src": "262:44:0"
								},
								{
									"documentation": {
										"id": 10,
										"nodeType": "StructuredDocumentation",
										"src": "312:351:0",
										"text": " @dev Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\n @notice will fetch the claim from the identity contract (unsafe).\n @param _claimId the id of the claim\n @param _identity the address of the identity contract\n @return isRevoked true when the claim is revoked"
									},
									"functionSelector": "73c33708",
									"id": 19,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeClaim",
									"nameLocation": "677:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "_claimId",
												"nameLocation": "697:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "689:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 11,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "689:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "_identity",
												"nameLocation": "715:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "707:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "707:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "688:37:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "743:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "743:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "742:6:0"
									},
									"scope": 59,
									"src": "668:81:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "755:169:0",
										"text": " @dev Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\n @param signature the signature of the claim"
									},
									"functionSelector": "9f7f9edd",
									"id": 25,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeClaimBySignature",
									"nameLocation": "938:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "976:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "961:24:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 21,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "961:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "960:26:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "995:0:0"
									},
									"scope": 59,
									"src": "929:67:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "1002:181:0",
										"text": " @dev Returns revocation status of a claim.\n @param _sig the signature of the claim\n @return isRevoked true if the claim is revoked and false otherwise"
									},
									"functionSelector": "2646b264",
									"id": 33,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isClaimRevoked",
									"nameLocation": "1197:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "_sig",
												"nameLocation": "1227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1212:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 27,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1212:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1211:21:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 30,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1255:6:0"
									},
									"scope": 59,
									"src": "1188:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "1268:334:0",
										"text": " @dev Checks if a claim is valid.\n @param _identity the identity contract related to the claim\n @param claimTopic the claim topic of the claim\n @param sig the signature of the claim\n @param data the data field of the claim\n @return claimValid true if the claim is valid, false otherwise"
									},
									"functionSelector": "c0969a6e",
									"id": 48,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isClaimValid",
									"nameLocation": "1616:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "_identity",
												"nameLocation": "1648:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1638:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$323",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 36,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 35,
														"name": "IIdentity",
														"nameLocations": [
															"1638:9:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "1638:9:0"
													},
													"referencedDeclaration": 323,
													"src": "1638:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$323",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "claimTopic",
												"nameLocation": "1675:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1667:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1667:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "sig",
												"nameLocation": "1710:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1695:18:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 40,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1695:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1738:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1723:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 42,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1723:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1628:115:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1771:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 45,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1771:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1770:6:0"
									},
									"scope": 59,
									"src": "1607:170:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 49,
										"nodeType": "StructuredDocumentation",
										"src": "1783:240:0",
										"text": " @dev returns the address that signed the given data\n @param sig the signature of the data\n @param dataHash the data that was signed\n returns the address that signed dataHash and created the signature sig"
									},
									"functionSelector": "c3b129e3",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRecoveredAddress",
									"nameLocation": "2037:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "sig",
												"nameLocation": "2072:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2057:18:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 50,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2057:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "dataHash",
												"nameLocation": "2085:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2077:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 52,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2077:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2056:38:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2118:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2118:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2117:9:0"
									},
									"scope": 59,
									"src": "2028:99:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 60,
							"src": "88:2041:0",
							"usedErrors": []
						}
					],
					"src": "36:2094:0"
				},
				"id": 0
			},
			"@onchain-id/solidity/contracts/interface/IERC734.sol": {
				"ast": {
					"absolutePath": "@onchain-id/solidity/contracts/interface/IERC734.sol",
					"exportedSymbols": {
						"IERC734": [
							206
						]
					},
					"id": 207,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 61,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC734",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 62,
								"nodeType": "StructuredDocumentation",
								"src": "61:84:1",
								"text": " @dev interface of the ERC734 (Key Holder) standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 206,
							"linearizedBaseContracts": [
								206
							],
							"name": "IERC734",
							"nameLocation": "156:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "171:156:1",
										"text": " @dev Emitted when an execution request was approved.\n Specification: MUST be triggered when approve was successfully called."
									},
									"eventSelector": "b3932da477fe5d6c8ff2eafef050c0f3a1af18fc07121001482600f36f3715d8",
									"id": 69,
									"name": "Approved",
									"nameLocation": "338:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"indexed": true,
												"mutability": "mutable",
												"name": "executionId",
												"nameLocation": "363:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "347:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "347:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "381:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "376:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 66,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "376:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "346:44:1"
									},
									"src": "332:59:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "397:214:1",
										"text": " @dev Emitted when an execute operation was approved and successfully performed.\n Specification: MUST be triggered when approve was called and the execution was successfully approved."
									},
									"eventSelector": "1f920dbda597d7bf95035464170fa58d0a4b57f13a1c315ace6793b9f63688b8",
									"id": 80,
									"name": "Executed",
									"nameLocation": "622:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"indexed": true,
												"mutability": "mutable",
												"name": "executionId",
												"nameLocation": "647:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "631:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "631:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "676:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "660:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"indexed": true,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "696:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "680:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "680:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 78,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "709:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "703:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 77,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "703:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "630:84:1"
									},
									"src": "616:99:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "721:171:1",
										"text": " @dev Emitted when an execution request was performed via `execute`.\n Specification: MUST be triggered when execute was successfully called."
									},
									"eventSelector": "8afcfabcb00e47a53a8fc3e9f23ff47ee1926194bb1350dd007c50b412a6cee8",
									"id": 91,
									"name": "ExecutionRequested",
									"nameLocation": "903:18:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"indexed": true,
												"mutability": "mutable",
												"name": "executionId",
												"nameLocation": "938:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "922:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 82,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "922:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "967:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "951:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "951:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"indexed": true,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "987:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "971:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1000:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "994:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 88,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "994:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "921:84:1"
									},
									"src": "897:109:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "1012:151:1",
										"text": " @dev Emitted when an execute operation was called and failed\n Specification: MUST be triggered when execute call failed"
									},
									"eventSelector": "e10c49d9f7c71da23262367013434763cfdb2332267641728d25cd712c5c6a68",
									"id": 102,
									"name": "ExecutionFailed",
									"nameLocation": "1174:15:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"indexed": true,
												"mutability": "mutable",
												"name": "executionId",
												"nameLocation": "1206:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "1190:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 93,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1190:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1235:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "1219:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"indexed": true,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1255:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "1239:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 97,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1239:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 100,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1268:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "1262:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 99,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1262:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1189:84:1"
									},
									"src": "1168:106:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 103,
										"nodeType": "StructuredDocumentation",
										"src": "1280:153:1",
										"text": " @dev Emitted when a key was added to the Identity.\n Specification: MUST be triggered when addKey was successfully called."
									},
									"eventSelector": "480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e9",
									"id": 111,
									"name": "KeyAdded",
									"nameLocation": "1444:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"indexed": true,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "1469:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "1453:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 104,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1453:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 107,
												"indexed": true,
												"mutability": "mutable",
												"name": "purpose",
												"nameLocation": "1490:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "1474:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1474:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"indexed": true,
												"mutability": "mutable",
												"name": "keyType",
												"nameLocation": "1515:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "1499:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1499:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1452:71:1"
									},
									"src": "1438:86:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "1530:160:1",
										"text": " @dev Emitted when a key was removed from the Identity.\n Specification: MUST be triggered when removeKey was successfully called."
									},
									"eventSelector": "585a4aef50f8267a92b32412b331b20f7f8b96f2245b253b9cc50dcc621d3397",
									"id": 120,
									"name": "KeyRemoved",
									"nameLocation": "1701:10:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"indexed": true,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "1728:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "1712:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 113,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1712:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"indexed": true,
												"mutability": "mutable",
												"name": "purpose",
												"nameLocation": "1749:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "1733:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1733:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"indexed": true,
												"mutability": "mutable",
												"name": "keyType",
												"nameLocation": "1774:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "1758:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1758:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1711:71:1"
									},
									"src": "1695:88:1"
								},
								{
									"documentation": {
										"id": 121,
										"nodeType": "StructuredDocumentation",
										"src": "1789:319:1",
										"text": " @dev Adds a _key to the identity. The _purpose specifies the purpose of the key.\n Triggers Event: `KeyAdded`\n Specification: MUST only be done by keys of purpose 1, or the identity\n itself. If it's the identity itself, the approval process will determine its approval."
									},
									"functionSelector": "1d381240",
									"id": 132,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addKey",
									"nameLocation": "2122:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "_key",
												"nameLocation": "2137:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2129:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 122,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2129:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "_purpose",
												"nameLocation": "2151:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2143:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "_keyType",
												"nameLocation": "2169:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2161:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2161:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2128:50:1"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2202:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2197:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 129,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2197:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2196:14:1"
									},
									"scope": 206,
									"src": "2113:98:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2217:201:1",
										"text": " @dev Approves an execution.\n Triggers Event: `Approved`\n Triggers on execution successful Event: `Executed`\n Triggers on execution failure Event: `ExecutionFailed`"
									},
									"functionSelector": "747442d3",
									"id": 142,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2432:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "2448:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "2440:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "_approve",
												"nameLocation": "2458:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "2453:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 136,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2453:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:28:1"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2491:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "2486:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2486:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2485:14:1"
									},
									"scope": 206,
									"src": "2423:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 143,
										"nodeType": "StructuredDocumentation",
										"src": "2506:290:1",
										"text": " @dev Removes _purpose for _key from the identity.\n Triggers Event: `KeyRemoved`\n Specification: MUST only be done by keys of purpose 1, or the identity itself.\n If it's the identity itself, the approval process will determine its approval."
									},
									"functionSelector": "53d413c5",
									"id": 152,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeKey",
									"nameLocation": "2810:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "_key",
												"nameLocation": "2828:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "2820:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 144,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "_purpose",
												"nameLocation": "2842:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "2834:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2834:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2819:32:1"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2875:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "2870:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 149,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2870:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2869:14:1"
									},
									"scope": 206,
									"src": "2801:83:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "2890:481:1",
										"text": " @dev Passes an execution instruction to an ERC734 identity.\n How the execution is handled is up to the identity implementation:\n An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to\n approve this execution.\n Execute COULD be used as the only accessor for `addKey` and `removeKey`.\n Triggers Event: ExecutionRequested\n Triggers on direct execution Event: Executed"
									},
									"functionSelector": "b61d27f6",
									"id": 164,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "execute",
									"nameLocation": "3385:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "3401:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3393:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3393:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "3414:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3406:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3406:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "3437:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3422:20:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 158,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3422:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3392:51:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "executionId",
												"nameLocation": "3478:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3470:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3470:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3469:21:1"
									},
									"scope": 206,
									"src": "3376:115:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "3497:78:1",
										"text": " @dev Returns the full key data, if present in the identity."
									},
									"functionSelector": "12aaac70",
									"id": 177,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getKey",
									"nameLocation": "3589:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "_key",
												"nameLocation": "3604:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "3596:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 166,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3596:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3595:14:1"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "purposes",
												"nameLocation": "3650:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "3633:25:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 169,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3633:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 170,
													"nodeType": "ArrayTypeName",
													"src": "3633:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "keyType",
												"nameLocation": "3668:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "3660:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3660:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "3685:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "3677:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 174,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3677:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3632:57:1"
									},
									"scope": 206,
									"src": "3580:110:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "3696:75:1",
										"text": " @dev Returns the list of purposes associated with a key."
									},
									"functionSelector": "fb307b34",
									"id": 186,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getKeyPurposes",
									"nameLocation": "3785:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "_key",
												"nameLocation": "3808:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "3800:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 179,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3800:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3799:14:1"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "_purposes",
												"nameLocation": "3853:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "3836:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 182,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3836:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 183,
													"nodeType": "ArrayTypeName",
													"src": "3836:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3835:28:1"
									},
									"scope": 206,
									"src": "3776:88:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "3870:85:1",
										"text": " @dev Returns an array of public key bytes32 held by this identity."
									},
									"functionSelector": "9010f726",
									"id": 195,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getKeysByPurpose",
									"nameLocation": "3969:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "_purpose",
												"nameLocation": "3994:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "3986:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3986:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3985:18:1"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "keys",
												"nameLocation": "4044:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "4027:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 191,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "4027:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 192,
													"nodeType": "ArrayTypeName",
													"src": "4027:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4026:23:1"
									},
									"scope": 206,
									"src": "3960:90:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "4056:127:1",
										"text": " @dev Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE."
									},
									"functionSelector": "d202158d",
									"id": 205,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "keyHasPurpose",
									"nameLocation": "4197:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "_key",
												"nameLocation": "4219:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "4211:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 197,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4211:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "_purpose",
												"nameLocation": "4233:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "4225:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4225:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4210:32:1"
									},
									"returnParameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "exists",
												"nameLocation": "4271:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "4266:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 202,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4266:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4265:13:1"
									},
									"scope": 206,
									"src": "4188:91:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 207,
							"src": "146:4135:1",
							"usedErrors": []
						}
					],
					"src": "36:4246:1"
				},
				"id": 1
			},
			"@onchain-id/solidity/contracts/interface/IERC735.sol": {
				"ast": {
					"absolutePath": "@onchain-id/solidity/contracts/interface/IERC735.sol",
					"exportedSymbols": {
						"IERC735": [
							314
						]
					},
					"id": 315,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 208,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC735",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 209,
								"nodeType": "StructuredDocumentation",
								"src": "61:86:2",
								"text": " @dev interface of the ERC735 (Claim Holder) standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 314,
							"linearizedBaseContracts": [
								314
							],
							"name": "IERC735",
							"nameLocation": "158:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "173:139:2",
										"text": " @dev Emitted when a claim was added.\n Specification: MUST be triggered when a claim was successfully added."
									},
									"eventSelector": "46149b18aa084502c3f12bc75e19eda8bda8d102b82cce8474677a6d0d5f43c5",
									"id": 226,
									"name": "ClaimAdded",
									"nameLocation": "323:10:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimId",
												"nameLocation": "359:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "343:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 211,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"indexed": true,
												"mutability": "mutable",
												"name": "topic",
												"nameLocation": "392:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "376:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "376:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"indexed": false,
												"mutability": "mutable",
												"name": "scheme",
												"nameLocation": "415:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "407:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "407:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"indexed": true,
												"mutability": "mutable",
												"name": "issuer",
												"nameLocation": "447:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "431:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"indexed": false,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "469:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "463:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 219,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "463:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "494:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "488:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 221,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "488:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"indexed": false,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "515:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "508:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 223,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "508:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "333:186:2"
									},
									"src": "317:203:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "526:146:2",
										"text": " @dev Emitted when a claim was removed.\n Specification: MUST be triggered when removeClaim was successfully called."
									},
									"eventSelector": "3cf57863a89432c61c4a27073c6ee39e8a764bff5a05aebfbcdcdc80b2e6130a",
									"id": 243,
									"name": "ClaimRemoved",
									"nameLocation": "683:12:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimId",
												"nameLocation": "721:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "705:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 228,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "705:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"indexed": true,
												"mutability": "mutable",
												"name": "topic",
												"nameLocation": "754:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "738:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"indexed": false,
												"mutability": "mutable",
												"name": "scheme",
												"nameLocation": "777:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "769:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"indexed": true,
												"mutability": "mutable",
												"name": "issuer",
												"nameLocation": "809:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "793:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "793:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"indexed": false,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "831:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "825:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 236,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "825:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "856:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "850:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 238,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "850:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"indexed": false,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "877:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "870:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 240,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "870:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "695:186:2"
									},
									"src": "677:205:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "888:166:2",
										"text": " @dev Emitted when a claim was changed.\n Specification: MUST be triggered when addClaim was successfully called on an existing claimId."
									},
									"eventSelector": "3bab293fc00db832d7619a9299914251b8747c036867ec056cbd506f60135b13",
									"id": 260,
									"name": "ClaimChanged",
									"nameLocation": "1065:12:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimId",
												"nameLocation": "1103:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "1087:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 245,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1087:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"indexed": true,
												"mutability": "mutable",
												"name": "topic",
												"nameLocation": "1136:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "1120:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1120:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"indexed": false,
												"mutability": "mutable",
												"name": "scheme",
												"nameLocation": "1159:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "1151:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1151:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"indexed": true,
												"mutability": "mutable",
												"name": "issuer",
												"nameLocation": "1191:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "1175:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1175:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"indexed": false,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "1213:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "1207:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 253,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1207:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1238:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "1232:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 255,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1232:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"indexed": false,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "1259:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "1252:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 257,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1252:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1077:186:2"
									},
									"src": "1059:205:2"
								},
								{
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "1270:438:2",
										"text": " @dev Add or update a claim.\n Triggers Event: `ClaimAdded`, `ClaimChanged`\n Specification: Add or update a claim from an issuer.\n _signature is a signed message of the following structure:\n `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`.\n Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`."
									},
									"functionSelector": "b1a34e0d",
									"id": 278,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addClaim",
									"nameLocation": "1722:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "_topic",
												"nameLocation": "1748:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "1740:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1740:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "_scheme",
												"nameLocation": "1772:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "1764:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1764:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "issuer",
												"nameLocation": "1797:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "1789:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1789:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "_signature",
												"nameLocation": "1828:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "1813:25:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 268,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1813:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "1863:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "1848:20:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 270,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1848:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "_uri",
												"nameLocation": "1894:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "1878:20:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 272,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1878:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1730:169:2"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "claimRequestId",
												"nameLocation": "1930:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "1922:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 275,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1922:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1921:24:2"
									},
									"scope": 314,
									"src": "1713:233:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "1952:193:2",
										"text": " @dev Removes a claim.\n Triggers Event: `ClaimRemoved`\n Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
									},
									"functionSelector": "4eee424a",
									"id": 286,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeClaim",
									"nameLocation": "2159:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "_claimId",
												"nameLocation": "2179:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "2171:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 280,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2170:18:2"
									},
									"returnParameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2212:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "2207:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 283,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2207:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2206:14:2"
									},
									"scope": 314,
									"src": "2150:71:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "2227:154:2",
										"text": " @dev Get a claim by its ID.\n Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
									},
									"functionSelector": "c9100bcb",
									"id": 304,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getClaim",
									"nameLocation": "2395:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "_claimId",
												"nameLocation": "2412:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "2404:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 288,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2404:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2403:18:2"
									},
									"returnParameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "topic",
												"nameLocation": "2465:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "2457:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2457:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "scheme",
												"nameLocation": "2488:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "2480:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2480:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "issuer",
												"nameLocation": "2512:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "2504:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2504:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "2541:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "2528:22:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 297,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2528:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2573:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "2560:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 299,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2560:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "2601:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "2587:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 301,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2587:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2447:158:2"
									},
									"scope": 314,
									"src": "2386:220:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 305,
										"nodeType": "StructuredDocumentation",
										"src": "2612:63:2",
										"text": " @dev Returns an array of claim IDs by topic."
									},
									"functionSelector": "80e9e9e1",
									"id": 313,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getClaimIdsByTopic",
									"nameLocation": "2689:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "_topic",
												"nameLocation": "2716:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "2708:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2708:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2707:16:2"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "claimIds",
												"nameLocation": "2763:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "2746:25:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 309,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "2746:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 310,
													"nodeType": "ArrayTypeName",
													"src": "2746:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2745:27:2"
									},
									"scope": 314,
									"src": "2680:93:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 315,
							"src": "148:2627:2",
							"usedErrors": []
						}
					],
					"src": "36:2740:2"
				},
				"id": 2
			},
			"@onchain-id/solidity/contracts/interface/IIdentity.sol": {
				"ast": {
					"absolutePath": "@onchain-id/solidity/contracts/interface/IIdentity.sol",
					"exportedSymbols": {
						"IERC734": [
							206
						],
						"IERC735": [
							314
						],
						"IIdentity": [
							323
						]
					},
					"id": 324,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 316,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:3"
						},
						{
							"absolutePath": "@onchain-id/solidity/contracts/interface/IERC734.sol",
							"file": "./IERC734.sol",
							"id": 317,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 324,
							"sourceUnit": 207,
							"src": "61:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@onchain-id/solidity/contracts/interface/IERC735.sol",
							"file": "./IERC735.sol",
							"id": 318,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 324,
							"sourceUnit": 315,
							"src": "85:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 319,
										"name": "IERC734",
										"nameLocations": [
											"178:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 206,
										"src": "178:7:3"
									},
									"id": 320,
									"nodeType": "InheritanceSpecifier",
									"src": "178:7:3"
								},
								{
									"baseName": {
										"id": 321,
										"name": "IERC735",
										"nameLocations": [
											"187:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 314,
										"src": "187:7:3"
									},
									"id": 322,
									"nodeType": "InheritanceSpecifier",
									"src": "187:7:3"
								}
							],
							"canonicalName": "IIdentity",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 323,
							"linearizedBaseContracts": [
								323,
								314,
								206
							],
							"name": "IIdentity",
							"nameLocation": "165:9:3",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 324,
							"src": "155:42:3",
							"usedErrors": []
						}
					],
					"src": "36:162:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							954
						],
						"ContextUpgradeable": [
							996
						],
						"Initializable": [
							624
						],
						"OwnableUpgradeable": [
							455
						]
					},
					"id": 456,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 325,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 326,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 456,
							"sourceUnit": 997,
							"src": "127:41:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 327,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 456,
							"sourceUnit": 625,
							"src": "169:42:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 329,
										"name": "Initializable",
										"nameLocations": [
											"748:13:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 624,
										"src": "748:13:4"
									},
									"id": 330,
									"nodeType": "InheritanceSpecifier",
									"src": "748:13:4"
								},
								{
									"baseName": {
										"id": 331,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"763:18:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 996,
										"src": "763:18:4"
									},
									"id": 332,
									"nodeType": "InheritanceSpecifier",
									"src": "763:18:4"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 328,
								"nodeType": "StructuredDocumentation",
								"src": "213:494:4",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 455,
							"linearizedBaseContracts": [
								455,
								996,
								624
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "726:18:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 334,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "804:6:4",
									"nodeType": "VariableDeclaration",
									"scope": 455,
									"src": "788:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 333,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "788:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 340,
									"name": "OwnershipTransferred",
									"nameLocation": "823:20:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "860:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "844:29:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "844:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "891:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "875:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:57:4"
									},
									"src": "817:84:4"
								},
								{
									"body": {
										"id": 349,
										"nodeType": "Block",
										"src": "1055:43:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 346,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "1065:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1065:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 348,
												"nodeType": "ExpressionStatement",
												"src": "1065:26:4"
											}
										]
									},
									"documentation": {
										"id": 341,
										"nodeType": "StructuredDocumentation",
										"src": "907:91:4",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 350,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 344,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 343,
												"name": "onlyInitializing",
												"nameLocations": [
													"1038:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 569,
												"src": "1038:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1038:16:4"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1012:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1026:2:4"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1055:0:4"
									},
									"scope": 455,
									"src": "1003:95:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "1166:49:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 356,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 981,
																"src": "1195:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1195:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 355,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "1176:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1176:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 359,
												"nodeType": "ExpressionStatement",
												"src": "1176:32:4"
											}
										]
									},
									"id": 361,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 353,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 352,
												"name": "onlyInitializing",
												"nameLocations": [
													"1149:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 569,
												"src": "1149:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1149:16:4"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1113:24:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1137:2:4"
									},
									"returnParameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1166:0:4"
									},
									"scope": 455,
									"src": "1104:111:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 368,
										"nodeType": "Block",
										"src": "1324:41:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 364,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 392,
														"src": "1334:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1334:13:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 366,
												"nodeType": "ExpressionStatement",
												"src": "1334:13:4"
											},
											{
												"id": 367,
												"nodeType": "PlaceholderStatement",
												"src": "1357:1:4"
											}
										]
									},
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "1221:77:4",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 369,
									"name": "onlyOwner",
									"nameLocation": "1312:9:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1321:2:4"
									},
									"src": "1303:62:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 377,
										"nodeType": "Block",
										"src": "1496:30:4",
										"statements": [
											{
												"expression": {
													"id": 375,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 334,
													"src": "1513:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 374,
												"id": 376,
												"nodeType": "Return",
												"src": "1506:13:4"
											}
										]
									},
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "1371:65:4",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 378,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1450:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1455:2:4"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "1487:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1487:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1486:9:4"
									},
									"scope": 455,
									"src": "1441:85:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 391,
										"nodeType": "Block",
										"src": "1644:85:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 383,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 378,
																	"src": "1662:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 384,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1662:7:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 385,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 981,
																	"src": "1673:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 386,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1673:12:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1662:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 388,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1687:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 382,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1654:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1654:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 390,
												"nodeType": "ExpressionStatement",
												"src": "1654:68:4"
											}
										]
									},
									"documentation": {
										"id": 379,
										"nodeType": "StructuredDocumentation",
										"src": "1532:62:4",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 392,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1608:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1619:2:4"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1644:0:4"
									},
									"scope": 455,
									"src": "1599:130:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 405,
										"nodeType": "Block",
										"src": "2118:47:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 401,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2155:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 400,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2147:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 399,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2147:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2147:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 398,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "2128:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2128:30:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 404,
												"nodeType": "ExpressionStatement",
												"src": "2128:30:4"
											}
										]
									},
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "1735:324:4",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 406,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 396,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 395,
												"name": "onlyOwner",
												"nameLocations": [
													"2108:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 369,
												"src": "2108:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2108:9:4"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2073:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2090:2:4"
									},
									"returnParameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2118:0:4"
									},
									"scope": 455,
									"src": "2064:101:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 428,
										"nodeType": "Block",
										"src": "2384:128:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 415,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 409,
																"src": "2402:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 418,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2422:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2414:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 416,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2414:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 419,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2414:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2402:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2426:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 414,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2394:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2394:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 423,
												"nodeType": "ExpressionStatement",
												"src": "2394:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 425,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "2496:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 424,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "2477:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2477:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 427,
												"nodeType": "ExpressionStatement",
												"src": "2477:28:4"
											}
										]
									},
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "2171:138:4",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 429,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 412,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 411,
												"name": "onlyOwner",
												"nameLocations": [
													"2374:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 369,
												"src": "2374:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2374:9:4"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2323:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2349:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "2341:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2341:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2340:18:4"
									},
									"returnParameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2384:0:4"
									},
									"scope": 455,
									"src": "2314:198:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 448,
										"nodeType": "Block",
										"src": "2729:124:4",
										"statements": [
											{
												"assignments": [
													436
												],
												"declarations": [
													{
														"constant": false,
														"id": 436,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2747:8:4",
														"nodeType": "VariableDeclaration",
														"scope": 448,
														"src": "2739:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 435,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2739:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 438,
												"initialValue": {
													"id": 437,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 334,
													"src": "2758:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2739:25:4"
											},
											{
												"expression": {
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 439,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "2774:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 440,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 432,
														"src": "2783:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2774:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 442,
												"nodeType": "ExpressionStatement",
												"src": "2774:17:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 444,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 436,
															"src": "2827:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 445,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "2837:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 443,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 340,
														"src": "2806:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2806:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 447,
												"nodeType": "EmitStatement",
												"src": "2801:45:4"
											}
										]
									},
									"documentation": {
										"id": 430,
										"nodeType": "StructuredDocumentation",
										"src": "2518:143:4",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 449,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2675:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2702:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "2694:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2693:18:4"
									},
									"returnParameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2729:0:4"
									},
									"scope": 455,
									"src": "2666:187:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 450,
										"nodeType": "StructuredDocumentation",
										"src": "2859:254:4",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 454,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "3138:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 455,
									"src": "3118:25:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 451,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3118:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 453,
										"length": {
											"hexValue": "3439",
											"id": 452,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3126:2:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "3118:11:4",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 456,
							"src": "708:2438:4",
							"usedErrors": []
						}
					],
					"src": "102:3045:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							954
						],
						"Initializable": [
							624
						]
					},
					"id": 625,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 457,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
							"file": "../../utils/AddressUpgradeable.sol",
							"id": 458,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 625,
							"sourceUnit": 955,
							"src": "138:44:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 459,
								"nodeType": "StructuredDocumentation",
								"src": "184:2209:5",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 624,
							"linearizedBaseContracts": [
								624
							],
							"name": "Initializable",
							"nameLocation": "2412:13:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "2432:109:5",
										"text": " @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"
									},
									"id": 462,
									"mutability": "mutable",
									"name": "_initialized",
									"nameLocation": "2560:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 624,
									"src": "2546:26:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 461,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "2546:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "2579:91:5",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 465,
									"mutability": "mutable",
									"name": "_initializing",
									"nameLocation": "2688:13:5",
									"nodeType": "VariableDeclaration",
									"scope": 624,
									"src": "2675:26:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 464,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2675:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 466,
										"nodeType": "StructuredDocumentation",
										"src": "2708:90:5",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498",
									"id": 470,
									"name": "Initialized",
									"nameLocation": "2809:11:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "2827:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "2821:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 467,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2821:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2820:15:5"
									},
									"src": "2803:33:5"
								},
								{
									"body": {
										"id": 525,
										"nodeType": "Block",
										"src": "3269:483:5",
										"statements": [
											{
												"assignments": [
													474
												],
												"declarations": [
													{
														"constant": false,
														"id": 474,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "3284:14:5",
														"nodeType": "VariableDeclaration",
														"scope": 525,
														"src": "3279:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 473,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3279:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 477,
												"initialValue": {
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3301:14:5",
													"subExpression": {
														"id": 475,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 465,
														"src": "3302:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3279:36:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 483,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 479,
																			"name": "isTopLevelCall",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 474,
																			"src": "3347:14:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 482,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 480,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 462,
																				"src": "3365:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 481,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3380:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3365:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3347:34:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 484,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3346:36:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 496,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 492,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "3387:45:5",
																			"subExpression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 489,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967268,
																								"src": "3426:4:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_Initializable_$624",
																									"typeString": "contract Initializable"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_Initializable_$624",
																									"typeString": "contract Initializable"
																								}
																							],
																							"id": 488,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3418:7:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 487,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "3418:7:5",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 490,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3418:13:5",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"id": 485,
																						"name": "AddressUpgradeable",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 954,
																						"src": "3388:18:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$954_$",
																							"typeString": "type(library AddressUpgradeable)"
																						}
																					},
																					"id": 486,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3407:10:5",
																					"memberName": "isContract",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 642,
																					"src": "3388:29:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																						"typeString": "function (address) view returns (bool)"
																					}
																				},
																				"id": 491,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3388:44:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 495,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 493,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 462,
																				"src": "3436:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 494,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3452:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3436:17:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3387:66:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 497,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3386:68:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3346:108:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 499,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3468:48:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 478,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3325:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3325:201:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 501,
												"nodeType": "ExpressionStatement",
												"src": "3325:201:5"
											},
											{
												"expression": {
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 502,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 462,
														"src": "3536:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3551:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3536:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 505,
												"nodeType": "ExpressionStatement",
												"src": "3536:16:5"
											},
											{
												"condition": {
													"id": 506,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 474,
													"src": "3566:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 512,
												"nodeType": "IfStatement",
												"src": "3562:65:5",
												"trueBody": {
													"id": 511,
													"nodeType": "Block",
													"src": "3582:45:5",
													"statements": [
														{
															"expression": {
																"id": 509,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 507,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 465,
																	"src": "3596:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 508,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3612:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3596:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 510,
															"nodeType": "ExpressionStatement",
															"src": "3596:20:5"
														}
													]
												}
											},
											{
												"id": 513,
												"nodeType": "PlaceholderStatement",
												"src": "3636:1:5"
											},
											{
												"condition": {
													"id": 514,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 474,
													"src": "3651:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 524,
												"nodeType": "IfStatement",
												"src": "3647:99:5",
												"trueBody": {
													"id": 523,
													"nodeType": "Block",
													"src": "3667:79:5",
													"statements": [
														{
															"expression": {
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 515,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 465,
																	"src": "3681:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3697:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "3681:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 518,
															"nodeType": "ExpressionStatement",
															"src": "3681:21:5"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 520,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3733:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 519,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 470,
																	"src": "3721:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 521,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3721:14:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 522,
															"nodeType": "EmitStatement",
															"src": "3716:19:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 471,
										"nodeType": "StructuredDocumentation",
										"src": "2842:399:5",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."
									},
									"id": 526,
									"name": "initializer",
									"nameLocation": "3255:11:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3266:2:5"
									},
									"src": "3246:506:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 558,
										"nodeType": "Block",
										"src": "4863:255:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "4881:14:5",
																"subExpression": {
																	"id": 532,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 465,
																	"src": "4882:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 536,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 534,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 462,
																	"src": "4899:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 535,
																	"name": "version",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 529,
																	"src": "4914:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "4899:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4881:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4923:48:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 531,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4873:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:99:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "4873:99:5"
											},
											{
												"expression": {
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 541,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 462,
														"src": "4982:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 542,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4997:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4982:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 544,
												"nodeType": "ExpressionStatement",
												"src": "4982:22:5"
											},
											{
												"expression": {
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 545,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 465,
														"src": "5014:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 546,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5030:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5014:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 548,
												"nodeType": "ExpressionStatement",
												"src": "5014:20:5"
											},
											{
												"id": 549,
												"nodeType": "PlaceholderStatement",
												"src": "5044:1:5"
											},
											{
												"expression": {
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 550,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 465,
														"src": "5055:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 551,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5071:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "5055:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 553,
												"nodeType": "ExpressionStatement",
												"src": "5055:21:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 555,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "5103:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 554,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 470,
														"src": "5091:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
															"typeString": "function (uint8)"
														}
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5091:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 557,
												"nodeType": "EmitStatement",
												"src": "5086:25:5"
											}
										]
									},
									"documentation": {
										"id": 527,
										"nodeType": "StructuredDocumentation",
										"src": "3758:1062:5",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 559,
									"name": "reinitializer",
									"nameLocation": "4834:13:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "4854:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "4848:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 528,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4848:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4847:15:5"
									},
									"src": "4825:293:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 568,
										"nodeType": "Block",
										"src": "5356:97:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 563,
															"name": "_initializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "5374:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67",
															"id": 564,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5389:45:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															},
															"value": "Initializable: contract is not initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															}
														],
														"id": 562,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5366:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5366:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 566,
												"nodeType": "ExpressionStatement",
												"src": "5366:69:5"
											},
											{
												"id": 567,
												"nodeType": "PlaceholderStatement",
												"src": "5445:1:5"
											}
										]
									},
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "5124:199:5",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 569,
									"name": "onlyInitializing",
									"nameLocation": "5337:16:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5353:2:5"
									},
									"src": "5328:125:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 604,
										"nodeType": "Block",
										"src": "5988:231:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "6006:14:5",
															"subExpression": {
																"id": 574,
																"name": "_initializing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 465,
																"src": "6007:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67",
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6022:41:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															},
															"value": "Initializable: contract is initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															}
														],
														"id": 573,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5998:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5998:66:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 578,
												"nodeType": "ExpressionStatement",
												"src": "5998:66:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 579,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 462,
														"src": "6078:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 582,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6099:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 581,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "6099:5:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 580,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6094:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6094:11:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 584,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6106:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6094:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "6078:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 603,
												"nodeType": "IfStatement",
												"src": "6074:139:5",
												"trueBody": {
													"id": 602,
													"nodeType": "Block",
													"src": "6111:102:5",
													"statements": [
														{
															"expression": {
																"id": 592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 586,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 462,
																	"src": "6125:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 589,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6145:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 588,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "6145:5:5",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				}
																			],
																			"id": 587,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "6140:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 590,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6140:11:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint8",
																			"typeString": "type(uint8)"
																		}
																	},
																	"id": 591,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "6152:3:5",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "6140:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "6125:30:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 593,
															"nodeType": "ExpressionStatement",
															"src": "6125:30:5"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 597,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "6191:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					},
																					"typeName": {
																						"id": 596,
																						"name": "uint8",
																						"nodeType": "ElementaryTypeName",
																						"src": "6191:5:5",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					}
																				],
																				"id": 595,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "6186:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 598,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6186:11:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint8",
																				"typeString": "type(uint8)"
																			}
																		},
																		"id": 599,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6198:3:5",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "6186:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 594,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 470,
																	"src": "6174:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 600,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6174:28:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 601,
															"nodeType": "EmitStatement",
															"src": "6169:33:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 570,
										"nodeType": "StructuredDocumentation",
										"src": "5459:475:5",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 605,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "5948:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5968:2:5"
									},
									"returnParameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5988:0:5"
									},
									"scope": 624,
									"src": "5939:280:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 613,
										"nodeType": "Block",
										"src": "6393:36:5",
										"statements": [
											{
												"expression": {
													"id": 611,
													"name": "_initialized",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 462,
													"src": "6410:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 610,
												"id": 612,
												"nodeType": "Return",
												"src": "6403:19:5"
											}
										]
									},
									"documentation": {
										"id": 606,
										"nodeType": "StructuredDocumentation",
										"src": "6225:99:5",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 614,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "6338:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6360:2:5"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "6386:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 608,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6386:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6385:7:5"
									},
									"scope": 624,
									"src": "6329:100:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 622,
										"nodeType": "Block",
										"src": "6601:37:5",
										"statements": [
											{
												"expression": {
													"id": 620,
													"name": "_initializing",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 465,
													"src": "6618:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 619,
												"id": 621,
												"nodeType": "Return",
												"src": "6611:20:5"
											}
										]
									},
									"documentation": {
										"id": 615,
										"nodeType": "StructuredDocumentation",
										"src": "6435:105:5",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "6554:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6569:2:5"
									},
									"returnParameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "6595:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 617,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6595:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6594:6:5"
									},
									"scope": 624,
									"src": "6545:93:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 625,
							"src": "2394:4246:5",
							"usedErrors": []
						}
					],
					"src": "113:6528:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							954
						]
					},
					"id": 955,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 626,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AddressUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 627,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:6",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 954,
							"linearizedBaseContracts": [
								954
							],
							"name": "AddressUpgradeable",
							"nameLocation": "202:18:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 641,
										"nodeType": "Block",
										"src": "1489:254:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 635,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 630,
																"src": "1713:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 636,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1721:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1713:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 637,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1726:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1713:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 638,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1735:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1713:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 634,
												"id": 640,
												"nodeType": "Return",
												"src": "1706:30:6"
											}
										]
									},
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "227:1191:6",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 642,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1432:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1451:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "1443:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1443:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1442:17:6"
									},
									"returnParameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "1483:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 632,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1483:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1482:6:6"
									},
									"scope": 954,
									"src": "1423:320:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 675,
										"nodeType": "Block",
										"src": "2729:241:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 653,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2755:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$954",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$954",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 652,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2747:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 651,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2747:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 654,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2747:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 655,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2761:7:6",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2747:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 656,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 647,
																"src": "2772:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2747:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2780:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 650,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2739:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2739:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 660,
												"nodeType": "ExpressionStatement",
												"src": "2739:73:6"
											},
											{
												"assignments": [
													662,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 662,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2829:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 675,
														"src": "2824:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 661,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2824:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 669,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2872:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 663,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 645,
																"src": "2842:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2852:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2842:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 666,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 665,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 647,
																"src": "2864:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2842:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2842:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2823:52:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 671,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "2893:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 672,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2902:60:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 670,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2885:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2885:78:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 674,
												"nodeType": "ExpressionStatement",
												"src": "2885:78:6"
											}
										]
									},
									"documentation": {
										"id": 643,
										"nodeType": "StructuredDocumentation",
										"src": "1749:904:6",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 676,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2667:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2693:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "2677:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2712:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "2704:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2676:43:6"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2729:0:6"
									},
									"scope": 954,
									"src": "2658:312:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 693,
										"nodeType": "Block",
										"src": "3801:96:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 687,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "3840:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 688,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 681,
															"src": "3848:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3854:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 690,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3857:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 686,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															734,
															778
														],
														"referencedDeclaration": 778,
														"src": "3818:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3818:72:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 685,
												"id": 692,
												"nodeType": "Return",
												"src": "3811:79:6"
											}
										]
									},
									"documentation": {
										"id": 677,
										"nodeType": "StructuredDocumentation",
										"src": "2976:731:6",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 694,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3721:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3742:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "3734:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3734:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3763:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "3750:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 680,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3750:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3733:35:6"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "3787:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 683,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3787:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3786:14:6"
									},
									"scope": 954,
									"src": "3712:185:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 713,
										"nodeType": "Block",
										"src": "4266:76:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 707,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 697,
															"src": "4305:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 708,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 699,
															"src": "4313:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 709,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4319:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 710,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 701,
															"src": "4322:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 706,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															734,
															778
														],
														"referencedDeclaration": 778,
														"src": "4283:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4283:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 705,
												"id": 712,
												"nodeType": "Return",
												"src": "4276:59:6"
											}
										]
									},
									"documentation": {
										"id": 695,
										"nodeType": "StructuredDocumentation",
										"src": "3903:211:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4128:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4158:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "4150:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4150:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4187:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "4174:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 698,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4174:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4215:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "4201:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 700,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4201:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4140:93:6"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "4252:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 703,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4252:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4251:14:6"
									},
									"scope": 954,
									"src": "4119:223:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 733,
										"nodeType": "Block",
										"src": "4817:111:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 727,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 717,
															"src": "4856:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 728,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 719,
															"src": "4864:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 729,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 721,
															"src": "4870:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 730,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4877:43:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 726,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															734,
															778
														],
														"referencedDeclaration": 778,
														"src": "4834:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4834:87:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 725,
												"id": 732,
												"nodeType": "Return",
												"src": "4827:94:6"
											}
										]
									},
									"documentation": {
										"id": 715,
										"nodeType": "StructuredDocumentation",
										"src": "4348:351:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 734,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4713:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4743:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "4735:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4735:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4764:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "4751:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 718,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4751:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4778:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "4770:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4770:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4734:50:6"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "4803:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 723,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4803:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4802:14:6"
									},
									"scope": 954,
									"src": "4704:224:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 777,
										"nodeType": "Block",
										"src": "5355:267:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 755,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 751,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5381:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$954",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$954",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 750,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5373:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 749,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5373:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 752,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5373:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 753,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5387:7:6",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5373:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 754,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 741,
																"src": "5398:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5373:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5405:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 748,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5365:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5365:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 758,
												"nodeType": "ExpressionStatement",
												"src": "5365:81:6"
											},
											{
												"assignments": [
													760,
													762
												],
												"declarations": [
													{
														"constant": false,
														"id": 760,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5462:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "5457:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 759,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5457:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 762,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5484:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "5471:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 761,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5471:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 769,
												"initialValue": {
													"arguments": [
														{
															"id": 767,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "5524:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 763,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 737,
																"src": "5498:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 764,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5505:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5498:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 766,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 765,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 741,
																"src": "5517:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5498:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5498:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5456:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 771,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "5573:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 772,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 760,
															"src": "5581:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 773,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "5590:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 774,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 743,
															"src": "5602:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 770,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "5546:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5546:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 747,
												"id": 776,
												"nodeType": "Return",
												"src": "5539:76:6"
											}
										]
									},
									"documentation": {
										"id": 735,
										"nodeType": "StructuredDocumentation",
										"src": "4934:237:6",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5185:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5224:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "5216:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5216:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5253:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "5240:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 738,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5240:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5275:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "5267:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5267:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5304:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "5290:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 742,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5290:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5206:116:6"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "5341:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 745,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5341:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5340:14:6"
									},
									"scope": 954,
									"src": "5176:446:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 794,
										"nodeType": "Block",
										"src": "5899:97:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 789,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "5935:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 790,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "5943:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 791,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5949:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 788,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															795,
															824
														],
														"referencedDeclaration": 824,
														"src": "5916:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5916:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 787,
												"id": 793,
												"nodeType": "Return",
												"src": "5909:80:6"
											}
										]
									},
									"documentation": {
										"id": 779,
										"nodeType": "StructuredDocumentation",
										"src": "5628:166:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 795,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5808:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5835:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "5827:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 780,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5827:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5856:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "5843:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 782,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5843:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5826:35:6"
									},
									"returnParameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "5885:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 785,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5885:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5884:14:6"
									},
									"scope": 954,
									"src": "5799:197:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 823,
										"nodeType": "Block",
										"src": "6338:168:6",
										"statements": [
											{
												"assignments": [
													808,
													810
												],
												"declarations": [
													{
														"constant": false,
														"id": 808,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6354:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 823,
														"src": "6349:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 807,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6349:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 810,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6376:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 823,
														"src": "6363:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 809,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6363:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 815,
												"initialValue": {
													"arguments": [
														{
															"id": 813,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "6408:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 811,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "6390:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 812,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6397:10:6",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6390:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6348:65:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 817,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "6457:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 818,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "6465:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 819,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "6474:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 820,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "6486:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 816,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "6430:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6430:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 806,
												"id": 822,
												"nodeType": "Return",
												"src": "6423:76:6"
											}
										]
									},
									"documentation": {
										"id": 796,
										"nodeType": "StructuredDocumentation",
										"src": "6002:173:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 824,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6189:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6225:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "6217:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 797,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6217:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6254:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "6241:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 799,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6241:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6282:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "6268:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 801,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6268:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6207:93:6"
									},
									"returnParameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "6324:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 804,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6324:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6323:14:6"
									},
									"scope": 954,
									"src": "6180:326:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 840,
										"nodeType": "Block",
										"src": "6782:101:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 835,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 827,
															"src": "6820:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 836,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "6828:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 837,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6834:41:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 834,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															841,
															870
														],
														"referencedDeclaration": 870,
														"src": "6799:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6799:77:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 833,
												"id": 839,
												"nodeType": "Return",
												"src": "6792:84:6"
											}
										]
									},
									"documentation": {
										"id": 825,
										"nodeType": "StructuredDocumentation",
										"src": "6512:168:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 841,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6694:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6723:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "6715:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6715:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6744:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "6731:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 828,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6731:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6714:35:6"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "6768:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 831,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6768:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6767:14:6"
									},
									"scope": 954,
									"src": "6685:198:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 869,
										"nodeType": "Block",
										"src": "7224:170:6",
										"statements": [
											{
												"assignments": [
													854,
													856
												],
												"declarations": [
													{
														"constant": false,
														"id": 854,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7240:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 869,
														"src": "7235:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 853,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7235:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 856,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7262:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 869,
														"src": "7249:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 855,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7249:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 861,
												"initialValue": {
													"arguments": [
														{
															"id": 859,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 846,
															"src": "7296:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 857,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 844,
															"src": "7276:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 858,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7283:12:6",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7276:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7276:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7234:67:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 863,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 844,
															"src": "7345:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 864,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 854,
															"src": "7353:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 865,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "7362:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 866,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "7374:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 862,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "7318:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7318:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 852,
												"id": 868,
												"nodeType": "Return",
												"src": "7311:76:6"
											}
										]
									},
									"documentation": {
										"id": 842,
										"nodeType": "StructuredDocumentation",
										"src": "6889:175:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7078:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7116:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "7108:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 843,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7145:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "7132:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 845,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7132:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7173:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "7159:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 847,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7159:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7098:93:6"
									},
									"returnParameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "7210:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 850,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7210:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7209:14:6"
									},
									"scope": 954,
									"src": "7069:325:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 908,
										"nodeType": "Block",
										"src": "7876:434:6",
										"statements": [
											{
												"condition": {
													"id": 884,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 875,
													"src": "7890:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 906,
													"nodeType": "Block",
													"src": "8246:58:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 902,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 877,
																		"src": "8268:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 903,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 879,
																		"src": "8280:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 901,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 953,
																	"src": "8260:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 904,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8260:33:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 905,
															"nodeType": "ExpressionStatement",
															"src": "8260:33:6"
														}
													]
												},
												"id": 907,
												"nodeType": "IfStatement",
												"src": "7886:418:6",
												"trueBody": {
													"id": 900,
													"nodeType": "Block",
													"src": "7899:341:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 888,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 885,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 877,
																		"src": "7917:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 886,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7928:6:6",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7917:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 887,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7938:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7917:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 897,
															"nodeType": "IfStatement",
															"src": "7913:286:6",
															"trueBody": {
																"id": 896,
																"nodeType": "Block",
																"src": "7941:258:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 891,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 873,
																							"src": "8143:6:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 890,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 642,
																						"src": "8132:10:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 892,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8132:18:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 893,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8152:31:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 889,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8124:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 894,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8124:60:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 895,
																		"nodeType": "ExpressionStatement",
																		"src": "8124:60:6"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 898,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 877,
																"src": "8219:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 883,
															"id": 899,
															"nodeType": "Return",
															"src": "8212:17:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 871,
										"nodeType": "StructuredDocumentation",
										"src": "7400:277:6",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 909,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7691:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7735:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "7727:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7727:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7756:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "7751:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 874,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7751:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7786:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "7773:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 876,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7773:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7820:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "7806:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 878,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7806:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7717:121:6"
									},
									"returnParameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "7862:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 881,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7862:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7861:14:6"
									},
									"scope": 954,
									"src": "7682:628:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 932,
										"nodeType": "Block",
										"src": "8691:135:6",
										"statements": [
											{
												"condition": {
													"id": 921,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 912,
													"src": "8705:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 930,
													"nodeType": "Block",
													"src": "8762:58:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 926,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 914,
																		"src": "8784:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 927,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 916,
																		"src": "8796:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 925,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 953,
																	"src": "8776:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 928,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8776:33:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 929,
															"nodeType": "ExpressionStatement",
															"src": "8776:33:6"
														}
													]
												},
												"id": 931,
												"nodeType": "IfStatement",
												"src": "8701:119:6",
												"trueBody": {
													"id": 924,
													"nodeType": "Block",
													"src": "8714:42:6",
													"statements": [
														{
															"expression": {
																"id": 922,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 914,
																"src": "8735:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 920,
															"id": 923,
															"nodeType": "Return",
															"src": "8728:17:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 910,
										"nodeType": "StructuredDocumentation",
										"src": "8316:210:6",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 933,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8540:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8571:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "8566:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 911,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8566:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8601:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "8588:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 913,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8588:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8635:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "8621:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 915,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8621:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8556:97:6"
									},
									"returnParameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "8677:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 918,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8677:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8676:14:6"
									},
									"scope": 954,
									"src": "8531:295:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 952,
										"nodeType": "Block",
										"src": "8915:457:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 940,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "8991:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 941,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9002:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8991:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 942,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9011:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8991:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 950,
													"nodeType": "Block",
													"src": "9321:45:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 947,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 937,
																		"src": "9342:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 946,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9335:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 948,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9335:20:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 949,
															"nodeType": "ExpressionStatement",
															"src": "9335:20:6"
														}
													]
												},
												"id": 951,
												"nodeType": "IfStatement",
												"src": "8987:379:6",
												"trueBody": {
													"id": 945,
													"nodeType": "Block",
													"src": "9014:301:6",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "9172:133:6",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9190:40:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9219:10:6"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "9213:5:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9213:17:6"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "9194:15:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9258:2:6",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9262:10:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9254:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9254:19:6"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9275:15:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9247:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9247:44:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9247:44:6"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 935,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9219:10:6",
																	"valueSize": 1
																},
																{
																	"declaration": 935,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9262:10:6",
																	"valueSize": 1
																}
															],
															"id": 944,
															"nodeType": "InlineAssembly",
															"src": "9163:142:6"
														}
													]
												}
											}
										]
									},
									"id": 953,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8841:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8862:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "8849:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 934,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8849:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8888:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "8874:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 936,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8874:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8848:53:6"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8915:0:6"
									},
									"scope": 954,
									"src": "8832:540:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 955,
							"src": "194:9180:6",
							"usedErrors": []
						}
					],
					"src": "101:9274:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							954
						],
						"ContextUpgradeable": [
							996
						],
						"Initializable": [
							624
						]
					},
					"id": 997,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 956,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 957,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 997,
							"sourceUnit": 625,
							"src": "110:42:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 959,
										"name": "Initializable",
										"nameLocations": [
											"691:13:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 624,
										"src": "691:13:7"
									},
									"id": 960,
									"nodeType": "InheritanceSpecifier",
									"src": "691:13:7"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 958,
								"nodeType": "StructuredDocumentation",
								"src": "154:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 996,
							"linearizedBaseContracts": [
								996,
								624
							],
							"name": "ContextUpgradeable",
							"nameLocation": "669:18:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 965,
										"nodeType": "Block",
										"src": "763:7:7",
										"statements": []
									},
									"id": 966,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 963,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 962,
												"name": "onlyInitializing",
												"nameLocations": [
													"746:16:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 569,
												"src": "746:16:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "746:16:7"
										}
									],
									"name": "__Context_init",
									"nameLocation": "720:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "734:2:7"
									},
									"returnParameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "763:0:7"
									},
									"scope": 996,
									"src": "711:59:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 971,
										"nodeType": "Block",
										"src": "838:7:7",
										"statements": []
									},
									"id": 972,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 969,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 968,
												"name": "onlyInitializing",
												"nameLocations": [
													"821:16:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 569,
												"src": "821:16:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "821:16:7"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "785:24:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "809:2:7"
									},
									"returnParameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "838:0:7"
									},
									"scope": 996,
									"src": "776:69:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 980,
										"nodeType": "Block",
										"src": "912:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 977,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "929:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "933:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "929:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 976,
												"id": 979,
												"nodeType": "Return",
												"src": "922:17:7"
											}
										]
									},
									"id": 981,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "859:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "869:2:7"
									},
									"returnParameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "903:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 974,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "903:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "902:9:7"
									},
									"scope": 996,
									"src": "850:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 989,
										"nodeType": "Block",
										"src": "1019:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 986,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1036:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1040:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1036:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 985,
												"id": 988,
												"nodeType": "Return",
												"src": "1029:15:7"
											}
										]
									},
									"id": 990,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "961:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "969:2:7"
									},
									"returnParameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "1003:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 983,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1003:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1002:16:7"
									},
									"scope": 996,
									"src": "952:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 991,
										"nodeType": "StructuredDocumentation",
										"src": "1057:254:7",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 995,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "1336:5:7",
									"nodeType": "VariableDeclaration",
									"scope": 996,
									"src": "1316:25:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 992,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1316:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 994,
										"length": {
											"hexValue": "3530",
											"id": 993,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1324:2:7",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1316:11:7",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 997,
							"src": "651:693:7",
							"usedErrors": []
						}
					],
					"src": "86:1259:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1074
						]
					},
					"id": 1075,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 998,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 999,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:8",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1074,
							"linearizedBaseContracts": [
								1074
							],
							"name": "IERC20",
							"nameLocation": "212:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1000,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:8",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1008,
									"name": "Transfer",
									"nameLocation": "394:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "403:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1001,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1004,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "425:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1003,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1006,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "445:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:8"
									},
									"src": "388:72:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1009,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:8",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1017,
									"name": "Approval",
									"nameLocation": "625:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1011,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "634:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1010,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1013,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "657:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1012,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1015,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "682:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1014,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:8"
									},
									"src": "619:78:8"
								},
								{
									"documentation": {
										"id": 1018,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:8",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1023,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:8"
									},
									"returnParameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "820:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:8"
									},
									"scope": 1074,
									"src": "774:55:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1024,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:8",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1031,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "931:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1025,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:8"
									},
									"returnParameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "971:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:8"
									},
									"scope": 1074,
									"src": "912:68:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1032,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:8",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1041,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "1211:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1033,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "1223:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:8"
									},
									"returnParameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "1257:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1038,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:8"
									},
									"scope": 1074,
									"src": "1193:70:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1042,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:8",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1051,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "1557:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1043,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "1572:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1045,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:8"
									},
									"returnParameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "1612:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:8"
									},
									"scope": 1074,
									"src": "1538:83:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:8",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1061,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "2291:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1053,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "2308:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:8"
									},
									"returnParameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "2342:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1058,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:8"
									},
									"scope": 1074,
									"src": "2274:74:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1062,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:8",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1073,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "2668:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1063,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "2682:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "2694:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1067,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:8"
									},
									"returnParameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "2728:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1070,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:8"
									},
									"scope": 1074,
									"src": "2646:88:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1075,
							"src": "202:2534:8",
							"usedErrors": []
						}
					],
					"src": "106:2631:8"
				},
				"id": 8
			},
			"erc3643/erc3643/Compliance/modular/IModularCompliance.sol": {
				"ast": {
					"absolutePath": "erc3643/erc3643/Compliance/modular/IModularCompliance.sol",
					"exportedSymbols": {
						"IModularCompliance": [
							1178
						]
					},
					"id": 1179,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1076,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IModularCompliance",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1178,
							"linearizedBaseContracts": [
								1178
							],
							"name": "IModularCompliance",
							"nameLocation": "70:18:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "20d79de70adcc6e9353d8a9a5646b46dc352710d0a310b1ad1f67faeca7ef891",
									"id": 1082,
									"name": "ModuleInteraction",
									"nameLocation": "117:17:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"indexed": true,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "151:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "135:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "135:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1080,
												"indexed": false,
												"mutability": "mutable",
												"name": "selector",
												"nameLocation": "166:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "159:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1079,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "159:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "134:41:9"
									},
									"src": "111:65:9"
								},
								{
									"anonymous": false,
									"eventSelector": "2de35142b19ed5a07796cf30791959c592018f70b1d2d7c460eef8ffe713692b",
									"id": 1086,
									"name": "TokenBound",
									"nameLocation": "190:10:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1084,
												"indexed": false,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "209:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "201:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1083,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "201:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "200:16:9"
									},
									"src": "184:33:9"
								},
								{
									"anonymous": false,
									"eventSelector": "28a4ca7134a3b3f9aff286e79ad3daadb4a06d1b43d037a3a98bdc074edd9b7a",
									"id": 1090,
									"name": "TokenUnbound",
									"nameLocation": "231:12:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"indexed": false,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "252:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "244:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1087,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "244:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "243:16:9"
									},
									"src": "225:35:9"
								},
								{
									"anonymous": false,
									"eventSelector": "ead6a006345da1073a106d5f32372d2d2204f46cb0b4bca8f5ebafcbbed12b8a",
									"id": 1094,
									"name": "ModuleAdded",
									"nameLocation": "274:11:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"indexed": true,
												"mutability": "mutable",
												"name": "_module",
												"nameLocation": "302:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "286:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1091,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "286:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "285:25:9"
									},
									"src": "268:43:9"
								},
								{
									"anonymous": false,
									"eventSelector": "0a1ee69f55c33d8467c69ca59ce2007a737a88603d75392972520bf67cb513b8",
									"id": 1098,
									"name": "ModuleRemoved",
									"nameLocation": "325:13:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1096,
												"indexed": true,
												"mutability": "mutable",
												"name": "_module",
												"nameLocation": "355:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "339:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1095,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "339:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "338:25:9"
									},
									"src": "319:45:9"
								},
								{
									"functionSelector": "3ff5aa02",
									"id": 1103,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "bindToken",
									"nameLocation": "397:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "415:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "407:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1099,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "407:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "406:16:9"
									},
									"returnParameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "431:0:9"
									},
									"scope": 1178,
									"src": "388:44:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "40db3b50",
									"id": 1108,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unbindToken",
									"nameLocation": "449:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "469:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "461:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "461:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "460:16:9"
									},
									"returnParameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "485:0:9"
									},
									"scope": 1178,
									"src": "440:46:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1ed86f19",
									"id": 1113,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addModule",
									"nameLocation": "503:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "_module",
												"nameLocation": "521:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "513:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "513:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "512:17:9"
									},
									"returnParameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "538:0:9"
									},
									"scope": 1178,
									"src": "494:45:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a0632461",
									"id": 1118,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeModule",
									"nameLocation": "556:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "_module",
												"nameLocation": "577:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1118,
												"src": "569:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "569:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "568:17:9"
									},
									"returnParameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "594:0:9"
									},
									"scope": 1178,
									"src": "547:48:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "efb22d33",
									"id": 1125,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "callModuleFunction",
									"nameLocation": "612:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "callData",
												"nameLocation": "646:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "631:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1119,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "631:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "_module",
												"nameLocation": "664:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "656:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "656:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "630:42:9"
									},
									"returnParameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "681:0:9"
									},
									"scope": 1178,
									"src": "603:79:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8baf29b4",
									"id": 1134,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferred",
									"nameLocation": "699:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "729:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "721:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "721:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "753:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "745:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "745:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "775:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "767:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "767:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "710:79:9"
									},
									"returnParameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "798:0:9"
									},
									"scope": 1178,
									"src": "690:109:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5f8dead3",
									"id": 1141,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "created",
									"nameLocation": "816:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "832:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "824:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "824:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "845:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "837:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "823:30:9"
									},
									"returnParameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "862:0:9"
									},
									"scope": 1178,
									"src": "807:56:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8d2ea772",
									"id": 1148,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "destroyed",
									"nameLocation": "880:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "898:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "890:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "890:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "913:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "905:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "905:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "889:32:9"
									},
									"returnParameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "930:0:9"
									},
									"scope": 1178,
									"src": "871:60:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e46638e6",
									"id": 1159,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "canTransfer",
									"nameLocation": "948:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "978:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "970:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "1002:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "994:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1024:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "1016:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1016:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "959:79:9"
									},
									"returnParameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "1062:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1156,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1062:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1061:6:9"
									},
									"scope": 1178,
									"src": "939:129:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b2494df3",
									"id": 1165,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getModules",
									"nameLocation": "1085:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1095:2:9"
									},
									"returnParameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "1121:16:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1161,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1121:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1162,
													"nodeType": "ArrayTypeName",
													"src": "1121:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1120:18:9"
									},
									"scope": 1178,
									"src": "1076:63:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6a3edf28",
									"id": 1170,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenBound",
									"nameLocation": "1158:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1171:2:9"
									},
									"returnParameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "1197:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1197:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1196:9:9"
									},
									"scope": 1178,
									"src": "1149:57:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a446d49f",
									"id": 1177,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isModuleBound",
									"nameLocation": "1223:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "_module",
												"nameLocation": "1245:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "1237:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:17:9"
									},
									"returnParameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "1277:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1174,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1277:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1276:6:9"
									},
									"scope": 1178,
									"src": "1214:69:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1179,
							"src": "60:1226:9",
							"usedErrors": []
						}
					],
					"src": "33:1253:9"
				},
				"id": 9
			},
			"erc3643/erc3643/Compliance/modular/MCStorage.sol": {
				"ast": {
					"absolutePath": "erc3643/erc3643/Compliance/modular/MCStorage.sol",
					"exportedSymbols": {
						"MCStorage": [
							1197
						]
					},
					"id": 1198,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1180,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MCStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1197,
							"linearizedBaseContracts": [
								1197
							],
							"name": "MCStorage",
							"nameLocation": "71:9:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 1181,
										"nodeType": "StructuredDocumentation",
										"src": "88:43:10",
										"text": "token linked to the compliance contract"
									},
									"id": 1183,
									"mutability": "mutable",
									"name": "_tokenBound",
									"nameLocation": "154:11:10",
									"nodeType": "VariableDeclaration",
									"scope": 1197,
									"src": "137:28:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1182,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "137:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1184,
										"nodeType": "StructuredDocumentation",
										"src": "174:44:10",
										"text": "Array of modules bound to the compliance"
									},
									"id": 1187,
									"mutability": "mutable",
									"name": "_modules",
									"nameLocation": "243:8:10",
									"nodeType": "VariableDeclaration",
									"scope": 1197,
									"src": "224:27:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 1185,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "224:7:10",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 1186,
										"nodeType": "ArrayTypeName",
										"src": "224:9:10",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1188,
										"nodeType": "StructuredDocumentation",
										"src": "260:36:10",
										"text": "Mapping of module binding status"
									},
									"id": 1192,
									"mutability": "mutable",
									"name": "_moduleBound",
									"nameLocation": "336:12:10",
									"nodeType": "VariableDeclaration",
									"scope": 1197,
									"src": "302:46:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1191,
										"keyType": {
											"id": 1189,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "310:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "302:24:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 1190,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "321:4:10",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1196,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "381:5:10",
									"nodeType": "VariableDeclaration",
									"scope": 1197,
									"src": "361:25:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 1193,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "361:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1195,
										"length": {
											"hexValue": "3439",
											"id": 1194,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "369:2:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "361:11:10",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 1198,
							"src": "62:328:10",
							"usedErrors": []
						}
					],
					"src": "35:355:10"
				},
				"id": 10
			},
			"erc3643/erc3643/Compliance/modular/ModularCompliance.sol": {
				"ast": {
					"absolutePath": "erc3643/erc3643/Compliance/modular/ModularCompliance.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							954
						],
						"ContextUpgradeable": [
							996
						],
						"IClaimIssuer": [
							59
						],
						"IClaimTopicsRegistry": [
							1861
						],
						"IERC20": [
							1074
						],
						"IERC734": [
							206
						],
						"IERC735": [
							314
						],
						"IIdentity": [
							323
						],
						"IIdentityRegistry": [
							2014
						],
						"IIdentityRegistryStorage": [
							2116
						],
						"IModularCompliance": [
							1178
						],
						"IModule": [
							1834
						],
						"IToken": [
							2481
						],
						"ITrustedIssuersRegistry": [
							2206
						],
						"Initializable": [
							624
						],
						"MCStorage": [
							1197
						],
						"ModularCompliance": [
							1770
						],
						"OwnableUpgradeable": [
							455
						]
					},
					"id": 1771,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1199,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 1200,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1771,
							"sourceUnit": 456,
							"src": "61:75:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "erc3643/erc3643/token/Itoken.sol",
							"file": "../../token/Itoken.sol",
							"id": 1201,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1771,
							"sourceUnit": 2482,
							"src": "137:32:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "erc3643/erc3643/Compliance/modular/IModularCompliance.sol",
							"file": "./IModularCompliance.sol",
							"id": 1202,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1771,
							"sourceUnit": 1179,
							"src": "170:34:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "erc3643/erc3643/Compliance/modular/MCStorage.sol",
							"file": "./MCStorage.sol",
							"id": 1203,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1771,
							"sourceUnit": 1198,
							"src": "205:25:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "erc3643/erc3643/Compliance/modular/Modules/IModule.sol",
							"file": "./Modules/IModule.sol",
							"id": 1204,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1771,
							"sourceUnit": 1835,
							"src": "231:31:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1205,
										"name": "IModularCompliance",
										"nameLocations": [
											"298:18:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1178,
										"src": "298:18:11"
									},
									"id": 1206,
									"nodeType": "InheritanceSpecifier",
									"src": "298:18:11"
								},
								{
									"baseName": {
										"id": 1207,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"322:18:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 455,
										"src": "322:18:11"
									},
									"id": 1208,
									"nodeType": "InheritanceSpecifier",
									"src": "322:18:11"
								},
								{
									"baseName": {
										"id": 1209,
										"name": "MCStorage",
										"nameLocations": [
											"346:9:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1197,
										"src": "346:9:11"
									},
									"id": 1210,
									"nodeType": "InheritanceSpecifier",
									"src": "346:9:11"
								}
							],
							"canonicalName": "ModularCompliance",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1770,
							"linearizedBaseContracts": [
								1770,
								1197,
								455,
								996,
								624,
								1178
							],
							"name": "ModularCompliance",
							"nameLocation": "273:17:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1221,
										"nodeType": "Block",
										"src": "400:168:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1213,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "431:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "435:6:11",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "431:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1215,
																"name": "_tokenBound",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1183,
																"src": "445:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "431:25:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6572726f72203a20746869732061646472657373206973206e6f74206120746f6b656e20626f756e6420746f2074686520636f6d706c69616e636520636f6e7472616374",
															"id": 1217,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "470:70:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5a68ed2bc0002f6d7777b41be5e0fbfbfe715cdad34adee170beb7e99ea964f1",
																"typeString": "literal_string \"error : this address is not a token bound to the compliance contract\""
															},
															"value": "error : this address is not a token bound to the compliance contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5a68ed2bc0002f6d7777b41be5e0fbfbfe715cdad34adee170beb7e99ea964f1",
																"typeString": "literal_string \"error : this address is not a token bound to the compliance contract\""
															}
														],
														"id": 1212,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "410:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "410:140:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1219,
												"nodeType": "ExpressionStatement",
												"src": "410:140:11"
											},
											{
												"id": 1220,
												"nodeType": "PlaceholderStatement",
												"src": "560:1:11"
											}
										]
									},
									"id": 1222,
									"name": "onlyToken",
									"nameLocation": "388:9:11",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1211,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "397:2:11"
									},
									"src": "379:189:11",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1230,
										"nodeType": "Block",
										"src": "611:33:11",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1227,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 350,
														"src": "621:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "621:16:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1229,
												"nodeType": "ExpressionStatement",
												"src": "621:16:11"
											}
										]
									},
									"functionSelector": "e1c7392a",
									"id": 1231,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1225,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1224,
												"name": "initializer",
												"nameLocations": [
													"599:11:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 526,
												"src": "599:11:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "599:11:11"
										}
									],
									"name": "init",
									"nameLocation": "583:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:11"
									},
									"returnParameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "611:0:11"
									},
									"scope": 1770,
									"src": "574:70:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1103
									],
									"body": {
										"id": 1277,
										"nodeType": "Block",
										"src": "703:410:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1242,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1238,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "734:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "734:7:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 1240,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "745:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "749:6:11",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "745:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "734:21:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 1248,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1243,
																				"name": "_tokenBound",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1183,
																				"src": "776:11:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"arguments": [
																					{
																						"hexValue": "30",
																						"id": 1246,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "799:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						}
																					],
																					"id": 1245,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "791:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1244,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "791:7:11",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1247,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "791:10:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "776:25:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 1252,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1249,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "805:3:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1250,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "809:6:11",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "805:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 1251,
																				"name": "_token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1233,
																				"src": "819:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "805:20:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "776:49:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1254,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "775:51:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "734:92:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6f6e6c79206f776e6572206f7220746f6b656e2063616e2063616c6c",
															"id": 1256,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "840:30:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_85ebbeb661b177a20113638bf35f6faae6d63a8b8162625e2d2ab0a760e9b8cf",
																"typeString": "literal_string \"only owner or token can call\""
															},
															"value": "only owner or token can call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_85ebbeb661b177a20113638bf35f6faae6d63a8b8162625e2d2ab0a760e9b8cf",
																"typeString": "literal_string \"only owner or token can call\""
															}
														],
														"id": 1237,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "713:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "713:167:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1258,
												"nodeType": "ExpressionStatement",
												"src": "713:167:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1260,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1233,
																"src": "898:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1263,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "916:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "908:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1261,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "908:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1264,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "908:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "898:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
															"id": 1266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "920:33:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															},
															"value": "invalid argument - zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															}
														],
														"id": 1259,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "890:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "890:64:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1268,
												"nodeType": "ExpressionStatement",
												"src": "890:64:11"
											},
											{
												"expression": {
													"id": 1271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1269,
														"name": "_tokenBound",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1183,
														"src": "964:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1270,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1233,
														"src": "978:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "964:20:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1272,
												"nodeType": "ExpressionStatement",
												"src": "964:20:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1274,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1233,
															"src": "1099:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1273,
														"name": "TokenBound",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1086,
														"src": "1088:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1088:18:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1276,
												"nodeType": "EmitStatement",
												"src": "1083:23:11"
											}
										]
									},
									"functionSelector": "3ff5aa02",
									"id": 1278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "bindToken",
									"nameLocation": "659:9:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1235,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "694:8:11"
									},
									"parameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "677:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "669:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "669:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "668:16:11"
									},
									"returnParameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "703:0:11"
									},
									"scope": 1770,
									"src": "650:463:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1108
									],
									"body": {
										"id": 1322,
										"nodeType": "Block",
										"src": "1174:341:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1289,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1285,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "1205:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1286,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1205:7:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 1287,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1216:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1288,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1220:6:11",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1216:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1205:21:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1290,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1230:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1291,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1234:6:11",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1230:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1292,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1280,
																	"src": "1244:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1230:20:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1205:45:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6f6e6c79206f776e6572206f7220746f6b656e2063616e2063616c6c",
															"id": 1295,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1264:30:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_85ebbeb661b177a20113638bf35f6faae6d63a8b8162625e2d2ab0a760e9b8cf",
																"typeString": "literal_string \"only owner or token can call\""
															},
															"value": "only owner or token can call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_85ebbeb661b177a20113638bf35f6faae6d63a8b8162625e2d2ab0a760e9b8cf",
																"typeString": "literal_string \"only owner or token can call\""
															}
														],
														"id": 1284,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1184:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1184:120:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1297,
												"nodeType": "ExpressionStatement",
												"src": "1184:120:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1299,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1280,
																"src": "1322:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1300,
																"name": "_tokenBound",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1183,
																"src": "1332:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1322:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468697320746f6b656e206973206e6f7420626f756e64",
															"id": 1302,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1345:25:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bc637b520028211bbc531d42bfcff19a7cfbd2d183c129d537e63c33437371db",
																"typeString": "literal_string \"This token is not bound\""
															},
															"value": "This token is not bound"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bc637b520028211bbc531d42bfcff19a7cfbd2d183c129d537e63c33437371db",
																"typeString": "literal_string \"This token is not bound\""
															}
														],
														"id": 1298,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1314:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1314:57:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1304,
												"nodeType": "ExpressionStatement",
												"src": "1314:57:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1306,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1280,
																"src": "1389:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1407:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1308,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1399:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1307,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1399:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1310,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1399:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1389:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
															"id": 1312,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1411:33:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															},
															"value": "invalid argument - zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															}
														],
														"id": 1305,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1381:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1381:64:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1314,
												"nodeType": "ExpressionStatement",
												"src": "1381:64:11"
											},
											{
												"expression": {
													"id": 1316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "1455:18:11",
													"subExpression": {
														"id": 1315,
														"name": "_tokenBound",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1183,
														"src": "1462:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1317,
												"nodeType": "ExpressionStatement",
												"src": "1455:18:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1319,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1280,
															"src": "1501:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1318,
														"name": "TokenUnbound",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1090,
														"src": "1488:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1488:20:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1321,
												"nodeType": "EmitStatement",
												"src": "1483:25:11"
											}
										]
									},
									"functionSelector": "40db3b50",
									"id": 1323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unbindToken",
									"nameLocation": "1128:11:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1282,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1165:8:11"
									},
									"parameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "1148:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1323,
												"src": "1140:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1140:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1139:16:11"
									},
									"returnParameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1174:0:11"
									},
									"scope": 1770,
									"src": "1119:396:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1113
									],
									"body": {
										"id": 1383,
										"nodeType": "Block",
										"src": "1585:383:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1332,
																"name": "_module",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1325,
																"src": "1603:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1335,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1622:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1614:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1333,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1614:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1336,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1614:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1603:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
															"id": 1338,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1626:33:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															},
															"value": "invalid argument - zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															}
														],
														"id": 1331,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1595:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1595:65:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1340,
												"nodeType": "ExpressionStatement",
												"src": "1595:65:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1678:22:11",
															"subExpression": {
																"baseExpression": {
																	"id": 1342,
																	"name": "_moduleBound",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1192,
																	"src": "1679:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1344,
																"indexExpression": {
																	"id": 1343,
																	"name": "_module",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1325,
																	"src": "1692:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1679:21:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6d6f64756c6520616c726561647920626f756e64",
															"id": 1346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1702:22:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_49f5e4419f8a1741d107c52289d66583a4bd31e41918484b4780f719774ab10e",
																"typeString": "literal_string \"module already bound\""
															},
															"value": "module already bound"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_49f5e4419f8a1741d107c52289d66583a4bd31e41918484b4780f719774ab10e",
																"typeString": "literal_string \"module already bound\""
															}
														],
														"id": 1341,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1670:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1670:55:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1348,
												"nodeType": "ExpressionStatement",
												"src": "1670:55:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1350,
																	"name": "_modules",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1187,
																	"src": "1743:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 1351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1752:6:11",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1743:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3234",
																"id": 1352,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1762:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_24_by_1",
																	"typeString": "int_const 24"
																},
																"value": "24"
															},
															"src": "1743:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "63616e6e6f7420616464206d6f7265207468616e203235206d6f64756c6573",
															"id": 1354,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1766:33:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c1dee6581c6aebc50da002deed9e99d1ce1dab6a498f29e5915ed31feaae5830",
																"typeString": "literal_string \"cannot add more than 25 modules\""
															},
															"value": "cannot add more than 25 modules"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c1dee6581c6aebc50da002deed9e99d1ce1dab6a498f29e5915ed31feaae5830",
																"typeString": "literal_string \"cannot add more than 25 modules\""
															}
														],
														"id": 1349,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1735:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1735:65:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1356,
												"nodeType": "ExpressionStatement",
												"src": "1735:65:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1363,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1850:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ModularCompliance_$1770",
																		"typeString": "contract ModularCompliance"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ModularCompliance_$1770",
																		"typeString": "contract ModularCompliance"
																	}
																],
																"id": 1362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1842:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1361,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1842:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1842:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1358,
																	"name": "_module",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1325,
																	"src": "1818:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1357,
																"name": "IModule",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1834,
																"src": "1810:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IModule_$1834_$",
																	"typeString": "type(contract IModule)"
																}
															},
															"id": 1359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1810:16:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IModule_$1834",
																"typeString": "contract IModule"
															}
														},
														"id": 1360,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1827:14:11",
														"memberName": "bindCompliance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1785,
														"src": "1810:31:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address) external"
														}
													},
													"id": 1365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1810:46:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1366,
												"nodeType": "ExpressionStatement",
												"src": "1810:46:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1370,
															"name": "_module",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1325,
															"src": "1880:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1367,
															"name": "_modules",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1187,
															"src": "1866:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1369,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1875:4:11",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "1866:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 1371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1866:22:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1372,
												"nodeType": "ExpressionStatement",
												"src": "1866:22:11"
											},
											{
												"expression": {
													"id": 1377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1373,
															"name": "_moduleBound",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1192,
															"src": "1898:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1375,
														"indexExpression": {
															"id": 1374,
															"name": "_module",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1325,
															"src": "1911:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1898:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1376,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1922:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1898:28:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1378,
												"nodeType": "ExpressionStatement",
												"src": "1898:28:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1380,
															"name": "_module",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1325,
															"src": "1953:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1379,
														"name": "ModuleAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1094,
														"src": "1941:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1941:20:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1382,
												"nodeType": "EmitStatement",
												"src": "1936:25:11"
											}
										]
									},
									"functionSelector": "1ed86f19",
									"id": 1384,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1329,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1328,
												"name": "onlyOwner",
												"nameLocations": [
													"1575:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 369,
												"src": "1575:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1575:9:11"
										}
									],
									"name": "addModule",
									"nameLocation": "1530:9:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1327,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1566:8:11"
									},
									"parameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "_module",
												"nameLocation": "1548:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "1540:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1540:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1539:17:11"
									},
									"returnParameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1585:0:11"
									},
									"scope": 1770,
									"src": "1521:447:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1118
									],
									"body": {
										"id": 1469,
										"nodeType": "Block",
										"src": "2041:562:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1393,
																"name": "_module",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1386,
																"src": "2059:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1396,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2078:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2070:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1394,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2070:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1397,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2070:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2059:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
															"id": 1399,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2082:33:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															},
															"value": "invalid argument - zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															}
														],
														"id": 1392,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2051:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2051:65:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1401,
												"nodeType": "ExpressionStatement",
												"src": "2051:65:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1403,
																"name": "_moduleBound",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1192,
																"src": "2134:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1405,
															"indexExpression": {
																"id": 1404,
																"name": "_module",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1386,
																"src": "2147:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2134:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6d6f64756c65206e6f7420626f756e64",
															"id": 1406,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2157:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3f029d9821dc476c0705c03fff9255d333d5235fef87cba00cede4d1409cd713",
																"typeString": "literal_string \"module not bound\""
															},
															"value": "module not bound"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3f029d9821dc476c0705c03fff9255d333d5235fef87cba00cede4d1409cd713",
																"typeString": "literal_string \"module not bound\""
															}
														],
														"id": 1402,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2126:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2126:50:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1408,
												"nodeType": "ExpressionStatement",
												"src": "2126:50:11"
											},
											{
												"assignments": [
													1410
												],
												"declarations": [
													{
														"constant": false,
														"id": 1410,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "2194:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 1469,
														"src": "2186:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1409,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2186:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1413,
												"initialValue": {
													"expression": {
														"id": 1411,
														"name": "_modules",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1187,
														"src": "2203:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 1412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2212:6:11",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "2203:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2186:32:11"
											},
											{
												"body": {
													"id": 1467,
													"nodeType": "Block",
													"src": "2265:332:11",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1428,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1424,
																		"name": "_modules",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1187,
																		"src": "2283:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1426,
																	"indexExpression": {
																		"id": 1425,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1415,
																		"src": "2292:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2283:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1427,
																	"name": "_module",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1386,
																	"src": "2298:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2283:22:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1466,
															"nodeType": "IfStatement",
															"src": "2279:308:11",
															"trueBody": {
																"id": 1465,
																"nodeType": "Block",
																"src": "2307:280:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1435,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "2367:4:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_ModularCompliance_$1770",
																								"typeString": "contract ModularCompliance"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_ModularCompliance_$1770",
																								"typeString": "contract ModularCompliance"
																							}
																						],
																						"id": 1434,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "2359:7:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1433,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "2359:7:11",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1436,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2359:13:11",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 1430,
																							"name": "_module",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1386,
																							"src": "2333:7:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1429,
																						"name": "IModule",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1834,
																						"src": "2325:7:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IModule_$1834_$",
																							"typeString": "type(contract IModule)"
																						}
																					},
																					"id": 1431,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2325:16:11",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IModule_$1834",
																						"typeString": "contract IModule"
																					}
																				},
																				"id": 1432,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2342:16:11",
																				"memberName": "unbindCompliance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1790,
																				"src": "2325:33:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
																					"typeString": "function (address) external"
																				}
																			},
																			"id": 1437,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2325:48:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1438,
																		"nodeType": "ExpressionStatement",
																		"src": "2325:48:11"
																	},
																	{
																		"expression": {
																			"id": 1447,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1439,
																					"name": "_modules",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1187,
																					"src": "2391:8:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1441,
																				"indexExpression": {
																					"id": 1440,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1415,
																					"src": "2400:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "2391:11:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 1442,
																					"name": "_modules",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1187,
																					"src": "2405:8:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1446,
																				"indexExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1445,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1443,
																						"name": "length",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1410,
																						"src": "2414:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 1444,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "2423:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "2414:10:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2405:20:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "2391:34:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1448,
																		"nodeType": "ExpressionStatement",
																		"src": "2391:34:11"
																	},
																	{
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 1449,
																					"name": "_modules",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1187,
																					"src": "2443:8:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1451,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2452:3:11",
																				"memberName": "pop",
																				"nodeType": "MemberAccess",
																				"src": "2443:12:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
																					"typeString": "function (address[] storage pointer)"
																				}
																			},
																			"id": 1452,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2443:14:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1453,
																		"nodeType": "ExpressionStatement",
																		"src": "2443:14:11"
																	},
																	{
																		"expression": {
																			"id": 1458,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1454,
																					"name": "_moduleBound",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1192,
																					"src": "2475:12:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																						"typeString": "mapping(address => bool)"
																					}
																				},
																				"id": 1456,
																				"indexExpression": {
																					"id": 1455,
																					"name": "_module",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1386,
																					"src": "2488:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "2475:21:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "66616c7365",
																				"id": 1457,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2499:5:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			},
																			"src": "2475:29:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1459,
																		"nodeType": "ExpressionStatement",
																		"src": "2475:29:11"
																	},
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1461,
																					"name": "_module",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1386,
																					"src": "2541:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1460,
																				"name": "ModuleRemoved",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1098,
																				"src": "2527:13:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
																					"typeString": "function (address)"
																				}
																			},
																			"id": 1462,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2527:22:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1463,
																		"nodeType": "EmitStatement",
																		"src": "2522:27:11"
																	},
																	{
																		"id": 1464,
																		"nodeType": "Break",
																		"src": "2567:5:11"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1418,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1415,
														"src": "2248:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1419,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1410,
														"src": "2252:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2248:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1468,
												"initializationExpression": {
													"assignments": [
														1415
													],
													"declarations": [
														{
															"constant": false,
															"id": 1415,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2241:1:11",
															"nodeType": "VariableDeclaration",
															"scope": 1468,
															"src": "2233:9:11",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1414,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2233:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1417,
													"initialValue": {
														"hexValue": "30",
														"id": 1416,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2245:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2233:13:11"
												},
												"loopExpression": {
													"expression": {
														"id": 1422,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2260:3:11",
														"subExpression": {
															"id": 1421,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1415,
															"src": "2260:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1423,
													"nodeType": "ExpressionStatement",
													"src": "2260:3:11"
												},
												"nodeType": "ForStatement",
												"src": "2228:369:11"
											}
										]
									},
									"functionSelector": "a0632461",
									"id": 1470,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1390,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1389,
												"name": "onlyOwner",
												"nameLocations": [
													"2031:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 369,
												"src": "2031:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2031:9:11"
										}
									],
									"name": "removeModule",
									"nameLocation": "1983:12:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1388,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2022:8:11"
									},
									"parameters": {
										"id": 1387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "_module",
												"nameLocation": "2004:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "1996:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1995:17:11"
									},
									"returnParameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2041:0:11"
									},
									"scope": 1770,
									"src": "1974:629:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1134
									],
									"body": {
										"id": 1534,
										"nodeType": "Block",
										"src": "2732:378:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1488,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1483,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1472,
																	"src": "2763:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1486,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2780:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1485,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2772:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1484,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2772:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2772:10:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2763:19:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1494,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1489,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1474,
																	"src": "2786:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1492,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2801:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1491,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2793:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1490,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2793:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2793:10:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2786:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2763:40:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
															"id": 1496,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2817:33:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															},
															"value": "invalid argument - zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															}
														],
														"id": 1482,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2742:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2742:118:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1498,
												"nodeType": "ExpressionStatement",
												"src": "2742:118:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1500,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1476,
																"src": "2878:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1501,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2887:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2878:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420617267756d656e74202d206e6f2076616c7565207472616e73666572",
															"id": 1503,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2890:38:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e9c7f121b6da7dac929ed2e7ad1b1b43e75c240016a001387d6d3f264c6c87e7",
																"typeString": "literal_string \"invalid argument - no value transfer\""
															},
															"value": "invalid argument - no value transfer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e9c7f121b6da7dac929ed2e7ad1b1b43e75c240016a001387d6d3f264c6c87e7",
																"typeString": "literal_string \"invalid argument - no value transfer\""
															}
														],
														"id": 1499,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2870:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2870:59:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1505,
												"nodeType": "ExpressionStatement",
												"src": "2870:59:11"
											},
											{
												"assignments": [
													1507
												],
												"declarations": [
													{
														"constant": false,
														"id": 1507,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "2947:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 1534,
														"src": "2939:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1506,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2939:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1510,
												"initialValue": {
													"expression": {
														"id": 1508,
														"name": "_modules",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1187,
														"src": "2956:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 1509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2965:6:11",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "2956:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2939:32:11"
											},
											{
												"body": {
													"id": 1532,
													"nodeType": "Block",
													"src": "3018:86:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1527,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1472,
																		"src": "3074:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1528,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1474,
																		"src": "3081:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1529,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1476,
																		"src": "3086:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"baseExpression": {
																					"id": 1522,
																					"name": "_modules",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1187,
																					"src": "3040:8:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1524,
																				"indexExpression": {
																					"id": 1523,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1512,
																					"src": "3049:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3040:11:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1521,
																			"name": "IModule",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1834,
																			"src": "3032:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IModule_$1834_$",
																				"typeString": "type(contract IModule)"
																			}
																		},
																		"id": 1525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3032:20:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IModule_$1834",
																			"typeString": "contract IModule"
																		}
																	},
																	"id": 1526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3053:20:11",
																	"memberName": "moduleTransferAction",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1799,
																	"src": "3032:41:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) external"
																	}
																},
																"id": 1530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3032:61:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1531,
															"nodeType": "ExpressionStatement",
															"src": "3032:61:11"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1515,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1512,
														"src": "3001:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1516,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1507,
														"src": "3005:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3001:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1533,
												"initializationExpression": {
													"assignments": [
														1512
													],
													"declarations": [
														{
															"constant": false,
															"id": 1512,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2994:1:11",
															"nodeType": "VariableDeclaration",
															"scope": 1533,
															"src": "2986:9:11",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1511,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2986:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1514,
													"initialValue": {
														"hexValue": "30",
														"id": 1513,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2998:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2986:13:11"
												},
												"loopExpression": {
													"expression": {
														"id": 1519,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3013:3:11",
														"subExpression": {
															"id": 1518,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1512,
															"src": "3013:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1520,
													"nodeType": "ExpressionStatement",
													"src": "3013:3:11"
												},
												"nodeType": "ForStatement",
												"src": "2981:123:11"
											}
										]
									},
									"functionSelector": "8baf29b4",
									"id": 1535,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1480,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1479,
												"name": "onlyToken",
												"nameLocations": [
													"2722:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1222,
												"src": "2722:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2722:9:11"
										}
									],
									"name": "transferred",
									"nameLocation": "2618:11:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1478,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2713:8:11"
									},
									"parameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "2647:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "2639:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2639:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "2670:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "2662:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2662:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "2691:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "2683:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2683:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2629:74:11"
									},
									"returnParameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2732:0:11"
									},
									"scope": 1770,
									"src": "2609:501:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1141
									],
									"body": {
										"id": 1589,
										"nodeType": "Block",
										"src": "3190:306:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1546,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1537,
																"src": "3208:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3223:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1548,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3215:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1547,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3215:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1550,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3215:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3208:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
															"id": 1552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3227:33:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															},
															"value": "invalid argument - zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															}
														],
														"id": 1545,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3200:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3200:61:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1554,
												"nodeType": "ExpressionStatement",
												"src": "3200:61:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1556,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1539,
																"src": "3279:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3288:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3279:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420617267756d656e74202d206e6f2076616c7565206d696e74",
															"id": 1559,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3291:34:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0de045b53a2696c4c58a2dd6a960eacc1f1718f54ec66cb0ba5f399ae9d1fb9e",
																"typeString": "literal_string \"invalid argument - no value mint\""
															},
															"value": "invalid argument - no value mint"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0de045b53a2696c4c58a2dd6a960eacc1f1718f54ec66cb0ba5f399ae9d1fb9e",
																"typeString": "literal_string \"invalid argument - no value mint\""
															}
														],
														"id": 1555,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3271:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3271:55:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1561,
												"nodeType": "ExpressionStatement",
												"src": "3271:55:11"
											},
											{
												"assignments": [
													1563
												],
												"declarations": [
													{
														"constant": false,
														"id": 1563,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "3344:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 1589,
														"src": "3336:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1562,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3336:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1566,
												"initialValue": {
													"expression": {
														"id": 1564,
														"name": "_modules",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1187,
														"src": "3353:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 1565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3362:6:11",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "3353:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3336:32:11"
											},
											{
												"body": {
													"id": 1587,
													"nodeType": "Block",
													"src": "3415:75:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1583,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1537,
																		"src": "3467:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1584,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1539,
																		"src": "3472:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"baseExpression": {
																					"id": 1578,
																					"name": "_modules",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1187,
																					"src": "3437:8:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1580,
																				"indexExpression": {
																					"id": 1579,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1568,
																					"src": "3446:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3437:11:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1577,
																			"name": "IModule",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1834,
																			"src": "3429:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IModule_$1834_$",
																				"typeString": "type(contract IModule)"
																			}
																		},
																		"id": 1581,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3429:20:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IModule_$1834",
																			"typeString": "contract IModule"
																		}
																	},
																	"id": 1582,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3450:16:11",
																	"memberName": "moduleMintAction",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1806,
																	"src": "3429:37:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256) external"
																	}
																},
																"id": 1585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3429:50:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1586,
															"nodeType": "ExpressionStatement",
															"src": "3429:50:11"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1571,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1568,
														"src": "3398:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1572,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1563,
														"src": "3402:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3398:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1588,
												"initializationExpression": {
													"assignments": [
														1568
													],
													"declarations": [
														{
															"constant": false,
															"id": 1568,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3391:1:11",
															"nodeType": "VariableDeclaration",
															"scope": 1588,
															"src": "3383:9:11",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1567,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3383:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1570,
													"initialValue": {
														"hexValue": "30",
														"id": 1569,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3395:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3383:13:11"
												},
												"loopExpression": {
													"expression": {
														"id": 1575,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3410:3:11",
														"subExpression": {
															"id": 1574,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1568,
															"src": "3410:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1576,
													"nodeType": "ExpressionStatement",
													"src": "3410:3:11"
												},
												"nodeType": "ForStatement",
												"src": "3378:112:11"
											}
										]
									},
									"functionSelector": "5f8dead3",
									"id": 1590,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1543,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1542,
												"name": "onlyToken",
												"nameLocations": [
													"3180:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1222,
												"src": "3180:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "3180:9:11"
										}
									],
									"name": "created",
									"nameLocation": "3125:7:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1541,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3171:8:11"
									},
									"parameters": {
										"id": 1540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "3141:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1590,
												"src": "3133:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3133:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "3154:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1590,
												"src": "3146:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3132:29:11"
									},
									"returnParameters": {
										"id": 1544,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3190:0:11"
									},
									"scope": 1770,
									"src": "3116:380:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1148
									],
									"body": {
										"id": 1644,
										"nodeType": "Block",
										"src": "3608:310:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1606,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1601,
																"name": "_from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1592,
																"src": "3626:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3643:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1603,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3635:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1602,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3635:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1605,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3635:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3626:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
															"id": 1607,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3647:33:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															},
															"value": "invalid argument - zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															}
														],
														"id": 1600,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3618:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3618:63:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1609,
												"nodeType": "ExpressionStatement",
												"src": "3618:63:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1611,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1594,
																"src": "3699:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1612,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3708:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3699:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420617267756d656e74202d206e6f2076616c7565206275726e",
															"id": 1614,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3711:34:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5a00bd734c7992f377cbeced90f5c16f281fb6575139ae7312aa5e8718ec4a06",
																"typeString": "literal_string \"invalid argument - no value burn\""
															},
															"value": "invalid argument - no value burn"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5a00bd734c7992f377cbeced90f5c16f281fb6575139ae7312aa5e8718ec4a06",
																"typeString": "literal_string \"invalid argument - no value burn\""
															}
														],
														"id": 1610,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3691:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3691:55:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1616,
												"nodeType": "ExpressionStatement",
												"src": "3691:55:11"
											},
											{
												"assignments": [
													1618
												],
												"declarations": [
													{
														"constant": false,
														"id": 1618,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "3764:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 1644,
														"src": "3756:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1617,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3756:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1621,
												"initialValue": {
													"expression": {
														"id": 1619,
														"name": "_modules",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1187,
														"src": "3773:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 1620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3782:6:11",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "3773:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3756:32:11"
											},
											{
												"body": {
													"id": 1642,
													"nodeType": "Block",
													"src": "3835:77:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1638,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1592,
																		"src": "3887:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1639,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1594,
																		"src": "3894:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"baseExpression": {
																					"id": 1633,
																					"name": "_modules",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1187,
																					"src": "3857:8:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1635,
																				"indexExpression": {
																					"id": 1634,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1623,
																					"src": "3866:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3857:11:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1632,
																			"name": "IModule",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1834,
																			"src": "3849:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IModule_$1834_$",
																				"typeString": "type(contract IModule)"
																			}
																		},
																		"id": 1636,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3849:20:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IModule_$1834",
																			"typeString": "contract IModule"
																		}
																	},
																	"id": 1637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3870:16:11",
																	"memberName": "moduleBurnAction",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1813,
																	"src": "3849:37:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256) external"
																	}
																},
																"id": 1640,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3849:52:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1641,
															"nodeType": "ExpressionStatement",
															"src": "3849:52:11"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1626,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1623,
														"src": "3818:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1627,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1618,
														"src": "3822:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3818:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1643,
												"initializationExpression": {
													"assignments": [
														1623
													],
													"declarations": [
														{
															"constant": false,
															"id": 1623,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3811:1:11",
															"nodeType": "VariableDeclaration",
															"scope": 1643,
															"src": "3803:9:11",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1622,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3803:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1625,
													"initialValue": {
														"hexValue": "30",
														"id": 1624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3815:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3803:13:11"
												},
												"loopExpression": {
													"expression": {
														"id": 1630,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3830:3:11",
														"subExpression": {
															"id": 1629,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1623,
															"src": "3830:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1631,
													"nodeType": "ExpressionStatement",
													"src": "3830:3:11"
												},
												"nodeType": "ForStatement",
												"src": "3798:114:11"
											}
										]
									},
									"functionSelector": "8d2ea772",
									"id": 1645,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1598,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1597,
												"name": "onlyToken",
												"nameLocations": [
													"3594:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1222,
												"src": "3594:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "3594:9:11"
										}
									],
									"name": "destroyed",
									"nameLocation": "3511:9:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1596,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3577:8:11"
									},
									"parameters": {
										"id": 1595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "3529:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1645,
												"src": "3521:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3521:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "3544:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1645,
												"src": "3536:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3536:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3520:31:11"
									},
									"returnParameters": {
										"id": 1599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3608:0:11"
									},
									"scope": 1770,
									"src": "3502:416:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1125
									],
									"body": {
										"id": 1670,
										"nodeType": "Block",
										"src": "4050:687:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1656,
																"name": "_moduleBound",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1192,
																"src": "4068:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1658,
															"indexExpression": {
																"id": 1657,
																"name": "_module",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1649,
																"src": "4081:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4068:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "63616c6c206f6e6c79206f6e20626f756e64206d6f64756c65",
															"id": 1659,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4091:27:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_db4dc5d7747dd41cae264893a34d079922ab272ca9cb8b8764be76354fbf8396",
																"typeString": "literal_string \"call only on bound module\""
															},
															"value": "call only on bound module"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_db4dc5d7747dd41cae264893a34d079922ab272ca9cb8b8764be76354fbf8396",
																"typeString": "literal_string \"call only on bound module\""
															}
														],
														"id": 1655,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4060:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4060:59:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1661,
												"nodeType": "ExpressionStatement",
												"src": "4060:59:11"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4138:530:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4152:36:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4183:4:11",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4177:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4177:11:11"
															},
															"variables": [
																{
																	"name": "freeMemoryPointer",
																	"nodeType": "YulTypedName",
																	"src": "4156:17:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "freeMemoryPointer",
																		"nodeType": "YulIdentifier",
																		"src": "4214:17:11"
																	},
																	{
																		"name": "callData.offset",
																		"nodeType": "YulIdentifier",
																		"src": "4233:15:11"
																	},
																	{
																		"name": "callData.length",
																		"nodeType": "YulIdentifier",
																		"src": "4250:15:11"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "4201:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4201:65:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4201:65:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4544:114:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4577:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4580:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nodeType": "YulIdentifier",
																						"src": "4583:14:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4583:16:11"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "4562:14:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4562:38:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4562:38:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4624:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nodeType": "YulIdentifier",
																						"src": "4627:14:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4627:16:11"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4617:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4617:27:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4617:27:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "gas",
																					"nodeType": "YulIdentifier",
																					"src": "4332:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4332:5:11"
																			},
																			{
																				"name": "_module",
																				"nodeType": "YulIdentifier",
																				"src": "4359:7:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4388:1:11",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"name": "freeMemoryPointer",
																				"nodeType": "YulIdentifier",
																				"src": "4411:17:11"
																			},
																			{
																				"name": "callData.length",
																				"nodeType": "YulIdentifier",
																				"src": "4450:15:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4487:1:11",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4510:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "call",
																			"nodeType": "YulIdentifier",
																			"src": "4306:4:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4306:223:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4282:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4282:261:11"
															},
															"nodeType": "YulIf",
															"src": "4279:379:11"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1649,
														"isOffset": false,
														"isSlot": false,
														"src": "4359:7:11",
														"valueSize": 1
													},
													{
														"declaration": 1647,
														"isOffset": false,
														"isSlot": false,
														"src": "4250:15:11",
														"suffix": "length",
														"valueSize": 1
													},
													{
														"declaration": 1647,
														"isOffset": false,
														"isSlot": false,
														"src": "4450:15:11",
														"suffix": "length",
														"valueSize": 1
													},
													{
														"declaration": 1647,
														"isOffset": true,
														"isSlot": false,
														"src": "4233:15:11",
														"suffix": "offset",
														"valueSize": 1
													}
												],
												"id": 1662,
												"nodeType": "InlineAssembly",
												"src": "4129:539:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1664,
															"name": "_module",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1649,
															"src": "4701:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1666,
																	"name": "callData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1647,
																	"src": "4720:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																],
																"id": 1665,
																"name": "_selector",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1769,
																"src": "4710:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																	"typeString": "function (bytes calldata) pure returns (bytes4)"
																}
															},
															"id": 1667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4710:19:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"id": 1663,
														"name": "ModuleInteraction",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1082,
														"src": "4683:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes4_$returns$__$",
															"typeString": "function (address,bytes4)"
														}
													},
													"id": 1668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4683:47:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1669,
												"nodeType": "EmitStatement",
												"src": "4678:52:11"
											}
										]
									},
									"functionSelector": "efb22d33",
									"id": 1671,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1653,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1652,
												"name": "onlyOwner",
												"nameLocations": [
													"4036:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 369,
												"src": "4036:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "4036:9:11"
										}
									],
									"name": "callModuleFunction",
									"nameLocation": "3933:18:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1651,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4019:8:11"
									},
									"parameters": {
										"id": 1650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1647,
												"mutability": "mutable",
												"name": "callData",
												"nameLocation": "3967:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "3952:23:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1646,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3952:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "_module",
												"nameLocation": "3985:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "3977:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3977:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3951:42:11"
									},
									"returnParameters": {
										"id": 1654,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4050:0:11"
									},
									"scope": 1770,
									"src": "3924:813:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1177
									],
									"body": {
										"id": 1683,
										"nodeType": "Block",
										"src": "4857:45:11",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1679,
														"name": "_moduleBound",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1192,
														"src": "4874:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1681,
													"indexExpression": {
														"id": 1680,
														"name": "_module",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1673,
														"src": "4887:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4874:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1678,
												"id": 1682,
												"nodeType": "Return",
												"src": "4867:28:11"
											}
										]
									},
									"functionSelector": "a446d49f",
									"id": 1684,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isModuleBound",
									"nameLocation": "4752:13:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1675,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4821:8:11"
									},
									"parameters": {
										"id": 1674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1673,
												"mutability": "mutable",
												"name": "_module",
												"nameLocation": "4774:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "4766:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1672,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4766:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4765:17:11"
									},
									"returnParameters": {
										"id": 1678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1677,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "4847:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1676,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4847:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4846:6:11"
									},
									"scope": 1770,
									"src": "4743:159:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1165
									],
									"body": {
										"id": 1693,
										"nodeType": "Block",
										"src": "4980:32:11",
										"statements": [
											{
												"expression": {
													"id": 1691,
													"name": "_modules",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1187,
													"src": "4997:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 1690,
												"id": 1692,
												"nodeType": "Return",
												"src": "4990:15:11"
											}
										]
									},
									"functionSelector": "b2494df3",
									"id": 1694,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getModules",
									"nameLocation": "4917:10:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1686,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4944:8:11"
									},
									"parameters": {
										"id": 1685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4927:2:11"
									},
									"returnParameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1694,
												"src": "4962:16:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1687,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4962:7:11",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1688,
													"nodeType": "ArrayTypeName",
													"src": "4962:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4961:18:11"
									},
									"scope": 1770,
									"src": "4908:104:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1170
									],
									"body": {
										"id": 1702,
										"nodeType": "Block",
										"src": "5084:35:11",
										"statements": [
											{
												"expression": {
													"id": 1700,
													"name": "_tokenBound",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1183,
													"src": "5101:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1699,
												"id": 1701,
												"nodeType": "Return",
												"src": "5094:18:11"
											}
										]
									},
									"functionSelector": "6a3edf28",
									"id": 1703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenBound",
									"nameLocation": "5027:13:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1696,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5057:8:11"
									},
									"parameters": {
										"id": 1695,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5040:2:11"
									},
									"returnParameters": {
										"id": 1699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1698,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "5075:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1697,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:11"
									},
									"scope": 1770,
									"src": "5018:101:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1159
									],
									"body": {
										"id": 1753,
										"nodeType": "Block",
										"src": "5258:387:11",
										"statements": [
											{
												"assignments": [
													1716
												],
												"declarations": [
													{
														"constant": false,
														"id": 1716,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "5276:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 1753,
														"src": "5268:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1715,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5268:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1719,
												"initialValue": {
													"expression": {
														"id": 1717,
														"name": "_modules",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1187,
														"src": "5285:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 1718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5294:6:11",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "5285:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5268:32:11"
											},
											{
												"body": {
													"id": 1749,
													"nodeType": "Block",
													"src": "5347:271:11",
													"statements": [
														{
															"condition": {
																"id": 1744,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "5382:166:11",
																"subExpression": {
																	"arguments": [
																		{
																			"id": 1736,
																			"name": "_from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1705,
																			"src": "5437:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1737,
																			"name": "_to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1707,
																			"src": "5464:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1738,
																			"name": "_value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1709,
																			"src": "5489:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"arguments": [
																				{
																					"id": 1741,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "5525:4:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_ModularCompliance_$1770",
																						"typeString": "contract ModularCompliance"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_ModularCompliance_$1770",
																						"typeString": "contract ModularCompliance"
																					}
																				],
																				"id": 1740,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5517:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1739,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5517:7:11",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1742,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5517:13:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 1731,
																						"name": "_modules",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1187,
																						"src": "5391:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_address_$dyn_storage",
																							"typeString": "address[] storage ref"
																						}
																					},
																					"id": 1733,
																					"indexExpression": {
																						"id": 1732,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1721,
																						"src": "5400:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "5391:11:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1730,
																				"name": "IModule",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1834,
																				"src": "5383:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IModule_$1834_$",
																					"typeString": "type(contract IModule)"
																				}
																			},
																			"id": 1734,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5383:20:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IModule_$1834",
																				"typeString": "contract IModule"
																			}
																		},
																		"id": 1735,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5404:11:11",
																		"memberName": "moduleCheck",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1826,
																		"src": "5383:32:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256,address) view external returns (bool)"
																		}
																	},
																	"id": 1743,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5383:165:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1748,
															"nodeType": "IfStatement",
															"src": "5361:247:11",
															"trueBody": {
																"id": 1747,
																"nodeType": "Block",
																"src": "5563:45:11",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "66616c7365",
																			"id": 1745,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5588:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "false"
																		},
																		"functionReturnParameters": 1714,
																		"id": 1746,
																		"nodeType": "Return",
																		"src": "5581:12:11"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1724,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1721,
														"src": "5330:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1725,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1716,
														"src": "5334:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5330:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1750,
												"initializationExpression": {
													"assignments": [
														1721
													],
													"declarations": [
														{
															"constant": false,
															"id": 1721,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5323:1:11",
															"nodeType": "VariableDeclaration",
															"scope": 1750,
															"src": "5315:9:11",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1720,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5315:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1723,
													"initialValue": {
														"hexValue": "30",
														"id": 1722,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5327:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5315:13:11"
												},
												"loopExpression": {
													"expression": {
														"id": 1728,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "5342:3:11",
														"subExpression": {
															"id": 1727,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1721,
															"src": "5342:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1729,
													"nodeType": "ExpressionStatement",
													"src": "5342:3:11"
												},
												"nodeType": "ForStatement",
												"src": "5310:308:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1751,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5634:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1714,
												"id": 1752,
												"nodeType": "Return",
												"src": "5627:11:11"
											}
										]
									},
									"functionSelector": "e46638e6",
									"id": 1754,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "canTransfer",
									"nameLocation": "5134:11:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1711,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5234:8:11"
									},
									"parameters": {
										"id": 1710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "5163:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1754,
												"src": "5155:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5155:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1707,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "5186:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1754,
												"src": "5178:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5178:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1709,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "5207:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1754,
												"src": "5199:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5199:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5145:74:11"
									},
									"returnParameters": {
										"id": 1714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1754,
												"src": "5252:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1712,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5252:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5251:6:11"
									},
									"scope": 1770,
									"src": "5125:520:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1768,
										"nodeType": "Block",
										"src": "5761:146:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1761,
															"name": "callData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1756,
															"src": "5775:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														},
														"id": 1762,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5784:6:11",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5775:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "34",
														"id": 1763,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5794:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "4"
													},
													"src": "5775:20:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1767,
												"nodeType": "IfStatement",
												"src": "5771:130:11",
												"trueBody": {
													"id": 1766,
													"nodeType": "Block",
													"src": "5797:104:11",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "5820:71:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5838:39:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "callData.offset",
																					"nodeType": "YulIdentifier",
																					"src": "5861:15:11"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nodeType": "YulIdentifier",
																				"src": "5848:12:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5848:29:11"
																		},
																		"variableNames": [
																			{
																				"name": "result",
																				"nodeType": "YulIdentifier",
																				"src": "5838:6:11"
																			}
																		]
																	}
																]
															},
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 1756,
																	"isOffset": true,
																	"isSlot": false,
																	"src": "5861:15:11",
																	"suffix": "offset",
																	"valueSize": 1
																},
																{
																	"declaration": 1759,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5838:6:11",
																	"valueSize": 1
																}
															],
															"id": 1765,
															"nodeType": "InlineAssembly",
															"src": "5811:80:11"
														}
													]
												}
											}
										]
									},
									"id": 1769,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_selector",
									"nameLocation": "5660:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "callData",
												"nameLocation": "5685:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1769,
												"src": "5670:23:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1755,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5670:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5669:25:11"
									},
									"returnParameters": {
										"id": 1760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "5749:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1769,
												"src": "5742:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1758,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "5742:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5741:15:11"
									},
									"scope": 1770,
									"src": "5651:256:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1771,
							"src": "264:5645:11",
							"usedErrors": []
						}
					],
					"src": "36:5874:11"
				},
				"id": 11
			},
			"erc3643/erc3643/Compliance/modular/Modules/IModule.sol": {
				"ast": {
					"absolutePath": "erc3643/erc3643/Compliance/modular/Modules/IModule.sol",
					"exportedSymbols": {
						"IModule": [
							1834
						]
					},
					"id": 1835,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1772,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IModule",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1834,
							"linearizedBaseContracts": [
								1834
							],
							"name": "IModule",
							"nameLocation": "70:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "1f7b76c58fb697eb53c6c7c1becb96911516a136e24d7ced386b2355358b75a3",
									"id": 1776,
									"name": "ComplianceBound",
									"nameLocation": "104:15:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1774,
												"indexed": true,
												"mutability": "mutable",
												"name": "_compliance",
												"nameLocation": "136:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "120:27:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "120:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "119:29:12"
									},
									"src": "98:51:12"
								},
								{
									"anonymous": false,
									"eventSelector": "408b49d9be1c914c52a0227e18a077e5a892dddf32a26cfa94a5d9708fad7718",
									"id": 1780,
									"name": "ComplianceUnbound",
									"nameLocation": "163:17:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1778,
												"indexed": true,
												"mutability": "mutable",
												"name": "_compliance",
												"nameLocation": "197:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "181:27:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1777,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "181:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "180:29:12"
									},
									"src": "157:53:12"
								},
								{
									"functionSelector": "4a932544",
									"id": 1785,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "bindCompliance",
									"nameLocation": "241:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "_compliance",
												"nameLocation": "264:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "256:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "256:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "255:21:12"
									},
									"returnParameters": {
										"id": 1784,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "285:0:12"
									},
									"scope": 1834,
									"src": "232:54:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0694a5fb",
									"id": 1790,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unbindCompliance",
									"nameLocation": "303:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1787,
												"mutability": "mutable",
												"name": "_compliance",
												"nameLocation": "328:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1790,
												"src": "320:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1786,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "320:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "319:21:12"
									},
									"returnParameters": {
										"id": 1789,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "349:0:12"
									},
									"scope": 1834,
									"src": "294:56:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2cb7e1ec",
									"id": 1799,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "moduleTransferAction",
									"nameLocation": "367:20:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1792,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "396:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1799,
												"src": "388:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "388:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1794,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "411:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 1799,
												"src": "403:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1793,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1796,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "424:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1799,
												"src": "416:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "416:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "387:44:12"
									},
									"returnParameters": {
										"id": 1798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "440:0:12"
									},
									"scope": 1834,
									"src": "358:83:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f104a8c9",
									"id": 1806,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "moduleMintAction",
									"nameLocation": "458:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "483:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "475:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1803,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "496:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "488:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "488:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:29:12"
									},
									"returnParameters": {
										"id": 1805,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "512:0:12"
									},
									"scope": 1834,
									"src": "449:64:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "372491a2",
									"id": 1813,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "moduleBurnAction",
									"nameLocation": "530:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1808,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "555:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1813,
												"src": "547:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "547:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1810,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "570:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1813,
												"src": "562:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "562:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:31:12"
									},
									"returnParameters": {
										"id": 1812,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "586:0:12"
									},
									"scope": 1834,
									"src": "521:66:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "013b7ce4",
									"id": 1826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "moduleCheck",
									"nameLocation": "604:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1815,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "624:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1826,
												"src": "616:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "616:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1817,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "639:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 1826,
												"src": "631:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1816,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "631:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1819,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "652:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1826,
												"src": "644:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "644:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "_compliance",
												"nameLocation": "668:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1826,
												"src": "660:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1820,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "615:65:12"
									},
									"returnParameters": {
										"id": 1825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1826,
												"src": "704:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1823,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "704:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "703:6:12"
									},
									"scope": 1834,
									"src": "595:115:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4cf4d295",
									"id": 1833,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isComplianceBound",
									"nameLocation": "727:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1828,
												"mutability": "mutable",
												"name": "_compliance",
												"nameLocation": "753:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1833,
												"src": "745:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1827,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "745:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "744:21:12"
									},
									"returnParameters": {
										"id": 1832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1831,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1833,
												"src": "789:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1830,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "789:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:6:12"
									},
									"scope": 1834,
									"src": "718:77:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1835,
							"src": "60:738:12",
							"usedErrors": []
						}
					],
					"src": "33:765:12"
				},
				"id": 12
			},
			"erc3643/erc3643/registry/interface/IClaimTopicsRegistry.sol": {
				"ast": {
					"absolutePath": "erc3643/erc3643/registry/interface/IClaimTopicsRegistry.sol",
					"exportedSymbols": {
						"IClaimTopicsRegistry": [
							1861
						]
					},
					"id": 1862,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1836,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IClaimTopicsRegistry",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1861,
							"linearizedBaseContracts": [
								1861
							],
							"name": "IClaimTopicsRegistry",
							"nameLocation": "72:20:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "01c928b7f7ade2949e92366aa9454dbef3a416b731cf6ec786ba9595bbd814d6",
									"id": 1840,
									"name": "ClaimTopicAdded",
									"nameLocation": "105:15:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1838,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimTopic",
												"nameLocation": "137:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "121:26:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "121:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "120:28:13"
									},
									"src": "99:50:13"
								},
								{
									"anonymous": false,
									"eventSelector": "0b1381093c776453c1bbe54fd68be1b235c65db61d099cb50d194b2991e0eec5",
									"id": 1844,
									"name": "ClaimTopicRemoved",
									"nameLocation": "161:17:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1842,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimTopic",
												"nameLocation": "195:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "179:26:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "179:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "178:28:13"
									},
									"src": "155:52:13"
								},
								{
									"functionSelector": "c7b22551",
									"id": 1849,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addClaimTopic",
									"nameLocation": "222:13:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1846,
												"mutability": "mutable",
												"name": "_claimTopic",
												"nameLocation": "244:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1849,
												"src": "236:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1845,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "236:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "235:21:13"
									},
									"returnParameters": {
										"id": 1848,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "265:0:13"
									},
									"scope": 1861,
									"src": "213:53:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "08297846",
									"id": 1854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeClaimTopic",
									"nameLocation": "281:16:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1851,
												"mutability": "mutable",
												"name": "_claimTopic",
												"nameLocation": "306:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "298:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "298:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "297:21:13"
									},
									"returnParameters": {
										"id": 1853,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "327:0:13"
									},
									"scope": 1861,
									"src": "272:56:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "df09d604",
									"id": 1860,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getClaimTopics",
									"nameLocation": "343:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1855,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "357:2:13"
									},
									"returnParameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "383:16:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1856,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "383:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1857,
													"nodeType": "ArrayTypeName",
													"src": "383:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "382:18:13"
									},
									"scope": 1861,
									"src": "334:67:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1862,
							"src": "62:341:13",
							"usedErrors": []
						}
					],
					"src": "37:367:13"
				},
				"id": 13
			},
			"erc3643/erc3643/registry/interface/IIdentityRegistry.sol": {
				"ast": {
					"absolutePath": "erc3643/erc3643/registry/interface/IIdentityRegistry.sol",
					"exportedSymbols": {
						"IClaimIssuer": [
							59
						],
						"IClaimTopicsRegistry": [
							1861
						],
						"IERC734": [
							206
						],
						"IERC735": [
							314
						],
						"IIdentity": [
							323
						],
						"IIdentityRegistry": [
							2014
						],
						"IIdentityRegistryStorage": [
							2116
						],
						"ITrustedIssuersRegistry": [
							2206
						]
					},
					"id": 2015,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1863,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:14"
						},
						{
							"absolutePath": "erc3643/erc3643/registry/interface/ITrustedIssuersRegistry.sol",
							"file": "./ITrustedIssuersRegistry.sol",
							"id": 1864,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2015,
							"sourceUnit": 2207,
							"src": "62:39:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "erc3643/erc3643/registry/interface/IClaimTopicsRegistry.sol",
							"file": "./IClaimTopicsRegistry.sol",
							"id": 1865,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2015,
							"sourceUnit": 1862,
							"src": "102:36:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "erc3643/erc3643/registry/interface/IIdentityRegistryStorage.sol",
							"file": "./IIdentityRegistryStorage.sol",
							"id": 1866,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2015,
							"sourceUnit": 2117,
							"src": "139:40:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
							"file": "@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
							"id": 1867,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2015,
							"sourceUnit": 60,
							"src": "181:67:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@onchain-id/solidity/contracts/interface/IIdentity.sol",
							"file": "@onchain-id/solidity/contracts/interface/IIdentity.sol",
							"id": 1868,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2015,
							"sourceUnit": 324,
							"src": "249:64:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IIdentityRegistry",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2014,
							"linearizedBaseContracts": [
								2014
							],
							"name": "IIdentityRegistry",
							"nameLocation": "325:17:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "7170bf15b246e880b2369cd7c67d057760d8a35149e8c64dde91efa22bcc76d0",
									"id": 1872,
									"name": "ClaimTopicsRegistrySet",
									"nameLocation": "355:22:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1870,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimTopicsRegistry",
												"nameLocation": "394:19:14",
												"nodeType": "VariableDeclaration",
												"scope": 1872,
												"src": "378:35:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "378:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "377:37:14"
									},
									"src": "349:66:14"
								},
								{
									"anonymous": false,
									"eventSelector": "2fa8b95c1db7afe99e3398f3792f008135cedc1fa26b0bb2ecd2352cd166d53c",
									"id": 1876,
									"name": "IdentityStorageSet",
									"nameLocation": "427:18:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1874,
												"indexed": true,
												"mutability": "mutable",
												"name": "identityStorage",
												"nameLocation": "462:15:14",
												"nodeType": "VariableDeclaration",
												"scope": 1876,
												"src": "446:31:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "445:33:14"
									},
									"src": "421:58:14"
								},
								{
									"anonymous": false,
									"eventSelector": "1b98cb79e6f73020175fe87333f1b91ad6a881519c0afe30340c2599b2b4bde0",
									"id": 1880,
									"name": "TrustedIssuersRegistrySet",
									"nameLocation": "491:25:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1878,
												"indexed": true,
												"mutability": "mutable",
												"name": "trustedIssuersRegistry",
												"nameLocation": "533:22:14",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "517:38:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1877,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "517:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "516:40:14"
									},
									"src": "485:72:14"
								},
								{
									"anonymous": false,
									"eventSelector": "6ae73635c50d24a45af6fbd5e016ac4bed179addbc8bf24e04ff0fcc6d33af19",
									"id": 1887,
									"name": "IdentityRegistered",
									"nameLocation": "569:18:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1882,
												"indexed": true,
												"mutability": "mutable",
												"name": "investorAddress",
												"nameLocation": "613:15:14",
												"nodeType": "VariableDeclaration",
												"scope": 1887,
												"src": "597:31:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1881,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "597:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1885,
												"indexed": true,
												"mutability": "mutable",
												"name": "identity",
												"nameLocation": "656:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1887,
												"src": "638:26:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$323",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 1884,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1883,
														"name": "IIdentity",
														"nameLocations": [
															"638:9:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "638:9:14"
													},
													"referencedDeclaration": 323,
													"src": "638:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$323",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "587:83:14"
									},
									"src": "563:108:14"
								},
								{
									"anonymous": false,
									"eventSelector": "59d6590e225b81befe259af056324092801080acbb7feab310eb34678871f327",
									"id": 1894,
									"name": "IdentityRemoved",
									"nameLocation": "683:15:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1889,
												"indexed": true,
												"mutability": "mutable",
												"name": "investorAddress",
												"nameLocation": "724:15:14",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "708:31:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1892,
												"indexed": true,
												"mutability": "mutable",
												"name": "identity",
												"nameLocation": "767:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "749:26:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$323",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 1891,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1890,
														"name": "IIdentity",
														"nameLocations": [
															"749:9:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "749:9:14"
													},
													"referencedDeclaration": 323,
													"src": "749:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$323",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "698:83:14"
									},
									"src": "677:105:14"
								},
								{
									"anonymous": false,
									"eventSelector": "e98082932c8056a0f514da9104e4a66bc2cbaef102ad59d90c4b24220ebf6010",
									"id": 1902,
									"name": "IdentityUpdated",
									"nameLocation": "794:15:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1897,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldIdentity",
												"nameLocation": "837:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 1902,
												"src": "819:29:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$323",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 1896,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1895,
														"name": "IIdentity",
														"nameLocations": [
															"819:9:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "819:9:14"
													},
													"referencedDeclaration": 323,
													"src": "819:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$323",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1900,
												"indexed": true,
												"mutability": "mutable",
												"name": "newIdentity",
												"nameLocation": "876:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 1902,
												"src": "858:29:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$323",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 1899,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1898,
														"name": "IIdentity",
														"nameLocations": [
															"858:9:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "858:9:14"
													},
													"referencedDeclaration": 323,
													"src": "858:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$323",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "809:84:14"
									},
									"src": "788:106:14"
								},
								{
									"anonymous": false,
									"eventSelector": "04ed3b726495c2dca1ff1215d9ca54e1a4030abb5e82b0f6ce55702416cee853",
									"id": 1908,
									"name": "CountryUpdated",
									"nameLocation": "906:14:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1904,
												"indexed": true,
												"mutability": "mutable",
												"name": "investorAddress",
												"nameLocation": "946:15:14",
												"nodeType": "VariableDeclaration",
												"scope": 1908,
												"src": "930:31:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1906,
												"indexed": true,
												"mutability": "mutable",
												"name": "country",
												"nameLocation": "986:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1908,
												"src": "971:22:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1905,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "971:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "920:79:14"
									},
									"src": "900:100:14"
								},
								{
									"functionSelector": "454a03e0",
									"id": 1918,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registerIdentity",
									"nameLocation": "1015:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1910,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "1049:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "1041:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1909,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1041:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1913,
												"mutability": "mutable",
												"name": "_identity",
												"nameLocation": "1081:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "1071:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$323",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 1912,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1911,
														"name": "IIdentity",
														"nameLocations": [
															"1071:9:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "1071:9:14"
													},
													"referencedDeclaration": 323,
													"src": "1071:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$323",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1915,
												"mutability": "mutable",
												"name": "_country",
												"nameLocation": "1107:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "1100:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1914,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1100:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1031:90:14"
									},
									"returnParameters": {
										"id": 1917,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1130:0:14"
									},
									"scope": 2014,
									"src": "1006:125:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a8d29d1d",
									"id": 1923,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deleteIdentity",
									"nameLocation": "1146:14:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1920,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "1169:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 1923,
												"src": "1161:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1919,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1161:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1160:22:14"
									},
									"returnParameters": {
										"id": 1922,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1191:0:14"
									},
									"scope": 2014,
									"src": "1137:55:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "26d941ae",
									"id": 1928,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setIdentityRegistryStorage",
									"nameLocation": "1207:26:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1925,
												"mutability": "mutable",
												"name": "_identityRegistryStorage",
												"nameLocation": "1242:24:14",
												"nodeType": "VariableDeclaration",
												"scope": 1928,
												"src": "1234:32:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1924,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1233:34:14"
									},
									"returnParameters": {
										"id": 1927,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1284:0:14"
									},
									"scope": 2014,
									"src": "1198:87:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "670af6a9",
									"id": 1933,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setClaimTopicsRegistry",
									"nameLocation": "1300:22:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1930,
												"mutability": "mutable",
												"name": "_claimTopicsRegistry",
												"nameLocation": "1331:20:14",
												"nodeType": "VariableDeclaration",
												"scope": 1933,
												"src": "1323:28:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1929,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1322:30:14"
									},
									"returnParameters": {
										"id": 1932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:14"
									},
									"scope": 2014,
									"src": "1291:71:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e744d789",
									"id": 1938,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setTrustedIssuersRegistry",
									"nameLocation": "1377:25:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1935,
												"mutability": "mutable",
												"name": "_trustedIssuersRegistry",
												"nameLocation": "1411:23:14",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "1403:31:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1934,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1403:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1402:33:14"
									},
									"returnParameters": {
										"id": 1937,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1452:0:14"
									},
									"scope": 2014,
									"src": "1368:85:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3b239a7f",
									"id": 1945,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateCountry",
									"nameLocation": "1468:13:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1940,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "1490:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 1945,
												"src": "1482:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1939,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1482:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1942,
												"mutability": "mutable",
												"name": "_country",
												"nameLocation": "1511:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1945,
												"src": "1504:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1941,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1504:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1481:39:14"
									},
									"returnParameters": {
										"id": 1944,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1529:0:14"
									},
									"scope": 2014,
									"src": "1459:71:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8e098ca1",
									"id": 1953,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateIdentity",
									"nameLocation": "1545:14:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1947,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "1568:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 1953,
												"src": "1560:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1946,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1950,
												"mutability": "mutable",
												"name": "_identity",
												"nameLocation": "1592:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1953,
												"src": "1582:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$323",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 1949,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1948,
														"name": "IIdentity",
														"nameLocations": [
															"1582:9:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "1582:9:14"
													},
													"referencedDeclaration": 323,
													"src": "1582:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$323",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1559:43:14"
									},
									"returnParameters": {
										"id": 1952,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1611:0:14"
									},
									"scope": 2014,
									"src": "1536:76:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "653dc9f1",
									"id": 1966,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "batchRegisterIdentity",
									"nameLocation": "1627:21:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1956,
												"mutability": "mutable",
												"name": "_userAddresses",
												"nameLocation": "1677:14:14",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "1658:33:14",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1954,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1658:7:14",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1955,
													"nodeType": "ArrayTypeName",
													"src": "1658:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1960,
												"mutability": "mutable",
												"name": "_identities",
												"nameLocation": "1722:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "1701:32:14",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IIdentity_$323_$dyn_calldata_ptr",
													"typeString": "contract IIdentity[]"
												},
												"typeName": {
													"baseType": {
														"id": 1958,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1957,
															"name": "IIdentity",
															"nameLocations": [
																"1701:9:14"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 323,
															"src": "1701:9:14"
														},
														"referencedDeclaration": 323,
														"src": "1701:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IIdentity_$323",
															"typeString": "contract IIdentity"
														}
													},
													"id": 1959,
													"nodeType": "ArrayTypeName",
													"src": "1701:11:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IIdentity_$323_$dyn_storage_ptr",
														"typeString": "contract IIdentity[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1963,
												"mutability": "mutable",
												"name": "_countries",
												"nameLocation": "1761:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "1743:28:14",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint16_$dyn_calldata_ptr",
													"typeString": "uint16[]"
												},
												"typeName": {
													"baseType": {
														"id": 1961,
														"name": "uint16",
														"nodeType": "ElementaryTypeName",
														"src": "1743:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"id": 1962,
													"nodeType": "ArrayTypeName",
													"src": "1743:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint16_$dyn_storage_ptr",
														"typeString": "uint16[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1648:129:14"
									},
									"returnParameters": {
										"id": 1965,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1786:0:14"
									},
									"scope": 2014,
									"src": "1618:169:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5dbe47e8",
									"id": 1973,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "1802:8:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "1819:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 1973,
												"src": "1811:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1967,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1811:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1810:22:14"
									},
									"returnParameters": {
										"id": 1972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1971,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1973,
												"src": "1856:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1970,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1856:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1855:6:14"
									},
									"scope": 2014,
									"src": "1793:69:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b9209e33",
									"id": 1980,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isVerified",
									"nameLocation": "1877:10:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1975,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "1896:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "1888:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1974,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1888:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1887:22:14"
									},
									"returnParameters": {
										"id": 1979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1978,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "1933:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1977,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1933:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1932:6:14"
									},
									"scope": 2014,
									"src": "1868:71:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f0eb5e54",
									"id": 1988,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "identity",
									"nameLocation": "1954:8:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1982,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "1971:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "1963:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1981,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1963:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1962:22:14"
									},
									"returnParameters": {
										"id": 1987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1986,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "2008:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$323",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 1985,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1984,
														"name": "IIdentity",
														"nameLocations": [
															"2008:9:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "2008:9:14"
													},
													"referencedDeclaration": 323,
													"src": "2008:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$323",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2007:11:14"
									},
									"scope": 2014,
									"src": "1945:74:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7e42683b",
									"id": 1995,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "investorCountry",
									"nameLocation": "2034:15:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1990,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "2058:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 1995,
												"src": "2050:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1989,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2050:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2049:22:14"
									},
									"returnParameters": {
										"id": 1994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1993,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1995,
												"src": "2119:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1992,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:8:14"
									},
									"scope": 2014,
									"src": "2025:102:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f11abfd8",
									"id": 2001,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "identityStorage",
									"nameLocation": "2142:15:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1996,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2157:2:14"
									},
									"returnParameters": {
										"id": 2000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1999,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2001,
												"src": "2183:24:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentityRegistryStorage_$2116",
													"typeString": "contract IIdentityRegistryStorage"
												},
												"typeName": {
													"id": 1998,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1997,
														"name": "IIdentityRegistryStorage",
														"nameLocations": [
															"2183:24:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2116,
														"src": "2183:24:14"
													},
													"referencedDeclaration": 2116,
													"src": "2183:24:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentityRegistryStorage_$2116",
														"typeString": "contract IIdentityRegistryStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:26:14"
									},
									"scope": 2014,
									"src": "2133:76:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b4f3fcb7",
									"id": 2007,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "issuersRegistry",
									"nameLocation": "2224:15:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2002,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2239:2:14"
									},
									"returnParameters": {
										"id": 2006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2005,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2007,
												"src": "2265:23:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ITrustedIssuersRegistry_$2206",
													"typeString": "contract ITrustedIssuersRegistry"
												},
												"typeName": {
													"id": 2004,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2003,
														"name": "ITrustedIssuersRegistry",
														"nameLocations": [
															"2265:23:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2206,
														"src": "2265:23:14"
													},
													"referencedDeclaration": 2206,
													"src": "2265:23:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ITrustedIssuersRegistry_$2206",
														"typeString": "contract ITrustedIssuersRegistry"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2264:25:14"
									},
									"scope": 2014,
									"src": "2215:75:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3b3e12f4",
									"id": 2013,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "topicsRegistry",
									"nameLocation": "2305:14:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2008,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:14"
									},
									"returnParameters": {
										"id": 2012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2011,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2013,
												"src": "2345:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimTopicsRegistry_$1861",
													"typeString": "contract IClaimTopicsRegistry"
												},
												"typeName": {
													"id": 2010,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2009,
														"name": "IClaimTopicsRegistry",
														"nameLocations": [
															"2345:20:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1861,
														"src": "2345:20:14"
													},
													"referencedDeclaration": 1861,
													"src": "2345:20:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimTopicsRegistry_$1861",
														"typeString": "contract IClaimTopicsRegistry"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2344:22:14"
									},
									"scope": 2014,
									"src": "2296:71:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2015,
							"src": "315:2054:14",
							"usedErrors": []
						}
					],
					"src": "37:2333:14"
				},
				"id": 14
			},
			"erc3643/erc3643/registry/interface/IIdentityRegistryStorage.sol": {
				"ast": {
					"absolutePath": "erc3643/erc3643/registry/interface/IIdentityRegistryStorage.sol",
					"exportedSymbols": {
						"IERC734": [
							206
						],
						"IERC735": [
							314
						],
						"IIdentity": [
							323
						],
						"IIdentityRegistryStorage": [
							2116
						]
					},
					"id": 2117,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2016,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:15"
						},
						{
							"absolutePath": "@onchain-id/solidity/contracts/interface/IIdentity.sol",
							"file": "@onchain-id/solidity/contracts/interface/IIdentity.sol",
							"id": 2017,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2117,
							"sourceUnit": 324,
							"src": "62:64:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IIdentityRegistryStorage",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2116,
							"linearizedBaseContracts": [
								2116
							],
							"name": "IIdentityRegistryStorage",
							"nameLocation": "138:24:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "0030dea7e9c9afaa2e3c9810f2fc9b5181f1bad74ca5a8db85f746a33585e747",
									"id": 2024,
									"name": "IdentityStored",
									"nameLocation": "175:14:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2019,
												"indexed": true,
												"mutability": "mutable",
												"name": "investorAddress",
												"nameLocation": "215:15:15",
												"nodeType": "VariableDeclaration",
												"scope": 2024,
												"src": "199:31:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2018,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "199:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2022,
												"indexed": true,
												"mutability": "mutable",
												"name": "identity",
												"nameLocation": "258:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2024,
												"src": "240:26:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$323",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 2021,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2020,
														"name": "IIdentity",
														"nameLocations": [
															"240:9:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "240:9:15"
													},
													"referencedDeclaration": 323,
													"src": "240:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$323",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "189:83:15"
									},
									"src": "169:104:15"
								},
								{
									"anonymous": false,
									"eventSelector": "ca6a4c3370b859312246e7f086284076e557997e10d856b716c23ab67067790b",
									"id": 2031,
									"name": "IdentityUnstored",
									"nameLocation": "285:16:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2026,
												"indexed": true,
												"mutability": "mutable",
												"name": "investorAddress",
												"nameLocation": "327:15:15",
												"nodeType": "VariableDeclaration",
												"scope": 2031,
												"src": "311:31:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2025,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "311:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2029,
												"indexed": true,
												"mutability": "mutable",
												"name": "identity",
												"nameLocation": "370:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2031,
												"src": "352:26:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$323",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 2028,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2027,
														"name": "IIdentity",
														"nameLocations": [
															"352:9:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "352:9:15"
													},
													"referencedDeclaration": 323,
													"src": "352:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$323",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "301:83:15"
									},
									"src": "279:106:15"
								},
								{
									"anonymous": false,
									"eventSelector": "556ce885dfcea52155c773f1ed2e58781c51945c13030ab8f793c61f51d1b808",
									"id": 2039,
									"name": "IdentityModified",
									"nameLocation": "397:16:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2034,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldIdentity",
												"nameLocation": "441:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 2039,
												"src": "423:29:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$323",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 2033,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2032,
														"name": "IIdentity",
														"nameLocations": [
															"423:9:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "423:9:15"
													},
													"referencedDeclaration": 323,
													"src": "423:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$323",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2037,
												"indexed": true,
												"mutability": "mutable",
												"name": "newIdentity",
												"nameLocation": "480:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 2039,
												"src": "462:29:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$323",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 2036,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2035,
														"name": "IIdentity",
														"nameLocations": [
															"462:9:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "462:9:15"
													},
													"referencedDeclaration": 323,
													"src": "462:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$323",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "413:84:15"
									},
									"src": "391:107:15"
								},
								{
									"anonymous": false,
									"eventSelector": "20965fcdc6eed7ae398065b40ece4e732ba667992ca819fc54e80e9f2047c4cf",
									"id": 2045,
									"name": "CountryModified",
									"nameLocation": "510:15:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2041,
												"indexed": true,
												"mutability": "mutable",
												"name": "investorAddress",
												"nameLocation": "551:15:15",
												"nodeType": "VariableDeclaration",
												"scope": 2045,
												"src": "535:31:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2040,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "535:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2043,
												"indexed": true,
												"mutability": "mutable",
												"name": "country",
												"nameLocation": "591:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 2045,
												"src": "576:22:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2042,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "576:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "525:79:15"
									},
									"src": "504:101:15"
								},
								{
									"anonymous": false,
									"eventSelector": "500c250171aa20e861b680f93502547b9d436eda7d4c537fc360db6e0c6eedfb",
									"id": 2049,
									"name": "IdentityRegistryBound",
									"nameLocation": "617:21:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2047,
												"indexed": true,
												"mutability": "mutable",
												"name": "identityRegistry",
												"nameLocation": "655:16:15",
												"nodeType": "VariableDeclaration",
												"scope": 2049,
												"src": "639:32:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2046,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "639:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "638:34:15"
									},
									"src": "611:62:15"
								},
								{
									"anonymous": false,
									"eventSelector": "51f353eb5801583fdf2706e43c045b62fdf6b1566820b349390616363ecf72c9",
									"id": 2053,
									"name": "IdentityRegistryUnbound",
									"nameLocation": "685:23:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2051,
												"indexed": true,
												"mutability": "mutable",
												"name": "identityRegistry",
												"nameLocation": "725:16:15",
												"nodeType": "VariableDeclaration",
												"scope": 2053,
												"src": "709:32:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2050,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:34:15"
									},
									"src": "679:64:15"
								},
								{
									"documentation": {
										"id": 2054,
										"nodeType": "StructuredDocumentation",
										"src": "749:14:15",
										"text": "functions"
									},
									"functionSelector": "a53410dd",
									"id": 2064,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addIdentityToStorage",
									"nameLocation": "777:20:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2056,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "815:12:15",
												"nodeType": "VariableDeclaration",
												"scope": 2064,
												"src": "807:20:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2055,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "807:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2059,
												"mutability": "mutable",
												"name": "_identity",
												"nameLocation": "847:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 2064,
												"src": "837:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$323",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 2058,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2057,
														"name": "IIdentity",
														"nameLocations": [
															"837:9:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "837:9:15"
													},
													"referencedDeclaration": 323,
													"src": "837:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$323",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2061,
												"mutability": "mutable",
												"name": "_country",
												"nameLocation": "873:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2064,
												"src": "866:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2060,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "866:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "797:90:15"
									},
									"returnParameters": {
										"id": 2063,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "896:0:15"
									},
									"scope": 2116,
									"src": "768:129:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "cf191bcd",
									"id": 2069,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeIdentityFromStorage",
									"nameLocation": "912:25:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2066,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "946:12:15",
												"nodeType": "VariableDeclaration",
												"scope": 2069,
												"src": "938:20:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "938:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "937:22:15"
									},
									"returnParameters": {
										"id": 2068,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "968:0:15"
									},
									"scope": 2116,
									"src": "903:66:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9f3418d5",
									"id": 2076,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "modifyStoredInvestorCountry",
									"nameLocation": "984:27:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2071,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "1020:12:15",
												"nodeType": "VariableDeclaration",
												"scope": 2076,
												"src": "1012:20:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1012:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2073,
												"mutability": "mutable",
												"name": "_country",
												"nameLocation": "1041:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2076,
												"src": "1034:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2072,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1034:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1011:39:15"
									},
									"returnParameters": {
										"id": 2075,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1067:0:15"
									},
									"scope": 2116,
									"src": "975:93:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e805cf86",
									"id": 2084,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "modifyStoredIdentity",
									"nameLocation": "1083:20:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2078,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "1112:12:15",
												"nodeType": "VariableDeclaration",
												"scope": 2084,
												"src": "1104:20:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2081,
												"mutability": "mutable",
												"name": "_identity",
												"nameLocation": "1136:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 2084,
												"src": "1126:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$323",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 2080,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2079,
														"name": "IIdentity",
														"nameLocations": [
															"1126:9:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "1126:9:15"
													},
													"referencedDeclaration": 323,
													"src": "1126:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$323",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:43:15"
									},
									"returnParameters": {
										"id": 2083,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1163:0:15"
									},
									"scope": 2116,
									"src": "1074:90:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "690a49f9",
									"id": 2089,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "bindIdentityRegistry",
									"nameLocation": "1179:20:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2086,
												"mutability": "mutable",
												"name": "_identityRegistry",
												"nameLocation": "1208:17:15",
												"nodeType": "VariableDeclaration",
												"scope": 2089,
												"src": "1200:25:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2085,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1200:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1199:27:15"
									},
									"returnParameters": {
										"id": 2088,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1235:0:15"
									},
									"scope": 2116,
									"src": "1170:66:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "97a012f7",
									"id": 2094,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unbindIdentityRegistry",
									"nameLocation": "1251:22:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2091,
												"mutability": "mutable",
												"name": "_identityRegistry",
												"nameLocation": "1282:17:15",
												"nodeType": "VariableDeclaration",
												"scope": 2094,
												"src": "1274:25:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2090,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1273:27:15"
									},
									"returnParameters": {
										"id": 2093,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1309:0:15"
									},
									"scope": 2116,
									"src": "1242:68:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bf9eb959",
									"id": 2100,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "linkedIdentityRegistries",
									"nameLocation": "1325:24:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2095,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1349:2:15"
									},
									"returnParameters": {
										"id": 2099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2098,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2100,
												"src": "1399:16:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2096,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1399:7:15",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2097,
													"nodeType": "ArrayTypeName",
													"src": "1399:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1398:18:15"
									},
									"scope": 2116,
									"src": "1316:101:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7988d3a5",
									"id": 2108,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "storedIdentity",
									"nameLocation": "1432:14:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2102,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "1455:12:15",
												"nodeType": "VariableDeclaration",
												"scope": 2108,
												"src": "1447:20:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1447:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1446:22:15"
									},
									"returnParameters": {
										"id": 2107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2106,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2108,
												"src": "1516:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$323",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 2105,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2104,
														"name": "IIdentity",
														"nameLocations": [
															"1516:9:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "1516:9:15"
													},
													"referencedDeclaration": 323,
													"src": "1516:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$323",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1515:11:15"
									},
									"scope": 2116,
									"src": "1423:104:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "727e13bc",
									"id": 2115,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "storedInvestorCountry",
									"nameLocation": "1542:21:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2110,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "1572:12:15",
												"nodeType": "VariableDeclaration",
												"scope": 2115,
												"src": "1564:20:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1564:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1563:22:15"
									},
									"returnParameters": {
										"id": 2114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2113,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2115,
												"src": "1633:6:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2112,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1633:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1632:8:15"
									},
									"scope": 2116,
									"src": "1533:108:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2117,
							"src": "128:1515:15",
							"usedErrors": []
						}
					],
					"src": "37:1607:15"
				},
				"id": 15
			},
			"erc3643/erc3643/registry/interface/ITrustedIssuersRegistry.sol": {
				"ast": {
					"absolutePath": "erc3643/erc3643/registry/interface/ITrustedIssuersRegistry.sol",
					"exportedSymbols": {
						"IClaimIssuer": [
							59
						],
						"IERC734": [
							206
						],
						"IERC735": [
							314
						],
						"IIdentity": [
							323
						],
						"ITrustedIssuersRegistry": [
							2206
						]
					},
					"id": 2207,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2118,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:16"
						},
						{
							"absolutePath": "@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
							"file": "@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
							"id": 2119,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2207,
							"sourceUnit": 60,
							"src": "62:67:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ITrustedIssuersRegistry",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2206,
							"linearizedBaseContracts": [
								2206
							],
							"name": "ITrustedIssuersRegistry",
							"nameLocation": "141:23:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "fedc33fd34859594822c0ff6f3f4f9fc279cc6d5cae53068f706a088e4500872",
									"id": 2127,
									"name": "TrustedIssuerAdded",
									"nameLocation": "177:18:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2122,
												"indexed": true,
												"mutability": "mutable",
												"name": "trustedIssuer",
												"nameLocation": "226:13:16",
												"nodeType": "VariableDeclaration",
												"scope": 2127,
												"src": "205:34:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$59",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 2121,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2120,
														"name": "IClaimIssuer",
														"nameLocations": [
															"205:12:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 59,
														"src": "205:12:16"
													},
													"referencedDeclaration": 59,
													"src": "205:12:16",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$59",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2125,
												"indexed": false,
												"mutability": "mutable",
												"name": "claimTopics",
												"nameLocation": "259:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2127,
												"src": "249:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2123,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "249:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2124,
													"nodeType": "ArrayTypeName",
													"src": "249:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "195:81:16"
									},
									"src": "171:106:16"
								},
								{
									"anonymous": false,
									"eventSelector": "2214ded40113cc3fb63fc206cafee88270b0a903dac7245d54efdde30ebb0321",
									"id": 2132,
									"name": "TrustedIssuerRemoved",
									"nameLocation": "289:20:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2130,
												"indexed": true,
												"mutability": "mutable",
												"name": "trustedIssuer",
												"nameLocation": "331:13:16",
												"nodeType": "VariableDeclaration",
												"scope": 2132,
												"src": "310:34:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$59",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 2129,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2128,
														"name": "IClaimIssuer",
														"nameLocations": [
															"310:12:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 59,
														"src": "310:12:16"
													},
													"referencedDeclaration": 59,
													"src": "310:12:16",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$59",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "309:36:16"
									},
									"src": "283:63:16"
								},
								{
									"anonymous": false,
									"eventSelector": "ec753cfc52044f61676f18a11e500093a9f2b1cd5e4942bc476f2b0438159bcf",
									"id": 2140,
									"name": "ClaimTopicsUpdated",
									"nameLocation": "358:18:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2135,
												"indexed": true,
												"mutability": "mutable",
												"name": "trustedIssuer",
												"nameLocation": "407:13:16",
												"nodeType": "VariableDeclaration",
												"scope": 2140,
												"src": "386:34:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$59",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 2134,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2133,
														"name": "IClaimIssuer",
														"nameLocations": [
															"386:12:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 59,
														"src": "386:12:16"
													},
													"referencedDeclaration": 59,
													"src": "386:12:16",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$59",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2138,
												"indexed": false,
												"mutability": "mutable",
												"name": "claimTopics",
												"nameLocation": "440:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2140,
												"src": "430:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2136,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "430:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2137,
													"nodeType": "ArrayTypeName",
													"src": "430:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "376:81:16"
									},
									"src": "352:106:16"
								},
								{
									"functionSelector": "9f63ea98",
									"id": 2149,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addTrustedIssuer",
									"nameLocation": "473:16:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2143,
												"mutability": "mutable",
												"name": "_trustedIssuer",
												"nameLocation": "512:14:16",
												"nodeType": "VariableDeclaration",
												"scope": 2149,
												"src": "499:27:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$59",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 2142,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2141,
														"name": "IClaimIssuer",
														"nameLocations": [
															"499:12:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 59,
														"src": "499:12:16"
													},
													"referencedDeclaration": 59,
													"src": "499:12:16",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$59",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2146,
												"mutability": "mutable",
												"name": "_claimTopics",
												"nameLocation": "555:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 2149,
												"src": "536:31:16",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2144,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "536:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2145,
													"nodeType": "ArrayTypeName",
													"src": "536:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "489:84:16"
									},
									"returnParameters": {
										"id": 2148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "582:0:16"
									},
									"scope": 2206,
									"src": "464:119:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b93d28eb",
									"id": 2155,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeTrustedIssuer",
									"nameLocation": "598:19:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2152,
												"mutability": "mutable",
												"name": "_trustedIssuer",
												"nameLocation": "631:14:16",
												"nodeType": "VariableDeclaration",
												"scope": 2155,
												"src": "618:27:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$59",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 2151,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2150,
														"name": "IClaimIssuer",
														"nameLocations": [
															"618:12:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 59,
														"src": "618:12:16"
													},
													"referencedDeclaration": 59,
													"src": "618:12:16",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$59",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "617:29:16"
									},
									"returnParameters": {
										"id": 2154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "655:0:16"
									},
									"scope": 2206,
									"src": "589:67:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "04bc7e84",
									"id": 2164,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateIssuerClaimTopics",
									"nameLocation": "671:23:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2158,
												"mutability": "mutable",
												"name": "_trustedIssuer",
												"nameLocation": "717:14:16",
												"nodeType": "VariableDeclaration",
												"scope": 2164,
												"src": "704:27:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$59",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 2157,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2156,
														"name": "IClaimIssuer",
														"nameLocations": [
															"704:12:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 59,
														"src": "704:12:16"
													},
													"referencedDeclaration": 59,
													"src": "704:12:16",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$59",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2161,
												"mutability": "mutable",
												"name": "_claimTopics",
												"nameLocation": "760:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 2164,
												"src": "741:31:16",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2159,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "741:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2160,
													"nodeType": "ArrayTypeName",
													"src": "741:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "694:84:16"
									},
									"returnParameters": {
										"id": 2163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "787:0:16"
									},
									"scope": 2206,
									"src": "662:126:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d9dd24c5",
									"id": 2171,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTrustedIssuers",
									"nameLocation": "803:17:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "820:2:16"
									},
									"returnParameters": {
										"id": 2170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2171,
												"src": "846:21:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$59_$dyn_memory_ptr",
													"typeString": "contract IClaimIssuer[]"
												},
												"typeName": {
													"baseType": {
														"id": 2167,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2166,
															"name": "IClaimIssuer",
															"nameLocations": [
																"846:12:16"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 59,
															"src": "846:12:16"
														},
														"referencedDeclaration": 59,
														"src": "846:12:16",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IClaimIssuer_$59",
															"typeString": "contract IClaimIssuer"
														}
													},
													"id": 2168,
													"nodeType": "ArrayTypeName",
													"src": "846:14:16",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_ptr",
														"typeString": "contract IClaimIssuer[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "845:23:16"
									},
									"scope": 2206,
									"src": "794:75:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "52c111d1",
									"id": 2180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTrustedIssuersForClaimTopic",
									"nameLocation": "884:30:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2173,
												"mutability": "mutable",
												"name": "claimTopic",
												"nameLocation": "923:10:16",
												"nodeType": "VariableDeclaration",
												"scope": 2180,
												"src": "915:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "914:20:16"
									},
									"returnParameters": {
										"id": 2179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2180,
												"src": "982:21:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$59_$dyn_memory_ptr",
													"typeString": "contract IClaimIssuer[]"
												},
												"typeName": {
													"baseType": {
														"id": 2176,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2175,
															"name": "IClaimIssuer",
															"nameLocations": [
																"982:12:16"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 59,
															"src": "982:12:16"
														},
														"referencedDeclaration": 59,
														"src": "982:12:16",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IClaimIssuer_$59",
															"typeString": "contract IClaimIssuer"
														}
													},
													"id": 2177,
													"nodeType": "ArrayTypeName",
													"src": "982:14:16",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_ptr",
														"typeString": "contract IClaimIssuer[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "981:23:16"
									},
									"scope": 2206,
									"src": "875:130:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ef2ed1a4",
									"id": 2187,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isTrustedIssuer",
									"nameLocation": "1020:15:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2182,
												"mutability": "mutable",
												"name": "_issuer",
												"nameLocation": "1044:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2187,
												"src": "1036:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1036:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1035:17:16"
									},
									"returnParameters": {
										"id": 2186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2185,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2187,
												"src": "1076:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2184,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1076:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1075:6:16"
									},
									"scope": 2206,
									"src": "1011:71:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c28fb278",
									"id": 2196,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTrustedIssuerClaimTopics",
									"nameLocation": "1097:27:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2190,
												"mutability": "mutable",
												"name": "_trustedIssuer",
												"nameLocation": "1138:14:16",
												"nodeType": "VariableDeclaration",
												"scope": 2196,
												"src": "1125:27:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$59",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 2189,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2188,
														"name": "IClaimIssuer",
														"nameLocations": [
															"1125:12:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 59,
														"src": "1125:12:16"
													},
													"referencedDeclaration": 59,
													"src": "1125:12:16",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$59",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1124:29:16"
									},
									"returnParameters": {
										"id": 2195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2194,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2196,
												"src": "1201:16:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2192,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1201:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2193,
													"nodeType": "ArrayTypeName",
													"src": "1201:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1200:18:16"
									},
									"scope": 2206,
									"src": "1088:131:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "34a89987",
									"id": 2205,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasClaimTopic",
									"nameLocation": "1234:13:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2198,
												"mutability": "mutable",
												"name": "_issuer",
												"nameLocation": "1256:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2205,
												"src": "1248:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1248:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2200,
												"mutability": "mutable",
												"name": "_claimTopic",
												"nameLocation": "1273:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2205,
												"src": "1265:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1265:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1247:38:16"
									},
									"returnParameters": {
										"id": 2204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2203,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2205,
												"src": "1333:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2202,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1333:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1332:6:16"
									},
									"scope": 2206,
									"src": "1225:114:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2207,
							"src": "131:1210:16",
							"usedErrors": []
						}
					],
					"src": "37:1305:16"
				},
				"id": 16
			},
			"erc3643/erc3643/token/Itoken.sol": {
				"ast": {
					"absolutePath": "erc3643/erc3643/token/Itoken.sol",
					"exportedSymbols": {
						"IClaimIssuer": [
							59
						],
						"IClaimTopicsRegistry": [
							1861
						],
						"IERC20": [
							1074
						],
						"IERC734": [
							206
						],
						"IERC735": [
							314
						],
						"IIdentity": [
							323
						],
						"IIdentityRegistry": [
							2014
						],
						"IIdentityRegistryStorage": [
							2116
						],
						"IModularCompliance": [
							1178
						],
						"IToken": [
							2481
						],
						"ITrustedIssuersRegistry": [
							2206
						]
					},
					"id": 2482,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2208,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:17"
						},
						{
							"absolutePath": "erc3643/erc3643/registry/interface/IIdentityRegistry.sol",
							"file": "../registry/interface/IIdentityRegistry.sol",
							"id": 2209,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2482,
							"sourceUnit": 2015,
							"src": "62:53:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "erc3643/erc3643/Compliance/modular/IModularCompliance.sol",
							"file": "../Compliance/modular/IModularCompliance.sol",
							"id": 2210,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2482,
							"sourceUnit": 1179,
							"src": "117:54:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 2211,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2482,
							"sourceUnit": 1075,
							"src": "172:56:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2213,
										"name": "IERC20",
										"nameLocations": [
											"269:6:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1074,
										"src": "269:6:17"
									},
									"id": 2214,
									"nodeType": "InheritanceSpecifier",
									"src": "269:6:17"
								}
							],
							"canonicalName": "IToken",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2212,
								"nodeType": "StructuredDocumentation",
								"src": "230:19:17",
								"text": "@dev interface"
							},
							"fullyImplemented": false,
							"id": 2481,
							"linearizedBaseContracts": [
								2481,
								1074
							],
							"name": "IToken",
							"nameLocation": "259:6:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "6a1105ac8148a3c319adbc369f9072573e8a11d3a3d195e067e7c40767ec54d1",
									"id": 2226,
									"name": "UpdatedTokenInformation",
									"nameLocation": "288:23:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2216,
												"indexed": true,
												"mutability": "mutable",
												"name": "_newName",
												"nameLocation": "336:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 2226,
												"src": "321:23:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2215,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "321:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2218,
												"indexed": true,
												"mutability": "mutable",
												"name": "_newSymbol",
												"nameLocation": "369:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 2226,
												"src": "354:25:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2217,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "354:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2220,
												"indexed": false,
												"mutability": "mutable",
												"name": "_newDecimals",
												"nameLocation": "395:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 2226,
												"src": "389:18:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2219,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "389:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2222,
												"indexed": false,
												"mutability": "mutable",
												"name": "_newVersion",
												"nameLocation": "424:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 2226,
												"src": "417:18:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2221,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2224,
												"indexed": true,
												"mutability": "mutable",
												"name": "_newOnchainID",
												"nameLocation": "461:13:17",
												"nodeType": "VariableDeclaration",
												"scope": 2226,
												"src": "445:29:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "311:169:17"
									},
									"src": "282:199:17"
								},
								{
									"anonymous": false,
									"eventSelector": "d2be862d755bca7e0d39772b2cab3a5578da9c285f69199f4c063c2294a7f36c",
									"id": 2230,
									"name": "IdentityRegistryAdded",
									"nameLocation": "493:21:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2228,
												"indexed": true,
												"mutability": "mutable",
												"name": "_identityRegistry",
												"nameLocation": "531:17:17",
												"nodeType": "VariableDeclaration",
												"scope": 2230,
												"src": "515:33:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "515:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "514:35:17"
									},
									"src": "487:63:17"
								},
								{
									"anonymous": false,
									"eventSelector": "7f3a888862559648ec01d97deb7b5012bff86dc91e654a1de397170db40e35b6",
									"id": 2234,
									"name": "ComplianceAdded",
									"nameLocation": "562:15:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2232,
												"indexed": true,
												"mutability": "mutable",
												"name": "_compliance",
												"nameLocation": "594:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 2234,
												"src": "578:27:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "578:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "577:29:17"
									},
									"src": "556:51:17"
								},
								{
									"anonymous": false,
									"eventSelector": "f0c9129a94f30f1caaceb63e44b9811d0a3edf1d6c23757f346093af5553fed0",
									"id": 2242,
									"name": "RecoverySuccess",
									"nameLocation": "619:15:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2236,
												"indexed": true,
												"mutability": "mutable",
												"name": "_lostWallet",
												"nameLocation": "660:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 2242,
												"src": "644:27:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "644:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2238,
												"indexed": true,
												"mutability": "mutable",
												"name": "_newWallet",
												"nameLocation": "697:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 2242,
												"src": "681:26:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "681:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2240,
												"indexed": true,
												"mutability": "mutable",
												"name": "_investorOnchainID",
												"nameLocation": "733:18:17",
												"nodeType": "VariableDeclaration",
												"scope": 2242,
												"src": "717:34:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "717:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:123:17"
									},
									"src": "613:145:17"
								},
								{
									"anonymous": false,
									"eventSelector": "7fa523c84ab8d7fc5b72f08b9e46dbbf10c39e119a075b3e317002d14bc9f436",
									"id": 2250,
									"name": "AddressFrozen",
									"nameLocation": "770:13:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2244,
												"indexed": true,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "809:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 2250,
												"src": "793:28:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "793:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2246,
												"indexed": true,
												"mutability": "mutable",
												"name": "_isFrozen",
												"nameLocation": "844:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 2250,
												"src": "831:22:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2245,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "831:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2248,
												"indexed": true,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "879:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2250,
												"src": "863:22:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "863:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "783:108:17"
									},
									"src": "764:128:17"
								},
								{
									"anonymous": false,
									"eventSelector": "a065e63c631c86f1b9f66a4a2f63f2093bf1c2168d23290259dbd969e0222a45",
									"id": 2256,
									"name": "TokensFrozen",
									"nameLocation": "904:12:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2252,
												"indexed": true,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "933:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "917:28:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "917:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2254,
												"indexed": false,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "955:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "947:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "947:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "916:47:17"
									},
									"src": "898:66:17"
								},
								{
									"anonymous": false,
									"eventSelector": "9bed35cb62ad0dba04f9d5bfee4b5bc91443e77da8a65c4c84834c51bb08b0d6",
									"id": 2262,
									"name": "TokensUnfrozen",
									"nameLocation": "976:14:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2258,
												"indexed": true,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "1007:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 2262,
												"src": "991:28:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "991:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2260,
												"indexed": false,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1029:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2262,
												"src": "1021:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1021:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "990:47:17"
									},
									"src": "970:68:17"
								},
								{
									"anonymous": false,
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 2266,
									"name": "Paused",
									"nameLocation": "1050:6:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2264,
												"indexed": false,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "1065:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 2266,
												"src": "1057:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1057:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1056:22:17"
									},
									"src": "1044:35:17"
								},
								{
									"anonymous": false,
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 2270,
									"name": "Unpaused",
									"nameLocation": "1091:8:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2268,
												"indexed": false,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "1108:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 2270,
												"src": "1100:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1100:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1099:22:17"
									},
									"src": "1085:37:17"
								},
								{
									"functionSelector": "c47f0027",
									"id": 2275,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setName",
									"nameLocation": "1137:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2272,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "1161:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 2275,
												"src": "1145:21:17",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2271,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1145:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1144:23:17"
									},
									"returnParameters": {
										"id": 2274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1176:0:17"
									},
									"scope": 2481,
									"src": "1128:49:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b84c8246",
									"id": 2280,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setSymbol",
									"nameLocation": "1192:9:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2277,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "1218:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2280,
												"src": "1202:23:17",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2276,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1202:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1201:25:17"
									},
									"returnParameters": {
										"id": 2279,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1235:0:17"
									},
									"scope": 2481,
									"src": "1183:53:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3d1ddc5b",
									"id": 2285,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setOnchainID",
									"nameLocation": "1251:12:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2282,
												"mutability": "mutable",
												"name": "_onchainID",
												"nameLocation": "1272:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 2285,
												"src": "1264:18:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1264:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1263:20:17"
									},
									"returnParameters": {
										"id": 2284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1292:0:17"
									},
									"scope": 2481,
									"src": "1242:51:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8456cb59",
									"id": 2288,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pause",
									"nameLocation": "1308:5:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1313:2:17"
									},
									"returnParameters": {
										"id": 2287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1324:0:17"
									},
									"scope": 2481,
									"src": "1299:26:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3f4ba83a",
									"id": 2291,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unpause",
									"nameLocation": "1340:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1347:2:17"
									},
									"returnParameters": {
										"id": 2290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:17"
									},
									"scope": 2481,
									"src": "1331:28:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c69c09cf",
									"id": 2298,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setAddressFrozen",
									"nameLocation": "1374:16:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2293,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "1399:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 2298,
												"src": "1391:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1391:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2295,
												"mutability": "mutable",
												"name": "_freeze",
												"nameLocation": "1418:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2298,
												"src": "1413:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2294,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1413:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1390:36:17"
									},
									"returnParameters": {
										"id": 2297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1435:0:17"
									},
									"scope": 2481,
									"src": "1365:71:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "125c4a33",
									"id": 2305,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "freezePartialTokens",
									"nameLocation": "1451:19:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2300,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "1479:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 2305,
												"src": "1471:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1471:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2302,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1501:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2305,
												"src": "1493:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1493:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1470:39:17"
									},
									"returnParameters": {
										"id": 2304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1526:0:17"
									},
									"scope": 2481,
									"src": "1442:85:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1fe56f7d",
									"id": 2312,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unfreezePartialTokens",
									"nameLocation": "1542:21:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2307,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "1572:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 2312,
												"src": "1564:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1564:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2309,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1594:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2312,
												"src": "1586:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1586:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1563:39:17"
									},
									"returnParameters": {
										"id": 2311,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1619:0:17"
									},
									"scope": 2481,
									"src": "1533:87:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "cbf3f861",
									"id": 2317,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setIdentityRegistry",
									"nameLocation": "1635:19:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2314,
												"mutability": "mutable",
												"name": "_identityRegistry",
												"nameLocation": "1663:17:17",
												"nodeType": "VariableDeclaration",
												"scope": 2317,
												"src": "1655:25:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1655:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1654:27:17"
									},
									"returnParameters": {
										"id": 2316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1690:0:17"
									},
									"scope": 2481,
									"src": "1626:65:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f8981789",
									"id": 2322,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setCompliance",
									"nameLocation": "1706:13:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2319,
												"mutability": "mutable",
												"name": "_compliance",
												"nameLocation": "1728:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 2322,
												"src": "1720:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1720:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1719:21:17"
									},
									"returnParameters": {
										"id": 2321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1749:0:17"
									},
									"scope": 2481,
									"src": "1697:53:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9fc1d0e7",
									"id": 2333,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "forcedTransfer",
									"nameLocation": "1765:14:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2324,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "1797:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 2333,
												"src": "1789:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1789:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2326,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "1820:3:17",
												"nodeType": "VariableDeclaration",
												"scope": 2333,
												"src": "1812:11:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1812:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2328,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1841:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2333,
												"src": "1833:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1833:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1779:75:17"
									},
									"returnParameters": {
										"id": 2332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2333,
												"src": "1873:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2330,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1873:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1872:6:17"
									},
									"scope": 2481,
									"src": "1756:123:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "40c10f19",
									"id": 2340,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "1894:4:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2335,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "1907:3:17",
												"nodeType": "VariableDeclaration",
												"scope": 2340,
												"src": "1899:11:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1899:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2337,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1920:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2340,
												"src": "1912:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1912:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1898:30:17"
									},
									"returnParameters": {
										"id": 2339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1937:0:17"
									},
									"scope": 2481,
									"src": "1885:53:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9dc29fac",
									"id": 2347,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "1953:4:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2342,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "1966:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 2347,
												"src": "1958:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1958:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2344,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1988:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2347,
												"src": "1980:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1980:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1957:39:17"
									},
									"returnParameters": {
										"id": 2346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2005:0:17"
									},
									"scope": 2481,
									"src": "1944:62:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9285948a",
									"id": 2358,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "recoveryAddress",
									"nameLocation": "2021:15:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2349,
												"mutability": "mutable",
												"name": "_lostWallet",
												"nameLocation": "2054:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 2358,
												"src": "2046:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2046:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2351,
												"mutability": "mutable",
												"name": "_newWallet",
												"nameLocation": "2083:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 2358,
												"src": "2075:18:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2075:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2353,
												"mutability": "mutable",
												"name": "_investorOnchainID",
												"nameLocation": "2111:18:17",
												"nodeType": "VariableDeclaration",
												"scope": 2358,
												"src": "2103:26:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2103:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2036:99:17"
									},
									"returnParameters": {
										"id": 2357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2356,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2358,
												"src": "2154:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2355,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:17"
									},
									"scope": 2481,
									"src": "2012:148:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "88d695b2",
									"id": 2367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "batchTransfer",
									"nameLocation": "2175:13:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2361,
												"mutability": "mutable",
												"name": "_toList",
												"nameLocation": "2217:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2367,
												"src": "2198:26:17",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2359,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2198:7:17",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2360,
													"nodeType": "ArrayTypeName",
													"src": "2198:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2364,
												"mutability": "mutable",
												"name": "_amounts",
												"nameLocation": "2253:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 2367,
												"src": "2234:27:17",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2362,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2234:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2363,
													"nodeType": "ArrayTypeName",
													"src": "2234:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2188:79:17"
									},
									"returnParameters": {
										"id": 2366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2276:0:17"
									},
									"scope": 2481,
									"src": "2166:111:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "42a47abc",
									"id": 2379,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "batchForcedTransfer",
									"nameLocation": "2292:19:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2370,
												"mutability": "mutable",
												"name": "_fromList",
												"nameLocation": "2340:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 2379,
												"src": "2321:28:17",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2368,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2321:7:17",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2369,
													"nodeType": "ArrayTypeName",
													"src": "2321:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2373,
												"mutability": "mutable",
												"name": "_toList",
												"nameLocation": "2378:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2379,
												"src": "2359:26:17",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2371,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2359:7:17",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2372,
													"nodeType": "ArrayTypeName",
													"src": "2359:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2376,
												"mutability": "mutable",
												"name": "_amounts",
												"nameLocation": "2414:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 2379,
												"src": "2395:27:17",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2374,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2395:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2375,
													"nodeType": "ArrayTypeName",
													"src": "2395:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2311:117:17"
									},
									"returnParameters": {
										"id": 2378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2437:0:17"
									},
									"scope": 2481,
									"src": "2283:155:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "68573107",
									"id": 2388,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "batchMint",
									"nameLocation": "2453:9:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2382,
												"mutability": "mutable",
												"name": "_toList",
												"nameLocation": "2482:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2388,
												"src": "2463:26:17",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2380,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2463:7:17",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2381,
													"nodeType": "ArrayTypeName",
													"src": "2463:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2385,
												"mutability": "mutable",
												"name": "_amounts",
												"nameLocation": "2510:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 2388,
												"src": "2491:27:17",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2383,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2491:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2384,
													"nodeType": "ArrayTypeName",
													"src": "2491:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2462:57:17"
									},
									"returnParameters": {
										"id": 2387,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2536:0:17"
									},
									"scope": 2481,
									"src": "2444:93:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4a6cc677",
									"id": 2397,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "batchBurn",
									"nameLocation": "2552:9:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2391,
												"mutability": "mutable",
												"name": "_userAddresses",
												"nameLocation": "2590:14:17",
												"nodeType": "VariableDeclaration",
												"scope": 2397,
												"src": "2571:33:17",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2389,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2571:7:17",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2390,
													"nodeType": "ArrayTypeName",
													"src": "2571:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2394,
												"mutability": "mutable",
												"name": "_amounts",
												"nameLocation": "2633:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 2397,
												"src": "2614:27:17",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2392,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2614:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2393,
													"nodeType": "ArrayTypeName",
													"src": "2614:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2561:86:17"
									},
									"returnParameters": {
										"id": 2396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:0:17"
									},
									"scope": 2481,
									"src": "2543:114:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1a7af379",
									"id": 2406,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "batchSetAddressFrozen",
									"nameLocation": "2672:21:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2400,
												"mutability": "mutable",
												"name": "_userAddresses",
												"nameLocation": "2722:14:17",
												"nodeType": "VariableDeclaration",
												"scope": 2406,
												"src": "2703:33:17",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2398,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2703:7:17",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2399,
													"nodeType": "ArrayTypeName",
													"src": "2703:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2403,
												"mutability": "mutable",
												"name": "_freeze",
												"nameLocation": "2762:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2406,
												"src": "2746:23:17",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bool_$dyn_calldata_ptr",
													"typeString": "bool[]"
												},
												"typeName": {
													"baseType": {
														"id": 2401,
														"name": "bool",
														"nodeType": "ElementaryTypeName",
														"src": "2746:4:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 2402,
													"nodeType": "ArrayTypeName",
													"src": "2746:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
														"typeString": "bool[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2693:82:17"
									},
									"returnParameters": {
										"id": 2405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2784:0:17"
									},
									"scope": 2481,
									"src": "2663:122:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fc7e5fa8",
									"id": 2415,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "batchFreezePartialTokens",
									"nameLocation": "2800:24:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2409,
												"mutability": "mutable",
												"name": "_userAddresses",
												"nameLocation": "2853:14:17",
												"nodeType": "VariableDeclaration",
												"scope": 2415,
												"src": "2834:33:17",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2407,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2834:7:17",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2408,
													"nodeType": "ArrayTypeName",
													"src": "2834:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2412,
												"mutability": "mutable",
												"name": "_amounts",
												"nameLocation": "2896:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 2415,
												"src": "2877:27:17",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2410,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2877:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2411,
													"nodeType": "ArrayTypeName",
													"src": "2877:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2824:86:17"
									},
									"returnParameters": {
										"id": 2414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2919:0:17"
									},
									"scope": 2481,
									"src": "2791:129:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4710362d",
									"id": 2424,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "batchUnfreezePartialTokens",
									"nameLocation": "2935:26:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2418,
												"mutability": "mutable",
												"name": "_userAddresses",
												"nameLocation": "2990:14:17",
												"nodeType": "VariableDeclaration",
												"scope": 2424,
												"src": "2971:33:17",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2416,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2971:7:17",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2417,
													"nodeType": "ArrayTypeName",
													"src": "2971:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2421,
												"mutability": "mutable",
												"name": "_amounts",
												"nameLocation": "3033:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 2424,
												"src": "3014:27:17",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2419,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3014:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2420,
													"nodeType": "ArrayTypeName",
													"src": "3014:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2961:86:17"
									},
									"returnParameters": {
										"id": 2423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3056:0:17"
									},
									"scope": 2481,
									"src": "2926:131:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "313ce567",
									"id": 2429,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3072:8:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3080:2:17"
									},
									"returnParameters": {
										"id": 2428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2427,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "3106:5:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2426,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3106:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3105:7:17"
									},
									"scope": 2481,
									"src": "3063:50:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "06fdde03",
									"id": 2434,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "3128:4:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3132:2:17"
									},
									"returnParameters": {
										"id": 2433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2434,
												"src": "3158:13:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2431,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3158:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3157:15:17"
									},
									"scope": 2481,
									"src": "3119:54:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "aba63705",
									"id": 2439,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onchainID",
									"nameLocation": "3188:9:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2435,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3197:2:17"
									},
									"returnParameters": {
										"id": 2438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2437,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2439,
												"src": "3223:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3223:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3222:9:17"
									},
									"scope": 2481,
									"src": "3179:53:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "95d89b41",
									"id": 2444,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "3247:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3253:2:17"
									},
									"returnParameters": {
										"id": 2443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2442,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2444,
												"src": "3279:13:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2441,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3279:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:15:17"
									},
									"scope": 2481,
									"src": "3238:56:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54fd4d50",
									"id": 2449,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "3309:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2445,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3316:2:17"
									},
									"returnParameters": {
										"id": 2448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2447,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2449,
												"src": "3342:13:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2446,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3342:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3341:15:17"
									},
									"scope": 2481,
									"src": "3300:57:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "134e18f4",
									"id": 2455,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "identityRegistry",
									"nameLocation": "3372:16:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2450,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3388:2:17"
									},
									"returnParameters": {
										"id": 2454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2455,
												"src": "3414:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentityRegistry_$2014",
													"typeString": "contract IIdentityRegistry"
												},
												"typeName": {
													"id": 2452,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2451,
														"name": "IIdentityRegistry",
														"nameLocations": [
															"3414:17:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2014,
														"src": "3414:17:17"
													},
													"referencedDeclaration": 2014,
													"src": "3414:17:17",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentityRegistry_$2014",
														"typeString": "contract IIdentityRegistry"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3413:19:17"
									},
									"scope": 2481,
									"src": "3363:70:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6290865d",
									"id": 2461,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "compliance",
									"nameLocation": "3448:10:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3458:2:17"
									},
									"returnParameters": {
										"id": 2460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2459,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2461,
												"src": "3484:18:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IModularCompliance_$1178",
													"typeString": "contract IModularCompliance"
												},
												"typeName": {
													"id": 2458,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2457,
														"name": "IModularCompliance",
														"nameLocations": [
															"3484:18:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1178,
														"src": "3484:18:17"
													},
													"referencedDeclaration": 1178,
													"src": "3484:18:17",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IModularCompliance_$1178",
														"typeString": "contract IModularCompliance"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3483:20:17"
									},
									"scope": 2481,
									"src": "3439:65:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c975abb",
									"id": 2466,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "3519:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3525:2:17"
									},
									"returnParameters": {
										"id": 2465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2464,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2466,
												"src": "3551:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2463,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3551:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:6:17"
									},
									"scope": 2481,
									"src": "3510:47:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e5839836",
									"id": 2473,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isFrozen",
									"nameLocation": "3572:8:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2468,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "3589:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 2473,
												"src": "3581:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3581:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3580:22:17"
									},
									"returnParameters": {
										"id": 2472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2473,
												"src": "3626:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2470,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3626:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3625:6:17"
									},
									"scope": 2481,
									"src": "3563:69:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "158b1a57",
									"id": 2480,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getFrozenTokens",
									"nameLocation": "3647:15:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2475,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "3671:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 2480,
												"src": "3663:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3663:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3662:22:17"
									},
									"returnParameters": {
										"id": 2479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2478,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2480,
												"src": "3732:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3732:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3731:9:17"
									},
									"scope": 2481,
									"src": "3638:103:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2482,
							"src": "249:3494:17",
							"usedErrors": []
						}
					],
					"src": "37:3707:17"
				},
				"id": 17
			}
		}
	}
}