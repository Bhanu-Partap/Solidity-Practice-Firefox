{
	"id": "a84f9487235f1429968441577ab36726",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"erc3643/registry/implementation/IdentityRegistry.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\n\npragma solidity 0.8.17;\n\nimport \"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\";\nimport \"@onchain-id/solidity/contracts/interface/IIdentity.sol\";\n\nimport \"../interface/IClaimTopicsRegistry.sol\";\nimport \"../interface/ITrustedIssuersRegistry.sol\";\nimport \"../interface/IIdentityRegistry.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\";\nimport \"../interface/IIdentityRegistryStorage.sol\";\nimport \"../storage/IRStorage.sol\";\n\ncontract IdentityRegistry is\n    IIdentityRegistry,\n    AccessControlUpgradeable,\n    OwnableUpgradeable,\n    IRStorage\n{\n    bytes32 public constant AGENT_ROLE =\n        0xcab5a0bfe0b79d2c4b1c2e02599fa044d115b7511f9659307cb4276950967709;\n\n    bytes32 public constant OWNER_ROLE =\n        0xb19546dff01e856fb3f010c267a7b1c60363cf8a4664e21cc89c26224620214e;\n\n    \n    function init(\n        address _trustedIssuersRegistry,\n        address _claimTopicsRegistry,\n        address _identityStorage\n    ) external initializer {\n        require(\n            _trustedIssuersRegistry != address(0) &&\n                _claimTopicsRegistry != address(0) &&\n                _identityStorage != address(0),\n            \"invalid argument - zero address\"\n        );\n        _tokenTopicsRegistry = IClaimTopicsRegistry(_claimTopicsRegistry);\n        _tokenIssuersRegistry = ITrustedIssuersRegistry(\n            _trustedIssuersRegistry\n        );\n        _tokenIdentityStorage = IIdentityRegistryStorage(_identityStorage);\n        emit ClaimTopicsRegistrySet(_claimTopicsRegistry);\n        emit TrustedIssuersRegistrySet(_trustedIssuersRegistry);\n        emit IdentityStorageSet(_identityStorage);\n        __Ownable_init();\n    }\n\n    /**\n     *  @dev See {IIdentityRegistry-batchRegisterIdentity}.\n     */\n    function batchRegisterIdentity(\n        address[] calldata _userAddresses,\n        IIdentity[] calldata _identities,\n        uint16[] calldata _countries\n    ) external override {\n        for (uint256 i = 0; i < _userAddresses.length; i++) {\n            registerIdentity(_userAddresses[i], _identities[i], _countries[i]);\n        }\n    }\n\n    /**\n     *  @dev See {IIdentityRegistry-updateIdentity}.\n     */\n    function updateIdentity(address _userAddress, IIdentity _identity)\n        external\n        override\n        onlyRole(AGENT_ROLE)\n    {\n        IIdentity oldIdentity = identity(_userAddress);\n        _tokenIdentityStorage.modifyStoredIdentity(_userAddress, _identity);\n        emit IdentityUpdated(oldIdentity, _identity);\n    }\n\n    /**\n     *  @dev See {IIdentityRegistry-updateCountry}.\n     */\n    function updateCountry(address _userAddress, uint16 _country)\n        external\n        override\n        onlyRole(AGENT_ROLE)\n    {\n        _tokenIdentityStorage.modifyStoredInvestorCountry(\n            _userAddress,\n            _country\n        );\n        emit CountryUpdated(_userAddress, _country);\n    }\n\n    /**\n     *  @dev See {IIdentityRegistry-deleteIdentity}.\n     */\n    function deleteIdentity(address _userAddress)\n        external\n        override\n        onlyRole(AGENT_ROLE)\n    {\n        IIdentity oldIdentity = identity(_userAddress);\n        _tokenIdentityStorage.removeIdentityFromStorage(_userAddress);\n        emit IdentityRemoved(_userAddress, oldIdentity);\n    }\n\n    /**\n     *  @dev See {IIdentityRegistry-setIdentityRegistryStorage}.\n     */\n    function setIdentityRegistryStorage(address _identityRegistryStorage)\n        external\n        override\n        onlyRole(OWNER_ROLE)\n    {\n        _tokenIdentityStorage = IIdentityRegistryStorage(\n            _identityRegistryStorage\n        );\n        emit IdentityStorageSet(_identityRegistryStorage);\n    }\n\n    /**\n     *  @dev See {IIdentityRegistry-setClaimTopicsRegistry}.\n     */\n    function setClaimTopicsRegistry(address _claimTopicsRegistry)\n        external\n        override\n        onlyRole(OWNER_ROLE)\n    {\n        _tokenTopicsRegistry = IClaimTopicsRegistry(_claimTopicsRegistry);\n        emit ClaimTopicsRegistrySet(_claimTopicsRegistry);\n    }\n\n    /**\n     *  @dev See {IIdentityRegistry-setTrustedIssuersRegistry}.\n     */\n    function setTrustedIssuersRegistry(address _trustedIssuersRegistry)\n        external\n        override\n        onlyRole(OWNER_ROLE)\n    {\n        _tokenIssuersRegistry = ITrustedIssuersRegistry(\n            _trustedIssuersRegistry\n        );\n        emit TrustedIssuersRegistrySet(_trustedIssuersRegistry);\n    }\n\n    /**\n     *  @dev See {IIdentityRegistry-isVerified}.\n     */\n    // solhint-disable-next-line code-complexity\n    function isVerified(address _userAddress)\n        external\n        view\n        override\n        returns (bool)\n    {\n        if (address(identity(_userAddress)) == address(0)) {\n            return false;\n        }\n        uint256[] memory requiredClaimTopics = _tokenTopicsRegistry\n            .getClaimTopics();\n        if (requiredClaimTopics.length == 0) {\n            return true;\n        }\n\n        uint256 foundClaimTopic;\n        uint256 scheme;\n        address issuer;\n        bytes memory sig;\n        bytes memory data;\n        uint256 claimTopic;\n        for (\n            claimTopic = 0;\n            claimTopic < requiredClaimTopics.length;\n            claimTopic++\n        ) {\n            IClaimIssuer[] memory trustedIssuers = _tokenIssuersRegistry\n                .getTrustedIssuersForClaimTopic(\n                    requiredClaimTopics[claimTopic]\n                );\n\n            if (trustedIssuers.length == 0) {\n                return false;\n            }\n\n            bytes32[] memory claimIds = new bytes32[](trustedIssuers.length);\n            for (uint256 i = 0; i < trustedIssuers.length; i++) {\n                claimIds[i] = keccak256(\n                    abi.encode(\n                        trustedIssuers[i],\n                        requiredClaimTopics[claimTopic]\n                    )\n                );\n            }\n\n            for (uint256 j = 0; j < claimIds.length; j++) {\n                (foundClaimTopic, scheme, issuer, sig, data, ) = identity(\n                    _userAddress\n                ).getClaim(claimIds[j]);\n\n                if (foundClaimTopic == requiredClaimTopics[claimTopic]) {\n                    try\n                        IClaimIssuer(issuer).isClaimValid(\n                            identity(_userAddress),\n                            requiredClaimTopics[claimTopic],\n                            sig,\n                            data\n                        )\n                    returns (bool _validity) {\n                        if (_validity) {\n                            j = claimIds.length;\n                        }\n                        if (!_validity && j == (claimIds.length - 1)) {\n                            return false;\n                        }\n                    } catch {\n                        if (j == (claimIds.length - 1)) {\n                            return false;\n                        }\n                    }\n                } else if (j == (claimIds.length - 1)) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     *  @dev See {IIdentityRegistry-investorCountry}.\n     */\n    function investorCountry(address _userAddress)\n        external\n        view\n        override\n        returns (uint16)\n    {\n        return _tokenIdentityStorage.storedInvestorCountry(_userAddress);\n    }\n\n    /**\n     *  @dev See {IIdentityRegistry-issuersRegistry}.\n     */\n    function issuersRegistry()\n        external\n        view\n        override\n        returns (ITrustedIssuersRegistry)\n    {\n        return _tokenIssuersRegistry;\n    }\n\n    /**\n     *  @dev See {IIdentityRegistry-topicsRegistry}.\n     */\n    function topicsRegistry()\n        external\n        view\n        override\n        returns (IClaimTopicsRegistry)\n    {\n        return _tokenTopicsRegistry;\n    }\n\n    /**\n     *  @dev See {IIdentityRegistry-identityStorage}.\n     */\n    function identityStorage()\n        external\n        view\n        override\n        returns (IIdentityRegistryStorage)\n    {\n        return _tokenIdentityStorage;\n    }\n\n    /**\n     *  @dev See {IIdentityRegistry-contains}.\n     */\n    function contains(address _userAddress)\n        external\n        view\n        override\n        returns (bool)\n    {\n        if (address(identity(_userAddress)) == address(0)) {\n            return false;\n        }\n        return true;\n    }\n\n    /**\n     *  @dev See {IIdentityRegistry-registerIdentity}.\n     */\n    function registerIdentity(\n        address _userAddress,\n        IIdentity _identity,\n        uint16 _country\n    ) public override onlyRole(AGENT_ROLE) {\n        _tokenIdentityStorage.addIdentityToStorage(\n            _userAddress,\n            _identity,\n            _country\n        );\n        emit IdentityRegistered(_userAddress, _identity);\n    }\n\n    /**\n     *  @dev See {IIdentityRegistry-identity}.\n     */\n    function identity(address _userAddress)\n        public\n        view\n        override\n        returns (IIdentity)\n    {\n        return _tokenIdentityStorage.storedIdentity(_userAddress);\n    }\n}\n"
			},
			"erc3643/registry/storage/IRStorage.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity 0.8.17;\n\nimport \"../interface/IClaimTopicsRegistry.sol\";\nimport \"../interface/ITrustedIssuersRegistry.sol\";\nimport \"../interface/IIdentityRegistryStorage.sol\";\n\ncontract IRStorage {\n    // Address of the ClaimTopicsRegistry Contract\n    IClaimTopicsRegistry internal _tokenTopicsRegistry;\n\n    // Address of the TrustedIssuersRegistry Contract\n    ITrustedIssuersRegistry internal _tokenIssuersRegistry;\n\n    // Address of the IdentityRegistryStorage Contract\n    IIdentityRegistryStorage internal _tokenIdentityStorage;\n\n    \n    uint256[49] private __gap;\n}\n"
			},
			"erc3643/registry/interface/IIdentityRegistryStorage.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity 0.8.17;\n\nimport \"@onchain-id/solidity/contracts/interface/IIdentity.sol\";\n\ninterface IIdentityRegistryStorage {\n    event IdentityStored(\n        address indexed investorAddress,\n        IIdentity indexed identity\n    );\n\n    event IdentityUnstored(\n        address indexed investorAddress,\n        IIdentity indexed identity\n    );\n\n    event IdentityModified(\n        IIdentity indexed oldIdentity,\n        IIdentity indexed newIdentity\n    );\n\n    event CountryModified(\n        address indexed investorAddress,\n        uint16 indexed country\n    );\n\n    event IdentityRegistryBound(address indexed identityRegistry);\n\n    event IdentityRegistryUnbound(address indexed identityRegistry);\n\n    /// functions\n\n    function addIdentityToStorage(\n        address _userAddress,\n        IIdentity _identity,\n        uint16 _country\n    ) external;\n\n    function removeIdentityFromStorage(address _userAddress) external;\n\n    function modifyStoredInvestorCountry(address _userAddress, uint16 _country)\n        external;\n\n    function modifyStoredIdentity(address _userAddress, IIdentity _identity)\n        external;\n\n    function bindIdentityRegistry(address _identityRegistry) external;\n\n    function unbindIdentityRegistry(address _identityRegistry) external;\n\n    function linkedIdentityRegistries()\n        external\n        view\n        returns (address[] memory);\n\n    function storedIdentity(address _userAddress)\n        external\n        view\n        returns (IIdentity);\n\n    function storedInvestorCountry(address _userAddress)\n        external\n        view\n        returns (uint16);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControlUpgradeable.sol\";\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../utils/StringsUpgradeable.sol\";\nimport \"../utils/introspection/ERC165Upgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControlUpgradeable is Initializable, ContextUpgradeable, IAccessControlUpgradeable, ERC165Upgradeable {\n    function __AccessControl_init() internal onlyInitializing {\n    }\n\n    function __AccessControl_init_unchained() internal onlyInitializing {\n    }\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControlUpgradeable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        StringsUpgradeable.toHexString(account),\n                        \" is missing role \",\n                        StringsUpgradeable.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function __Ownable_init() internal onlyInitializing {\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal onlyInitializing {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"erc3643/registry/interface/IIdentityRegistry.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity 0.8.17;\n\nimport \"./ITrustedIssuersRegistry.sol\";\nimport \"./IClaimTopicsRegistry.sol\";\nimport \"./IIdentityRegistryStorage.sol\";\n\nimport \"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\";\nimport \"@onchain-id/solidity/contracts/interface/IIdentity.sol\";\n\ninterface IIdentityRegistry {\n    event ClaimTopicsRegistrySet(address indexed claimTopicsRegistry);\n\n    event IdentityStorageSet(address indexed identityStorage);\n\n    event TrustedIssuersRegistrySet(address indexed trustedIssuersRegistry);\n\n    event IdentityRegistered(\n        address indexed investorAddress,\n        IIdentity indexed identity\n    );\n\n    event IdentityRemoved(\n        address indexed investorAddress,\n        IIdentity indexed identity\n    );\n\n    event IdentityUpdated(\n        IIdentity indexed oldIdentity,\n        IIdentity indexed newIdentity\n    );\n\n    event CountryUpdated(\n        address indexed investorAddress,\n        uint16 indexed country\n    );\n\n    function registerIdentity(\n        address _userAddress,\n        IIdentity _identity,\n        uint16 _country\n    ) external;\n\n    function deleteIdentity(address _userAddress) external;\n\n    function setIdentityRegistryStorage(address _identityRegistryStorage)\n        external;\n\n    function setClaimTopicsRegistry(address _claimTopicsRegistry) external;\n\n    function setTrustedIssuersRegistry(address _trustedIssuersRegistry)\n        external;\n\n    function updateCountry(address _userAddress, uint16 _country) external;\n\n    function updateIdentity(address _userAddress, IIdentity _identity) external;\n\n    function batchRegisterIdentity(\n        address[] calldata _userAddresses,\n        IIdentity[] calldata _identities,\n        uint16[] calldata _countries\n    ) external;\n\n    function contains(address _userAddress) external view returns (bool);\n\n    function isVerified(address _userAddress) external view returns (bool);\n\n    function identity(address _userAddress) external view returns (IIdentity);\n\n    function investorCountry(address _userAddress)\n        external\n        view\n        returns (uint16);\n\n    function identityStorage() external view returns (IIdentityRegistryStorage);\n\n    function issuersRegistry() external view returns (ITrustedIssuersRegistry);\n\n    function topicsRegistry() external view returns (IClaimTopicsRegistry);\n}\n"
			},
			"erc3643/registry/interface/ITrustedIssuersRegistry.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity 0.8.17;\n\nimport \"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\";\n\ninterface ITrustedIssuersRegistry {\n    event TrustedIssuerAdded(\n        IClaimIssuer indexed trustedIssuer,\n        uint256[] claimTopics\n    );\n\n    event TrustedIssuerRemoved(IClaimIssuer indexed trustedIssuer);\n\n    event ClaimTopicsUpdated(\n        IClaimIssuer indexed trustedIssuer,\n        uint256[] claimTopics\n    );\n\n    function addTrustedIssuer(\n        IClaimIssuer _trustedIssuer,\n        uint256[] calldata _claimTopics\n    ) external;\n\n    function removeTrustedIssuer(IClaimIssuer _trustedIssuer) external;\n\n    function updateIssuerClaimTopics(\n        IClaimIssuer _trustedIssuer,\n        uint256[] calldata _claimTopics\n    ) external;\n\n    function getTrustedIssuers() external view returns (IClaimIssuer[] memory);\n\n    function getTrustedIssuersForClaimTopic(uint256 claimTopic)\n        external\n        view\n        returns (IClaimIssuer[] memory);\n\n    function isTrustedIssuer(address _issuer) external view returns (bool);\n\n    function getTrustedIssuerClaimTopics(IClaimIssuer _trustedIssuer)\n        external\n        view\n        returns (uint256[] memory);\n\n    function hasClaimTopic(address _issuer, uint256 _claimTopic)\n        external\n        view\n        returns (bool);\n}\n"
			},
			"erc3643/registry/interface/IClaimTopicsRegistry.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity 0.8.17;\n\ninterface IClaimTopicsRegistry {\n    event ClaimTopicAdded(uint256 indexed claimTopic);\n\n    event ClaimTopicRemoved(uint256 indexed claimTopic);\n\n    function addClaimTopic(uint256 _claimTopic) external;\n\n    function removeClaimTopic(uint256 _claimTopic) external;\n\n    function getClaimTopics() external view returns (uint256[] memory);\n}\n"
			},
			"@onchain-id/solidity/contracts/interface/IIdentity.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.17;\n\nimport \"./IERC734.sol\";\nimport \"./IERC735.sol\";\n\n// solhint-disable-next-line no-empty-blocks\ninterface IIdentity is IERC734, IERC735 {}\n"
			},
			"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.17;\n\nimport \"./IIdentity.sol\";\n\ninterface IClaimIssuer is IIdentity {\n\n    /**\n     * @dev Emitted when a claim is revoked.\n     *\n     * Specification: MUST be triggered when revoking a claim.\n     */\n    event ClaimRevoked(bytes indexed signature);\n\n    /**\n     * @dev Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\n     * @notice will fetch the claim from the identity contract (unsafe).\n     * @param _claimId the id of the claim\n     * @param _identity the address of the identity contract\n     * @return isRevoked true when the claim is revoked\n     */\n    function revokeClaim(bytes32 _claimId, address _identity) external returns(bool);\n\n    /**\n     * @dev Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\n     * @param signature the signature of the claim\n     */\n    function revokeClaimBySignature(bytes calldata signature) external;\n\n    /**\n     * @dev Returns revocation status of a claim.\n     * @param _sig the signature of the claim\n     * @return isRevoked true if the claim is revoked and false otherwise\n     */\n    function isClaimRevoked(bytes calldata _sig) external view returns (bool);\n\n    /**\n     * @dev Checks if a claim is valid.\n     * @param _identity the identity contract related to the claim\n     * @param claimTopic the claim topic of the claim\n     * @param sig the signature of the claim\n     * @param data the data field of the claim\n     * @return claimValid true if the claim is valid, false otherwise\n     */\n    function isClaimValid(\n        IIdentity _identity,\n        uint256 claimTopic,\n        bytes calldata sig,\n        bytes calldata data)\n    external view returns (bool);\n\n    /**\n     * @dev returns the address that signed the given data\n     * @param sig the signature of the data\n     * @param dataHash the data that was signed\n     * returns the address that signed dataHash and created the signature sig\n     */\n    function getRecoveredAddress(bytes calldata sig, bytes32 dataHash) external pure returns (address);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized != type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165Upgradeable.sol\";\nimport \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165Upgradeable {\n    function __ERC165_init() internal onlyInitializing {\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165Upgradeable).interfaceId;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/MathUpgradeable.sol\";\nimport \"./math/SignedMathUpgradeable.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary StringsUpgradeable {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = MathUpgradeable.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMathUpgradeable.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, MathUpgradeable.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControlUpgradeable {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"
			},
			"@onchain-id/solidity/contracts/interface/IERC735.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.17;\n\n/**\n * @dev interface of the ERC735 (Claim Holder) standard as defined in the EIP.\n */\ninterface IERC735 {\n\n    /**\n     * @dev Emitted when a claim was added.\n     *\n     * Specification: MUST be triggered when a claim was successfully added.\n     */\n    event ClaimAdded(\n        bytes32 indexed claimId,\n        uint256 indexed topic,\n        uint256 scheme,\n        address indexed issuer,\n        bytes signature,\n        bytes data,\n        string uri);\n\n    /**\n     * @dev Emitted when a claim was removed.\n     *\n     * Specification: MUST be triggered when removeClaim was successfully called.\n     */\n    event ClaimRemoved(\n        bytes32 indexed claimId,\n        uint256 indexed topic,\n        uint256 scheme,\n        address indexed issuer,\n        bytes signature,\n        bytes data,\n        string uri);\n\n    /**\n     * @dev Emitted when a claim was changed.\n     *\n     * Specification: MUST be triggered when addClaim was successfully called on an existing claimId.\n     */\n    event ClaimChanged(\n        bytes32 indexed claimId,\n        uint256 indexed topic,\n        uint256 scheme,\n        address indexed issuer,\n        bytes signature,\n        bytes data,\n        string uri);\n\n    /**\n     * @dev Add or update a claim.\n     *\n     * Triggers Event: `ClaimAdded`, `ClaimChanged`\n     *\n     * Specification: Add or update a claim from an issuer.\n     *\n     * _signature is a signed message of the following structure:\n     * `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`.\n     * Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`.\n     */\n    function addClaim(\n        uint256 _topic,\n        uint256 _scheme,\n        address issuer,\n        bytes calldata _signature,\n        bytes calldata _data,\n        string calldata _uri)\n    external returns (bytes32 claimRequestId);\n\n    /**\n     * @dev Removes a claim.\n     *\n     * Triggers Event: `ClaimRemoved`\n     *\n     * Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\n     */\n    function removeClaim(bytes32 _claimId) external returns (bool success);\n\n    /**\n     * @dev Get a claim by its ID.\n     *\n     * Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\n     */\n    function getClaim(bytes32 _claimId)\n    external view returns(\n        uint256 topic,\n        uint256 scheme,\n        address issuer,\n        bytes memory signature,\n        bytes memory data,\n        string memory uri);\n\n    /**\n     * @dev Returns an array of claim IDs by topic.\n     */\n    function getClaimIdsByTopic(uint256 _topic) external view returns(bytes32[] memory claimIds);\n}\n"
			},
			"@onchain-id/solidity/contracts/interface/IERC734.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.17;\n\n/**\n * @dev interface of the ERC734 (Key Holder) standard as defined in the EIP.\n */\ninterface IERC734 {\n\n    /**\n     * @dev Emitted when an execution request was approved.\n     *\n     * Specification: MUST be triggered when approve was successfully called.\n     */\n    event Approved(uint256 indexed executionId, bool approved);\n\n    /**\n     * @dev Emitted when an execute operation was approved and successfully performed.\n     *\n     * Specification: MUST be triggered when approve was called and the execution was successfully approved.\n     */\n    event Executed(uint256 indexed executionId, address indexed to, uint256 indexed value, bytes data);\n\n    /**\n     * @dev Emitted when an execution request was performed via `execute`.\n     *\n     * Specification: MUST be triggered when execute was successfully called.\n     */\n    event ExecutionRequested(uint256 indexed executionId, address indexed to, uint256 indexed value, bytes data);\n\n    /**\n     * @dev Emitted when an execute operation was called and failed\n     *\n     * Specification: MUST be triggered when execute call failed\n     */\n    event ExecutionFailed(uint256 indexed executionId, address indexed to, uint256 indexed value, bytes data);\n\n    /**\n     * @dev Emitted when a key was added to the Identity.\n     *\n     * Specification: MUST be triggered when addKey was successfully called.\n     */\n    event KeyAdded(bytes32 indexed key, uint256 indexed purpose, uint256 indexed keyType);\n\n    /**\n     * @dev Emitted when a key was removed from the Identity.\n     *\n     * Specification: MUST be triggered when removeKey was successfully called.\n     */\n    event KeyRemoved(bytes32 indexed key, uint256 indexed purpose, uint256 indexed keyType);\n\n    /**\n     * @dev Adds a _key to the identity. The _purpose specifies the purpose of the key.\n     *\n     * Triggers Event: `KeyAdded`\n     *\n     * Specification: MUST only be done by keys of purpose 1, or the identity\n     * itself. If it's the identity itself, the approval process will determine its approval.\n     */\n    function addKey(bytes32 _key, uint256 _purpose, uint256 _keyType) external returns (bool success);\n\n    /**\n    * @dev Approves an execution.\n    *\n    * Triggers Event: `Approved`\n    * Triggers on execution successful Event: `Executed`\n    * Triggers on execution failure Event: `ExecutionFailed`\n    */\n    function approve(uint256 _id, bool _approve) external returns (bool success);\n\n    /**\n     * @dev Removes _purpose for _key from the identity.\n     *\n     * Triggers Event: `KeyRemoved`\n     *\n     * Specification: MUST only be done by keys of purpose 1, or the identity itself.\n     * If it's the identity itself, the approval process will determine its approval.\n     */\n    function removeKey(bytes32 _key, uint256 _purpose) external returns (bool success);\n\n    /**\n     * @dev Passes an execution instruction to an ERC734 identity.\n     * How the execution is handled is up to the identity implementation:\n     * An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to\n     * approve this execution.\n     * Execute COULD be used as the only accessor for `addKey` and `removeKey`.\n     *\n     * Triggers Event: ExecutionRequested\n     * Triggers on direct execution Event: Executed\n     */\n    function execute(address _to, uint256 _value, bytes calldata _data) external payable returns (uint256 executionId);\n\n    /**\n     * @dev Returns the full key data, if present in the identity.\n     */\n    function getKey(bytes32 _key) external view returns (uint256[] memory purposes, uint256 keyType, bytes32 key);\n\n    /**\n     * @dev Returns the list of purposes associated with a key.\n     */\n    function getKeyPurposes(bytes32 _key) external view returns(uint256[] memory _purposes);\n\n    /**\n     * @dev Returns an array of public key bytes32 held by this identity.\n     */\n    function getKeysByPurpose(uint256 _purpose) external view returns (bytes32[] memory keys);\n\n    /**\n     * @dev Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE.\n     */\n    function keyHasPurpose(bytes32 _key, uint256 _purpose) external view returns (bool exists);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165Upgradeable {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMathUpgradeable {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary MathUpgradeable {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol": {
				"IClaimIssuer": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "Approved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "ClaimRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "Executed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "ExecutionFailed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "ExecutionRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "purpose",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								}
							],
							"name": "KeyAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "purpose",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								}
							],
							"name": "KeyRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_topic",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_scheme",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "string",
									"name": "_uri",
									"type": "string"
								}
							],
							"name": "addClaim",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "claimRequestId",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_keyType",
									"type": "uint256"
								}
							],
							"name": "addKey",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_approve",
									"type": "bool"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "execute",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_claimId",
									"type": "bytes32"
								}
							],
							"name": "getClaim",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_topic",
									"type": "uint256"
								}
							],
							"name": "getClaimIdsByTopic",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "claimIds",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								}
							],
							"name": "getKey",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "purposes",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								}
							],
							"name": "getKeyPurposes",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "_purposes",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "getKeysByPurpose",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "keys",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "sig",
									"type": "bytes"
								},
								{
									"internalType": "bytes32",
									"name": "dataHash",
									"type": "bytes32"
								}
							],
							"name": "getRecoveredAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_sig",
									"type": "bytes"
								}
							],
							"name": "isClaimRevoked",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IIdentity",
									"name": "_identity",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "claimTopic",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "sig",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "isClaimValid",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "keyHasPurpose",
							"outputs": [
								{
									"internalType": "bool",
									"name": "exists",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_claimId",
									"type": "bytes32"
								}
							],
							"name": "removeClaim",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "removeKey",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_claimId",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "_identity",
									"type": "address"
								}
							],
							"name": "revokeClaim",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "revokeClaimBySignature",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"ClaimRevoked(bytes)": {
								"details": "Emitted when a claim is revoked. Specification: MUST be triggered when revoking a claim."
							}
						},
						"kind": "dev",
						"methods": {
							"addClaim(uint256,uint256,address,bytes,bytes,string)": {
								"details": "Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`."
							},
							"addKey(bytes32,uint256,uint256)": {
								"details": "Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."
							},
							"approve(uint256,bool)": {
								"details": "Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`"
							},
							"execute(address,uint256,bytes)": {
								"details": "Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed"
							},
							"getClaim(bytes32)": {
								"details": "Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
							},
							"getClaimIdsByTopic(uint256)": {
								"details": "Returns an array of claim IDs by topic."
							},
							"getKey(bytes32)": {
								"details": "Returns the full key data, if present in the identity."
							},
							"getKeyPurposes(bytes32)": {
								"details": "Returns the list of purposes associated with a key."
							},
							"getKeysByPurpose(uint256)": {
								"details": "Returns an array of public key bytes32 held by this identity."
							},
							"getRecoveredAddress(bytes,bytes32)": {
								"details": "returns the address that signed the given data",
								"params": {
									"dataHash": "the data that was signed returns the address that signed dataHash and created the signature sig",
									"sig": "the signature of the data"
								}
							},
							"isClaimRevoked(bytes)": {
								"details": "Returns revocation status of a claim.",
								"params": {
									"_sig": "the signature of the claim"
								},
								"returns": {
									"_0": "isRevoked true if the claim is revoked and false otherwise"
								}
							},
							"isClaimValid(address,uint256,bytes,bytes)": {
								"details": "Checks if a claim is valid.",
								"params": {
									"_identity": "the identity contract related to the claim",
									"claimTopic": "the claim topic of the claim",
									"data": "the data field of the claim",
									"sig": "the signature of the claim"
								},
								"returns": {
									"_0": "claimValid true if the claim is valid, false otherwise"
								}
							},
							"keyHasPurpose(bytes32,uint256)": {
								"details": "Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE."
							},
							"removeClaim(bytes32)": {
								"details": "Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
							},
							"removeKey(bytes32,uint256)": {
								"details": "Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."
							},
							"revokeClaim(bytes32,address)": {
								"details": "Revoke a claim previously issued, the claim is no longer considered as valid after revocation.",
								"params": {
									"_claimId": "the id of the claim",
									"_identity": "the address of the identity contract"
								},
								"returns": {
									"_0": "isRevoked true when the claim is revoked"
								}
							},
							"revokeClaimBySignature(bytes)": {
								"details": "Revoke a claim previously issued, the claim is no longer considered as valid after revocation.",
								"params": {
									"signature": "the signature of the claim"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addClaim(uint256,uint256,address,bytes,bytes,string)": "b1a34e0d",
							"addKey(bytes32,uint256,uint256)": "1d381240",
							"approve(uint256,bool)": "747442d3",
							"execute(address,uint256,bytes)": "b61d27f6",
							"getClaim(bytes32)": "c9100bcb",
							"getClaimIdsByTopic(uint256)": "80e9e9e1",
							"getKey(bytes32)": "12aaac70",
							"getKeyPurposes(bytes32)": "fb307b34",
							"getKeysByPurpose(uint256)": "9010f726",
							"getRecoveredAddress(bytes,bytes32)": "c3b129e3",
							"isClaimRevoked(bytes)": "2646b264",
							"isClaimValid(address,uint256,bytes,bytes)": "c0969a6e",
							"keyHasPurpose(bytes32,uint256)": "d202158d",
							"removeClaim(bytes32)": "4eee424a",
							"removeKey(bytes32,uint256)": "53d413c5",
							"revokeClaim(bytes32,address)": "73c33708",
							"revokeClaimBySignature(bytes)": "9f7f9edd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"Approved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"ClaimRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"addClaim\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"claimRequestId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_keyType\",\"type\":\"uint256\"}],\"name\":\"addKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_approve\",\"type\":\"bool\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"getClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"}],\"name\":\"getClaimIdsByTopic\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"claimIds\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKey\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"purposes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKeyPurposes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_purposes\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"getKeysByPurpose\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"keys\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"dataHash\",\"type\":\"bytes32\"}],\"name\":\"getRecoveredAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_sig\",\"type\":\"bytes\"}],\"name\":\"isClaimRevoked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IIdentity\",\"name\":\"_identity\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"isClaimValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"keyHasPurpose\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"removeClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"removeKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_identity\",\"type\":\"address\"}],\"name\":\"revokeClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"revokeClaimBySignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ClaimRevoked(bytes)\":{\"details\":\"Emitted when a claim is revoked. Specification: MUST be triggered when revoking a claim.\"}},\"kind\":\"dev\",\"methods\":{\"addClaim(uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`.\"},\"addKey(bytes32,uint256,uint256)\":{\"details\":\"Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"},\"approve(uint256,bool)\":{\"details\":\"Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`\"},\"execute(address,uint256,bytes)\":{\"details\":\"Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed\"},\"getClaim(bytes32)\":{\"details\":\"Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"},\"getClaimIdsByTopic(uint256)\":{\"details\":\"Returns an array of claim IDs by topic.\"},\"getKey(bytes32)\":{\"details\":\"Returns the full key data, if present in the identity.\"},\"getKeyPurposes(bytes32)\":{\"details\":\"Returns the list of purposes associated with a key.\"},\"getKeysByPurpose(uint256)\":{\"details\":\"Returns an array of public key bytes32 held by this identity.\"},\"getRecoveredAddress(bytes,bytes32)\":{\"details\":\"returns the address that signed the given data\",\"params\":{\"dataHash\":\"the data that was signed returns the address that signed dataHash and created the signature sig\",\"sig\":\"the signature of the data\"}},\"isClaimRevoked(bytes)\":{\"details\":\"Returns revocation status of a claim.\",\"params\":{\"_sig\":\"the signature of the claim\"},\"returns\":{\"_0\":\"isRevoked true if the claim is revoked and false otherwise\"}},\"isClaimValid(address,uint256,bytes,bytes)\":{\"details\":\"Checks if a claim is valid.\",\"params\":{\"_identity\":\"the identity contract related to the claim\",\"claimTopic\":\"the claim topic of the claim\",\"data\":\"the data field of the claim\",\"sig\":\"the signature of the claim\"},\"returns\":{\"_0\":\"claimValid true if the claim is valid, false otherwise\"}},\"keyHasPurpose(bytes32,uint256)\":{\"details\":\"Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE.\"},\"removeClaim(bytes32)\":{\"details\":\"Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"},\"removeKey(bytes32,uint256)\":{\"details\":\"Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"},\"revokeClaim(bytes32,address)\":{\"details\":\"Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\",\"params\":{\"_claimId\":\"the id of the claim\",\"_identity\":\"the address of the identity contract\"},\"returns\":{\"_0\":\"isRevoked true when the claim is revoked\"}},\"revokeClaimBySignature(bytes)\":{\"details\":\"Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\",\"params\":{\"signature\":\"the signature of the claim\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"revokeClaim(bytes32,address)\":{\"notice\":\"will fetch the claim from the identity contract (unsafe).\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\":\"IClaimIssuer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\":{\"keccak256\":\"0xa7372faa967bc7eaedf66ec51907a21ca789123ad8a6fd371b32f2d2a6f27817\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dcf7cf65c7aff1f78a9071c47b05865c0fbce9d7c965430e8438ba7a451a2ba4\",\"dweb:/ipfs/QmViSrFA2KQpFeWssbJWQtdpa62A9MeEWaxqgs8dyPssga\"]},\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x419198390ae57e3a090a454452931ac8a6605acfd296809c43d4966c9cea2d19\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8f8c7d8d74a6e7dff2858abd7f10aefe1cc88bb629ec6a0c164e4043e2c70eb7\",\"dweb:/ipfs/QmRg2WFW8T2YEt1zJ7PGSAFxcu1L46pNWxm6MZbuN7M4Qc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"revokeClaim(bytes32,address)": {
								"notice": "will fetch the claim from the identity contract (unsafe)."
							}
						},
						"version": 1
					}
				}
			},
			"@onchain-id/solidity/contracts/interface/IERC734.sol": {
				"IERC734": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "Approved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "Executed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "ExecutionFailed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "ExecutionRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "purpose",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								}
							],
							"name": "KeyAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "purpose",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								}
							],
							"name": "KeyRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_keyType",
									"type": "uint256"
								}
							],
							"name": "addKey",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_approve",
									"type": "bool"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "execute",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								}
							],
							"name": "getKey",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "purposes",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								}
							],
							"name": "getKeyPurposes",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "_purposes",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "getKeysByPurpose",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "keys",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "keyHasPurpose",
							"outputs": [
								{
									"internalType": "bool",
									"name": "exists",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "removeKey",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "interface of the ERC734 (Key Holder) standard as defined in the EIP.",
						"events": {
							"Approved(uint256,bool)": {
								"details": "Emitted when an execution request was approved. Specification: MUST be triggered when approve was successfully called."
							},
							"Executed(uint256,address,uint256,bytes)": {
								"details": "Emitted when an execute operation was approved and successfully performed. Specification: MUST be triggered when approve was called and the execution was successfully approved."
							},
							"ExecutionFailed(uint256,address,uint256,bytes)": {
								"details": "Emitted when an execute operation was called and failed Specification: MUST be triggered when execute call failed"
							},
							"ExecutionRequested(uint256,address,uint256,bytes)": {
								"details": "Emitted when an execution request was performed via `execute`. Specification: MUST be triggered when execute was successfully called."
							},
							"KeyAdded(bytes32,uint256,uint256)": {
								"details": "Emitted when a key was added to the Identity. Specification: MUST be triggered when addKey was successfully called."
							},
							"KeyRemoved(bytes32,uint256,uint256)": {
								"details": "Emitted when a key was removed from the Identity. Specification: MUST be triggered when removeKey was successfully called."
							}
						},
						"kind": "dev",
						"methods": {
							"addKey(bytes32,uint256,uint256)": {
								"details": "Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."
							},
							"approve(uint256,bool)": {
								"details": "Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`"
							},
							"execute(address,uint256,bytes)": {
								"details": "Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed"
							},
							"getKey(bytes32)": {
								"details": "Returns the full key data, if present in the identity."
							},
							"getKeyPurposes(bytes32)": {
								"details": "Returns the list of purposes associated with a key."
							},
							"getKeysByPurpose(uint256)": {
								"details": "Returns an array of public key bytes32 held by this identity."
							},
							"keyHasPurpose(bytes32,uint256)": {
								"details": "Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE."
							},
							"removeKey(bytes32,uint256)": {
								"details": "Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addKey(bytes32,uint256,uint256)": "1d381240",
							"approve(uint256,bool)": "747442d3",
							"execute(address,uint256,bytes)": "b61d27f6",
							"getKey(bytes32)": "12aaac70",
							"getKeyPurposes(bytes32)": "fb307b34",
							"getKeysByPurpose(uint256)": "9010f726",
							"keyHasPurpose(bytes32,uint256)": "d202158d",
							"removeKey(bytes32,uint256)": "53d413c5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"Approved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_keyType\",\"type\":\"uint256\"}],\"name\":\"addKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_approve\",\"type\":\"bool\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKey\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"purposes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKeyPurposes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_purposes\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"getKeysByPurpose\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"keys\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"keyHasPurpose\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"removeKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"interface of the ERC734 (Key Holder) standard as defined in the EIP.\",\"events\":{\"Approved(uint256,bool)\":{\"details\":\"Emitted when an execution request was approved. Specification: MUST be triggered when approve was successfully called.\"},\"Executed(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execute operation was approved and successfully performed. Specification: MUST be triggered when approve was called and the execution was successfully approved.\"},\"ExecutionFailed(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execute operation was called and failed Specification: MUST be triggered when execute call failed\"},\"ExecutionRequested(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execution request was performed via `execute`. Specification: MUST be triggered when execute was successfully called.\"},\"KeyAdded(bytes32,uint256,uint256)\":{\"details\":\"Emitted when a key was added to the Identity. Specification: MUST be triggered when addKey was successfully called.\"},\"KeyRemoved(bytes32,uint256,uint256)\":{\"details\":\"Emitted when a key was removed from the Identity. Specification: MUST be triggered when removeKey was successfully called.\"}},\"kind\":\"dev\",\"methods\":{\"addKey(bytes32,uint256,uint256)\":{\"details\":\"Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"},\"approve(uint256,bool)\":{\"details\":\"Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`\"},\"execute(address,uint256,bytes)\":{\"details\":\"Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed\"},\"getKey(bytes32)\":{\"details\":\"Returns the full key data, if present in the identity.\"},\"getKeyPurposes(bytes32)\":{\"details\":\"Returns the list of purposes associated with a key.\"},\"getKeysByPurpose(uint256)\":{\"details\":\"Returns an array of public key bytes32 held by this identity.\"},\"keyHasPurpose(bytes32,uint256)\":{\"details\":\"Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE.\"},\"removeKey(bytes32,uint256)\":{\"details\":\"Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@onchain-id/solidity/contracts/interface/IERC734.sol\":\"IERC734\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@onchain-id/solidity/contracts/interface/IERC735.sol": {
				"IERC735": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_topic",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_scheme",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "string",
									"name": "_uri",
									"type": "string"
								}
							],
							"name": "addClaim",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "claimRequestId",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_claimId",
									"type": "bytes32"
								}
							],
							"name": "getClaim",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_topic",
									"type": "uint256"
								}
							],
							"name": "getClaimIdsByTopic",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "claimIds",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_claimId",
									"type": "bytes32"
								}
							],
							"name": "removeClaim",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "interface of the ERC735 (Claim Holder) standard as defined in the EIP.",
						"events": {
							"ClaimAdded(bytes32,uint256,uint256,address,bytes,bytes,string)": {
								"details": "Emitted when a claim was added. Specification: MUST be triggered when a claim was successfully added."
							},
							"ClaimChanged(bytes32,uint256,uint256,address,bytes,bytes,string)": {
								"details": "Emitted when a claim was changed. Specification: MUST be triggered when addClaim was successfully called on an existing claimId."
							},
							"ClaimRemoved(bytes32,uint256,uint256,address,bytes,bytes,string)": {
								"details": "Emitted when a claim was removed. Specification: MUST be triggered when removeClaim was successfully called."
							}
						},
						"kind": "dev",
						"methods": {
							"addClaim(uint256,uint256,address,bytes,bytes,string)": {
								"details": "Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`."
							},
							"getClaim(bytes32)": {
								"details": "Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
							},
							"getClaimIdsByTopic(uint256)": {
								"details": "Returns an array of claim IDs by topic."
							},
							"removeClaim(bytes32)": {
								"details": "Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addClaim(uint256,uint256,address,bytes,bytes,string)": "b1a34e0d",
							"getClaim(bytes32)": "c9100bcb",
							"getClaimIdsByTopic(uint256)": "80e9e9e1",
							"removeClaim(bytes32)": "4eee424a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"addClaim\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"claimRequestId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"getClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"}],\"name\":\"getClaimIdsByTopic\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"claimIds\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"removeClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"interface of the ERC735 (Claim Holder) standard as defined in the EIP.\",\"events\":{\"ClaimAdded(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was added. Specification: MUST be triggered when a claim was successfully added.\"},\"ClaimChanged(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was changed. Specification: MUST be triggered when addClaim was successfully called on an existing claimId.\"},\"ClaimRemoved(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was removed. Specification: MUST be triggered when removeClaim was successfully called.\"}},\"kind\":\"dev\",\"methods\":{\"addClaim(uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`.\"},\"getClaim(bytes32)\":{\"details\":\"Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"},\"getClaimIdsByTopic(uint256)\":{\"details\":\"Returns an array of claim IDs by topic.\"},\"removeClaim(bytes32)\":{\"details\":\"Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@onchain-id/solidity/contracts/interface/IERC735.sol\":\"IERC735\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@onchain-id/solidity/contracts/interface/IIdentity.sol": {
				"IIdentity": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "Approved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "Executed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "ExecutionFailed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "ExecutionRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "purpose",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								}
							],
							"name": "KeyAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "purpose",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								}
							],
							"name": "KeyRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_topic",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_scheme",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "string",
									"name": "_uri",
									"type": "string"
								}
							],
							"name": "addClaim",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "claimRequestId",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_keyType",
									"type": "uint256"
								}
							],
							"name": "addKey",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_approve",
									"type": "bool"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "execute",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_claimId",
									"type": "bytes32"
								}
							],
							"name": "getClaim",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_topic",
									"type": "uint256"
								}
							],
							"name": "getClaimIdsByTopic",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "claimIds",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								}
							],
							"name": "getKey",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "purposes",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								}
							],
							"name": "getKeyPurposes",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "_purposes",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "getKeysByPurpose",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "keys",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "keyHasPurpose",
							"outputs": [
								{
									"internalType": "bool",
									"name": "exists",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_claimId",
									"type": "bytes32"
								}
							],
							"name": "removeClaim",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "removeKey",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"addClaim(uint256,uint256,address,bytes,bytes,string)": {
								"details": "Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`."
							},
							"addKey(bytes32,uint256,uint256)": {
								"details": "Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."
							},
							"approve(uint256,bool)": {
								"details": "Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`"
							},
							"execute(address,uint256,bytes)": {
								"details": "Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed"
							},
							"getClaim(bytes32)": {
								"details": "Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
							},
							"getClaimIdsByTopic(uint256)": {
								"details": "Returns an array of claim IDs by topic."
							},
							"getKey(bytes32)": {
								"details": "Returns the full key data, if present in the identity."
							},
							"getKeyPurposes(bytes32)": {
								"details": "Returns the list of purposes associated with a key."
							},
							"getKeysByPurpose(uint256)": {
								"details": "Returns an array of public key bytes32 held by this identity."
							},
							"keyHasPurpose(bytes32,uint256)": {
								"details": "Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE."
							},
							"removeClaim(bytes32)": {
								"details": "Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
							},
							"removeKey(bytes32,uint256)": {
								"details": "Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addClaim(uint256,uint256,address,bytes,bytes,string)": "b1a34e0d",
							"addKey(bytes32,uint256,uint256)": "1d381240",
							"approve(uint256,bool)": "747442d3",
							"execute(address,uint256,bytes)": "b61d27f6",
							"getClaim(bytes32)": "c9100bcb",
							"getClaimIdsByTopic(uint256)": "80e9e9e1",
							"getKey(bytes32)": "12aaac70",
							"getKeyPurposes(bytes32)": "fb307b34",
							"getKeysByPurpose(uint256)": "9010f726",
							"keyHasPurpose(bytes32,uint256)": "d202158d",
							"removeClaim(bytes32)": "4eee424a",
							"removeKey(bytes32,uint256)": "53d413c5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"Approved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"addClaim\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"claimRequestId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_keyType\",\"type\":\"uint256\"}],\"name\":\"addKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_approve\",\"type\":\"bool\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"getClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"}],\"name\":\"getClaimIdsByTopic\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"claimIds\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKey\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"purposes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKeyPurposes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_purposes\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"getKeysByPurpose\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"keys\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"keyHasPurpose\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"removeClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"removeKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addClaim(uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`.\"},\"addKey(bytes32,uint256,uint256)\":{\"details\":\"Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"},\"approve(uint256,bool)\":{\"details\":\"Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`\"},\"execute(address,uint256,bytes)\":{\"details\":\"Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed\"},\"getClaim(bytes32)\":{\"details\":\"Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"},\"getClaimIdsByTopic(uint256)\":{\"details\":\"Returns an array of claim IDs by topic.\"},\"getKey(bytes32)\":{\"details\":\"Returns the full key data, if present in the identity.\"},\"getKeyPurposes(bytes32)\":{\"details\":\"Returns the list of purposes associated with a key.\"},\"getKeysByPurpose(uint256)\":{\"details\":\"Returns an array of public key bytes32 held by this identity.\"},\"keyHasPurpose(bytes32,uint256)\":{\"details\":\"Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE.\"},\"removeClaim(bytes32)\":{\"details\":\"Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"},\"removeKey(bytes32,uint256)\":{\"details\":\"Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":\"IIdentity\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x419198390ae57e3a090a454452931ac8a6605acfd296809c43d4966c9cea2d19\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8f8c7d8d74a6e7dff2858abd7f10aefe1cc88bb629ec6a0c164e4043e2c70eb7\",\"dweb:/ipfs/QmRg2WFW8T2YEt1zJ7PGSAFxcu1L46pNWxm6MZbuN7M4Qc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
				"AccessControlUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":\"AccessControlUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0xfeefb24d068524440e1ba885efdf105d91f83504af3c2d745ffacc4595396831\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3df5f6a75f86411cb20df54362ed4ec9b4c270720be20da7095f169932fa2709\",\"dweb:/ipfs/QmTThfuAwFYAvtHgZbmp6ZAbN2MVGSabAnhAbsB6JQxJCF\"]},\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 871,
								"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 874,
								"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1404,
								"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 1677,
								"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "51",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 363,
								"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
								"label": "_roles",
								"offset": 0,
								"slot": "101",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)358_storage)"
							},
							{
								"astId": 658,
								"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "102",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)358_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)358_storage"
							},
							"t_struct(RoleData)358_storage": {
								"encoding": "inplace",
								"label": "struct AccessControlUpgradeable.RoleData",
								"members": [
									{
										"astId": 355,
										"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 357,
										"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol": {
				"IAccessControlUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":\"IAccessControlUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 871,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 874,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1404,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 743,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_owner",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 863,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_initialized": {
								"custom:oz-retyped-from": "bool",
								"details": "Indicates that the contract has been initialized."
							},
							"_initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 871,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 874,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"AddressUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:9374  library AddressUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:9374  library AddressUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202266d23dc12ff1cc7fac7c3c8bf24c440e1b67cc8d2043a0abc016ca335310fc64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202266d23dc12ff1cc7fac7c3c8bf24c440e1b67cc8d2043a0abc016ca335310fc64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 PUSH7 0xD23DC12FF1CC7F 0xAC PUSH29 0x3C8BF24C440E1B67CC8D2043A0ABC016CA335310FC64736F6C63430008 GT STOP CALLER ",
							"sourceMap": "194:9180:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:9180:8;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202266d23dc12ff1cc7fac7c3c8bf24c440e1b67cc8d2043a0abc016ca335310fc64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 PUSH7 0xD23DC12FF1CC7F 0xAC PUSH29 0x3C8BF24C440E1B67CC8D2043A0ABC016CA335310FC64736F6C63430008 GT STOP CALLER ",
							"sourceMap": "194:9180:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202266d23dc12ff1cc7fac7c3c8bf24c440e1b67cc8d2043a0abc016ca335310fc64736f6c63430008110033",
									".code": [
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
								"@onchain-id/solidity/contracts/interface/IERC734.sol",
								"@onchain-id/solidity/contracts/interface/IERC735.sol",
								"@onchain-id/solidity/contracts/interface/IIdentity.sol",
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
								"erc3643/registry/implementation/IdentityRegistry.sol",
								"erc3643/registry/interface/IClaimTopicsRegistry.sol",
								"erc3643/registry/interface/IIdentityRegistry.sol",
								"erc3643/registry/interface/IIdentityRegistryStorage.sol",
								"erc3643/registry/interface/ITrustedIssuersRegistry.sol",
								"erc3643/registry/storage/IRStorage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 871,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 874,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1404,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol": {
				"StringsUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":242:2845  library StringsUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":242:2845  library StringsUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d50fdfeda180e66f4b8b75002c746ab9537485303a6e3b5cf06f7974a4f4103464736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d50fdfeda180e66f4b8b75002c746ab9537485303a6e3b5cf06f7974a4f4103464736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 0xF 0xDF 0xED LOG1 DUP1 0xE6 PUSH16 0x4B8B75002C746AB9537485303A6E3B5C CREATE PUSH16 0x7974A4F4103464736F6C634300081100 CALLER ",
							"sourceMap": "242:2603:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;242:2603:10;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d50fdfeda180e66f4b8b75002c746ab9537485303a6e3b5cf06f7974a4f4103464736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 0xF 0xDF 0xED LOG1 DUP1 0xE6 PUSH16 0x4B8B75002C746AB9537485303A6E3B5C CREATE PUSH16 0x7974A4F4103464736F6C634300081100 CALLER ",
							"sourceMap": "242:2603:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(int256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d50fdfeda180e66f4b8b75002c746ab9537485303a6e3b5cf06f7974a4f4103464736f6c63430008110033",
									".code": [
										{
											"begin": 242,
											"end": 2845,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 242,
											"end": 2845,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 242,
											"end": 2845,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 242,
											"end": 2845,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 242,
											"end": 2845,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 242,
											"end": 2845,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 242,
											"end": 2845,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 242,
											"end": 2845,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 242,
											"end": 2845,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
								"@onchain-id/solidity/contracts/interface/IERC734.sol",
								"@onchain-id/solidity/contracts/interface/IERC735.sol",
								"@onchain-id/solidity/contracts/interface/IIdentity.sol",
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
								"erc3643/registry/implementation/IdentityRegistry.sol",
								"erc3643/registry/interface/IClaimTopicsRegistry.sol",
								"erc3643/registry/interface/IIdentityRegistry.sol",
								"erc3643/registry/interface/IIdentityRegistryStorage.sol",
								"erc3643/registry/interface/ITrustedIssuersRegistry.sol",
								"erc3643/registry/storage/IRStorage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":\"StringsUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
				"ERC165Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 871,
								"contract": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 874,
								"contract": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1677,
								"contract": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
				"IERC165Upgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":\"IERC165Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol": {
				"MathUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":202:12795  library MathUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":202:12795  library MathUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205db8093b1b657ae38f6999bc8c1fa6a23e847ae499c2639bb5a6d367bf17e9ca64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205db8093b1b657ae38f6999bc8c1fa6a23e847ae499c2639bb5a6d367bf17e9ca64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5D 0xB8 MULMOD EXTCODESIZE SHL PUSH6 0x7AE38F6999BC DUP13 0x1F 0xA6 LOG2 RETURNDATACOPY DUP5 PUSH27 0xE499C2639BB5A6D367BF17E9CA64736F6C63430008110033000000 ",
							"sourceMap": "202:12593:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;202:12593:13;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205db8093b1b657ae38f6999bc8c1fa6a23e847ae499c2639bb5a6d367bf17e9ca64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5D 0xB8 MULMOD EXTCODESIZE SHL PUSH6 0x7AE38F6999BC DUP13 0x1F 0xA6 LOG2 RETURNDATACOPY DUP5 PUSH27 0xE499C2639BB5A6D367BF17E9CA64736F6C63430008110033000000 ",
							"sourceMap": "202:12593:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum MathUpgradeable.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum MathUpgradeable.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum MathUpgradeable.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum MathUpgradeable.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum MathUpgradeable.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205db8093b1b657ae38f6999bc8c1fa6a23e847ae499c2639bb5a6d367bf17e9ca64736f6c63430008110033",
									".code": [
										{
											"begin": 202,
											"end": 12795,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 202,
											"end": 12795,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 202,
											"end": 12795,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 202,
											"end": 12795,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12795,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12795,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 202,
											"end": 12795,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12795,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 202,
											"end": 12795,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
								"@onchain-id/solidity/contracts/interface/IERC734.sol",
								"@onchain-id/solidity/contracts/interface/IERC735.sol",
								"@onchain-id/solidity/contracts/interface/IIdentity.sol",
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
								"erc3643/registry/implementation/IdentityRegistry.sol",
								"erc3643/registry/interface/IClaimTopicsRegistry.sol",
								"erc3643/registry/interface/IIdentityRegistry.sol",
								"erc3643/registry/interface/IIdentityRegistryStorage.sol",
								"erc3643/registry/interface/ITrustedIssuersRegistry.sol",
								"erc3643/registry/storage/IRStorage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":\"MathUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol": {
				"SignedMathUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":215:1273  library SignedMathUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":215:1273  library SignedMathUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c57e6e824eccc311230483b8e2d2edefde6a10be3e1f833fefbd3d85270e78da64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c57e6e824eccc311230483b8e2d2edefde6a10be3e1f833fefbd3d85270e78da64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 PUSH31 0x6E824ECCC311230483B8E2D2EDEFDE6A10BE3E1F833FEFBD3D85270E78DA64 PUSH20 0x6F6C634300081100330000000000000000000000 ",
							"sourceMap": "215:1058:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;215:1058:14;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c57e6e824eccc311230483b8e2d2edefde6a10be3e1f833fefbd3d85270e78da64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 PUSH31 0x6E824ECCC311230483B8E2D2EDEFDE6A10BE3E1F833FEFBD3D85270E78DA64 PUSH20 0x6F6C634300081100330000000000000000000000 ",
							"sourceMap": "215:1058:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c57e6e824eccc311230483b8e2d2edefde6a10be3e1f833fefbd3d85270e78da64736f6c63430008110033",
									".code": [
										{
											"begin": 215,
											"end": 1273,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 215,
											"end": 1273,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 215,
											"end": 1273,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 215,
											"end": 1273,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 215,
											"end": 1273,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 215,
											"end": 1273,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 215,
											"end": 1273,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 1273,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 215,
											"end": 1273,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
								"@onchain-id/solidity/contracts/interface/IERC734.sol",
								"@onchain-id/solidity/contracts/interface/IERC735.sol",
								"@onchain-id/solidity/contracts/interface/IIdentity.sol",
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
								"erc3643/registry/implementation/IdentityRegistry.sol",
								"erc3643/registry/interface/IClaimTopicsRegistry.sol",
								"erc3643/registry/interface/IIdentityRegistry.sol",
								"erc3643/registry/interface/IIdentityRegistryStorage.sol",
								"erc3643/registry/interface/ITrustedIssuersRegistry.sol",
								"erc3643/registry/storage/IRStorage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":\"SignedMathUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"erc3643/registry/implementation/IdentityRegistry.sol": {
				"IdentityRegistry": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "claimTopicsRegistry",
									"type": "address"
								}
							],
							"name": "ClaimTopicsRegistrySet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "investorAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint16",
									"name": "country",
									"type": "uint16"
								}
							],
							"name": "CountryUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "investorAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "contract IIdentity",
									"name": "identity",
									"type": "address"
								}
							],
							"name": "IdentityRegistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "investorAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "contract IIdentity",
									"name": "identity",
									"type": "address"
								}
							],
							"name": "IdentityRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "identityStorage",
									"type": "address"
								}
							],
							"name": "IdentityStorageSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IIdentity",
									"name": "oldIdentity",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "contract IIdentity",
									"name": "newIdentity",
									"type": "address"
								}
							],
							"name": "IdentityUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "trustedIssuersRegistry",
									"type": "address"
								}
							],
							"name": "TrustedIssuersRegistrySet",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "AGENT_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "OWNER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_userAddresses",
									"type": "address[]"
								},
								{
									"internalType": "contract IIdentity[]",
									"name": "_identities",
									"type": "address[]"
								},
								{
									"internalType": "uint16[]",
									"name": "_countries",
									"type": "uint16[]"
								}
							],
							"name": "batchRegisterIdentity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "contains",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "deleteIdentity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "identity",
							"outputs": [
								{
									"internalType": "contract IIdentity",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "identityStorage",
							"outputs": [
								{
									"internalType": "contract IIdentityRegistryStorage",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_trustedIssuersRegistry",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_claimTopicsRegistry",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_identityStorage",
									"type": "address"
								}
							],
							"name": "init",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "investorCountry",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "isVerified",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "issuersRegistry",
							"outputs": [
								{
									"internalType": "contract ITrustedIssuersRegistry",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "contract IIdentity",
									"name": "_identity",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "_country",
									"type": "uint16"
								}
							],
							"name": "registerIdentity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_claimTopicsRegistry",
									"type": "address"
								}
							],
							"name": "setClaimTopicsRegistry",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_identityRegistryStorage",
									"type": "address"
								}
							],
							"name": "setIdentityRegistryStorage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_trustedIssuersRegistry",
									"type": "address"
								}
							],
							"name": "setTrustedIssuersRegistry",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "topicsRegistry",
							"outputs": [
								{
									"internalType": "contract IClaimTopicsRegistry",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "_country",
									"type": "uint16"
								}
							],
							"name": "updateCountry",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "contract IIdentity",
									"name": "_identity",
									"type": "address"
								}
							],
							"name": "updateIdentity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"batchRegisterIdentity(address[],address[],uint16[])": {
								"details": "See {IIdentityRegistry-batchRegisterIdentity}."
							},
							"contains(address)": {
								"details": "See {IIdentityRegistry-contains}."
							},
							"deleteIdentity(address)": {
								"details": "See {IIdentityRegistry-deleteIdentity}."
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"identity(address)": {
								"details": "See {IIdentityRegistry-identity}."
							},
							"identityStorage()": {
								"details": "See {IIdentityRegistry-identityStorage}."
							},
							"investorCountry(address)": {
								"details": "See {IIdentityRegistry-investorCountry}."
							},
							"isVerified(address)": {
								"details": "See {IIdentityRegistry-isVerified}."
							},
							"issuersRegistry()": {
								"details": "See {IIdentityRegistry-issuersRegistry}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"registerIdentity(address,address,uint16)": {
								"details": "See {IIdentityRegistry-registerIdentity}."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"setClaimTopicsRegistry(address)": {
								"details": "See {IIdentityRegistry-setClaimTopicsRegistry}."
							},
							"setIdentityRegistryStorage(address)": {
								"details": "See {IIdentityRegistry-setIdentityRegistryStorage}."
							},
							"setTrustedIssuersRegistry(address)": {
								"details": "See {IIdentityRegistry-setTrustedIssuersRegistry}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"topicsRegistry()": {
								"details": "See {IIdentityRegistry-topicsRegistry}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"updateCountry(address,uint16)": {
								"details": "See {IIdentityRegistry-updateCountry}."
							},
							"updateIdentity(address,address)": {
								"details": "See {IIdentityRegistry-updateIdentity}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"erc3643/registry/implementation/IdentityRegistry.sol\":587:9203  contract IdentityRegistry is... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":587:9203  contract IdentityRegistry is... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7e42683b\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xb9209e33\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xe744d789\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xe744d789\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xf0eb5e54\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xf11abfd8\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0xb9209e33\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xe58378bb\n      eq\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup1\n      0x91d14854\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa8d29d1d\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xb4f3fcb7\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0x7e42683b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8e098ca1\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      dup1\n      0x3b239a7f\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x5dbe47e8\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x5dbe47e8\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x653dc9f1\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x670af6a9\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      dup1\n      0x3b239a7f\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x3b3e12f4\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x454a03e0\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0x248a9ca3\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x26d941ae\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x184b9559\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x22459e18\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3029:3242  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_38\n      tag_39\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      mload(0x40)\n        /* \"#utility.yul\":470:484   */\n      swap1\n      iszero\n        /* \"#utility.yul\":463:485   */\n      iszero\n        /* \"#utility.yul\":445:486   */\n      dup2\n      mstore\n        /* \"#utility.yul\":433:435   */\n      0x20\n        /* \"#utility.yul\":418:436   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3029:3242  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":954:1800  function init(... */\n    tag_4:\n      tag_44\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      stop\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":713:824  bytes32 public constant AGENT_ROLE =... */\n    tag_5:\n      tag_48\n      0x00\n      dup1\n      mload\n      0x20\n      data_83599f2fd2d7ecec31a0c854e1dfa0cd718f43d0f25b15e620b3800dba1a8107\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      dup2\n      jump\n    tag_48:\n      mload(0x40)\n        /* \"#utility.yul\":1313:1338   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1301:1303   */\n      0x20\n        /* \"#utility.yul\":1286:1304   */\n      add\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":713:824  bytes32 public constant AGENT_ROLE =... */\n      tag_42\n        /* \"#utility.yul\":1167:1344   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4834:4963  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n    tag_6:\n      tag_48\n      tag_53\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_53:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4908:4915  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4934:4946  _roles[role] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4934:4940  _roles */\n      0x65\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4934:4946  _roles[role] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4934:4956  _roles[role].adminRole */\n      0x01\n      add\n      sload\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4834:4963  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n      jump\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":3468:3777  function setIdentityRegistryStorage(address _identityRegistryStorage)... */\n    tag_7:\n      tag_44\n      tag_58\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5259:5404  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_8:\n      tag_44\n      tag_62\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6368:6582  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_9:\n      tag_44\n      tag_66\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":2696:3002  function updateCountry(address _userAddress, uint16 _country)... */\n    tag_10:\n      tag_44\n      tag_69\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":7803:7963  function topicsRegistry()... */\n    tag_11:\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":7936:7956  _tokenTopicsRegistry */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0xc9))\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":7803:7963  function topicsRegistry()... */\n    tag_72:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2812:2844   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2794:2845   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2782:2784   */\n      0x20\n        /* \"#utility.yul\":2767:2785   */\n      add\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":7803:7963  function topicsRegistry()... */\n      tag_42\n        /* \"#utility.yul\":2619:2851   */\n      jump\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":8590:8941  function registerIdentity(... */\n    tag_12:\n      tag_44\n      tag_77\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":8274:8513  function contains(address _userAddress)... */\n    tag_13:\n      tag_38\n      tag_81\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":1882:2219  function batchRegisterIdentity(... */\n    tag_14:\n      tag_44\n      tag_85\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_85:\n      tag_87\n      jump\t// in\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":3860:4130  function setClaimTopicsRegistry(address _claimTopicsRegistry)... */\n    tag_15:\n      tag_44\n      tag_89\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2064:2165  function renounceOwnership() public virtual onlyOwner {... */\n    tag_16:\n      tag_44\n      tag_92\n      jump\t// in\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":7283:7487  function investorCountry(address _userAddress)... */\n    tag_17:\n      tag_93\n      tag_94\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n    tag_93:\n      mload(0x40)\n        /* \"#utility.yul\":5060:5066   */\n      0xffff\n        /* \"#utility.yul\":5048:5067   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":5030:5068   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5018:5020   */\n      0x20\n        /* \"#utility.yul\":5003:5021   */\n      add\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":7283:7487  function investorCountry(address _userAddress)... */\n      tag_42\n        /* \"#utility.yul\":4886:5074   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1441:1526  function owner() public view virtual returns (address) {... */\n    tag_18:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1513:1519  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x97))\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1441:1526  function owner() public view virtual returns (address) {... */\n      jump(tag_72)\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":2294:2622  function updateIdentity(address _userAddress, IIdentity _identity)... */\n    tag_19:\n      tag_44\n      tag_103\n      calldatasize\n      0x04\n      tag_104\n      jump\t// in\n    tag_103:\n      tag_105\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3329:3474  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_20:\n      tag_38\n      tag_107\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_107:\n      tag_108\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2450:2499  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_21:\n      tag_48\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2495:2499  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2450:2499  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup2\n      jump\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":3077:3381  function deleteIdentity(address _userAddress)... */\n    tag_22:\n      tag_44\n      tag_114\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_114:\n      tag_115\n      jump\t// in\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":7563:7728  function issuersRegistry()... */\n    tag_23:\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":7700:7721  _tokenIssuersRegistry */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0xca))\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":7563:7728  function issuersRegistry()... */\n      jump(tag_72)\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":4647:7207  function isVerified(address _userAddress)... */\n    tag_24:\n      tag_38\n      tag_121\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_121:\n      tag_122\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5684:5831  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_25:\n      tag_44\n      tag_125\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_125:\n      tag_126\n      jump\t// in\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":831:942  bytes32 public constant OWNER_ROLE =... */\n    tag_26:\n      tag_48\n      0x00\n      dup1\n      mload\n      0x20\n      data_48848f6f4af5ff2a90f75345111ffab654da14e01d0d715638da4379c8c19ae3\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      dup2\n      jump\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":4216:4527  function setTrustedIssuersRegistry(address _trustedIssuersRegistry)... */\n    tag_27:\n      tag_44\n      tag_131\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_131:\n      tag_132\n      jump\t// in\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":9010:9201  function identity(address _userAddress)... */\n    tag_28:\n      tag_72\n      tag_134\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_134:\n      tag_135\n      jump\t// in\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":8039:8205  function identityStorage()... */\n    tag_29:\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":8177:8198  _tokenIdentityStorage */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0xcb))\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":8039:8205  function identityStorage()... */\n      jump(tag_72)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2314:2512  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_30:\n      tag_44\n      tag_143\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_143:\n      tag_144\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3029:3242  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_41:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3114:3118  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3137:3195  interfaceId == type(IAccessControlUpgradeable).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x7965db0b)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3137:3235  interfaceId == type(IAccessControlUpgradeable).interfaceId || super.supportsInterface(interfaceId) */\n      tag_147\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1168:1219  interfaceId == type(IERC165Upgradeable).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3199:3235  super.supportsInterface(interfaceId) */\n    tag_147:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3130:3235  return interfaceId == type(IAccessControlUpgradeable).interfaceId || super.supportsInterface(interfaceId) */\n      swap3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3029:3242  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":954:1800  function init(... */\n    tag_47:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3279:3298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3302:3315  _initializing */\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3301:3315  !_initializing */\n      iszero\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3347:3381  isTopLevelCall && _initialized < 1 */\n      dup1\n      iszero\n      tag_150\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3365:3377  _initialized */\n      sload(0x00)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3380:3381  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3365:3377  _initialized */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3365:3381  _initialized < 1 */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3347:3381  isTopLevelCall && _initialized < 1 */\n    tag_150:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3346:3454  (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1) */\n      dup1\n      tag_154\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3426:3430  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1713:1732  account.code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1713:1736  account.code.length > 0 */\n      iszero\n      dup1\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3387:3453  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n      tag_154\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3436:3448  _initialized */\n      and(0xff, sload(0x00))\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3436:3453  _initialized == 1 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3387:3453  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n    tag_154:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3325:3526  require(... */\n      tag_155\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6605:6607   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3325:3526  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6587:6608   */\n      mstore\n        /* \"#utility.yul\":6644:6646   */\n      0x2e\n        /* \"#utility.yul\":6624:6642   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6617:6647   */\n      mstore\n        /* \"#utility.yul\":6683:6717   */\n      0x496e697469616c697a61626c653a20636f6e747261637420697320616c726561\n        /* \"#utility.yul\":6663:6681   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6656:6718   */\n      mstore\n      shl(0x92, 0x191e481a5b9a5d1a585b1a5e9959)\n        /* \"#utility.yul\":6734:6752   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6727:6771   */\n      mstore\n        /* \"#utility.yul\":6788:6807   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3325:3526  require(... */\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_155:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3536:3548  _initialized */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3536:3552  _initialized = 1 */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3551:3552  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3536:3552  _initialized = 1 */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3562:3627  if (isTopLevelCall) {... */\n      dup1\n      iszero\n      tag_158\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3596:3609  _initializing */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3596:3616  _initializing = true */\n      dup1\n      sload\n      not(0xff00)\n      and\n      0x0100\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3562:3627  if (isTopLevelCall) {... */\n    tag_158:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":1139:1176  _trustedIssuersRegistry != address(0) */\n      dup5\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":1139:1230  _trustedIssuersRegistry != address(0) &&... */\n      tag_160\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":1196:1230  _claimTopicsRegistry != address(0) */\n      dup4\n      and\n      iszero\n      iszero\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":1139:1230  _trustedIssuersRegistry != address(0) &&... */\n    tag_160:\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":1139:1280  _trustedIssuersRegistry != address(0) &&... */\n      dup1\n      iszero\n      tag_161\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":1250:1280  _identityStorage != address(0) */\n      dup3\n      and\n      iszero\n      iszero\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":1139:1280  _trustedIssuersRegistry != address(0) &&... */\n    tag_161:\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":1118:1337  require(... */\n      tag_162\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7020:7022   */\n      0x20\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":1118:1337  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7002:7023   */\n      mstore\n        /* \"#utility.yul\":7059:7061   */\n      0x1f\n        /* \"#utility.yul\":7039:7057   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7032:7062   */\n      mstore\n        /* \"#utility.yul\":7098:7131   */\n      0x696e76616c696420617267756d656e74202d207a65726f206164647265737300\n        /* \"#utility.yul\":7078:7096   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7071:7132   */\n      mstore\n        /* \"#utility.yul\":7149:7167   */\n      0x64\n      add\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":1118:1337  require(... */\n      tag_156\n        /* \"#utility.yul\":6818:7173   */\n      jump\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":1118:1337  require(... */\n    tag_162:\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":1347:1367  _tokenTopicsRegistry */\n      0xc9\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":1347:1412  _tokenTopicsRegistry = IClaimTopicsRegistry(_claimTopicsRegistry) */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup7\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap3\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":1422:1443  _tokenIssuersRegistry */\n      0xca\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":1422:1516  _tokenIssuersRegistry = ITrustedIssuersRegistry(... */\n      dup1\n      sload\n      dup9\n      dup4\n      and\n      swap1\n      dup5\n      and\n      or\n      swap1\n      sstore\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":1526:1547  _tokenIdentityStorage */\n      0xcb\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":1526:1592  _tokenIdentityStorage = IIdentityRegistryStorage(_identityStorage) */\n      dup1\n      sload\n      swap2\n      dup7\n      and\n      swap2\n      swap1\n      swap3\n      and\n      or\n      swap1\n      sstore\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":1607:1651  ClaimTopicsRegistrySet(_claimTopicsRegistry) */\n      mload(0x40)\n      0x7170bf15b246e880b2369cd7c67d057760d8a35149e8c64dde91efa22bcc76d0\n      swap1\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":1347:1367  _tokenTopicsRegistry */\n      0x00\n      swap1\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":1607:1651  ClaimTopicsRegistrySet(_claimTopicsRegistry) */\n      log2\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":1666:1716  TrustedIssuersRegistrySet(_trustedIssuersRegistry) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup6\n      and\n      swap1\n      0x1b98cb79e6f73020175fe87333f1b91ad6a881519c0afe30340c2599b2b4bde0\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":1731:1767  IdentityStorageSet(_identityStorage) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      0x2fa8b95c1db7afe99e3398f3792f008135cedc1fa26b0bb2ecd2352cd166d53c\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":1777:1793  __Ownable_init() */\n      tag_165\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":1777:1791  __Ownable_init */\n      tag_166\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":1777:1793  __Ownable_init() */\n      jump\t// in\n    tag_165:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3651:3665  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3647:3746  if (isTopLevelCall) {... */\n      iszero\n      tag_167\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3697:3702  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3681:3702  _initializing = false */\n      dup1\n      sload\n      not(0xff00)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3721:3735  Initialized(1) */\n      mload(0x40)\n      0x01\n        /* \"#utility.yul\":7330:7366   */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3721:3735  Initialized(1) */\n      0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498\n      swap1\n        /* \"#utility.yul\":7318:7320   */\n      0x20\n        /* \"#utility.yul\":7303:7321   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3721:3735  Initialized(1) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3647:3746  if (isTopLevelCall) {... */\n    tag_167:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3269:3752  {... */\n      pop\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":954:1800  function init(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":3468:3777  function setIdentityRegistryStorage(address _identityRegistryStorage)... */\n    tag_60:\n      0x00\n      dup1\n      mload\n      0x20\n      data_48848f6f4af5ff2a90f75345111ffab654da14e01d0d715638da4379c8c19ae3\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2944  _checkRole(role) */\n      tag_172\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":876:942  0xb19546dff01e856fb3f010c267a7b1c60363cf8a4664e21cc89c26224620214e */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2938  _checkRole */\n      tag_173\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2944  _checkRole(role) */\n      jump\t// in\n    tag_172:\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":3615:3636  _tokenIdentityStorage */\n      0xcb\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":3615:3711  _tokenIdentityStorage = IIdentityRegistryStorage(... */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":3726:3770  IdentityStorageSet(_identityRegistryStorage) */\n      mload(0x40)\n      0x2fa8b95c1db7afe99e3398f3792f008135cedc1fa26b0bb2ecd2352cd166d53c\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":3468:3777  function setIdentityRegistryStorage(address _identityRegistryStorage)... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5259:5404  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_64:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4908:4915  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4934:4946  _roles[role] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4934:4940  _roles */\n      0x65\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4934:4946  _roles[role] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4934:4956  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2944  _checkRole(role) */\n      tag_177\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2939:2943  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2938  _checkRole */\n      tag_173\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2944  _checkRole(role) */\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5372:5397  _grantRole(role, account) */\n      tag_179\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5383:5387  role */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5389:5396  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5372:5382  _grantRole */\n      tag_180\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5372:5397  _grantRole(role, account) */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5259:5404  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6368:6582  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_67:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6463:6486  account == _msgSender() */\n      dup2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6463:6486  account == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6455:6538  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7579:7581   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6455:6538  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7561:7582   */\n      mstore\n        /* \"#utility.yul\":7618:7620   */\n      0x2f\n        /* \"#utility.yul\":7598:7616   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7591:7621   */\n      mstore\n        /* \"#utility.yul\":7657:7691   */\n      0x416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365\n        /* \"#utility.yul\":7637:7655   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7630:7692   */\n      mstore\n      shl(0x89, 0x103937b632b9903337b91039b2b633)\n        /* \"#utility.yul\":7708:7726   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7701:7746   */\n      mstore\n        /* \"#utility.yul\":7763:7782   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6455:6538  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      tag_156\n        /* \"#utility.yul\":7377:7788   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6455:6538  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n    tag_184:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6549:6575  _revokeRole(role, account) */\n      tag_187\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6561:6565  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6567:6574  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6549:6560  _revokeRole */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6549:6575  _revokeRole(role, account) */\n      jump\t// in\n    tag_187:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6368:6582  function renounceRole(bytes32 role, address account) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":2696:3002  function updateCountry(address _userAddress, uint16 _country)... */\n    tag_71:\n      0x00\n      dup1\n      mload\n      0x20\n      data_83599f2fd2d7ecec31a0c854e1dfa0cd718f43d0f25b15e620b3800dba1a8107\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2944  _checkRole(role) */\n      tag_190\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":758:824  0xcab5a0bfe0b79d2c4b1c2e02599fa044d115b7511f9659307cb4276950967709 */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2938  _checkRole */\n      tag_173\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2944  _checkRole(role) */\n      jump\t// in\n    tag_190:\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":2835:2856  _tokenIdentityStorage */\n      sload(0xcb)\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":2835:2942  _tokenIdentityStorage.modifyStoredInvestorCountry(... */\n      mload(0x40)\n      shl(0xe0, 0x9f3418d5)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7983:8015   */\n      dup6\n      dup2\n      and\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":2835:2942  _tokenIdentityStorage.modifyStoredInvestorCountry(... */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":7965:8016   */\n      mstore\n        /* \"#utility.yul\":8064:8070   */\n      0xffff\n        /* \"#utility.yul\":8052:8071   */\n      dup6\n      and\n        /* \"#utility.yul\":8032:8050   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":8025:8072   */\n      mstore\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":2835:2856  _tokenIdentityStorage */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":2835:2884  _tokenIdentityStorage.modifyStoredInvestorCountry */\n      0x9f3418d5\n      swap1\n        /* \"#utility.yul\":7938:7956   */\n      0x44\n      add\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":2835:2942  _tokenIdentityStorage.modifyStoredInvestorCountry(... */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_194\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_194:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_196\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_196:\n      pop\n      pop\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":2957:2995  CountryUpdated(_userAddress, _country) */\n      mload(0x40)\n      0xffff\n      dup6\n      and\n      swap3\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      swap2\n      pop\n      0x04ed3b726495c2dca1ff1215d9ca54e1a4030abb5e82b0f6ce55702416cee853\n      swap1\n      0x00\n      swap1\n      log3\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":2696:3002  function updateCountry(address _userAddress, uint16 _country)... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":8590:8941  function registerIdentity(... */\n    tag_79:\n      0x00\n      dup1\n      mload\n      0x20\n      data_83599f2fd2d7ecec31a0c854e1dfa0cd718f43d0f25b15e620b3800dba1a8107\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2944  _checkRole(role) */\n      tag_199\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":758:824  0xcab5a0bfe0b79d2c4b1c2e02599fa044d115b7511f9659307cb4276950967709 */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2938  _checkRole */\n      tag_173\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2944  _checkRole(role) */\n      jump\t// in\n    tag_199:\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":8753:8774  _tokenIdentityStorage */\n      sload(0xcb)\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":8753:8876  _tokenIdentityStorage.addIdentityToStorage(... */\n      mload(0x40)\n      shl(0xe0, 0xa53410dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8356:8371   */\n      dup7\n      dup2\n      and\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":8753:8876  _tokenIdentityStorage.addIdentityToStorage(... */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":8338:8372   */\n      mstore\n        /* \"#utility.yul\":8408:8423   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":8388:8406   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":8381:8424   */\n      mstore\n        /* \"#utility.yul\":8472:8478   */\n      0xffff\n        /* \"#utility.yul\":8460:8479   */\n      dup6\n      and\n        /* \"#utility.yul\":8440:8458   */\n      0x44\n      dup4\n      add\n        /* \"#utility.yul\":8433:8480   */\n      mstore\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":8753:8774  _tokenIdentityStorage */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":8753:8795  _tokenIdentityStorage.addIdentityToStorage */\n      0xa53410dd\n      swap1\n        /* \"#utility.yul\":8273:8291   */\n      0x64\n      add\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":8753:8876  _tokenIdentityStorage.addIdentityToStorage(... */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_203\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_203:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_205\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_205:\n      pop\n      pop\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":8891:8934  IdentityRegistered(_userAddress, _identity) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup8\n      and\n      swap4\n      pop\n      dup8\n      and\n      swap2\n      pop\n      0x6ae73635c50d24a45af6fbd5e016ac4bed179addbc8bf24e04ff0fcc6d33af19\n      swap1\n      0x00\n      swap1\n      log3\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":8590:8941  function registerIdentity(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":8274:8513  function contains(address _userAddress)... */\n    tag_82:\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":8378:8382  bool */\n      0x00\n      dup1\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":8410:8432  identity(_userAddress) */\n      tag_207\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":8419:8431  _userAddress */\n      dup4\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":8410:8418  identity */\n      tag_135\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":8410:8432  identity(_userAddress) */\n      jump\t// in\n    tag_207:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":8402:8447  address(identity(_userAddress)) == address(0) */\n      and\n      sub\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":8398:8486  if (address(identity(_userAddress)) == address(0)) {... */\n      tag_208\n      jumpi\n      pop\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":8470:8475  false */\n      0x00\n      swap2\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":8274:8513  function contains(address _userAddress)... */\n      swap1\n      pop\n      jump\t// out\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":8398:8486  if (address(identity(_userAddress)) == address(0)) {... */\n    tag_208:\n      pop\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":8502:8506  true */\n      0x01\n      swap2\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":8274:8513  function contains(address _userAddress)... */\n      swap1\n      pop\n      jump\t// out\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":1882:2219  function batchRegisterIdentity(... */\n    tag_87:\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":2075:2084  uint256 i */\n      0x00\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":2070:2213  for (uint256 i = 0; i < _userAddresses.length; i++) {... */\n    tag_210:\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":2090:2115  i < _userAddresses.length */\n      dup6\n      dup2\n      lt\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":2070:2213  for (uint256 i = 0; i < _userAddresses.length; i++) {... */\n      iszero\n      tag_211\n      jumpi\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":2136:2202  registerIdentity(_userAddresses[i], _identities[i], _countries[i]) */\n      tag_213\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":2153:2167  _userAddresses */\n      dup8\n      dup8\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":2168:2169  i */\n      dup4\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":2153:2170  _userAddresses[i] */\n      dup2\n      dup2\n      lt\n      tag_215\n      jumpi\n      tag_215\n      tag_216\n      jump\t// in\n    tag_215:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_217\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_217:\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":2172:2183  _identities */\n      dup7\n      dup7\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":2184:2185  i */\n      dup5\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":2172:2186  _identities[i] */\n      dup2\n      dup2\n      lt\n      tag_219\n      jumpi\n      tag_219\n      tag_216\n      jump\t// in\n    tag_219:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_220\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_220:\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":2188:2198  _countries */\n      dup6\n      dup6\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":2199:2200  i */\n      dup6\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":2188:2201  _countries[i] */\n      dup2\n      dup2\n      lt\n      tag_223\n      jumpi\n      tag_223\n      tag_216\n      jump\t// in\n    tag_223:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_225\n      jump\t// in\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":2136:2202  registerIdentity(_userAddresses[i], _identities[i], _countries[i]) */\n    tag_213:\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":2117:2120  i++ */\n      dup1\n      tag_226\n      dup2\n      tag_227\n      jump\t// in\n    tag_226:\n      swap2\n      pop\n      pop\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":2070:2213  for (uint256 i = 0; i < _userAddresses.length; i++) {... */\n      jump(tag_210)\n    tag_211:\n      pop\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":1882:2219  function batchRegisterIdentity(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":3860:4130  function setClaimTopicsRegistry(address _claimTopicsRegistry)... */\n    tag_90:\n      0x00\n      dup1\n      mload\n      0x20\n      data_48848f6f4af5ff2a90f75345111ffab654da14e01d0d715638da4379c8c19ae3\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2944  _checkRole(role) */\n      tag_229\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":876:942  0xb19546dff01e856fb3f010c267a7b1c60363cf8a4664e21cc89c26224620214e */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2938  _checkRole */\n      tag_173\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2944  _checkRole(role) */\n      jump\t// in\n    tag_229:\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":3999:4019  _tokenTopicsRegistry */\n      0xc9\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":3999:4064  _tokenTopicsRegistry = IClaimTopicsRegistry(_claimTopicsRegistry) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":4079:4123  ClaimTopicsRegistrySet(_claimTopicsRegistry) */\n      mload(0x40)\n      0x7170bf15b246e880b2369cd7c67d057760d8a35149e8c64dde91efa22bcc76d0\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":3860:4130  function setClaimTopicsRegistry(address _claimTopicsRegistry)... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2064:2165  function renounceOwnership() public virtual onlyOwner {... */\n    tag_92:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_232\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_233\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_232:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2128:2158  _transferOwnership(address(0)) */\n      tag_235\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2155:2156  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2128:2146  _transferOwnership */\n      tag_236\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2128:2158  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_235:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2064:2165  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":7283:7487  function investorCountry(address _userAddress)... */\n    tag_95:\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":7423:7444  _tokenIdentityStorage */\n      sload(0xcb)\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":7423:7480  _tokenIdentityStorage.storedInvestorCountry(_userAddress) */\n      mload(0x40)\n      shl(0xe2, 0x1c9f84ef)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2812:2844   */\n      dup4\n      dup2\n      and\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":7423:7480  _tokenIdentityStorage.storedInvestorCountry(_userAddress) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":2794:2845   */\n      mstore\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":7394:7400  uint16 */\n      0x00\n      swap3\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":7423:7444  _tokenIdentityStorage */\n      and\n      swap1\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":7423:7466  _tokenIdentityStorage.storedInvestorCountry */\n      0x727e13bc\n      swap1\n        /* \"#utility.yul\":2767:2785   */\n      0x24\n      add\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":7423:7480  _tokenIdentityStorage.storedInvestorCountry(_userAddress) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_240\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_240:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_147\n      swap2\n      swap1\n      tag_242\n      jump\t// in\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":2294:2622  function updateIdentity(address _userAddress, IIdentity _identity)... */\n    tag_105:\n      0x00\n      dup1\n      mload\n      0x20\n      data_83599f2fd2d7ecec31a0c854e1dfa0cd718f43d0f25b15e620b3800dba1a8107\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2944  _checkRole(role) */\n      tag_245\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":758:824  0xcab5a0bfe0b79d2c4b1c2e02599fa044d115b7511f9659307cb4276950967709 */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2938  _checkRole */\n      tag_173\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2944  _checkRole(role) */\n      jump\t// in\n    tag_245:\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":2438:2459  IIdentity oldIdentity */\n      0x00\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":2462:2484  identity(_userAddress) */\n      tag_247\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":2471:2483  _userAddress */\n      dup5\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":2462:2470  identity */\n      tag_135\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":2462:2484  identity(_userAddress) */\n      jump\t// in\n    tag_247:\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":2494:2515  _tokenIdentityStorage */\n      sload(0xcb)\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":2494:2561  _tokenIdentityStorage.modifyStoredIdentity(_userAddress, _identity) */\n      mload(0x40)\n      shl(0xe1, 0x7402e7c3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9915:9930   */\n      dup8\n      dup2\n      and\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":2494:2561  _tokenIdentityStorage.modifyStoredIdentity(_userAddress, _identity) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":9897:9931   */\n      mstore\n        /* \"#utility.yul\":9967:9982   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":9947:9965   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":9940:9983   */\n      mstore\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":2438:2484  IIdentity oldIdentity = identity(_userAddress) */\n      swap3\n      swap4\n      pop\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":2494:2515  _tokenIdentityStorage */\n      swap2\n      and\n      swap1\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":2494:2536  _tokenIdentityStorage.modifyStoredIdentity */\n      0xe805cf86\n      swap1\n        /* \"#utility.yul\":9832:9850   */\n      0x44\n      add\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":2494:2561  _tokenIdentityStorage.modifyStoredIdentity(_userAddress, _identity) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_250\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_250:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_252\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_252:\n      pop\n      pop\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":2576:2615  IdentityUpdated(oldIdentity, _identity) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup8\n      and\n      swap4\n      pop\n      dup5\n      and\n      swap2\n      pop\n      0xe98082932c8056a0f514da9104e4a66bc2cbaef102ad59d90c4b24220ebf6010\n      swap1\n      0x00\n      swap1\n      log3\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":2428:2622  {... */\n      pop\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":2294:2622  function updateIdentity(address _userAddress, IIdentity _identity)... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3329:3474  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_108:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3415:3419  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3438:3450  _roles[role] */\n      swap2\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3438:3444  _roles */\n      0x65\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3438:3450  _roles[role] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3438:3467  _roles[role].members[account] */\n      swap4\n      swap1\n      swap4\n      and\n      dup5\n      mstore\n      swap2\n      swap1\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3329:3474  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n      jump\t// out\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":3077:3381  function deleteIdentity(address _userAddress)... */\n    tag_115:\n      0x00\n      dup1\n      mload\n      0x20\n      data_83599f2fd2d7ecec31a0c854e1dfa0cd718f43d0f25b15e620b3800dba1a8107\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2944  _checkRole(role) */\n      tag_255\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":758:824  0xcab5a0bfe0b79d2c4b1c2e02599fa044d115b7511f9659307cb4276950967709 */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2938  _checkRole */\n      tag_173\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2944  _checkRole(role) */\n      jump\t// in\n    tag_255:\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":3200:3221  IIdentity oldIdentity */\n      0x00\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":3224:3246  identity(_userAddress) */\n      tag_257\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":3233:3245  _userAddress */\n      dup4\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":3224:3232  identity */\n      tag_135\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":3224:3246  identity(_userAddress) */\n      jump\t// in\n    tag_257:\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":3256:3277  _tokenIdentityStorage */\n      sload(0xcb)\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":3256:3317  _tokenIdentityStorage.removeIdentityFromStorage(_userAddress) */\n      mload(0x40)\n      shl(0xe0, 0xcf191bcd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2812:2844   */\n      dup7\n      dup2\n      and\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":3256:3317  _tokenIdentityStorage.removeIdentityFromStorage(_userAddress) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":2794:2845   */\n      mstore\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":3200:3246  IIdentity oldIdentity = identity(_userAddress) */\n      swap3\n      swap4\n      pop\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":3256:3277  _tokenIdentityStorage */\n      swap2\n      and\n      swap1\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":3256:3303  _tokenIdentityStorage.removeIdentityFromStorage */\n      0xcf191bcd\n      swap1\n        /* \"#utility.yul\":2767:2785   */\n      0x24\n      add\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":3256:3317  _tokenIdentityStorage.removeIdentityFromStorage(_userAddress) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_259\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_259:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_261\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_261:\n      pop\n      pop\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":3332:3374  IdentityRemoved(_userAddress, oldIdentity) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup6\n      and\n      swap4\n      pop\n      dup7\n      and\n      swap2\n      pop\n      0x59d6590e225b81befe259af056324092801080acbb7feab310eb34678871f327\n      swap1\n      0x00\n      swap1\n      log3\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":3190:3381  {... */\n      pop\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":3077:3381  function deleteIdentity(address _userAddress)... */\n      pop\n      pop\n      jump\t// out\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":4647:7207  function isVerified(address _userAddress)... */\n    tag_122:\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":4753:4757  bool */\n      0x00\n      dup1\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":4785:4807  identity(_userAddress) */\n      tag_264\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":4794:4806  _userAddress */\n      dup4\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":4785:4793  identity */\n      tag_135\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":4785:4807  identity(_userAddress) */\n      jump\t// in\n    tag_264:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":4777:4822  address(identity(_userAddress)) == address(0) */\n      and\n      sub\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":4773:4861  if (address(identity(_userAddress)) == address(0)) {... */\n      tag_265\n      jumpi\n      pop\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":4845:4850  false */\n      0x00\n      swap2\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":4647:7207  function isVerified(address _userAddress)... */\n      swap1\n      pop\n      jump\t// out\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":4773:4861  if (address(identity(_userAddress)) == address(0)) {... */\n    tag_265:\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":4909:4929  _tokenTopicsRegistry */\n      sload(0xc9)\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":4909:4959  _tokenTopicsRegistry... */\n      0x40\n      dup1\n      mload\n      shl(0xe2, 0x37c27581)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":4870:4906  uint256[] memory requiredClaimTopics */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":4909:4929  _tokenTopicsRegistry */\n      and\n      swap2\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":4909:4957  _tokenTopicsRegistry... */\n      0xdf09d604\n      swap2\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":4909:4959  _tokenTopicsRegistry... */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":4870:4906  uint256[] memory requiredClaimTopics */\n      dup7\n      swap3\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":4909:4959  _tokenTopicsRegistry... */\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":4909:4929  _tokenTopicsRegistry */\n      dup7\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":4909:4959  _tokenTopicsRegistry... */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_267\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_267:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_268\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_269\n      jump\t// in\n    tag_268:\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":4870:4959  uint256[] memory requiredClaimTopics = _tokenTopicsRegistry... */\n      swap1\n      pop\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":4973:4992  requiredClaimTopics */\n      dup1\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":4973:4999  requiredClaimTopics.length */\n      mload\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5003:5004  0 */\n      0x00\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":4973:5004  requiredClaimTopics.length == 0 */\n      sub\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":4969:5042  if (requiredClaimTopics.length == 0) {... */\n      tag_270\n      jumpi\n      pop\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5027:5031  true */\n      0x01\n      swap3\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":4647:7207  function isVerified(address _userAddress)... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":4969:5042  if (requiredClaimTopics.length == 0) {... */\n    tag_270:\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5052:5075  uint256 foundClaimTopic */\n      0x00\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5085:5099  uint256 scheme */\n      dup1\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5109:5123  address issuer */\n      0x00\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5133:5149  bytes memory sig */\n      0x60\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5159:5176  bytes memory data */\n      dup1\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5186:5204  uint256 claimTopic */\n      0x00\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5214:7180  for (... */\n    tag_271:\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5273:5292  requiredClaimTopics */\n      dup7\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5273:5299  requiredClaimTopics.length */\n      mload\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5260:5270  claimTopic */\n      dup2\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5260:5299  claimTopic < requiredClaimTopics.length */\n      lt\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5214:7180  for (... */\n      iszero\n      tag_272\n      jumpi\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5389:5410  _tokenIssuersRegistry */\n      sload(0xca)\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5480:5511  requiredClaimTopics[claimTopic] */\n      dup8\n      mload\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5350:5386  IClaimIssuer[] memory trustedIssuers */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5389:5410  _tokenIssuersRegistry */\n      and\n      swap1\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5389:5458  _tokenIssuersRegistry... */\n      0x52c111d1\n      swap1\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5480:5499  requiredClaimTopics */\n      dup11\n      swap1\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5500:5510  claimTopic */\n      dup6\n      swap1\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5480:5511  requiredClaimTopics[claimTopic] */\n      dup2\n      lt\n      tag_275\n      jumpi\n      tag_275\n      tag_216\n      jump\t// in\n    tag_275:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5389:5529  _tokenIssuersRegistry... */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_276\n      swap2\n        /* \"#utility.yul\":1313:1338   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1301:1303   */\n      0x20\n        /* \"#utility.yul\":1286:1304   */\n      add\n      swap1\n        /* \"#utility.yul\":1167:1344   */\n      jump\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5389:5529  _tokenIssuersRegistry... */\n    tag_276:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_279\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_279:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_280\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_281\n      jump\t// in\n    tag_280:\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5350:5529  IClaimIssuer[] memory trustedIssuers = _tokenIssuersRegistry... */\n      swap1\n      pop\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5548:5562  trustedIssuers */\n      dup1\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5548:5569  trustedIssuers.length */\n      mload\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5573:5574  0 */\n      0x00\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5548:5574  trustedIssuers.length == 0 */\n      sub\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5544:5621  if (trustedIssuers.length == 0) {... */\n      tag_282\n      jumpi\n      pop\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5601:5606  false */\n      0x00\n      swap10\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":4647:7207  function isVerified(address _userAddress)... */\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5544:5621  if (trustedIssuers.length == 0) {... */\n    tag_282:\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5635:5660  bytes32[] memory claimIds */\n      0x00\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5677:5691  trustedIssuers */\n      dup2\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5677:5698  trustedIssuers.length */\n      mload\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5663:5699  new bytes32[](trustedIssuers.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_284\n      jumpi\n      tag_284\n      tag_285\n      jump\t// in\n    tag_284:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_286\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_286:\n      pop\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5635:5699  bytes32[] memory claimIds = new bytes32[](trustedIssuers.length) */\n      swap1\n      pop\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5718:5727  uint256 i */\n      0x00\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5713:5993  for (uint256 i = 0; i < trustedIssuers.length; i++) {... */\n    tag_287:\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5737:5751  trustedIssuers */\n      dup3\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5737:5758  trustedIssuers.length */\n      mload\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5733:5734  i */\n      dup2\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5733:5758  i < trustedIssuers.length */\n      lt\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5713:5993  for (uint256 i = 0; i < trustedIssuers.length; i++) {... */\n      iszero\n      tag_288\n      jumpi\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5864:5878  trustedIssuers */\n      dup3\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5879:5880  i */\n      dup2\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5864:5881  trustedIssuers[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_291\n      jumpi\n      tag_291\n      tag_216\n      jump\t// in\n    tag_291:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5907:5926  requiredClaimTopics */\n      dup11\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5927:5937  claimTopic */\n      dup6\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5907:5938  requiredClaimTopics[claimTopic] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_293\n      jumpi\n      tag_293\n      tag_216\n      jump\t// in\n    tag_293:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5828:5960  abi.encode(... */\n      add(0x20, mload(0x40))\n      tag_294\n      swap3\n      swap2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":12853:12885   */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":12835:12886   */\n      dup3\n      mstore\n        /* \"#utility.yul\":12917:12919   */\n      0x20\n        /* \"#utility.yul\":12902:12920   */\n      dup3\n      add\n        /* \"#utility.yul\":12895:12929   */\n      mstore\n        /* \"#utility.yul\":12823:12825   */\n      0x40\n        /* \"#utility.yul\":12808:12826   */\n      add\n      swap1\n        /* \"#utility.yul\":12642:12935   */\n      jump\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5828:5960  abi.encode(... */\n    tag_294:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5797:5978  keccak256(... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5783:5791  claimIds */\n      dup3\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5792:5793  i */\n      dup3\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5783:5794  claimIds[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_297\n      jumpi\n      tag_297\n      tag_216\n      jump\t// in\n    tag_297:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5783:5978  claimIds[i] = keccak256(... */\n      mstore\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5760:5763  i++ */\n      dup1\n      tag_298\n      dup2\n      tag_227\n      jump\t// in\n    tag_298:\n      swap2\n      pop\n      pop\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5713:5993  for (uint256 i = 0; i < trustedIssuers.length; i++) {... */\n      jump(tag_287)\n    tag_288:\n      pop\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6012:6021  uint256 j */\n      0x00\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6007:7170  for (uint256 j = 0; j < claimIds.length; j++) {... */\n    tag_299:\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6031:6039  claimIds */\n      dup2\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6031:6046  claimIds.length */\n      mload\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6027:6028  j */\n      dup2\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6027:6046  j < claimIds.length */\n      lt\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6007:7170  for (uint256 j = 0; j < claimIds.length; j++) {... */\n      iszero\n      tag_300\n      jumpi\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6120:6180  identity(... */\n      tag_302\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6150:6162  _userAddress */\n      dup13\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6120:6128  identity */\n      tag_135\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6120:6180  identity(... */\n      jump\t// in\n    tag_302:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6120:6189  identity(... */\n      and\n      0xc9100bcb\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6190:6198  claimIds */\n      dup4\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6199:6200  j */\n      dup4\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6190:6201  claimIds[j] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_304\n      jumpi\n      tag_304\n      tag_216\n      jump\t// in\n    tag_304:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6120:6202  identity(... */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_305\n      swap2\n        /* \"#utility.yul\":1313:1338   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1301:1303   */\n      0x20\n        /* \"#utility.yul\":1286:1304   */\n      add\n      swap1\n        /* \"#utility.yul\":1167:1344   */\n      jump\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6120:6202  identity(... */\n    tag_305:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_307\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_307:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_308\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_309\n      jump\t// in\n    tag_308:\n      pop\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6244:6275  requiredClaimTopics[claimTopic] */\n      dup15\n      mload\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6071:6202  (foundClaimTopic, scheme, issuer, sig, data, ) = identity(... */\n      swap5\n      swap14\n      pop\n      swap3\n      swap12\n      pop\n      swap1\n      swap10\n      pop\n      swap8\n      pop\n      swap6\n      pop\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6244:6263  requiredClaimTopics */\n      dup11\n      swap1\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6264:6274  claimTopic */\n      dup6\n      swap1\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6244:6275  requiredClaimTopics[claimTopic] */\n      dup2\n      lt\n      tag_311\n      jumpi\n      tag_311\n      tag_216\n      jump\t// in\n    tag_311:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6225:6240  foundClaimTopic */\n      dup10\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6225:6275  foundClaimTopic == requiredClaimTopics[claimTopic] */\n      sub\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6221:7156  if (foundClaimTopic == requiredClaimTopics[claimTopic]) {... */\n      tag_312\n      jumpi\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6340:6346  issuer */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6327:6360  IClaimIssuer(issuer).isClaimValid */\n      and\n      0xc0969a6e\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6390:6412  identity(_userAddress) */\n      tag_313\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6399:6411  _userAddress */\n      dup15\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6390:6398  identity */\n      tag_135\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6390:6412  identity(_userAddress) */\n      jump\t// in\n    tag_313:\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6442:6461  requiredClaimTopics */\n      dup13\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6462:6472  claimTopic */\n      dup8\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6442:6473  requiredClaimTopics[claimTopic] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_315\n      jumpi\n      tag_315\n      tag_216\n      jump\t// in\n    tag_315:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6503:6506  sig */\n      dup10\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6536:6540  data */\n      dup10\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6327:6566  IClaimIssuer(issuer).isClaimValid(... */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_316\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_317\n      jump\t// in\n    tag_316:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_318\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_319\n      swap2\n      dup2\n      add\n      swap1\n      tag_320\n      jump\t// in\n    tag_319:\n      0x01\n    tag_318:\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6299:7047  try... */\n      tag_321\n      jumpi\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6952:6953  1 */\n      0x01\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6934:6942  claimIds */\n      dup3\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6934:6949  claimIds.length */\n      mload\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6934:6953  claimIds.length - 1 */\n      tag_325\n      swap2\n      swap1\n      tag_326\n      jump\t// in\n    tag_325:\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6928:6929  j */\n      dup2\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6928:6954  j == (claimIds.length - 1) */\n      sub\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6924:7025  if (j == (claimIds.length - 1)) {... */\n      tag_327\n      jumpi\n      pop\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6993:6998  false */\n      0x00\n      swap12\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":4647:7207  function isVerified(address _userAddress)... */\n      swap11\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6924:7025  if (j == (claimIds.length - 1)) {... */\n    tag_327:\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6221:7156  if (foundClaimTopic == requiredClaimTopics[claimTopic]) {... */\n      jump(tag_335)\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6299:7047  try... */\n    tag_321:\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6642:6651  _validity */\n      dup1\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6638:6729  if (_validity) {... */\n      iszero\n      tag_329\n      jumpi\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6687:6695  claimIds */\n      dup3\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6687:6702  claimIds.length */\n      mload\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6683:6702  j = claimIds.length */\n      swap2\n      pop\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6638:6729  if (_validity) {... */\n    tag_329:\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6759:6768  _validity */\n      dup1\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6758:6768  !_validity */\n      iszero\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6758:6798  !_validity && j == (claimIds.length - 1) */\n      dup1\n      iszero\n      tag_330\n      jumpi\n      pop\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6796:6797  1 */\n      0x01\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6778:6786  claimIds */\n      dup4\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6778:6793  claimIds.length */\n      mload\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6778:6797  claimIds.length - 1 */\n      tag_331\n      swap2\n      swap1\n      tag_326\n      jump\t// in\n    tag_331:\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6772:6773  j */\n      dup3\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6772:6798  j == (claimIds.length - 1) */\n      eq\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6758:6798  !_validity && j == (claimIds.length - 1) */\n    tag_330:\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6754:6869  if (!_validity && j == (claimIds.length - 1)) {... */\n      iszero\n      tag_332\n      jumpi\n      pop\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6837:6842  false */\n      0x00\n      swap13\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":4647:7207  function isVerified(address _userAddress)... */\n      swap12\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6754:6869  if (!_validity && j == (claimIds.length - 1)) {... */\n    tag_332:\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6587:6891  returns (bool _validity) {... */\n      pop\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6221:7156  if (foundClaimTopic == requiredClaimTopics[claimTopic]) {... */\n      jump(tag_335)\n    tag_312:\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":7099:7100  1 */\n      0x01\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":7081:7089  claimIds */\n      dup3\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":7081:7096  claimIds.length */\n      mload\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":7081:7100  claimIds.length - 1 */\n      tag_334\n      swap2\n      swap1\n      tag_326\n      jump\t// in\n    tag_334:\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":7075:7076  j */\n      dup2\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":7075:7101  j == (claimIds.length - 1) */\n      sub\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":7071:7156  if (j == (claimIds.length - 1)) {... */\n      tag_335\n      jumpi\n      pop\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":7132:7137  false */\n      0x00\n      swap12\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":4647:7207  function isVerified(address _userAddress)... */\n      swap11\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":7071:7156  if (j == (claimIds.length - 1)) {... */\n    tag_335:\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6048:6051  j++ */\n      dup1\n      tag_336\n      dup2\n      tag_227\n      jump\t// in\n    tag_336:\n      swap2\n      pop\n      pop\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":6007:7170  for (uint256 j = 0; j < claimIds.length; j++) {... */\n      jump(tag_299)\n    tag_300:\n      pop\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5336:7180  {... */\n      pop\n      pop\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5313:5325  claimTopic++ */\n      dup1\n      dup1\n      tag_337\n      swap1\n      tag_227\n      jump\t// in\n    tag_337:\n      swap2\n      pop\n      pop\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":5214:7180  for (... */\n      jump(tag_271)\n    tag_272:\n      pop\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":7196:7200  true */\n      0x01\n      swap9\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":4647:7207  function isVerified(address _userAddress)... */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5684:5831  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_126:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4908:4915  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4934:4946  _roles[role] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4934:4940  _roles */\n      0x65\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4934:4946  _roles[role] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4934:4956  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2944  _checkRole(role) */\n      tag_340\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2939:2943  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2938  _checkRole */\n      tag_173\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2944  _checkRole(role) */\n      jump\t// in\n    tag_340:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5798:5824  _revokeRole(role, account) */\n      tag_179\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5810:5814  role */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5816:5823  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5798:5809  _revokeRole */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5798:5824  _revokeRole(role, account) */\n      jump\t// in\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":4216:4527  function setTrustedIssuersRegistry(address _trustedIssuersRegistry)... */\n    tag_132:\n      0x00\n      dup1\n      mload\n      0x20\n      data_48848f6f4af5ff2a90f75345111ffab654da14e01d0d715638da4379c8c19ae3\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2944  _checkRole(role) */\n      tag_344\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":876:942  0xb19546dff01e856fb3f010c267a7b1c60363cf8a4664e21cc89c26224620214e */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2938  _checkRole */\n      tag_173\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2944  _checkRole(role) */\n      jump\t// in\n    tag_344:\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":4361:4382  _tokenIssuersRegistry */\n      0xca\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":4361:4455  _tokenIssuersRegistry = ITrustedIssuersRegistry(... */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":4470:4520  TrustedIssuersRegistrySet(_trustedIssuersRegistry) */\n      mload(0x40)\n      0x1b98cb79e6f73020175fe87333f1b91ad6a881519c0afe30340c2599b2b4bde0\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":4216:4527  function setTrustedIssuersRegistry(address _trustedIssuersRegistry)... */\n      pop\n      pop\n      jump\t// out\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":9010:9201  function identity(address _userAddress)... */\n    tag_135:\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":9144:9165  _tokenIdentityStorage */\n      sload(0xcb)\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":9144:9194  _tokenIdentityStorage.storedIdentity(_userAddress) */\n      mload(0x40)\n      shl(0xe0, 0x7988d3a5)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2812:2844   */\n      dup4\n      dup2\n      and\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":9144:9194  _tokenIdentityStorage.storedIdentity(_userAddress) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":2794:2845   */\n      mstore\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":9112:9121  IIdentity */\n      0x00\n      swap3\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":9144:9165  _tokenIdentityStorage */\n      and\n      swap1\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":9144:9180  _tokenIdentityStorage.storedIdentity */\n      0x7988d3a5\n      swap1\n        /* \"#utility.yul\":2767:2785   */\n      0x24\n      add\n        /* \"erc3643/registry/implementation/IdentityRegistry.sol\":9144:9194  _tokenIdentityStorage.storedIdentity(_userAddress) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_349\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_349:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_147\n      swap2\n      swap1\n      tag_351\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2314:2512  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_144:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_354\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_233\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_354:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2402:2424  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2394:2467  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_356\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16705:16707   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2394:2467  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16687:16708   */\n      mstore\n        /* \"#utility.yul\":16744:16746   */\n      0x26\n        /* \"#utility.yul\":16724:16742   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16717:16747   */\n      mstore\n        /* \"#utility.yul\":16783:16817   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":16763:16781   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16756:16818   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":16834:16852   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":16827:16863   */\n      mstore\n        /* \"#utility.yul\":16880:16899   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2394:2467  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_156\n        /* \"#utility.yul\":16503:16905   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2394:2467  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_356:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2477:2505  _transferOwnership(newOwner) */\n      tag_359\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2496:2504  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2477:2495  _transferOwnership */\n      tag_236\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2477:2505  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_359:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2314:2512  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1003:1098  function __Ownable_init() internal onlyInitializing {... */\n    tag_166:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5374:5387  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5366:5435  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_363\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_156\n      swap1\n      tag_365\n      jump\t// in\n    tag_363:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1065:1091  __Ownable_init_unchained() */\n      tag_235\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1065:1089  __Ownable_init_unchained */\n      tag_368\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1065:1091  __Ownable_init_unchained() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3768:3871  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_173:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3834:3864  _checkRole(role, _msgSender()) */\n      tag_359\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3845:3849  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3834:3844  _checkRole */\n      tag_372\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3834:3864  _checkRole(role, _msgSender()) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7917:8150  function _grantRole(bytes32 role, address account) internal virtual {... */\n    tag_180:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8000:8022  hasRole(role, account) */\n      tag_374\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8008:8012  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8014:8021  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8000:8007  hasRole */\n      tag_108\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8000:8022  hasRole(role, account) */\n      jump\t// in\n    tag_374:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7995:8144  if (!hasRole(role, account)) {... */\n      tag_187\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8038:8050  _roles[role] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8038:8044  _roles */\n      0x65\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8038:8050  _roles[role] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8038:8067  _roles[role].members[account] */\n      dup6\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8038:8074  _roles[role].members[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8070:8074  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8038:8074  _roles[role].members[account] = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8120:8132  _msgSender() */\n      tag_376\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":850:946  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8120:8132  _msgSender() */\n    tag_376:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8093:8133  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8111:8118  account */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8093:8133  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8105:8109  role */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8093:8133  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7917:8150  function _grantRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8321:8555  function _revokeRole(bytes32 role, address account) internal virtual {... */\n    tag_188:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8404:8426  hasRole(role, account) */\n      tag_379\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8412:8416  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8418:8425  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8404:8411  hasRole */\n      tag_108\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8404:8426  hasRole(role, account) */\n      jump\t// in\n    tag_379:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8400:8549  if (hasRole(role, account)) {... */\n      iszero\n      tag_187\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8474:8479  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8442:8454  _roles[role] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8442:8448  _roles */\n      0x65\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8442:8454  _roles[role] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8442:8471  _roles[role].members[account] */\n      dup6\n      and\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8442:8479  _roles[role].members[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8498:8538  RoleRevoked(role, account, _msgSender()) */\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n      swap3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8442:8454  _roles[role] */\n      dup6\n      swap2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8498:8538  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      swap2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8474:8479  false */\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8498:8538  RoleRevoked(role, account, _msgSender()) */\n      log4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8321:8555  function _revokeRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1599:1729  function _checkOwner() internal view virtual {... */\n    tag_233:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1513:1519  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x97))\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1662:1685  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1654:1722  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_235\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":17524:17526   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1654:1722  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17506:17527   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":17543:17561   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":17536:17566   */\n      mstore\n        /* \"#utility.yul\":17602:17636   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":17582:17600   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17575:17637   */\n      mstore\n        /* \"#utility.yul\":17654:17672   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1654:1722  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_156\n        /* \"#utility.yul\":17322:17678   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2666:2853  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_236:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2758:2764  _owner */\n      0x97\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2774:2791  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2806:2846  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2758:2764  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2774:2791  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2758:2764  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2806:2846  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2739:2755  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2806:2846  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2729:2853  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2666:2853  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1104:1215  function __Ownable_init_unchained() internal onlyInitializing {... */\n    tag_368:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5374:5387  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5366:5435  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_390\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_156\n      swap1\n      tag_365\n      jump\t// in\n    tag_390:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1176:1208  _transferOwnership(_msgSender()) */\n      tag_235\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1176:1194  _transferOwnership */\n      tag_236\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1176:1208  _transferOwnership(_msgSender()) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4152:4653  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_372:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4240:4262  hasRole(role, account) */\n      tag_396\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4248:4252  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4254:4261  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4240:4247  hasRole */\n      tag_108\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4240:4262  hasRole(role, account) */\n      jump\t// in\n    tag_396:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4235:4647  if (!hasRole(role, account)) {... */\n      tag_187\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4423:4462  StringsUpgradeable.toHexString(account) */\n      tag_398\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4454:4461  account */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4423:4453  StringsUpgradeable.toHexString */\n      tag_399\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4423:4462  StringsUpgradeable.toHexString(account) */\n      jump\t// in\n    tag_398:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4533:4582  StringsUpgradeable.toHexString(uint256(role), 32) */\n      tag_400\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4572:4576  role */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4579:4581  32 */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4533:4563  StringsUpgradeable.toHexString */\n      tag_401\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4533:4582  StringsUpgradeable.toHexString(uint256(role), 32) */\n      jump\t// in\n    tag_400:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4330:4604  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_402\n      swap3\n      swap2\n      swap1\n      tag_403\n      jump\t// in\n    tag_402:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap1\n      dup3\n      swap1\n      mstore\n      shl(0xe5, 0x461bcd)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4278:4636  revert(... */\n      dup3\n      mstore\n      tag_156\n      swap2\n      0x04\n      add\n      tag_405\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2473:2622  function toHexString(address addr) internal pure returns (string memory) {... */\n    tag_399:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2531:2544  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2563:2615  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      tag_147\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2575:2597  uint256(uint160(addr)) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":376:378  20 */\n      0x14\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":1884:2321  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n    tag_401:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":1959:1972  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":1984:2003  bytes memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2016:2026  2 * length */\n      tag_409\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2020:2026  length */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2016:2017  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2016:2026  2 * length */\n      tag_410\n      jump\t// in\n    tag_409:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2016:2030  2 * length + 2 */\n      tag_411\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2029:2030  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2016:2030  2 * length + 2 */\n      tag_412\n      jump\t// in\n    tag_411:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2006:2031  new bytes(2 * length + 2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_414\n      jumpi\n      tag_414\n      tag_285\n      jump\t// in\n    tag_414:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_415\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_415:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":1984:2031  bytes memory buffer = new bytes(2 * length + 2) */\n      swap1\n      pop\n      shl(0xfc, 0x03)\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2041:2047  buffer */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2048:2049  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2041:2050  buffer[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_417\n      jumpi\n      tag_417\n      tag_216\n      jump\t// in\n    tag_417:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2041:2056  buffer[0] = \"0\" */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n      shl(0xfb, 0x0f)\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2066:2072  buffer */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2073:2074  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2066:2075  buffer[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_419\n      jumpi\n      tag_419\n      tag_216\n      jump\t// in\n    tag_419:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2066:2081  buffer[1] = \"x\" */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2096:2105  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2108:2118  2 * length */\n      tag_423\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2112:2118  length */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2108:2109  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2108:2118  2 * length */\n      tag_410\n      jump\t// in\n    tag_423:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2108:2122  2 * length + 1 */\n      tag_424\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2121:2122  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2108:2122  2 * length + 1 */\n      tag_412\n      jump\t// in\n    tag_424:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2096:2122  uint256 i = 2 * length + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2091:2219  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n    tag_420:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2128:2129  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2124:2125  i */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2124:2129  i > 1 */\n      gt\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2091:2219  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      iszero\n      tag_421\n      jumpi\n      shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2171:2176  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2179:2182  0xf */\n      0x0f\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2171:2182  value & 0xf */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2162:2183  _SYMBOLS[value & 0xf] */\n      0x10\n      dup2\n      lt\n      tag_426\n      jumpi\n      tag_426\n      tag_216\n      jump\t// in\n    tag_426:\n      byte\n      0xf8\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2150:2156  buffer */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2157:2158  i */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2150:2159  buffer[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_428\n      jumpi\n      tag_428\n      tag_216\n      jump\t// in\n    tag_428:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2150:2183  buffer[i] = _SYMBOLS[value & 0xf] */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2207:2208  4 */\n      0x04\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2197:2208  value >>= 4 */\n      swap5\n      swap1\n      swap5\n      shr\n      swap4\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2131:2134  --i */\n      tag_429\n      dup2\n      tag_430\n      jump\t// in\n    tag_429:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2091:2219  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      jump(tag_420)\n    tag_421:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2236:2246  value == 0 */\n      dup4\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2228:2283  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_431\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":19370:19372   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2228:2283  require(value == 0, \"Strings: hex length insufficient\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":19352:19373   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":19389:19407   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":19382:19412   */\n      mstore\n        /* \"#utility.yul\":19448:19482   */\n      0x537472696e67733a20686578206c656e67746820696e73756666696369656e74\n        /* \"#utility.yul\":19428:19446   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":19421:19483   */\n      mstore\n        /* \"#utility.yul\":19500:19518   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2228:2283  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_156\n        /* \"#utility.yul\":19168:19524   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2228:2283  require(value == 0, \"Strings: hex length insufficient\") */\n    tag_431:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2307:2313  buffer */\n      swap4\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":1884:2321  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_40:\n        /* \"#utility.yul\":72:78   */\n      0x00\n        /* \"#utility.yul\":125:127   */\n      0x20\n        /* \"#utility.yul\":113:122   */\n      dup3\n        /* \"#utility.yul\":104:111   */\n      dup5\n        /* \"#utility.yul\":100:123   */\n      sub\n        /* \"#utility.yul\":96:128   */\n      slt\n        /* \"#utility.yul\":93:145   */\n      iszero\n      tag_446\n      jumpi\n        /* \"#utility.yul\":141:142   */\n      0x00\n        /* \"#utility.yul\":138:139   */\n      dup1\n        /* \"#utility.yul\":131:143   */\n      revert\n        /* \"#utility.yul\":93:145   */\n    tag_446:\n        /* \"#utility.yul\":167:190   */\n      dup2\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":219:251   */\n      dup2\n      and\n        /* \"#utility.yul\":209:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":199:270   */\n      tag_431\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":497:628   */\n    tag_434:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":572:603   */\n      dup2\n      and\n        /* \"#utility.yul\":562:604   */\n      dup2\n      eq\n        /* \"#utility.yul\":552:622   */\n      tag_359\n      jumpi\n        /* \"#utility.yul\":618:619   */\n      0x00\n        /* \"#utility.yul\":615:616   */\n      dup1\n        /* \"#utility.yul\":608:620   */\n      revert\n        /* \"#utility.yul\":633:1162   */\n    tag_46:\n        /* \"#utility.yul\":710:716   */\n      0x00\n        /* \"#utility.yul\":718:724   */\n      dup1\n        /* \"#utility.yul\":726:732   */\n      0x00\n        /* \"#utility.yul\":779:781   */\n      0x60\n        /* \"#utility.yul\":767:776   */\n      dup5\n        /* \"#utility.yul\":758:765   */\n      dup7\n        /* \"#utility.yul\":754:777   */\n      sub\n        /* \"#utility.yul\":750:782   */\n      slt\n        /* \"#utility.yul\":747:799   */\n      iszero\n      tag_452\n      jumpi\n        /* \"#utility.yul\":795:796   */\n      0x00\n        /* \"#utility.yul\":792:793   */\n      dup1\n        /* \"#utility.yul\":785:797   */\n      revert\n        /* \"#utility.yul\":747:799   */\n    tag_452:\n        /* \"#utility.yul\":834:843   */\n      dup4\n        /* \"#utility.yul\":821:844   */\n      calldataload\n        /* \"#utility.yul\":853:884   */\n      tag_453\n        /* \"#utility.yul\":878:883   */\n      dup2\n        /* \"#utility.yul\":853:884   */\n      tag_434\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":903:908   */\n      swap3\n      pop\n        /* \"#utility.yul\":960:962   */\n      0x20\n        /* \"#utility.yul\":945:963   */\n      dup5\n      add\n        /* \"#utility.yul\":932:964   */\n      calldataload\n        /* \"#utility.yul\":973:1006   */\n      tag_454\n        /* \"#utility.yul\":932:964   */\n      dup2\n        /* \"#utility.yul\":973:1006   */\n      tag_434\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":1025:1032   */\n      swap2\n      pop\n        /* \"#utility.yul\":1084:1086   */\n      0x40\n        /* \"#utility.yul\":1069:1087   */\n      dup5\n      add\n        /* \"#utility.yul\":1056:1088   */\n      calldataload\n        /* \"#utility.yul\":1097:1130   */\n      tag_455\n        /* \"#utility.yul\":1056:1088   */\n      dup2\n        /* \"#utility.yul\":1097:1130   */\n      tag_434\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":1149:1156   */\n      dup1\n        /* \"#utility.yul\":1139:1156   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":633:1162   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1349:1529   */\n    tag_54:\n        /* \"#utility.yul\":1408:1414   */\n      0x00\n        /* \"#utility.yul\":1461:1463   */\n      0x20\n        /* \"#utility.yul\":1449:1458   */\n      dup3\n        /* \"#utility.yul\":1440:1447   */\n      dup5\n        /* \"#utility.yul\":1436:1459   */\n      sub\n        /* \"#utility.yul\":1432:1464   */\n      slt\n        /* \"#utility.yul\":1429:1481   */\n      iszero\n      tag_458\n      jumpi\n        /* \"#utility.yul\":1477:1478   */\n      0x00\n        /* \"#utility.yul\":1474:1475   */\n      dup1\n        /* \"#utility.yul\":1467:1479   */\n      revert\n        /* \"#utility.yul\":1429:1481   */\n    tag_458:\n      pop\n        /* \"#utility.yul\":1500:1523   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1349:1529   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1534:1781   */\n    tag_59:\n        /* \"#utility.yul\":1593:1599   */\n      0x00\n        /* \"#utility.yul\":1646:1648   */\n      0x20\n        /* \"#utility.yul\":1634:1643   */\n      dup3\n        /* \"#utility.yul\":1625:1632   */\n      dup5\n        /* \"#utility.yul\":1621:1644   */\n      sub\n        /* \"#utility.yul\":1617:1649   */\n      slt\n        /* \"#utility.yul\":1614:1666   */\n      iszero\n      tag_460\n      jumpi\n        /* \"#utility.yul\":1662:1663   */\n      0x00\n        /* \"#utility.yul\":1659:1660   */\n      dup1\n        /* \"#utility.yul\":1652:1664   */\n      revert\n        /* \"#utility.yul\":1614:1666   */\n    tag_460:\n        /* \"#utility.yul\":1701:1710   */\n      dup2\n        /* \"#utility.yul\":1688:1711   */\n      calldataload\n        /* \"#utility.yul\":1720:1751   */\n      tag_431\n        /* \"#utility.yul\":1745:1750   */\n      dup2\n        /* \"#utility.yul\":1720:1751   */\n      tag_434\n      jump\t// in\n        /* \"#utility.yul\":1786:2101   */\n    tag_63:\n        /* \"#utility.yul\":1854:1860   */\n      0x00\n        /* \"#utility.yul\":1862:1868   */\n      dup1\n        /* \"#utility.yul\":1915:1917   */\n      0x40\n        /* \"#utility.yul\":1903:1912   */\n      dup4\n        /* \"#utility.yul\":1894:1901   */\n      dup6\n        /* \"#utility.yul\":1890:1913   */\n      sub\n        /* \"#utility.yul\":1886:1918   */\n      slt\n        /* \"#utility.yul\":1883:1935   */\n      iszero\n      tag_463\n      jumpi\n        /* \"#utility.yul\":1931:1932   */\n      0x00\n        /* \"#utility.yul\":1928:1929   */\n      dup1\n        /* \"#utility.yul\":1921:1933   */\n      revert\n        /* \"#utility.yul\":1883:1935   */\n    tag_463:\n        /* \"#utility.yul\":1967:1976   */\n      dup3\n        /* \"#utility.yul\":1954:1977   */\n      calldataload\n        /* \"#utility.yul\":1944:1977   */\n      swap2\n      pop\n        /* \"#utility.yul\":2027:2029   */\n      0x20\n        /* \"#utility.yul\":2016:2025   */\n      dup4\n        /* \"#utility.yul\":2012:2030   */\n      add\n        /* \"#utility.yul\":1999:2031   */\n      calldataload\n        /* \"#utility.yul\":2040:2071   */\n      tag_464\n        /* \"#utility.yul\":2065:2070   */\n      dup2\n        /* \"#utility.yul\":2040:2071   */\n      tag_434\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":2090:2095   */\n      dup1\n        /* \"#utility.yul\":2080:2095   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1786:2101   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2106:2223   */\n    tag_435:\n        /* \"#utility.yul\":2191:2197   */\n      0xffff\n        /* \"#utility.yul\":2184:2189   */\n      dup2\n        /* \"#utility.yul\":2180:2198   */\n      and\n        /* \"#utility.yul\":2173:2178   */\n      dup2\n        /* \"#utility.yul\":2170:2199   */\n      eq\n        /* \"#utility.yul\":2160:2217   */\n      tag_359\n      jumpi\n        /* \"#utility.yul\":2213:2214   */\n      0x00\n        /* \"#utility.yul\":2210:2211   */\n      dup1\n        /* \"#utility.yul\":2203:2215   */\n      revert\n        /* \"#utility.yul\":2228:2614   */\n    tag_70:\n        /* \"#utility.yul\":2295:2301   */\n      0x00\n        /* \"#utility.yul\":2303:2309   */\n      dup1\n        /* \"#utility.yul\":2356:2358   */\n      0x40\n        /* \"#utility.yul\":2344:2353   */\n      dup4\n        /* \"#utility.yul\":2335:2342   */\n      dup6\n        /* \"#utility.yul\":2331:2354   */\n      sub\n        /* \"#utility.yul\":2327:2359   */\n      slt\n        /* \"#utility.yul\":2324:2376   */\n      iszero\n      tag_468\n      jumpi\n        /* \"#utility.yul\":2372:2373   */\n      0x00\n        /* \"#utility.yul\":2369:2370   */\n      dup1\n        /* \"#utility.yul\":2362:2374   */\n      revert\n        /* \"#utility.yul\":2324:2376   */\n    tag_468:\n        /* \"#utility.yul\":2411:2420   */\n      dup3\n        /* \"#utility.yul\":2398:2421   */\n      calldataload\n        /* \"#utility.yul\":2430:2461   */\n      tag_469\n        /* \"#utility.yul\":2455:2460   */\n      dup2\n        /* \"#utility.yul\":2430:2461   */\n      tag_434\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":2480:2485   */\n      swap2\n      pop\n        /* \"#utility.yul\":2537:2539   */\n      0x20\n        /* \"#utility.yul\":2522:2540   */\n      dup4\n      add\n        /* \"#utility.yul\":2509:2541   */\n      calldataload\n        /* \"#utility.yul\":2550:2582   */\n      tag_464\n        /* \"#utility.yul\":2509:2541   */\n      dup2\n        /* \"#utility.yul\":2550:2582   */\n      tag_435\n      jump\t// in\n        /* \"#utility.yul\":2856:3400   */\n    tag_78:\n        /* \"#utility.yul\":2949:2955   */\n      0x00\n        /* \"#utility.yul\":2957:2963   */\n      dup1\n        /* \"#utility.yul\":2965:2971   */\n      0x00\n        /* \"#utility.yul\":3018:3020   */\n      0x60\n        /* \"#utility.yul\":3006:3015   */\n      dup5\n        /* \"#utility.yul\":2997:3004   */\n      dup7\n        /* \"#utility.yul\":2993:3016   */\n      sub\n        /* \"#utility.yul\":2989:3021   */\n      slt\n        /* \"#utility.yul\":2986:3038   */\n      iszero\n      tag_473\n      jumpi\n        /* \"#utility.yul\":3034:3035   */\n      0x00\n        /* \"#utility.yul\":3031:3032   */\n      dup1\n        /* \"#utility.yul\":3024:3036   */\n      revert\n        /* \"#utility.yul\":2986:3038   */\n    tag_473:\n        /* \"#utility.yul\":3073:3082   */\n      dup4\n        /* \"#utility.yul\":3060:3083   */\n      calldataload\n        /* \"#utility.yul\":3092:3123   */\n      tag_474\n        /* \"#utility.yul\":3117:3122   */\n      dup2\n        /* \"#utility.yul\":3092:3123   */\n      tag_434\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":3142:3147   */\n      swap3\n      pop\n        /* \"#utility.yul\":3199:3201   */\n      0x20\n        /* \"#utility.yul\":3184:3202   */\n      dup5\n      add\n        /* \"#utility.yul\":3171:3203   */\n      calldataload\n        /* \"#utility.yul\":3212:3245   */\n      tag_475\n        /* \"#utility.yul\":3171:3203   */\n      dup2\n        /* \"#utility.yul\":3212:3245   */\n      tag_434\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":3264:3271   */\n      swap2\n      pop\n        /* \"#utility.yul\":3323:3325   */\n      0x40\n        /* \"#utility.yul\":3308:3326   */\n      dup5\n      add\n        /* \"#utility.yul\":3295:3327   */\n      calldataload\n        /* \"#utility.yul\":3336:3368   */\n      tag_455\n        /* \"#utility.yul\":3295:3327   */\n      dup2\n        /* \"#utility.yul\":3336:3368   */\n      tag_435\n      jump\t// in\n        /* \"#utility.yul\":3405:3772   */\n    tag_436:\n        /* \"#utility.yul\":3468:3476   */\n      0x00\n        /* \"#utility.yul\":3478:3484   */\n      dup1\n        /* \"#utility.yul\":3532:3535   */\n      dup4\n        /* \"#utility.yul\":3525:3529   */\n      0x1f\n        /* \"#utility.yul\":3517:3523   */\n      dup5\n        /* \"#utility.yul\":3513:3530   */\n      add\n        /* \"#utility.yul\":3509:3536   */\n      slt\n        /* \"#utility.yul\":3499:3554   */\n      tag_478\n      jumpi\n        /* \"#utility.yul\":3550:3551   */\n      0x00\n        /* \"#utility.yul\":3547:3548   */\n      dup1\n        /* \"#utility.yul\":3540:3552   */\n      revert\n        /* \"#utility.yul\":3499:3554   */\n    tag_478:\n      pop\n        /* \"#utility.yul\":3573:3593   */\n      dup2\n      calldataload\n        /* \"#utility.yul\":3616:3634   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3605:3635   */\n      dup2\n      gt\n        /* \"#utility.yul\":3602:3652   */\n      iszero\n      tag_479\n      jumpi\n        /* \"#utility.yul\":3648:3649   */\n      0x00\n        /* \"#utility.yul\":3645:3646   */\n      dup1\n        /* \"#utility.yul\":3638:3650   */\n      revert\n        /* \"#utility.yul\":3602:3652   */\n    tag_479:\n        /* \"#utility.yul\":3685:3689   */\n      0x20\n        /* \"#utility.yul\":3677:3683   */\n      dup4\n        /* \"#utility.yul\":3673:3690   */\n      add\n        /* \"#utility.yul\":3661:3690   */\n      swap2\n      pop\n        /* \"#utility.yul\":3745:3748   */\n      dup4\n        /* \"#utility.yul\":3738:3742   */\n      0x20\n        /* \"#utility.yul\":3728:3734   */\n      dup3\n        /* \"#utility.yul\":3725:3726   */\n      0x05\n        /* \"#utility.yul\":3721:3735   */\n      shl\n        /* \"#utility.yul\":3713:3719   */\n      dup6\n        /* \"#utility.yul\":3709:3736   */\n      add\n        /* \"#utility.yul\":3705:3743   */\n      add\n        /* \"#utility.yul\":3702:3749   */\n      gt\n        /* \"#utility.yul\":3699:3766   */\n      iszero\n      tag_480\n      jumpi\n        /* \"#utility.yul\":3762:3763   */\n      0x00\n        /* \"#utility.yul\":3759:3760   */\n      dup1\n        /* \"#utility.yul\":3752:3764   */\n      revert\n        /* \"#utility.yul\":3699:3766   */\n    tag_480:\n        /* \"#utility.yul\":3405:3772   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3777:4881   */\n    tag_86:\n        /* \"#utility.yul\":3951:3957   */\n      0x00\n        /* \"#utility.yul\":3959:3965   */\n      dup1\n        /* \"#utility.yul\":3967:3973   */\n      0x00\n        /* \"#utility.yul\":3975:3981   */\n      dup1\n        /* \"#utility.yul\":3983:3989   */\n      0x00\n        /* \"#utility.yul\":3991:3997   */\n      dup1\n        /* \"#utility.yul\":4044:4046   */\n      0x60\n        /* \"#utility.yul\":4032:4041   */\n      dup8\n        /* \"#utility.yul\":4023:4030   */\n      dup10\n        /* \"#utility.yul\":4019:4042   */\n      sub\n        /* \"#utility.yul\":4015:4047   */\n      slt\n        /* \"#utility.yul\":4012:4064   */\n      iszero\n      tag_482\n      jumpi\n        /* \"#utility.yul\":4060:4061   */\n      0x00\n        /* \"#utility.yul\":4057:4058   */\n      dup1\n        /* \"#utility.yul\":4050:4062   */\n      revert\n        /* \"#utility.yul\":4012:4064   */\n    tag_482:\n        /* \"#utility.yul\":4100:4109   */\n      dup7\n        /* \"#utility.yul\":4087:4110   */\n      calldataload\n        /* \"#utility.yul\":4129:4147   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4170:4172   */\n      dup1\n        /* \"#utility.yul\":4162:4168   */\n      dup3\n        /* \"#utility.yul\":4159:4173   */\n      gt\n        /* \"#utility.yul\":4156:4190   */\n      iszero\n      tag_483\n      jumpi\n        /* \"#utility.yul\":4186:4187   */\n      0x00\n        /* \"#utility.yul\":4183:4184   */\n      dup1\n        /* \"#utility.yul\":4176:4188   */\n      revert\n        /* \"#utility.yul\":4156:4190   */\n    tag_483:\n        /* \"#utility.yul\":4225:4295   */\n      tag_484\n        /* \"#utility.yul\":4287:4294   */\n      dup11\n        /* \"#utility.yul\":4278:4284   */\n      dup4\n        /* \"#utility.yul\":4267:4276   */\n      dup12\n        /* \"#utility.yul\":4263:4285   */\n      add\n        /* \"#utility.yul\":4225:4295   */\n      tag_436\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":4314:4322   */\n      swap1\n      swap9\n      pop\n        /* \"#utility.yul\":4199:4295   */\n      swap7\n      pop\n        /* \"#utility.yul\":4402:4404   */\n      0x20\n        /* \"#utility.yul\":4387:4405   */\n      dup10\n      add\n        /* \"#utility.yul\":4374:4406   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":4418:4434   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":4415:4451   */\n      iszero\n      tag_485\n      jumpi\n        /* \"#utility.yul\":4447:4448   */\n      0x00\n        /* \"#utility.yul\":4444:4445   */\n      dup1\n        /* \"#utility.yul\":4437:4449   */\n      revert\n        /* \"#utility.yul\":4415:4451   */\n    tag_485:\n        /* \"#utility.yul\":4486:4558   */\n      tag_486\n        /* \"#utility.yul\":4550:4557   */\n      dup11\n        /* \"#utility.yul\":4539:4547   */\n      dup4\n        /* \"#utility.yul\":4528:4537   */\n      dup12\n        /* \"#utility.yul\":4524:4548   */\n      add\n        /* \"#utility.yul\":4486:4558   */\n      tag_436\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":4577:4585   */\n      swap1\n      swap7\n      pop\n        /* \"#utility.yul\":4460:4558   */\n      swap5\n      pop\n        /* \"#utility.yul\":4665:4667   */\n      0x40\n        /* \"#utility.yul\":4650:4668   */\n      dup10\n      add\n        /* \"#utility.yul\":4637:4669   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":4681:4697   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":4678:4714   */\n      iszero\n      tag_487\n      jumpi\n        /* \"#utility.yul\":4710:4711   */\n      0x00\n        /* \"#utility.yul\":4707:4708   */\n      dup1\n        /* \"#utility.yul\":4700:4712   */\n      revert\n        /* \"#utility.yul\":4678:4714   */\n    tag_487:\n      pop\n        /* \"#utility.yul\":4749:4821   */\n      tag_488\n        /* \"#utility.yul\":4813:4820   */\n      dup10\n        /* \"#utility.yul\":4802:4810   */\n      dup3\n        /* \"#utility.yul\":4791:4800   */\n      dup11\n        /* \"#utility.yul\":4787:4811   */\n      add\n        /* \"#utility.yul\":4749:4821   */\n      tag_436\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":3777:4881   */\n      swap8\n      swap11\n      swap7\n      swap10\n      pop\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n        /* \"#utility.yul\":4840:4848   */\n      swap4\n      swap5\n        /* \"#utility.yul\":3777:4881   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5287:5692   */\n    tag_104:\n        /* \"#utility.yul\":5372:5378   */\n      0x00\n        /* \"#utility.yul\":5380:5386   */\n      dup1\n        /* \"#utility.yul\":5433:5435   */\n      0x40\n        /* \"#utility.yul\":5421:5430   */\n      dup4\n        /* \"#utility.yul\":5412:5419   */\n      dup6\n        /* \"#utility.yul\":5408:5431   */\n      sub\n        /* \"#utility.yul\":5404:5436   */\n      slt\n        /* \"#utility.yul\":5401:5453   */\n      iszero\n      tag_492\n      jumpi\n        /* \"#utility.yul\":5449:5450   */\n      0x00\n        /* \"#utility.yul\":5446:5447   */\n      dup1\n        /* \"#utility.yul\":5439:5451   */\n      revert\n        /* \"#utility.yul\":5401:5453   */\n    tag_492:\n        /* \"#utility.yul\":5488:5497   */\n      dup3\n        /* \"#utility.yul\":5475:5498   */\n      calldataload\n        /* \"#utility.yul\":5507:5538   */\n      tag_493\n        /* \"#utility.yul\":5532:5537   */\n      dup2\n        /* \"#utility.yul\":5507:5538   */\n      tag_434\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":5557:5562   */\n      swap2\n      pop\n        /* \"#utility.yul\":5614:5616   */\n      0x20\n        /* \"#utility.yul\":5599:5617   */\n      dup4\n      add\n        /* \"#utility.yul\":5586:5618   */\n      calldataload\n        /* \"#utility.yul\":5627:5660   */\n      tag_464\n        /* \"#utility.yul\":5586:5618   */\n      dup2\n        /* \"#utility.yul\":5627:5660   */\n      tag_434\n      jump\t// in\n        /* \"#utility.yul\":8491:8618   */\n    tag_216:\n        /* \"#utility.yul\":8552:8562   */\n      0x4e487b71\n        /* \"#utility.yul\":8547:8550   */\n      0xe0\n        /* \"#utility.yul\":8543:8563   */\n      shl\n        /* \"#utility.yul\":8540:8541   */\n      0x00\n        /* \"#utility.yul\":8533:8564   */\n      mstore\n        /* \"#utility.yul\":8583:8587   */\n      0x32\n        /* \"#utility.yul\":8580:8581   */\n      0x04\n        /* \"#utility.yul\":8573:8588   */\n      mstore\n        /* \"#utility.yul\":8607:8611   */\n      0x24\n        /* \"#utility.yul\":8604:8605   */\n      0x00\n        /* \"#utility.yul\":8597:8612   */\n      revert\n        /* \"#utility.yul\":8892:9137   */\n    tag_225:\n        /* \"#utility.yul\":8950:8956   */\n      0x00\n        /* \"#utility.yul\":9003:9005   */\n      0x20\n        /* \"#utility.yul\":8991:9000   */\n      dup3\n        /* \"#utility.yul\":8982:8989   */\n      dup5\n        /* \"#utility.yul\":8978:9001   */\n      sub\n        /* \"#utility.yul\":8974:9006   */\n      slt\n        /* \"#utility.yul\":8971:9023   */\n      iszero\n      tag_509\n      jumpi\n        /* \"#utility.yul\":9019:9020   */\n      0x00\n        /* \"#utility.yul\":9016:9017   */\n      dup1\n        /* \"#utility.yul\":9009:9021   */\n      revert\n        /* \"#utility.yul\":8971:9023   */\n    tag_509:\n        /* \"#utility.yul\":9058:9067   */\n      dup2\n        /* \"#utility.yul\":9045:9068   */\n      calldataload\n        /* \"#utility.yul\":9077:9107   */\n      tag_431\n        /* \"#utility.yul\":9101:9106   */\n      dup2\n        /* \"#utility.yul\":9077:9107   */\n      tag_435\n      jump\t// in\n        /* \"#utility.yul\":9142:9269   */\n    tag_437:\n        /* \"#utility.yul\":9203:9213   */\n      0x4e487b71\n        /* \"#utility.yul\":9198:9201   */\n      0xe0\n        /* \"#utility.yul\":9194:9214   */\n      shl\n        /* \"#utility.yul\":9191:9192   */\n      0x00\n        /* \"#utility.yul\":9184:9215   */\n      mstore\n        /* \"#utility.yul\":9234:9238   */\n      0x11\n        /* \"#utility.yul\":9231:9232   */\n      0x04\n        /* \"#utility.yul\":9224:9239   */\n      mstore\n        /* \"#utility.yul\":9258:9262   */\n      0x24\n        /* \"#utility.yul\":9255:9256   */\n      0x00\n        /* \"#utility.yul\":9248:9263   */\n      revert\n        /* \"#utility.yul\":9274:9409   */\n    tag_227:\n        /* \"#utility.yul\":9313:9316   */\n      0x00\n        /* \"#utility.yul\":9334:9351   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":9331:9374   */\n      tag_514\n      jumpi\n        /* \"#utility.yul\":9354:9372   */\n      tag_514\n      tag_437\n      jump\t// in\n    tag_514:\n      pop\n        /* \"#utility.yul\":9401:9402   */\n      0x01\n        /* \"#utility.yul\":9390:9403   */\n      add\n      swap1\n        /* \"#utility.yul\":9274:9409   */\n      jump\t// out\n        /* \"#utility.yul\":9414:9663   */\n    tag_242:\n        /* \"#utility.yul\":9483:9489   */\n      0x00\n        /* \"#utility.yul\":9536:9538   */\n      0x20\n        /* \"#utility.yul\":9524:9533   */\n      dup3\n        /* \"#utility.yul\":9515:9522   */\n      dup5\n        /* \"#utility.yul\":9511:9534   */\n      sub\n        /* \"#utility.yul\":9507:9539   */\n      slt\n        /* \"#utility.yul\":9504:9556   */\n      iszero\n      tag_516\n      jumpi\n        /* \"#utility.yul\":9552:9553   */\n      0x00\n        /* \"#utility.yul\":9549:9550   */\n      dup1\n        /* \"#utility.yul\":9542:9554   */\n      revert\n        /* \"#utility.yul\":9504:9556   */\n    tag_516:\n        /* \"#utility.yul\":9584:9593   */\n      dup2\n        /* \"#utility.yul\":9578:9594   */\n      mload\n        /* \"#utility.yul\":9603:9633   */\n      tag_431\n        /* \"#utility.yul\":9627:9632   */\n      dup2\n        /* \"#utility.yul\":9603:9633   */\n      tag_435\n      jump\t// in\n        /* \"#utility.yul\":9994:10121   */\n    tag_285:\n        /* \"#utility.yul\":10055:10065   */\n      0x4e487b71\n        /* \"#utility.yul\":10050:10053   */\n      0xe0\n        /* \"#utility.yul\":10046:10066   */\n      shl\n        /* \"#utility.yul\":10043:10044   */\n      0x00\n        /* \"#utility.yul\":10036:10067   */\n      mstore\n        /* \"#utility.yul\":10086:10090   */\n      0x41\n        /* \"#utility.yul\":10083:10084   */\n      0x04\n        /* \"#utility.yul\":10076:10091   */\n      mstore\n        /* \"#utility.yul\":10110:10114   */\n      0x24\n        /* \"#utility.yul\":10107:10108   */\n      0x00\n        /* \"#utility.yul\":10100:10115   */\n      revert\n        /* \"#utility.yul\":10126:10401   */\n    tag_438:\n        /* \"#utility.yul\":10197:10199   */\n      0x40\n        /* \"#utility.yul\":10191:10200   */\n      mload\n        /* \"#utility.yul\":10262:10264   */\n      0x1f\n        /* \"#utility.yul\":10243:10256   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":10239:10266   */\n      and\n        /* \"#utility.yul\":10227:10267   */\n      dup2\n      add\n        /* \"#utility.yul\":10297:10315   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10282:10316   */\n      dup2\n      gt\n        /* \"#utility.yul\":10318:10340   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":10279:10341   */\n      or\n        /* \"#utility.yul\":10276:10364   */\n      iszero\n      tag_522\n      jumpi\n        /* \"#utility.yul\":10344:10362   */\n      tag_522\n      tag_285\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":10380:10382   */\n      0x40\n        /* \"#utility.yul\":10373:10395   */\n      mstore\n        /* \"#utility.yul\":10126:10401   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10406:10589   */\n    tag_439:\n        /* \"#utility.yul\":10466:10470   */\n      0x00\n        /* \"#utility.yul\":10499:10517   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10491:10497   */\n      dup3\n        /* \"#utility.yul\":10488:10518   */\n      gt\n        /* \"#utility.yul\":10485:10541   */\n      iszero\n      tag_525\n      jumpi\n        /* \"#utility.yul\":10521:10539   */\n      tag_525\n      tag_285\n      jump\t// in\n    tag_525:\n      pop\n        /* \"#utility.yul\":10566:10567   */\n      0x05\n        /* \"#utility.yul\":10562:10576   */\n      shl\n        /* \"#utility.yul\":10578:10582   */\n      0x20\n        /* \"#utility.yul\":10558:10583   */\n      add\n      swap1\n        /* \"#utility.yul\":10406:10589   */\n      jump\t// out\n        /* \"#utility.yul\":10594:11475   */\n    tag_269:\n        /* \"#utility.yul\":10689:10695   */\n      0x00\n        /* \"#utility.yul\":10720:10722   */\n      0x20\n        /* \"#utility.yul\":10763:10765   */\n      dup1\n        /* \"#utility.yul\":10751:10760   */\n      dup4\n        /* \"#utility.yul\":10742:10749   */\n      dup6\n        /* \"#utility.yul\":10738:10761   */\n      sub\n        /* \"#utility.yul\":10734:10766   */\n      slt\n        /* \"#utility.yul\":10731:10783   */\n      iszero\n      tag_527\n      jumpi\n        /* \"#utility.yul\":10779:10780   */\n      0x00\n        /* \"#utility.yul\":10776:10777   */\n      dup1\n        /* \"#utility.yul\":10769:10781   */\n      revert\n        /* \"#utility.yul\":10731:10783   */\n    tag_527:\n        /* \"#utility.yul\":10812:10821   */\n      dup3\n        /* \"#utility.yul\":10806:10822   */\n      mload\n        /* \"#utility.yul\":10845:10863   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10837:10843   */\n      dup2\n        /* \"#utility.yul\":10834:10864   */\n      gt\n        /* \"#utility.yul\":10831:10881   */\n      iszero\n      tag_528\n      jumpi\n        /* \"#utility.yul\":10877:10878   */\n      0x00\n        /* \"#utility.yul\":10874:10875   */\n      dup1\n        /* \"#utility.yul\":10867:10879   */\n      revert\n        /* \"#utility.yul\":10831:10881   */\n    tag_528:\n        /* \"#utility.yul\":10900:10922   */\n      dup4\n      add\n        /* \"#utility.yul\":10953:10957   */\n      0x1f\n        /* \"#utility.yul\":10945:10958   */\n      dup2\n      add\n        /* \"#utility.yul\":10941:10968   */\n      dup6\n      sgt\n        /* \"#utility.yul\":10931:10986   */\n      tag_529\n      jumpi\n        /* \"#utility.yul\":10982:10983   */\n      0x00\n        /* \"#utility.yul\":10979:10980   */\n      dup1\n        /* \"#utility.yul\":10972:10984   */\n      revert\n        /* \"#utility.yul\":10931:10986   */\n    tag_529:\n        /* \"#utility.yul\":11011:11013   */\n      dup1\n        /* \"#utility.yul\":11005:11014   */\n      mload\n        /* \"#utility.yul\":11034:11094   */\n      tag_530\n        /* \"#utility.yul\":11050:11093   */\n      tag_531\n        /* \"#utility.yul\":11090:11092   */\n      dup3\n        /* \"#utility.yul\":11050:11093   */\n      tag_439\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":11034:11094   */\n      tag_438\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":11128:11143   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":11210:11211   */\n      0x05\n        /* \"#utility.yul\":11206:11216   */\n      swap2\n      swap1\n      swap2\n      shl\n        /* \"#utility.yul\":11198:11217   */\n      dup3\n      add\n        /* \"#utility.yul\":11194:11222   */\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":11159:11171   */\n      dup4\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":11234:11253   */\n      dup8\n      dup4\n      gt\n        /* \"#utility.yul\":11231:11270   */\n      iszero\n      tag_532\n      jumpi\n        /* \"#utility.yul\":11266:11267   */\n      0x00\n        /* \"#utility.yul\":11263:11264   */\n      dup1\n        /* \"#utility.yul\":11256:11268   */\n      revert\n        /* \"#utility.yul\":11231:11270   */\n    tag_532:\n        /* \"#utility.yul\":11290:11301   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":11310:11445   */\n    tag_533:\n        /* \"#utility.yul\":11326:11332   */\n      dup3\n        /* \"#utility.yul\":11321:11324   */\n      dup5\n        /* \"#utility.yul\":11318:11333   */\n      lt\n        /* \"#utility.yul\":11310:11445   */\n      iszero\n      tag_535\n      jumpi\n        /* \"#utility.yul\":11392:11402   */\n      dup4\n      mload\n        /* \"#utility.yul\":11380:11403   */\n      dup3\n      mstore\n        /* \"#utility.yul\":11343:11355   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":11423:11435   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":11310:11445   */\n      jump(tag_533)\n    tag_535:\n        /* \"#utility.yul\":11464:11469   */\n      swap8\n        /* \"#utility.yul\":10594:11475   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11662:12637   */\n    tag_281:\n        /* \"#utility.yul\":11776:11782   */\n      0x00\n        /* \"#utility.yul\":11807:11809   */\n      0x20\n        /* \"#utility.yul\":11850:11852   */\n      dup1\n        /* \"#utility.yul\":11838:11847   */\n      dup4\n        /* \"#utility.yul\":11829:11836   */\n      dup6\n        /* \"#utility.yul\":11825:11848   */\n      sub\n        /* \"#utility.yul\":11821:11853   */\n      slt\n        /* \"#utility.yul\":11818:11870   */\n      iszero\n      tag_538\n      jumpi\n        /* \"#utility.yul\":11866:11867   */\n      0x00\n        /* \"#utility.yul\":11863:11864   */\n      dup1\n        /* \"#utility.yul\":11856:11868   */\n      revert\n        /* \"#utility.yul\":11818:11870   */\n    tag_538:\n        /* \"#utility.yul\":11899:11908   */\n      dup3\n        /* \"#utility.yul\":11893:11909   */\n      mload\n        /* \"#utility.yul\":11932:11950   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11924:11930   */\n      dup2\n        /* \"#utility.yul\":11921:11951   */\n      gt\n        /* \"#utility.yul\":11918:11968   */\n      iszero\n      tag_539\n      jumpi\n        /* \"#utility.yul\":11964:11965   */\n      0x00\n        /* \"#utility.yul\":11961:11962   */\n      dup1\n        /* \"#utility.yul\":11954:11966   */\n      revert\n        /* \"#utility.yul\":11918:11968   */\n    tag_539:\n        /* \"#utility.yul\":11987:12009   */\n      dup4\n      add\n        /* \"#utility.yul\":12040:12044   */\n      0x1f\n        /* \"#utility.yul\":12032:12045   */\n      dup2\n      add\n        /* \"#utility.yul\":12028:12055   */\n      dup6\n      sgt\n        /* \"#utility.yul\":12018:12073   */\n      tag_540\n      jumpi\n        /* \"#utility.yul\":12069:12070   */\n      0x00\n        /* \"#utility.yul\":12066:12067   */\n      dup1\n        /* \"#utility.yul\":12059:12071   */\n      revert\n        /* \"#utility.yul\":12018:12073   */\n    tag_540:\n        /* \"#utility.yul\":12098:12100   */\n      dup1\n        /* \"#utility.yul\":12092:12101   */\n      mload\n        /* \"#utility.yul\":12121:12181   */\n      tag_541\n        /* \"#utility.yul\":12137:12180   */\n      tag_531\n        /* \"#utility.yul\":12177:12179   */\n      dup3\n        /* \"#utility.yul\":12137:12180   */\n      tag_439\n      jump\t// in\n        /* \"#utility.yul\":12121:12181   */\n    tag_541:\n        /* \"#utility.yul\":12215:12230   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":12297:12298   */\n      0x05\n        /* \"#utility.yul\":12293:12303   */\n      swap2\n      swap1\n      swap2\n      shl\n        /* \"#utility.yul\":12285:12304   */\n      dup3\n      add\n        /* \"#utility.yul\":12281:12309   */\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":12246:12258   */\n      dup4\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":12321:12340   */\n      dup8\n      dup4\n      gt\n        /* \"#utility.yul\":12318:12357   */\n      iszero\n      tag_543\n      jumpi\n        /* \"#utility.yul\":12353:12354   */\n      0x00\n        /* \"#utility.yul\":12350:12351   */\n      dup1\n        /* \"#utility.yul\":12343:12355   */\n      revert\n        /* \"#utility.yul\":12318:12357   */\n    tag_543:\n        /* \"#utility.yul\":12377:12388   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":12397:12607   */\n    tag_544:\n        /* \"#utility.yul\":12413:12419   */\n      dup3\n        /* \"#utility.yul\":12408:12411   */\n      dup5\n        /* \"#utility.yul\":12405:12420   */\n      lt\n        /* \"#utility.yul\":12397:12607   */\n      iszero\n      tag_535\n      jumpi\n        /* \"#utility.yul\":12486:12489   */\n      dup4\n        /* \"#utility.yul\":12480:12490   */\n      mload\n        /* \"#utility.yul\":12503:12534   */\n      tag_547\n        /* \"#utility.yul\":12528:12533   */\n      dup2\n        /* \"#utility.yul\":12503:12534   */\n      tag_434\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":12547:12565   */\n      dup3\n      mstore\n        /* \"#utility.yul\":12430:12442   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":12585:12597   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":12397:12607   */\n      jump(tag_544)\n        /* \"#utility.yul\":12940:13190   */\n    tag_440:\n        /* \"#utility.yul\":13025:13026   */\n      0x00\n        /* \"#utility.yul\":13035:13148   */\n    tag_550:\n        /* \"#utility.yul\":13049:13055   */\n      dup4\n        /* \"#utility.yul\":13046:13047   */\n      dup2\n        /* \"#utility.yul\":13043:13056   */\n      lt\n        /* \"#utility.yul\":13035:13148   */\n      iszero\n      tag_552\n      jumpi\n        /* \"#utility.yul\":13125:13136   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":13119:13137   */\n      mload\n        /* \"#utility.yul\":13106:13117   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":13099:13138   */\n      mstore\n        /* \"#utility.yul\":13071:13073   */\n      0x20\n        /* \"#utility.yul\":13064:13074   */\n      add\n        /* \"#utility.yul\":13035:13148   */\n      jump(tag_550)\n    tag_552:\n      pop\n      pop\n        /* \"#utility.yul\":13182:13183   */\n      0x00\n        /* \"#utility.yul\":13164:13180   */\n      swap2\n      add\n        /* \"#utility.yul\":13157:13184   */\n      mstore\n        /* \"#utility.yul\":12940:13190   */\n      jump\t// out\n        /* \"#utility.yul\":13195:13585   */\n    tag_441:\n        /* \"#utility.yul\":13270:13275   */\n      0x00\n        /* \"#utility.yul\":13304:13322   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13296:13302   */\n      dup4\n        /* \"#utility.yul\":13293:13323   */\n      gt\n        /* \"#utility.yul\":13290:13346   */\n      iszero\n      tag_555\n      jumpi\n        /* \"#utility.yul\":13326:13344   */\n      tag_555\n      tag_285\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":13364:13421   */\n      tag_556\n        /* \"#utility.yul\":13409:13411   */\n      0x1f\n        /* \"#utility.yul\":13388:13403   */\n      dup5\n      add\n      not(0x1f)\n        /* \"#utility.yul\":13384:13413   */\n      and\n        /* \"#utility.yul\":13415:13419   */\n      0x20\n        /* \"#utility.yul\":13380:13420   */\n      add\n        /* \"#utility.yul\":13364:13421   */\n      tag_438\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":13355:13421   */\n      swap1\n      pop\n        /* \"#utility.yul\":13444:13450   */\n      dup3\n        /* \"#utility.yul\":13437:13442   */\n      dup2\n        /* \"#utility.yul\":13430:13451   */\n      mstore\n        /* \"#utility.yul\":13484:13487   */\n      dup4\n        /* \"#utility.yul\":13475:13481   */\n      dup4\n        /* \"#utility.yul\":13470:13473   */\n      dup4\n        /* \"#utility.yul\":13466:13482   */\n      add\n        /* \"#utility.yul\":13463:13488   */\n      gt\n        /* \"#utility.yul\":13460:13505   */\n      iszero\n      tag_557\n      jumpi\n        /* \"#utility.yul\":13501:13502   */\n      0x00\n        /* \"#utility.yul\":13498:13499   */\n      dup1\n        /* \"#utility.yul\":13491:13503   */\n      revert\n        /* \"#utility.yul\":13460:13505   */\n    tag_557:\n        /* \"#utility.yul\":13514:13579   */\n      tag_431\n        /* \"#utility.yul\":13572:13578   */\n      dup4\n        /* \"#utility.yul\":13565:13569   */\n      0x20\n        /* \"#utility.yul\":13558:13563   */\n      dup4\n        /* \"#utility.yul\":13554:13570   */\n      add\n        /* \"#utility.yul\":13549:13552   */\n      dup5\n        /* \"#utility.yul\":13514:13579   */\n      tag_440\n      jump\t// in\n        /* \"#utility.yul\":13590:13825   */\n    tag_442:\n        /* \"#utility.yul\":13643:13648   */\n      0x00\n        /* \"#utility.yul\":13696:13699   */\n      dup3\n        /* \"#utility.yul\":13689:13693   */\n      0x1f\n        /* \"#utility.yul\":13681:13687   */\n      dup4\n        /* \"#utility.yul\":13677:13694   */\n      add\n        /* \"#utility.yul\":13673:13700   */\n      slt\n        /* \"#utility.yul\":13663:13718   */\n      tag_560\n      jumpi\n        /* \"#utility.yul\":13714:13715   */\n      0x00\n        /* \"#utility.yul\":13711:13712   */\n      dup1\n        /* \"#utility.yul\":13704:13716   */\n      revert\n        /* \"#utility.yul\":13663:13718   */\n    tag_560:\n        /* \"#utility.yul\":13736:13819   */\n      tag_431\n        /* \"#utility.yul\":13815:13818   */\n      dup4\n        /* \"#utility.yul\":13806:13812   */\n      dup4\n        /* \"#utility.yul\":13800:13813   */\n      mload\n        /* \"#utility.yul\":13793:13797   */\n      0x20\n        /* \"#utility.yul\":13785:13791   */\n      dup6\n        /* \"#utility.yul\":13781:13798   */\n      add\n        /* \"#utility.yul\":13736:13819   */\n      tag_441\n      jump\t// in\n        /* \"#utility.yul\":13830:14966   */\n    tag_309:\n        /* \"#utility.yul\":13973:13979   */\n      0x00\n        /* \"#utility.yul\":13981:13987   */\n      dup1\n        /* \"#utility.yul\":13989:13995   */\n      0x00\n        /* \"#utility.yul\":13997:14003   */\n      dup1\n        /* \"#utility.yul\":14005:14011   */\n      0x00\n        /* \"#utility.yul\":14013:14019   */\n      dup1\n        /* \"#utility.yul\":14066:14069   */\n      0xc0\n        /* \"#utility.yul\":14054:14063   */\n      dup8\n        /* \"#utility.yul\":14045:14052   */\n      dup10\n        /* \"#utility.yul\":14041:14064   */\n      sub\n        /* \"#utility.yul\":14037:14070   */\n      slt\n        /* \"#utility.yul\":14034:14087   */\n      iszero\n      tag_563\n      jumpi\n        /* \"#utility.yul\":14083:14084   */\n      0x00\n        /* \"#utility.yul\":14080:14081   */\n      dup1\n        /* \"#utility.yul\":14073:14085   */\n      revert\n        /* \"#utility.yul\":14034:14087   */\n    tag_563:\n        /* \"#utility.yul\":14112:14121   */\n      dup7\n        /* \"#utility.yul\":14106:14122   */\n      mload\n        /* \"#utility.yul\":14096:14122   */\n      swap6\n      pop\n        /* \"#utility.yul\":14162:14164   */\n      0x20\n        /* \"#utility.yul\":14151:14160   */\n      dup8\n        /* \"#utility.yul\":14147:14165   */\n      add\n        /* \"#utility.yul\":14141:14166   */\n      mload\n        /* \"#utility.yul\":14131:14166   */\n      swap5\n      pop\n        /* \"#utility.yul\":14209:14211   */\n      0x40\n        /* \"#utility.yul\":14198:14207   */\n      dup8\n        /* \"#utility.yul\":14194:14212   */\n      add\n        /* \"#utility.yul\":14188:14213   */\n      mload\n        /* \"#utility.yul\":14222:14253   */\n      tag_564\n        /* \"#utility.yul\":14247:14252   */\n      dup2\n        /* \"#utility.yul\":14222:14253   */\n      tag_434\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":14321:14323   */\n      0x60\n        /* \"#utility.yul\":14306:14324   */\n      dup9\n      add\n        /* \"#utility.yul\":14300:14325   */\n      mload\n        /* \"#utility.yul\":14272:14277   */\n      swap1\n      swap5\n      pop\n        /* \"#utility.yul\":14344:14362   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":14374:14388   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":14371:14405   */\n      iszero\n      tag_565\n      jumpi\n        /* \"#utility.yul\":14401:14402   */\n      0x00\n        /* \"#utility.yul\":14398:14399   */\n      dup1\n        /* \"#utility.yul\":14391:14403   */\n      revert\n        /* \"#utility.yul\":14371:14405   */\n    tag_565:\n        /* \"#utility.yul\":14424:14484   */\n      tag_566\n        /* \"#utility.yul\":14476:14483   */\n      dup11\n        /* \"#utility.yul\":14467:14473   */\n      dup4\n        /* \"#utility.yul\":14456:14465   */\n      dup12\n        /* \"#utility.yul\":14452:14474   */\n      add\n        /* \"#utility.yul\":14424:14484   */\n      tag_442\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":14414:14484   */\n      swap5\n      pop\n        /* \"#utility.yul\":14530:14533   */\n      0x80\n        /* \"#utility.yul\":14519:14528   */\n      dup10\n        /* \"#utility.yul\":14515:14534   */\n      add\n        /* \"#utility.yul\":14509:14535   */\n      mload\n        /* \"#utility.yul\":14493:14535   */\n      swap2\n      pop\n        /* \"#utility.yul\":14560:14562   */\n      dup1\n        /* \"#utility.yul\":14550:14558   */\n      dup3\n        /* \"#utility.yul\":14547:14563   */\n      gt\n        /* \"#utility.yul\":14544:14580   */\n      iszero\n      tag_567\n      jumpi\n        /* \"#utility.yul\":14576:14577   */\n      0x00\n        /* \"#utility.yul\":14573:14574   */\n      dup1\n        /* \"#utility.yul\":14566:14578   */\n      revert\n        /* \"#utility.yul\":14544:14580   */\n    tag_567:\n        /* \"#utility.yul\":14599:14661   */\n      tag_568\n        /* \"#utility.yul\":14653:14660   */\n      dup11\n        /* \"#utility.yul\":14642:14650   */\n      dup4\n        /* \"#utility.yul\":14631:14640   */\n      dup12\n        /* \"#utility.yul\":14627:14651   */\n      add\n        /* \"#utility.yul\":14599:14661   */\n      tag_442\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":14589:14661   */\n      swap4\n      pop\n        /* \"#utility.yul\":14707:14710   */\n      0xa0\n        /* \"#utility.yul\":14696:14705   */\n      dup10\n        /* \"#utility.yul\":14692:14711   */\n      add\n        /* \"#utility.yul\":14686:14712   */\n      mload\n        /* \"#utility.yul\":14670:14712   */\n      swap2\n      pop\n        /* \"#utility.yul\":14737:14739   */\n      dup1\n        /* \"#utility.yul\":14727:14735   */\n      dup3\n        /* \"#utility.yul\":14724:14740   */\n      gt\n        /* \"#utility.yul\":14721:14757   */\n      iszero\n      tag_569\n      jumpi\n        /* \"#utility.yul\":14753:14754   */\n      0x00\n        /* \"#utility.yul\":14750:14751   */\n      dup1\n        /* \"#utility.yul\":14743:14755   */\n      revert\n        /* \"#utility.yul\":14721:14757   */\n    tag_569:\n      pop\n        /* \"#utility.yul\":14776:14800   */\n      dup8\n      add\n        /* \"#utility.yul\":14831:14835   */\n      0x1f\n        /* \"#utility.yul\":14823:14836   */\n      dup2\n      add\n        /* \"#utility.yul\":14819:14846   */\n      dup10\n      sgt\n        /* \"#utility.yul\":14809:14864   */\n      tag_570\n      jumpi\n        /* \"#utility.yul\":14860:14861   */\n      0x00\n        /* \"#utility.yul\":14857:14858   */\n      dup1\n        /* \"#utility.yul\":14850:14862   */\n      revert\n        /* \"#utility.yul\":14809:14864   */\n    tag_570:\n        /* \"#utility.yul\":14883:14960   */\n      tag_571\n        /* \"#utility.yul\":14952:14959   */\n      dup10\n        /* \"#utility.yul\":14947:14949   */\n      dup3\n        /* \"#utility.yul\":14941:14950   */\n      mload\n        /* \"#utility.yul\":14936:14938   */\n      0x20\n        /* \"#utility.yul\":14932:14934   */\n      dup5\n        /* \"#utility.yul\":14928:14939   */\n      add\n        /* \"#utility.yul\":14883:14960   */\n      tag_441\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":14873:14960   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":13830:14966   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      jump\t// out\n        /* \"#utility.yul\":14971:15241   */\n    tag_443:\n        /* \"#utility.yul\":15012:15015   */\n      0x00\n        /* \"#utility.yul\":15050:15055   */\n      dup2\n        /* \"#utility.yul\":15044:15056   */\n      mload\n        /* \"#utility.yul\":15077:15083   */\n      dup1\n        /* \"#utility.yul\":15072:15075   */\n      dup5\n        /* \"#utility.yul\":15065:15084   */\n      mstore\n        /* \"#utility.yul\":15093:15169   */\n      tag_573\n        /* \"#utility.yul\":15162:15168   */\n      dup2\n        /* \"#utility.yul\":15155:15159   */\n      0x20\n        /* \"#utility.yul\":15150:15153   */\n      dup7\n        /* \"#utility.yul\":15146:15160   */\n      add\n        /* \"#utility.yul\":15139:15143   */\n      0x20\n        /* \"#utility.yul\":15132:15137   */\n      dup7\n        /* \"#utility.yul\":15128:15144   */\n      add\n        /* \"#utility.yul\":15093:15169   */\n      tag_440\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":15223:15225   */\n      0x1f\n        /* \"#utility.yul\":15202:15217   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":15198:15227   */\n      and\n        /* \"#utility.yul\":15189:15228   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":15230:15234   */\n      0x20\n        /* \"#utility.yul\":15185:15235   */\n      add\n      swap3\n        /* \"#utility.yul\":14971:15241   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15246:15810   */\n    tag_317:\n        /* \"#utility.yul\":15541:15542   */\n      0x01\n        /* \"#utility.yul\":15537:15538   */\n      dup1\n        /* \"#utility.yul\":15532:15535   */\n      0xa0\n        /* \"#utility.yul\":15528:15539   */\n      shl\n        /* \"#utility.yul\":15524:15543   */\n      sub\n        /* \"#utility.yul\":15516:15522   */\n      dup6\n        /* \"#utility.yul\":15512:15544   */\n      and\n        /* \"#utility.yul\":15501:15510   */\n      dup2\n        /* \"#utility.yul\":15494:15545   */\n      mstore\n        /* \"#utility.yul\":15581:15587   */\n      dup4\n        /* \"#utility.yul\":15576:15578   */\n      0x20\n        /* \"#utility.yul\":15565:15574   */\n      dup3\n        /* \"#utility.yul\":15561:15579   */\n      add\n        /* \"#utility.yul\":15554:15588   */\n      mstore\n        /* \"#utility.yul\":15624:15627   */\n      0x80\n        /* \"#utility.yul\":15619:15621   */\n      0x40\n        /* \"#utility.yul\":15608:15617   */\n      dup3\n        /* \"#utility.yul\":15604:15622   */\n      add\n        /* \"#utility.yul\":15597:15628   */\n      mstore\n        /* \"#utility.yul\":15475:15479   */\n      0x00\n        /* \"#utility.yul\":15651:15696   */\n      tag_575\n        /* \"#utility.yul\":15691:15694   */\n      0x80\n        /* \"#utility.yul\":15680:15689   */\n      dup4\n        /* \"#utility.yul\":15676:15695   */\n      add\n        /* \"#utility.yul\":15668:15674   */\n      dup6\n        /* \"#utility.yul\":15651:15696   */\n      tag_443\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":15744:15753   */\n      dup3\n        /* \"#utility.yul\":15736:15742   */\n      dup2\n        /* \"#utility.yul\":15732:15754   */\n      sub\n        /* \"#utility.yul\":15727:15729   */\n      0x60\n        /* \"#utility.yul\":15716:15725   */\n      dup5\n        /* \"#utility.yul\":15712:15730   */\n      add\n        /* \"#utility.yul\":15705:15755   */\n      mstore\n        /* \"#utility.yul\":15772:15804   */\n      tag_535\n        /* \"#utility.yul\":15797:15803   */\n      dup2\n        /* \"#utility.yul\":15789:15795   */\n      dup6\n        /* \"#utility.yul\":15772:15804   */\n      tag_443\n      jump\t// in\n        /* \"#utility.yul\":15815:16092   */\n    tag_320:\n        /* \"#utility.yul\":15882:15888   */\n      0x00\n        /* \"#utility.yul\":15935:15937   */\n      0x20\n        /* \"#utility.yul\":15923:15932   */\n      dup3\n        /* \"#utility.yul\":15914:15921   */\n      dup5\n        /* \"#utility.yul\":15910:15933   */\n      sub\n        /* \"#utility.yul\":15906:15938   */\n      slt\n        /* \"#utility.yul\":15903:15955   */\n      iszero\n      tag_578\n      jumpi\n        /* \"#utility.yul\":15951:15952   */\n      0x00\n        /* \"#utility.yul\":15948:15949   */\n      dup1\n        /* \"#utility.yul\":15941:15953   */\n      revert\n        /* \"#utility.yul\":15903:15955   */\n    tag_578:\n        /* \"#utility.yul\":15983:15992   */\n      dup2\n        /* \"#utility.yul\":15977:15993   */\n      mload\n        /* \"#utility.yul\":16036:16041   */\n      dup1\n        /* \"#utility.yul\":16029:16042   */\n      iszero\n        /* \"#utility.yul\":16022:16043   */\n      iszero\n        /* \"#utility.yul\":16015:16020   */\n      dup2\n        /* \"#utility.yul\":16012:16044   */\n      eq\n        /* \"#utility.yul\":16002:16062   */\n      tag_431\n      jumpi\n        /* \"#utility.yul\":16058:16059   */\n      0x00\n        /* \"#utility.yul\":16055:16056   */\n      dup1\n        /* \"#utility.yul\":16048:16060   */\n      revert\n        /* \"#utility.yul\":16097:16225   */\n    tag_326:\n        /* \"#utility.yul\":16164:16173   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":16185:16196   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":16182:16219   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":16199:16217   */\n      tag_147\n      tag_437\n      jump\t// in\n        /* \"#utility.yul\":16230:16498   */\n    tag_351:\n        /* \"#utility.yul\":16317:16323   */\n      0x00\n        /* \"#utility.yul\":16370:16372   */\n      0x20\n        /* \"#utility.yul\":16358:16367   */\n      dup3\n        /* \"#utility.yul\":16349:16356   */\n      dup5\n        /* \"#utility.yul\":16345:16368   */\n      sub\n        /* \"#utility.yul\":16341:16373   */\n      slt\n        /* \"#utility.yul\":16338:16390   */\n      iszero\n      tag_584\n      jumpi\n        /* \"#utility.yul\":16386:16387   */\n      0x00\n        /* \"#utility.yul\":16383:16384   */\n      dup1\n        /* \"#utility.yul\":16376:16388   */\n      revert\n        /* \"#utility.yul\":16338:16390   */\n    tag_584:\n        /* \"#utility.yul\":16418:16427   */\n      dup2\n        /* \"#utility.yul\":16412:16428   */\n      mload\n        /* \"#utility.yul\":16437:16468   */\n      tag_431\n        /* \"#utility.yul\":16462:16467   */\n      dup2\n        /* \"#utility.yul\":16437:16468   */\n      tag_434\n      jump\t// in\n        /* \"#utility.yul\":16910:17317   */\n    tag_365:\n        /* \"#utility.yul\":17112:17114   */\n      0x20\n        /* \"#utility.yul\":17094:17115   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":17151:17153   */\n      0x2b\n        /* \"#utility.yul\":17131:17149   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":17124:17154   */\n      mstore\n        /* \"#utility.yul\":17190:17224   */\n      0x496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069\n        /* \"#utility.yul\":17185:17187   */\n      0x40\n        /* \"#utility.yul\":17170:17188   */\n      dup3\n      add\n        /* \"#utility.yul\":17163:17225   */\n      mstore\n      shl(0xa8, 0x6e697469616c697a696e67)\n        /* \"#utility.yul\":17256:17258   */\n      0x60\n        /* \"#utility.yul\":17241:17259   */\n      dup3\n      add\n        /* \"#utility.yul\":17234:17275   */\n      mstore\n        /* \"#utility.yul\":17307:17310   */\n      0x80\n        /* \"#utility.yul\":17292:17311   */\n      add\n      swap1\n        /* \"#utility.yul\":16910:17317   */\n      jump\t// out\n        /* \"#utility.yul\":17683:18495   */\n    tag_403:\n        /* \"#utility.yul\":18094:18119   */\n      0x416363657373436f6e74726f6c3a206163636f756e7420000000000000000000\n        /* \"#utility.yul\":18089:18092   */\n      dup2\n        /* \"#utility.yul\":18082:18120   */\n      mstore\n        /* \"#utility.yul\":18064:18067   */\n      0x00\n        /* \"#utility.yul\":18149:18155   */\n      dup4\n        /* \"#utility.yul\":18143:18156   */\n      mload\n        /* \"#utility.yul\":18165:18240   */\n      tag_590\n        /* \"#utility.yul\":18233:18239   */\n      dup2\n        /* \"#utility.yul\":18228:18230   */\n      0x17\n        /* \"#utility.yul\":18223:18226   */\n      dup6\n        /* \"#utility.yul\":18219:18231   */\n      add\n        /* \"#utility.yul\":18212:18216   */\n      0x20\n        /* \"#utility.yul\":18204:18210   */\n      dup9\n        /* \"#utility.yul\":18200:18217   */\n      add\n        /* \"#utility.yul\":18165:18240   */\n      tag_440\n      jump\t// in\n    tag_590:\n      shl(0x7d, 0x01034b99036b4b9b9b4b733903937b6329)\n        /* \"#utility.yul\":18299:18301   */\n      0x17\n        /* \"#utility.yul\":18259:18275   */\n      swap2\n      dup5\n      add\n        /* \"#utility.yul\":18291:18302   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":18284:18324   */\n      mstore\n        /* \"#utility.yul\":18349:18362   */\n      dup4\n      mload\n        /* \"#utility.yul\":18371:18447   */\n      tag_591\n        /* \"#utility.yul\":18349:18362   */\n      dup2\n        /* \"#utility.yul\":18433:18435   */\n      0x28\n        /* \"#utility.yul\":18425:18436   */\n      dup5\n      add\n        /* \"#utility.yul\":18418:18422   */\n      0x20\n        /* \"#utility.yul\":18406:18423   */\n      dup9\n      add\n        /* \"#utility.yul\":18371:18447   */\n      tag_440\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":18467:18484   */\n      add\n        /* \"#utility.yul\":18486:18488   */\n      0x28\n        /* \"#utility.yul\":18463:18489   */\n      add\n      swap5\n        /* \"#utility.yul\":17683:18495   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18500:18719   */\n    tag_405:\n        /* \"#utility.yul\":18649:18651   */\n      0x20\n        /* \"#utility.yul\":18638:18647   */\n      dup2\n        /* \"#utility.yul\":18631:18652   */\n      mstore\n        /* \"#utility.yul\":18612:18616   */\n      0x00\n        /* \"#utility.yul\":18669:18713   */\n      tag_431\n        /* \"#utility.yul\":18709:18711   */\n      0x20\n        /* \"#utility.yul\":18698:18707   */\n      dup4\n        /* \"#utility.yul\":18694:18712   */\n      add\n        /* \"#utility.yul\":18686:18692   */\n      dup5\n        /* \"#utility.yul\":18669:18713   */\n      tag_443\n      jump\t// in\n        /* \"#utility.yul\":18724:18892   */\n    tag_410:\n        /* \"#utility.yul\":18797:18806   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":18828:18837   */\n      dup2\n      iszero\n        /* \"#utility.yul\":18845:18860   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":18839:18861   */\n      dup5\n      eq\n        /* \"#utility.yul\":18825:18862   */\n      or\n        /* \"#utility.yul\":18815:18886   */\n      tag_147\n      jumpi\n        /* \"#utility.yul\":18866:18884   */\n      tag_147\n      tag_437\n      jump\t// in\n        /* \"#utility.yul\":18897:19022   */\n    tag_412:\n        /* \"#utility.yul\":18962:18971   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":18983:18993   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":18980:19016   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":18996:19014   */\n      tag_147\n      tag_437\n      jump\t// in\n        /* \"#utility.yul\":19027:19163   */\n    tag_430:\n        /* \"#utility.yul\":19066:19069   */\n      0x00\n        /* \"#utility.yul\":19094:19099   */\n      dup2\n        /* \"#utility.yul\":19084:19123   */\n      tag_602\n      jumpi\n        /* \"#utility.yul\":19103:19121   */\n      tag_602\n      tag_437\n      jump\t// in\n    tag_602:\n      pop\n      not(0x00)\n        /* \"#utility.yul\":19139:19157   */\n      add\n      swap1\n        /* \"#utility.yul\":19027:19163   */\n      jump\t// out\n    stop\n    data_48848f6f4af5ff2a90f75345111ffab654da14e01d0d715638da4379c8c19ae3 b19546dff01e856fb3f010c267a7b1c60363cf8a4664e21cc89c26224620214e\n    data_83599f2fd2d7ecec31a0c854e1dfa0cd718f43d0f25b15e620b3800dba1a8107 cab5a0bfe0b79d2c4b1c2e02599fa044d115b7511f9659307cb4276950967709\n\n    auxdata: 0xa2646970667358221220e7a0b492083a7c3c8cdad88cf24513c6b5e8f4102c08e53ff65524bd979c216064736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EE1 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7E42683B GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xB9209E33 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE744D789 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE744D789 EQ PUSH2 0x3D5 JUMPI DUP1 PUSH4 0xF0EB5E54 EQ PUSH2 0x3E8 JUMPI DUP1 PUSH4 0xF11ABFD8 EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x40C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB9209E33 EQ PUSH2 0x39A JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0xE58378BB EQ PUSH2 0x3C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x91D14854 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x36E JUMPI DUP1 PUSH4 0xA8D29D1D EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0xB4F3FCB7 EQ PUSH2 0x389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7E42683B EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0x8E098CA1 EQ PUSH2 0x348 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3B239A7F GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x5DBE47E8 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x5DBE47E8 EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0x653DC9F1 EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0x670AF6A9 EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x309 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3B239A7F EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x3B3E12F4 EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0x454A03E0 EQ PUSH2 0x2BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x26D941AE EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x184B9559 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0x22459E18 EQ PUSH2 0x206 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x16BA JUMP JUMPDEST PUSH2 0x41F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x204 PUSH2 0x1FF CALLDATASIZE PUSH1 0x4 PUSH2 0x16F9 JUMP JUMPDEST PUSH2 0x456 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21B PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E8C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E8 JUMP JUMPDEST PUSH2 0x21B PUSH2 0x237 CALLDATASIZE PUSH1 0x4 PUSH2 0x1744 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x25A CALLDATASIZE PUSH1 0x4 PUSH2 0x175D JUMP JUMPDEST PUSH2 0x6BB JUMP JUMPDEST PUSH2 0x204 PUSH2 0x26D CALLDATASIZE PUSH1 0x4 PUSH2 0x177A JUMP JUMPDEST PUSH2 0x71E JUMP JUMPDEST PUSH2 0x204 PUSH2 0x280 CALLDATASIZE PUSH1 0x4 PUSH2 0x177A JUMP JUMPDEST PUSH2 0x748 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x293 CALLDATASIZE PUSH1 0x4 PUSH2 0x17BA JUMP JUMPDEST PUSH2 0x7C6 JUMP JUMPDEST PUSH1 0xC9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E8 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x2CB CALLDATASIZE PUSH1 0x4 PUSH2 0x17E8 JUMP JUMPDEST PUSH2 0x886 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x2DE CALLDATASIZE PUSH1 0x4 PUSH2 0x175D JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x204 PUSH2 0x2F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1874 JUMP JUMPDEST PUSH2 0x977 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x304 CALLDATASIZE PUSH1 0x4 PUSH2 0x175D JUMP JUMPDEST PUSH2 0xA15 JUMP JUMPDEST PUSH2 0x204 PUSH2 0xA78 JUMP JUMPDEST PUSH2 0x324 PUSH2 0x31F CALLDATASIZE PUSH1 0x4 PUSH2 0x175D JUMP JUMPDEST PUSH2 0xA8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E8 JUMP JUMPDEST PUSH1 0x97 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2A5 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x356 CALLDATASIZE PUSH1 0x4 PUSH2 0x190E JUMP JUMPDEST PUSH2 0xAFB JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x369 CALLDATASIZE PUSH1 0x4 PUSH2 0x177A JUMP JUMPDEST PUSH2 0xBC5 JUMP JUMPDEST PUSH2 0x21B PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x384 CALLDATASIZE PUSH1 0x4 PUSH2 0x175D JUMP JUMPDEST PUSH2 0xBF0 JUMP JUMPDEST PUSH1 0xCA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2A5 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x3A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x175D JUMP JUMPDEST PUSH2 0xCB1 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x3BB CALLDATASIZE PUSH1 0x4 PUSH2 0x177A JUMP JUMPDEST PUSH2 0x113A JUMP JUMPDEST PUSH2 0x21B PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E6C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x3E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x175D JUMP JUMPDEST PUSH2 0x115F JUMP JUMPDEST PUSH2 0x2A5 PUSH2 0x3F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x175D JUMP JUMPDEST PUSH2 0x11C2 JUMP JUMPDEST PUSH1 0xCB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2A5 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x41A CALLDATASIZE PUSH1 0x4 PUSH2 0x175D JUMP JUMPDEST PUSH2 0x1231 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x450 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x476 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x490 JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x490 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x4F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x51B JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x53B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x54F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST PUSH2 0x59B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C696420617267756D656E74202D207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4EF JUMP JUMPDEST PUSH1 0xC9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0xCA DUP1 SLOAD DUP9 DUP4 AND SWAP1 DUP5 AND OR SWAP1 SSTORE PUSH1 0xCB DUP1 SLOAD SWAP2 DUP7 AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x7170BF15B246E880B2369CD7C67D057760D8A35149E8C64DDE91EFA22BCC76D0 SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0x1B98CB79E6F73020175FE87333F1B91AD6A881519C0AFE30340C2599B2B4BDE0 SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x2FA8B95C1DB7AFE99E3398F3792F008135CEDC1FA26B0BB2ECD2352CD166D53C SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH2 0x66F PUSH2 0x12AA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6B5 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E6C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x6D3 DUP2 PUSH2 0x12D9 JUMP JUMPDEST PUSH1 0xCB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x2FA8B95C1DB7AFE99E3398F3792F008135CEDC1FA26B0BB2ECD2352CD166D53C SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x739 DUP2 PUSH2 0x12D9 JUMP JUMPDEST PUSH2 0x743 DUP4 DUP4 PUSH2 0x12E3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x7B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4EF JUMP JUMPDEST PUSH2 0x7C2 DUP3 DUP3 PUSH2 0x1369 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E8C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x7DE DUP2 PUSH2 0x12D9 JUMP JUMPDEST PUSH1 0xCB SLOAD PUSH1 0x40 MLOAD PUSH4 0x9F3418D5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH2 0xFFFF DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x9F3418D5 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x82F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x843 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH2 0xFFFF DUP6 AND SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 POP PUSH32 0x4ED3B726495C2DCA1FF1215D9CA54E1A4030ABB5E82B0F6CE55702416CEE853 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E8C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x89E DUP2 PUSH2 0x12D9 JUMP JUMPDEST PUSH1 0xCB SLOAD PUSH1 0x40 MLOAD PUSH4 0xA53410DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH2 0xFFFF DUP6 AND PUSH1 0x44 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA53410DD SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x90B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND SWAP4 POP DUP8 AND SWAP2 POP PUSH32 0x6AE73635C50D24A45AF6FBD5E016AC4BED179ADDBC8BF24E04FF0FCC6D33AF19 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x959 DUP4 PUSH2 0x11C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x96F JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xA0C JUMPI PUSH2 0x9FA DUP8 DUP8 DUP4 DUP2 DUP2 LT PUSH2 0x997 JUMPI PUSH2 0x997 PUSH2 0x193C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x9AC SWAP2 SWAP1 PUSH2 0x175D JUMP JUMPDEST DUP7 DUP7 DUP5 DUP2 DUP2 LT PUSH2 0x9BE JUMPI PUSH2 0x9BE PUSH2 0x193C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x9D3 SWAP2 SWAP1 PUSH2 0x175D JUMP JUMPDEST DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x9E5 JUMPI PUSH2 0x9E5 PUSH2 0x193C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x1952 JUMP JUMPDEST DUP1 PUSH2 0xA04 DUP2 PUSH2 0x1985 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x97A JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E6C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xA2D DUP2 PUSH2 0x12D9 JUMP JUMPDEST PUSH1 0xC9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x7170BF15B246E880B2369CD7C67D057760D8A35149E8C64DDE91EFA22BCC76D0 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0xA80 PUSH2 0x13D0 JUMP JUMPDEST PUSH2 0xA8A PUSH1 0x0 PUSH2 0x142A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xCB SLOAD PUSH1 0x40 MLOAD PUSH4 0x1C9F84EF PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0x727E13BC SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAD7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x450 SWAP2 SWAP1 PUSH2 0x199E JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E8C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xB13 DUP2 PUSH2 0x12D9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB1E DUP5 PUSH2 0x11C2 JUMP JUMPDEST PUSH1 0xCB SLOAD PUSH1 0x40 MLOAD PUSH4 0x7402E7C3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP7 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP3 SWAP4 POP SWAP2 AND SWAP1 PUSH4 0xE805CF86 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB83 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND SWAP4 POP DUP5 AND SWAP2 POP PUSH32 0xE98082932C8056A0F514DA9104E4A66BC2CBAEF102AD59D90C4B24220EBF6010 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E8C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xC08 DUP2 PUSH2 0x12D9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC13 DUP4 PUSH2 0x11C2 JUMP JUMPDEST PUSH1 0xCB SLOAD PUSH1 0x40 MLOAD PUSH4 0xCF191BCD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP3 SWAP4 POP SWAP2 AND SWAP1 PUSH4 0xCF191BCD SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC70 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 POP DUP7 AND SWAP2 POP PUSH32 0x59D6590E225B81BEFE259AF056324092801080ACBB7FEAB310EB34678871F327 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xCBD DUP4 PUSH2 0x11C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xCD3 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xC9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x37C27581 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xDF09D604 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 DUP7 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD1C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xD44 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1A26 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xD58 JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 JUMPDEST DUP7 MLOAD DUP2 LT ISZERO PUSH2 0x112B JUMPI PUSH1 0xCA SLOAD DUP8 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x52C111D1 SWAP1 DUP11 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0xD96 JUMPI PUSH2 0xD96 PUSH2 0x193C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDBC SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDD9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xE01 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1ABC JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xE1C JUMPI POP PUSH1 0x0 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE38 JUMPI PUSH2 0xE38 PUSH2 0x19BB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE61 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xF0E JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xE82 JUMPI PUSH2 0xE82 PUSH2 0x193C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP11 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xE9C JUMPI PUSH2 0xE9C PUSH2 0x193C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xEC9 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xEF1 JUMPI PUSH2 0xEF1 PUSH2 0x193C JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0xF06 DUP2 PUSH2 0x1985 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xE67 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1115 JUMPI PUSH2 0xF24 DUP13 PUSH2 0x11C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC9100BCB DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xF44 JUMPI PUSH2 0xF44 PUSH2 0x193C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF6A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF87 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xFAF SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1BDE JUMP JUMPDEST POP DUP15 MLOAD SWAP5 SWAP14 POP SWAP3 SWAP12 POP SWAP1 SWAP10 POP SWAP8 POP SWAP6 POP DUP11 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0xFD1 JUMPI PUSH2 0xFD1 PUSH2 0x193C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP10 SUB PUSH2 0x10DD JUMPI DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC0969A6E PUSH2 0xFF7 DUP15 PUSH2 0x11C2 JUMP JUMPDEST DUP13 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0x1009 JUMPI PUSH2 0x1009 PUSH2 0x193C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP10 DUP10 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1032 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CCC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x106B JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1068 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1D05 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x109A JUMPI PUSH1 0x1 DUP3 MLOAD PUSH2 0x107D SWAP2 SWAP1 PUSH2 0x1D27 JUMP JUMPDEST DUP2 SUB PUSH2 0x1095 JUMPI POP PUSH1 0x0 SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1103 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x10A5 JUMPI DUP3 MLOAD SWAP2 POP JUMPDEST DUP1 ISZERO DUP1 ISZERO PUSH2 0x10BF JUMPI POP PUSH1 0x1 DUP4 MLOAD PUSH2 0x10BC SWAP2 SWAP1 PUSH2 0x1D27 JUMP JUMPDEST DUP3 EQ JUMPDEST ISZERO PUSH2 0x10D7 JUMPI POP PUSH1 0x0 SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST POP PUSH2 0x1103 JUMP JUMPDEST PUSH1 0x1 DUP3 MLOAD PUSH2 0x10EB SWAP2 SWAP1 PUSH2 0x1D27 JUMP JUMPDEST DUP2 SUB PUSH2 0x1103 JUMPI POP PUSH1 0x0 SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x110D DUP2 PUSH2 0x1985 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xF12 JUMP JUMPDEST POP POP POP DUP1 DUP1 PUSH2 0x1123 SWAP1 PUSH2 0x1985 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD63 JUMP JUMPDEST POP PUSH1 0x1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x1155 DUP2 PUSH2 0x12D9 JUMP JUMPDEST PUSH2 0x743 DUP4 DUP4 PUSH2 0x1369 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E6C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1177 DUP2 PUSH2 0x12D9 JUMP JUMPDEST PUSH1 0xCA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x1B98CB79E6F73020175FE87333F1B91AD6A881519C0AFE30340C2599B2B4BDE0 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0xCB SLOAD PUSH1 0x40 MLOAD PUSH4 0x7988D3A5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0x7988D3A5 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x120D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x450 SWAP2 SWAP1 PUSH2 0x1D3A JUMP JUMPDEST PUSH2 0x1239 PUSH2 0x13D0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x129E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4EF JUMP JUMPDEST PUSH2 0x12A7 DUP2 PUSH2 0x142A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x12D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4EF SWAP1 PUSH2 0x1D57 JUMP JUMPDEST PUSH2 0xA8A PUSH2 0x147C JUMP JUMPDEST PUSH2 0x12A7 DUP2 CALLER PUSH2 0x14AC JUMP JUMPDEST PUSH2 0x12ED DUP3 DUP3 PUSH2 0xBC5 JUMP JUMPDEST PUSH2 0x7C2 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1325 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x1373 DUP3 DUP3 PUSH2 0xBC5 JUMP JUMPDEST ISZERO PUSH2 0x7C2 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x97 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA8A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4EF JUMP JUMPDEST PUSH1 0x97 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x14A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4EF SWAP1 PUSH2 0x1D57 JUMP JUMPDEST PUSH2 0xA8A CALLER PUSH2 0x142A JUMP JUMPDEST PUSH2 0x14B6 DUP3 DUP3 PUSH2 0xBC5 JUMP JUMPDEST PUSH2 0x7C2 JUMPI PUSH2 0x14C3 DUP2 PUSH2 0x1505 JUMP JUMPDEST PUSH2 0x14CE DUP4 PUSH1 0x20 PUSH2 0x1517 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x14DF SWAP3 SWAP2 SWAP1 PUSH2 0x1DA2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x4EF SWAP2 PUSH1 0x4 ADD PUSH2 0x1E17 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x450 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x14 JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1526 DUP4 PUSH1 0x2 PUSH2 0x1E2A JUMP JUMPDEST PUSH2 0x1531 SWAP1 PUSH1 0x2 PUSH2 0x1E41 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1549 JUMPI PUSH2 0x1549 PUSH2 0x19BB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1573 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x158E JUMPI PUSH2 0x158E PUSH2 0x193C JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x15BD JUMPI PUSH2 0x15BD PUSH2 0x193C JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x15E1 DUP5 PUSH1 0x2 PUSH2 0x1E2A JUMP JUMPDEST PUSH2 0x15EC SWAP1 PUSH1 0x1 PUSH2 0x1E41 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1664 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x1620 JUMPI PUSH2 0x1620 PUSH2 0x193C JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1636 JUMPI PUSH2 0x1636 PUSH2 0x193C JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x165D DUP2 PUSH2 0x1E54 JUMP JUMPDEST SWAP1 POP PUSH2 0x15EF JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x16B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4EF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x16B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x12A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x170E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1719 DUP2 PUSH2 0x16E4 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1729 DUP2 PUSH2 0x16E4 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x1739 DUP2 PUSH2 0x16E4 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1756 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x176F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x16B3 DUP2 PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x178D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x179F DUP2 PUSH2 0x16E4 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x12A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x17D8 DUP2 PUSH2 0x16E4 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x179F DUP2 PUSH2 0x17AA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x17FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1808 DUP2 PUSH2 0x16E4 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1818 DUP2 PUSH2 0x16E4 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x1739 DUP2 PUSH2 0x17AA JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x183A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1852 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x186D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x188D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x18A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18B1 DUP11 DUP4 DUP12 ADD PUSH2 0x1828 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x18CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18D6 DUP11 DUP4 DUP12 ADD PUSH2 0x1828 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x18EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18FC DUP10 DUP3 DUP11 ADD PUSH2 0x1828 JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1921 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x192C DUP2 PUSH2 0x16E4 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x179F DUP2 PUSH2 0x16E4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1964 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x16B3 DUP2 PUSH2 0x17AA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1997 JUMPI PUSH2 0x1997 PUSH2 0x196F JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x16B3 DUP2 PUSH2 0x17AA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x19FA JUMPI PUSH2 0x19FA PUSH2 0x19BB JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1A1C JUMPI PUSH2 0x1A1C PUSH2 0x19BB JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x1A61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x1A74 PUSH2 0x1A6F DUP3 PUSH2 0x1A02 JUMP JUMPDEST PUSH2 0x19D1 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP8 DUP4 GT ISZERO PUSH2 0x1A93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x1AB1 JUMPI DUP4 MLOAD DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x1A98 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1ACF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x1AF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x1B05 PUSH2 0x1A6F DUP3 PUSH2 0x1A02 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP8 DUP4 GT ISZERO PUSH2 0x1B24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x1AB1 JUMPI DUP4 MLOAD PUSH2 0x1B3C DUP2 PUSH2 0x16E4 JUMP JUMPDEST DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x1B29 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B66 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1B4E JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x1B89 JUMPI PUSH2 0x1B89 PUSH2 0x19BB JUMP JUMPDEST PUSH2 0x1B9C PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x19D1 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE DUP4 DUP4 DUP4 ADD GT ISZERO PUSH2 0x1BB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16B3 DUP4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B4B JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1BCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16B3 DUP4 DUP4 MLOAD PUSH1 0x20 DUP6 ADD PUSH2 0x1B6F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1BF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 MLOAD SWAP6 POP PUSH1 0x20 DUP8 ADD MLOAD SWAP5 POP PUSH1 0x40 DUP8 ADD MLOAD PUSH2 0x1C10 DUP2 PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x60 DUP9 ADD MLOAD SWAP1 SWAP5 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1C2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C3A DUP11 DUP4 DUP12 ADD PUSH2 0x1BBE JUMP JUMPDEST SWAP5 POP PUSH1 0x80 DUP10 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1C50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C5C DUP11 DUP4 DUP12 ADD PUSH2 0x1BBE JUMP JUMPDEST SWAP4 POP PUSH1 0xA0 DUP10 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1C72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP8 ADD PUSH1 0x1F DUP2 ADD DUP10 SGT PUSH2 0x1C84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C93 DUP10 DUP3 MLOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1B6F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1CB8 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1B4B JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1CF3 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1CA0 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1AB1 DUP2 DUP6 PUSH2 0x1CA0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x16B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x450 JUMPI PUSH2 0x450 PUSH2 0x196F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x16B3 DUP2 PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x1DDA DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1B4B JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x1E0B DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1B4B JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x16B3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1CA0 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x450 JUMPI PUSH2 0x450 PUSH2 0x196F JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x450 JUMPI PUSH2 0x450 PUSH2 0x196F JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1E63 JUMPI PUSH2 0x1E63 PUSH2 0x196F JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP INVALID 0xB1 SWAP6 CHAINID 0xDF CREATE 0x1E DUP6 PUSH16 0xB3F010C267A7B1C60363CF8A4664E21C 0xC8 SWAP13 0x26 0x22 CHAINID KECCAK256 0x21 0x4E 0xCA 0xB5 LOG0 0xBF 0xE0 0xB7 SWAP14 0x2C 0x4B SHR 0x2E MUL MSIZE SWAP16 LOG0 DIFFICULTY 0xD1 ISZERO 0xB7 MLOAD 0x1F SWAP7 MSIZE ADDRESS PUSH29 0xB4276950967709A2646970667358221220E7A0B492083A7C3C8CDAD88C CALLCODE GASLIMIT SGT 0xC6 0xB5 0xE8 DELEGATECALL LT 0x2C ADDMOD 0xE5 EXTCODEHASH 0xF6 SSTORE 0x24 0xBD SWAP8 SWAP13 0x21 PUSH1 0x64 PUSH20 0x6F6C634300081100330000000000000000000000 ",
							"sourceMap": "587:8616:15:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@AGENT_ROLE_2683": {
									"entryPoint": null,
									"id": 2683,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEFAULT_ADMIN_ROLE_366": {
									"entryPoint": null,
									"id": 366,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@OWNER_ROLE_2686": {
									"entryPoint": null,
									"id": 2686,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Ownable_init_759": {
									"entryPoint": 4778,
									"id": 759,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_770": {
									"entryPoint": 5244,
									"id": 770,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_801": {
									"entryPoint": 5072,
									"id": 801,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_431": {
									"entryPoint": 4825,
									"id": 431,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkRole_470": {
									"entryPoint": 5292,
									"id": 470,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_622": {
									"entryPoint": 4835,
									"id": 622,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1390": {
									"entryPoint": null,
									"id": 1390,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revokeRole_653": {
									"entryPoint": 4969,
									"id": 653,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_858": {
									"entryPoint": 5162,
									"id": 858,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@batchRegisterIdentity_2796": {
									"entryPoint": 2423,
									"id": 2796,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@contains_3258": {
									"entryPoint": 2381,
									"id": 3258,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@deleteIdentity_2883": {
									"entryPoint": 3056,
									"id": 2883,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getRoleAdmin_485": {
									"entryPoint": null,
									"id": 485,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_505": {
									"entryPoint": 1822,
									"id": 505,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_418": {
									"entryPoint": 3013,
									"id": 418,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@identityStorage_3231": {
									"entryPoint": null,
									"id": 3231,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@identity_3303": {
									"entryPoint": 4546,
									"id": 3303,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@init_2755": {
									"entryPoint": 1110,
									"id": 2755,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@investorCountry_3198": {
									"entryPoint": 2700,
									"id": 3198,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isContract_1051": {
									"entryPoint": null,
									"id": 1051,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isVerified_3183": {
									"entryPoint": 3249,
									"id": 3183,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@issuersRegistry_3209": {
									"entryPoint": null,
									"id": 3209,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_787": {
									"entryPoint": null,
									"id": 787,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@registerIdentity_3287": {
									"entryPoint": 2182,
									"id": 3287,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@renounceOwnership_815": {
									"entryPoint": 2680,
									"id": 815,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceRole_548": {
									"entryPoint": 1864,
									"id": 548,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_525": {
									"entryPoint": 4410,
									"id": 525,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setClaimTopicsRegistry_2925": {
									"entryPoint": 2581,
									"id": 2925,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setIdentityRegistryStorage_2904": {
									"entryPoint": 1723,
									"id": 2904,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setTrustedIssuersRegistry_2946": {
									"entryPoint": 4447,
									"id": 2946,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@supportsInterface_1672": {
									"entryPoint": null,
									"id": 1672,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_399": {
									"entryPoint": 1055,
									"id": 399,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toHexString_1588": {
									"entryPoint": 5399,
									"id": 1588,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toHexString_1608": {
									"entryPoint": 5381,
									"id": 1608,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@topicsRegistry_3220": {
									"entryPoint": null,
									"id": 3220,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferOwnership_838": {
									"entryPoint": 4657,
									"id": 838,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateCountry_2854": {
									"entryPoint": 1990,
									"id": 2854,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@updateIdentity_2829": {
									"entryPoint": 2811,
									"id": 2829,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_array_address_dyn_calldata": {
									"entryPoint": 6184,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_available_length_bytes_fromMemory": {
									"entryPoint": 7023,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_bytes_fromMemory": {
									"entryPoint": 7102,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5981,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_address": {
									"entryPoint": 5881,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_contract$_IIdentity_$323": {
									"entryPoint": 6414,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_contract$_IIdentity_$323t_uint16": {
									"entryPoint": 6120,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint16": {
									"entryPoint": 6074,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_contract$_IIdentity_$323_$dyn_calldata_ptrt_array$_t_uint16_$dyn_calldata_ptr": {
									"entryPoint": 6260,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_array$_t_contract$_IClaimIssuer_$59_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 6844,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 6694,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 7429,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 5956,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 6010,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5818,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IIdentity_$323": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IIdentity_$323_fromMemory": {
									"entryPoint": 7482,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint16": {
									"entryPoint": 6482,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint16_fromMemory": {
									"entryPoint": 6558,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_addresst_bytes_memory_ptrt_bytes_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 7134,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_encode_bytes": {
									"entryPoint": 7328,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7586,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_contract$_IIdentity_$323__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_contract$_IIdentity_$323_t_uint16__to_t_address_t_address_t_uint16__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint16__to_t_address_t_uint16__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IClaimIssuer_$59_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IClaimTopicsRegistry_$3331__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IIdentityRegistryStorage_$3586__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IIdentity_$323__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IIdentity_$323_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_address_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 7372,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ITrustedIssuersRegistry_$3676__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7703,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7511,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 6609,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_array_uint256_dyn": {
									"entryPoint": 6658,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7745,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7722,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7463,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6987,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 7764,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 6533,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6511,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6460,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6587,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 5860,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_uint16": {
									"entryPoint": 6058,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:19526:21",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:21",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "83:217:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "129:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "138:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "141:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "131:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "131:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "131:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "104:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "113:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "100:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "100:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "125:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "96:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:32:21"
															},
															"nodeType": "YulIf",
															"src": "93:52:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "154:36:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "180:9:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "167:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "167:23:21"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "158:5:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "254:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "263:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "266:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "212:5:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "223:5:21"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "234:3:21",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "239:10:21",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "230:3:21"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "230:20:21"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "219:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "219:32:21"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "209:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "209:43:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "202:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "202:51:21"
															},
															"nodeType": "YulIf",
															"src": "199:71:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "279:15:21",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "289:5:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "49:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "60:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "72:6:21",
														"type": ""
													}
												],
												"src": "14:286:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "400:92:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "410:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "422:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "433:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "418:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "418:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "410:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "452:9:21"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "477:6:21"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "470:6:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "470:14:21"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "463:6:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "463:22:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "445:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "445:41:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "445:41:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "369:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "380:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "391:4:21",
														"type": ""
													}
												],
												"src": "305:187:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "542:86:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "606:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "615:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "618:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "608:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "608:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "608:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "565:5:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "576:5:21"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "591:3:21",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "596:1:21",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "587:3:21"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "587:11:21"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "600:1:21",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "583:3:21"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "583:19:21"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "572:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "572:31:21"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:42:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "555:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "555:50:21"
															},
															"nodeType": "YulIf",
															"src": "552:70:21"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "531:5:21",
														"type": ""
													}
												],
												"src": "497:131:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "737:425:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "783:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "792:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "795:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "785:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "785:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "785:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "758:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "767:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "754:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "754:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "779:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "750:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "750:32:21"
															},
															"nodeType": "YulIf",
															"src": "747:52:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "808:36:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "834:9:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "821:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "821:23:21"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "812:5:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "878:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "853:24:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "853:31:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "853:31:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "893:15:21",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "903:5:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "893:6:21"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "917:47:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "949:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "960:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "945:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "945:18:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "932:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "932:32:21"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "921:7:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "998:7:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "973:24:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "973:33:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "973:33:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1015:17:21",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "1025:7:21"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1015:6:21"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1041:47:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1073:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1084:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1069:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1069:18:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1056:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1056:32:21"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nodeType": "YulTypedName",
																	"src": "1045:7:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nodeType": "YulIdentifier",
																		"src": "1122:7:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1097:24:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1097:33:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1097:33:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1139:17:21",
															"value": {
																"name": "value_2",
																"nodeType": "YulIdentifier",
																"src": "1149:7:21"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1139:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "687:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "698:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "710:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "718:6:21",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "726:6:21",
														"type": ""
													}
												],
												"src": "633:529:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1268:76:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1278:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1290:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1301:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1286:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1286:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1278:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1320:9:21"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1331:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1313:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1313:25:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1313:25:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1237:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1248:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1259:4:21",
														"type": ""
													}
												],
												"src": "1167:177:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1419:110:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1465:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1474:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1477:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1467:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1467:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1467:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1440:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1449:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1436:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1436:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1461:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1432:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1432:32:21"
															},
															"nodeType": "YulIf",
															"src": "1429:52:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1490:33:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1513:9:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1500:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1500:23:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1490:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1385:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1396:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1408:6:21",
														"type": ""
													}
												],
												"src": "1349:180:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1604:177:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1650:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1659:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1662:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1652:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1652:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1652:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1625:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1634:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1621:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1621:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1646:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1617:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1617:32:21"
															},
															"nodeType": "YulIf",
															"src": "1614:52:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1675:36:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1701:9:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1688:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1688:23:21"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1679:5:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1745:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1720:24:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1720:31:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1720:31:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1760:15:21",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1770:5:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1760:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1570:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1581:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1593:6:21",
														"type": ""
													}
												],
												"src": "1534:247:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1873:228:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1919:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1928:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1931:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1921:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1921:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1921:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1894:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1903:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1890:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1890:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1915:2:21",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1886:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1886:32:21"
															},
															"nodeType": "YulIf",
															"src": "1883:52:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1944:33:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1967:9:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1954:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1954:23:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1944:6:21"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1986:45:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2016:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2027:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2012:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2012:18:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1999:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1999:32:21"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1990:5:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2065:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2040:24:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2040:31:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2040:31:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2080:15:21",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2090:5:21"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2080:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1831:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1842:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1854:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1862:6:21",
														"type": ""
													}
												],
												"src": "1786:315:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2150:73:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2201:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2210:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2213:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2203:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2203:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2203:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2173:5:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2184:5:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2191:6:21",
																						"type": "",
																						"value": "0xffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2180:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2180:18:21"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2170:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2170:29:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2163:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2163:37:21"
															},
															"nodeType": "YulIf",
															"src": "2160:57:21"
														}
													]
												},
												"name": "validator_revert_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2139:5:21",
														"type": ""
													}
												],
												"src": "2106:117:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2314:300:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2360:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2369:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2372:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2362:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2362:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2362:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2335:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2344:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2331:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2331:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2356:2:21",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2327:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2327:32:21"
															},
															"nodeType": "YulIf",
															"src": "2324:52:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2385:36:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2411:9:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2398:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2398:23:21"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2389:5:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2455:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2430:24:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2430:31:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2430:31:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2470:15:21",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2480:5:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2470:6:21"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2494:47:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2526:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2537:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2522:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2522:18:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2509:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2509:32:21"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "2498:7:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "2574:7:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_uint16",
																	"nodeType": "YulIdentifier",
																	"src": "2550:23:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2550:32:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2550:32:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2591:17:21",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "2601:7:21"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2591:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2272:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2283:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2295:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2303:6:21",
														"type": ""
													}
												],
												"src": "2228:386:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2749:102:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2759:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2771:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2782:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2767:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2767:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2759:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2801:9:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2816:6:21"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2832:3:21",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2837:1:21",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2828:3:21"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2828:11:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2841:1:21",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2824:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2824:19:21"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2812:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2812:32:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2794:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2794:51:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2794:51:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IClaimTopicsRegistry_$3331__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2718:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2729:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2740:4:21",
														"type": ""
													}
												],
												"src": "2619:232:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2976:424:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3022:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3031:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3034:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3024:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3024:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3024:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2997:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3006:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2993:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2993:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3018:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2989:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2989:32:21"
															},
															"nodeType": "YulIf",
															"src": "2986:52:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3047:36:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3073:9:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3060:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3060:23:21"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3051:5:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3117:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3092:24:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3092:31:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3092:31:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3132:15:21",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3142:5:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3132:6:21"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3156:47:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3188:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3199:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3184:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3184:18:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3171:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3171:32:21"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "3160:7:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "3237:7:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3212:24:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3212:33:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3212:33:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3254:17:21",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "3264:7:21"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3254:6:21"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3280:47:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3323:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3308:18:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3295:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3295:32:21"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nodeType": "YulTypedName",
																	"src": "3284:7:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nodeType": "YulIdentifier",
																		"src": "3360:7:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_uint16",
																	"nodeType": "YulIdentifier",
																	"src": "3336:23:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3336:32:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3336:32:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3377:17:21",
															"value": {
																"name": "value_2",
																"nodeType": "YulIdentifier",
																"src": "3387:7:21"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3377:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_contract$_IIdentity_$323t_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2926:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2937:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2949:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2957:6:21",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2965:6:21",
														"type": ""
													}
												],
												"src": "2856:544:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3489:283:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3538:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3547:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3550:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3540:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3540:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3540:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3517:6:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3525:4:21",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3513:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3513:17:21"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3532:3:21"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3509:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3509:27:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3502:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3502:35:21"
															},
															"nodeType": "YulIf",
															"src": "3499:55:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3563:30:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3586:6:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3573:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3573:20:21"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3563:6:21"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3636:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3645:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3648:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3638:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3638:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3638:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3608:6:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3616:18:21",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3605:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3605:30:21"
															},
															"nodeType": "YulIf",
															"src": "3602:50:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3661:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3677:6:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3685:4:21",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3673:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3673:17:21"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "3661:8:21"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3750:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3759:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3762:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3752:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3752:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3752:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3713:6:21"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3725:1:21",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "3728:6:21"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3721:3:21"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3721:14:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3709:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3709:27:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3738:4:21",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3705:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3705:38:21"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3745:3:21"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3702:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3702:47:21"
															},
															"nodeType": "YulIf",
															"src": "3699:67:21"
														}
													]
												},
												"name": "abi_decode_array_address_dyn_calldata",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3452:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3460:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "3468:8:21",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3478:6:21",
														"type": ""
													}
												],
												"src": "3405:367:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4002:879:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4048:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4057:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4060:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4050:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4050:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4050:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4023:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4032:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4019:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4019:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4044:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4015:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4015:32:21"
															},
															"nodeType": "YulIf",
															"src": "4012:52:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4073:37:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4100:9:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4087:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4087:23:21"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4077:6:21",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4119:28:21",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4129:18:21",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4123:2:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4174:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4183:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4186:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4176:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4176:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4176:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4162:6:21"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4170:2:21"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4159:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4159:14:21"
															},
															"nodeType": "YulIf",
															"src": "4156:34:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4199:96:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4267:9:21"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4278:6:21"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4263:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4263:22:21"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4287:7:21"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "4225:37:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4225:70:21"
															},
															"variables": [
																{
																	"name": "value0_1",
																	"nodeType": "YulTypedName",
																	"src": "4203:8:21",
																	"type": ""
																},
																{
																	"name": "value1_1",
																	"nodeType": "YulTypedName",
																	"src": "4213:8:21",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4304:18:21",
															"value": {
																"name": "value0_1",
																"nodeType": "YulIdentifier",
																"src": "4314:8:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4304:6:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4331:18:21",
															"value": {
																"name": "value1_1",
																"nodeType": "YulIdentifier",
																"src": "4341:8:21"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4331:6:21"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4358:48:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4391:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4402:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4387:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4387:18:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4374:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4374:32:21"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "4362:8:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4435:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4444:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4447:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4437:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4437:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4437:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "4421:8:21"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4431:2:21"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4418:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4418:16:21"
															},
															"nodeType": "YulIf",
															"src": "4415:36:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4460:98:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4528:9:21"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "4539:8:21"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4524:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4524:24:21"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4550:7:21"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "4486:37:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4486:72:21"
															},
															"variables": [
																{
																	"name": "value2_1",
																	"nodeType": "YulTypedName",
																	"src": "4464:8:21",
																	"type": ""
																},
																{
																	"name": "value3_1",
																	"nodeType": "YulTypedName",
																	"src": "4474:8:21",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4567:18:21",
															"value": {
																"name": "value2_1",
																"nodeType": "YulIdentifier",
																"src": "4577:8:21"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4567:6:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4594:18:21",
															"value": {
																"name": "value3_1",
																"nodeType": "YulIdentifier",
																"src": "4604:8:21"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4594:6:21"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4621:48:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4654:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4665:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4650:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4650:18:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4637:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4637:32:21"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "4625:8:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4698:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4707:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4710:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4700:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4700:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4700:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "4684:8:21"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4694:2:21"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4681:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4681:16:21"
															},
															"nodeType": "YulIf",
															"src": "4678:36:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4723:98:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4791:9:21"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "4802:8:21"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4787:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4787:24:21"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4813:7:21"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "4749:37:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "4749:72:21"
															},
															"variables": [
																{
																	"name": "value4_1",
																	"nodeType": "YulTypedName",
																	"src": "4727:8:21",
																	"type": ""
																},
																{
																	"name": "value5_1",
																	"nodeType": "YulTypedName",
																	"src": "4737:8:21",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4830:18:21",
															"value": {
																"name": "value4_1",
																"nodeType": "YulIdentifier",
																"src": "4840:8:21"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "4830:6:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4857:18:21",
															"value": {
																"name": "value5_1",
																"nodeType": "YulIdentifier",
																"src": "4867:8:21"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "4857:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_contract$_IIdentity_$323_$dyn_calldata_ptrt_array$_t_uint16_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3928:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3939:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3951:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3959:6:21",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3967:6:21",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3975:6:21",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "3983:6:21",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "3991:6:21",
														"type": ""
													}
												],
												"src": "3777:1104:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4985:89:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4995:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5007:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5018:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5003:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5003:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4995:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5037:9:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5052:6:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5060:6:21",
																				"type": "",
																				"value": "0xffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5048:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5048:19:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5030:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5030:38:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5030:38:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4954:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4965:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4976:4:21",
														"type": ""
													}
												],
												"src": "4886:188:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5180:102:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5190:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5202:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5213:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5198:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5198:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5190:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5232:9:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5247:6:21"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5263:3:21",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5268:1:21",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5259:3:21"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5259:11:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5272:1:21",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5255:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5255:19:21"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5243:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5243:32:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5225:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5225:51:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5225:51:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5149:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5160:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5171:4:21",
														"type": ""
													}
												],
												"src": "5079:203:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5391:301:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5437:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5446:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5449:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5439:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5439:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5439:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5412:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5421:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5408:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5408:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5433:2:21",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5404:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5404:32:21"
															},
															"nodeType": "YulIf",
															"src": "5401:52:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5462:36:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5488:9:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5475:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5475:23:21"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5466:5:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5532:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "5507:24:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5507:31:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5507:31:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5547:15:21",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5557:5:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5547:6:21"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5571:47:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5603:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5614:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5599:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5599:18:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5586:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5586:32:21"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "5575:7:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "5652:7:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "5627:24:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5627:33:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5627:33:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5669:17:21",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "5679:7:21"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5669:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_contract$_IIdentity_$323",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5349:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5360:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5372:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5380:6:21",
														"type": ""
													}
												],
												"src": "5287:405:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5830:102:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5840:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5852:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5863:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5848:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5848:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5840:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5882:9:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5897:6:21"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5913:3:21",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5918:1:21",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5909:3:21"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5909:11:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5922:1:21",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5905:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5905:19:21"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5893:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5893:32:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5875:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "5875:51:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5875:51:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ITrustedIssuersRegistry_$3676__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5799:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5810:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5821:4:21",
														"type": ""
													}
												],
												"src": "5697:235:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6055:102:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6065:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6077:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6088:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6073:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "6073:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6065:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6107:9:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6122:6:21"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6138:3:21",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6143:1:21",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "6134:3:21"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6134:11:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6147:1:21",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "6130:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6130:19:21"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6118:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6118:32:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6100:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "6100:51:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6100:51:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IIdentity_$323__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6024:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6035:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6046:4:21",
														"type": ""
													}
												],
												"src": "5937:220:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6296:102:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6306:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6318:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6329:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6314:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "6314:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6306:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6348:9:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6363:6:21"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6379:3:21",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6384:1:21",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "6375:3:21"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6375:11:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6388:1:21",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "6371:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6371:19:21"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6359:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6359:32:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6341:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "6341:51:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6341:51:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IIdentityRegistryStorage_$3586__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6265:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6276:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6287:4:21",
														"type": ""
													}
												],
												"src": "6162:236:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6577:236:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6594:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6605:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6587:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "6587:21:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6587:21:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6628:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6639:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6624:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6624:18:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6644:2:21",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6617:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "6617:30:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6617:30:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6667:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6678:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6663:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6663:18:21"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6683:34:21",
																		"type": "",
																		"value": "Initializable: contract is alrea"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6656:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "6656:62:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6656:62:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6738:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6749:2:21",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6734:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6734:18:21"
																	},
																	{
																		"hexValue": "647920696e697469616c697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6754:16:21",
																		"type": "",
																		"value": "dy initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6727:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "6727:44:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6727:44:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6780:27:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6792:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6803:3:21",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6788:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "6788:19:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6780:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6554:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6568:4:21",
														"type": ""
													}
												],
												"src": "6403:410:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6992:181:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7009:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7020:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7002:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "7002:21:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7002:21:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7043:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7054:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7039:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7039:18:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7059:2:21",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7032:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "7032:30:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7032:30:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7082:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7093:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7078:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7078:18:21"
																	},
																	{
																		"hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7098:33:21",
																		"type": "",
																		"value": "invalid argument - zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7071:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "7071:61:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7071:61:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7141:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7153:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7164:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7149:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "7149:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7141:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6969:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6983:4:21",
														"type": ""
													}
												],
												"src": "6818:355:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7285:87:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7295:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7307:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7318:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7303:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "7303:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7295:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7337:9:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7352:6:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7360:4:21",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7348:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7348:17:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7330:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "7330:36:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7330:36:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7254:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7265:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7276:4:21",
														"type": ""
													}
												],
												"src": "7178:194:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7551:237:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7568:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7579:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7561:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "7561:21:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7561:21:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7602:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7613:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7598:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7598:18:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7618:2:21",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7591:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "7591:30:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7591:30:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7641:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7652:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7637:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7637:18:21"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7657:34:21",
																		"type": "",
																		"value": "AccessControl: can only renounce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7630:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "7630:62:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7630:62:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7712:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7723:2:21",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7708:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7708:18:21"
																	},
																	{
																		"hexValue": "20726f6c657320666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7728:17:21",
																		"type": "",
																		"value": " roles for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7701:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "7701:45:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7701:45:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7755:27:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7767:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7778:3:21",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7763:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "7763:19:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7755:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7528:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7542:4:21",
														"type": ""
													}
												],
												"src": "7377:411:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7920:158:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7930:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7942:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7953:2:21",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7938:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "7938:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7930:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7972:9:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7987:6:21"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8003:3:21",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8008:1:21",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "7999:3:21"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7999:11:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8012:1:21",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "7995:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7995:19:21"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7983:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7983:32:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7965:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "7965:51:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7965:51:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8036:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8047:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8032:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8032:18:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "8056:6:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8064:6:21",
																				"type": "",
																				"value": "0xffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8052:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8052:19:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8025:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "8025:47:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8025:47:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint16__to_t_address_t_uint16__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7881:9:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7892:6:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7900:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7911:4:21",
														"type": ""
													}
												],
												"src": "7793:285:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8255:231:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8265:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8277:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8288:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8273:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "8273:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8265:4:21"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8300:29:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8318:3:21",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8323:1:21",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8314:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8314:11:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8327:1:21",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8310:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "8310:19:21"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "8304:2:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8345:9:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8360:6:21"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8368:2:21"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8356:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8356:15:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8338:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "8338:34:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8338:34:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8392:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8403:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8388:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8388:18:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "8412:6:21"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8420:2:21"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8408:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8408:15:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8381:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "8381:43:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8381:43:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8444:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8455:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8440:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8440:18:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "8464:6:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8472:6:21",
																				"type": "",
																				"value": "0xffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8460:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8460:19:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8433:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "8433:47:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8433:47:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_contract$_IIdentity_$323_t_uint16__to_t_address_t_address_t_uint16__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8208:9:21",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8219:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8227:6:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8235:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8246:4:21",
														"type": ""
													}
												],
												"src": "8083:403:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8523:95:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8540:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8547:3:21",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8552:10:21",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8543:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8543:20:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8533:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "8533:31:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8533:31:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:21",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8583:4:21",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8573:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "8573:15:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8573:15:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8604:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8607:4:21",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8597:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "8597:15:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8597:15:21"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "8491:127:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8710:177:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8756:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8765:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8768:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8758:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8758:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8758:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8731:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8740:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8727:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8727:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8752:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8723:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "8723:32:21"
															},
															"nodeType": "YulIf",
															"src": "8720:52:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8781:36:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8807:9:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8794:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "8794:23:21"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "8785:5:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8851:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "8826:24:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "8826:31:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8826:31:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8866:15:21",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "8876:5:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "8866:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IIdentity_$323",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8676:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8687:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8699:6:21",
														"type": ""
													}
												],
												"src": "8623:264:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8961:176:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9007:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9016:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9019:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9009:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9009:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9009:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8982:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8991:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8978:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8978:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9003:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8974:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "8974:32:21"
															},
															"nodeType": "YulIf",
															"src": "8971:52:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9032:36:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9058:9:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "9045:12:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "9045:23:21"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "9036:5:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9101:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_uint16",
																	"nodeType": "YulIdentifier",
																	"src": "9077:23:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "9077:30:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9077:30:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9116:15:21",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "9126:5:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "9116:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8927:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8938:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8950:6:21",
														"type": ""
													}
												],
												"src": "8892:245:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9174:95:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9191:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9198:3:21",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9203:10:21",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9194:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9194:20:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9184:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "9184:31:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9184:31:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9231:1:21",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9234:4:21",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9224:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "9224:15:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9224:15:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9255:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9258:4:21",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9248:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "9248:15:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9248:15:21"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "9142:127:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9321:88:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9352:22:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9354:16:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9354:18:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9354:18:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9337:5:21"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9348:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "9344:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9344:6:21"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "9334:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "9334:17:21"
															},
															"nodeType": "YulIf",
															"src": "9331:43:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9383:20:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9394:5:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9401:1:21",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9390:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "9390:13:21"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "9383:3:21"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9303:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "9313:3:21",
														"type": ""
													}
												],
												"src": "9274:135:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9494:169:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9540:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9549:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9552:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9542:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9542:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9542:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9515:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9524:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9511:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9511:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9536:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9507:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "9507:32:21"
															},
															"nodeType": "YulIf",
															"src": "9504:52:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9565:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9584:9:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9578:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "9578:16:21"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "9569:5:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9627:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_uint16",
																	"nodeType": "YulIdentifier",
																	"src": "9603:23:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "9603:30:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9603:30:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9642:15:21",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "9652:5:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "9642:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint16_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9460:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9471:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9483:6:21",
														"type": ""
													}
												],
												"src": "9414:249:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9814:175:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9824:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9836:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9847:2:21",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9832:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "9832:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9824:4:21"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9859:29:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9877:3:21",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9882:1:21",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9873:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9873:11:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9886:1:21",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "9869:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "9869:19:21"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "9863:2:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9904:9:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9919:6:21"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9927:2:21"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9915:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9915:15:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9897:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "9897:34:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9897:34:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9951:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9962:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9947:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9947:18:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "9971:6:21"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9979:2:21"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9967:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9967:15:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9940:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "9940:43:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9940:43:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_contract$_IIdentity_$323__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9775:9:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9786:6:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9794:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9805:4:21",
														"type": ""
													}
												],
												"src": "9668:321:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10026:95:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10043:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10050:3:21",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10055:10:21",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10046:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10046:20:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10036:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "10036:31:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10036:31:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10083:1:21",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10086:4:21",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10076:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "10076:15:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10076:15:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10107:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10110:4:21",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10100:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "10100:15:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10100:15:21"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "9994:127:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10171:230:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10181:19:21",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10197:2:21",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10191:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "10191:9:21"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "10181:6:21"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10209:58:21",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "10231:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "10247:4:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10253:2:21",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10243:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10243:13:21"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10262:2:21",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "10258:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10258:7:21"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10239:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10239:27:21"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10227:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "10227:40:21"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "10213:10:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10342:22:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "10344:16:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10344:18:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10344:18:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "10285:10:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10297:18:21",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "10282:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10282:34:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "10321:10:21"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10333:6:21"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "10318:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10318:22:21"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "10279:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "10279:62:21"
															},
															"nodeType": "YulIf",
															"src": "10276:88:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10380:2:21",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "10384:10:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10373:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "10373:22:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10373:22:21"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "10151:4:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10160:6:21",
														"type": ""
													}
												],
												"src": "10126:275:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10475:114:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10519:22:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "10521:16:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10521:18:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10521:18:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10491:6:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10499:18:21",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10488:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "10488:30:21"
															},
															"nodeType": "YulIf",
															"src": "10485:56:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10550:33:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10566:1:21",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10569:6:21"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10562:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10562:14:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10578:4:21",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10558:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "10558:25:21"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "10550:4:21"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10455:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "10466:4:21",
														"type": ""
													}
												],
												"src": "10406:183:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10700:775:21",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10710:12:21",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10720:2:21",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "10714:2:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10767:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10776:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10779:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10769:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10769:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10769:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10742:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10751:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10738:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10738:23:21"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "10763:2:21"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10734:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "10734:32:21"
															},
															"nodeType": "YulIf",
															"src": "10731:52:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10792:30:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10812:9:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10806:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "10806:16:21"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "10796:6:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10865:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10874:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10877:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10867:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10867:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10867:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "10837:6:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10845:18:21",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10834:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "10834:30:21"
															},
															"nodeType": "YulIf",
															"src": "10831:50:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10890:32:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10904:9:21"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "10915:6:21"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10900:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "10900:22:21"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "10894:2:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10970:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10979:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10982:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10972:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10972:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10972:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "10949:2:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10953:4:21",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10945:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10945:13:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10960:7:21"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "10941:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10941:27:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10934:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "10934:35:21"
															},
															"nodeType": "YulIf",
															"src": "10931:55:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10995:19:21",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "11011:2:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11005:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "11005:9:21"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "10999:2:21",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11023:71:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "11090:2:21"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_uint256_dyn",
																			"nodeType": "YulIdentifier",
																			"src": "11050:39:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11050:43:21"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "11034:15:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "11034:60:21"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "11027:3:21",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11103:16:21",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "11116:3:21"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "11107:5:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "11135:3:21"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "11140:2:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11128:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "11128:15:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11128:15:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11152:19:21",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "11163:3:21"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "11168:2:21"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11159:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "11159:12:21"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "11152:3:21"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11180:42:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "11202:2:21"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11210:1:21",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "11213:2:21"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "11206:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11206:10:21"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11198:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11198:19:21"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "11219:2:21"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11194:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "11194:28:21"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "11184:6:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11254:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11263:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11266:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11256:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11256:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11256:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "11237:6:21"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "11245:7:21"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11234:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "11234:19:21"
															},
															"nodeType": "YulIf",
															"src": "11231:39:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11279:22:21",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "11294:2:21"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "11298:2:21"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11290:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "11290:11:21"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "11283:3:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11366:79:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "11387:3:21"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "11398:3:21"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "11392:5:21"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11392:10:21"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11380:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11380:23:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11380:23:21"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "11416:19:21",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "11427:3:21"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "11432:2:21"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "11423:3:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11423:12:21"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "11416:3:21"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "11321:3:21"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "11326:6:21"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "11318:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "11318:15:21"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "11334:23:21",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11336:19:21",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "11347:3:21"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "11352:2:21"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "11343:3:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11343:12:21"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "11336:3:21"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "11314:3:21",
																"statements": []
															},
															"src": "11310:135:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11454:15:21",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "11464:5:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "11454:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10666:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10677:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10689:6:21",
														"type": ""
													}
												],
												"src": "10594:881:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11581:76:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11591:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11603:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11614:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11599:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "11599:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11591:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11633:9:21"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11644:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11626:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "11626:25:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11626:25:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11550:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11561:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11572:4:21",
														"type": ""
													}
												],
												"src": "11480:177:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11787:850:21",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11797:12:21",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11807:2:21",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "11801:2:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11854:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11863:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11866:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11856:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11856:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11856:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11829:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11838:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11825:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11825:23:21"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "11850:2:21"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11821:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "11821:32:21"
															},
															"nodeType": "YulIf",
															"src": "11818:52:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11879:30:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11899:9:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11893:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "11893:16:21"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "11883:6:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11952:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11961:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11964:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11954:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11954:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11954:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "11924:6:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11932:18:21",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11921:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "11921:30:21"
															},
															"nodeType": "YulIf",
															"src": "11918:50:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11977:32:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11991:9:21"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "12002:6:21"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11987:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "11987:22:21"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "11981:2:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12057:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12066:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12069:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12059:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12059:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12059:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "12036:2:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12040:4:21",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12032:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12032:13:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12047:7:21"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "12028:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12028:27:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12021:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "12021:35:21"
															},
															"nodeType": "YulIf",
															"src": "12018:55:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12082:19:21",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "12098:2:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12092:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "12092:9:21"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "12086:2:21",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12110:71:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "12177:2:21"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_uint256_dyn",
																			"nodeType": "YulIdentifier",
																			"src": "12137:39:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12137:43:21"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "12121:15:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "12121:60:21"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "12114:3:21",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12190:16:21",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "12203:3:21"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "12194:5:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "12222:3:21"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "12227:2:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12215:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "12215:15:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12215:15:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12239:19:21",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "12250:3:21"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "12255:2:21"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12246:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "12246:12:21"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "12239:3:21"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12267:42:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "12289:2:21"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12297:1:21",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "12300:2:21"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "12293:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12293:10:21"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12285:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12285:19:21"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "12306:2:21"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12281:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "12281:28:21"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "12271:6:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12341:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12350:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12353:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12343:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12343:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12343:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "12324:6:21"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "12332:7:21"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12321:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "12321:19:21"
															},
															"nodeType": "YulIf",
															"src": "12318:39:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12366:22:21",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "12381:2:21"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "12385:2:21"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12377:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "12377:11:21"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "12370:3:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12453:154:21",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "12467:23:21",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "12486:3:21"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "12480:5:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12480:10:21"
																		},
																		"variables": [
																			{
																				"name": "value",
																				"nodeType": "YulTypedName",
																				"src": "12471:5:21",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "12528:5:21"
																				}
																			],
																			"functionName": {
																				"name": "validator_revert_address",
																				"nodeType": "YulIdentifier",
																				"src": "12503:24:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12503:31:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12503:31:21"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "12554:3:21"
																				},
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "12559:5:21"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12547:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12547:18:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12547:18:21"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "12578:19:21",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "12589:3:21"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "12594:2:21"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "12585:3:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12585:12:21"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "12578:3:21"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "12408:3:21"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "12413:6:21"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "12405:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "12405:15:21"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "12421:23:21",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "12423:19:21",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "12434:3:21"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "12439:2:21"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "12430:3:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12430:12:21"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "12423:3:21"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "12401:3:21",
																"statements": []
															},
															"src": "12397:210:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12616:15:21",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "12626:5:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "12616:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_contract$_IClaimIssuer_$59_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11753:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11764:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11776:6:21",
														"type": ""
													}
												],
												"src": "11662:975:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12790:145:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12800:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12812:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12823:2:21",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12808:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "12808:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12800:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12842:9:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "12857:6:21"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "12873:3:21",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "12878:1:21",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "12869:3:21"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12869:11:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12882:1:21",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "12865:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12865:19:21"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12853:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12853:32:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12835:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "12835:51:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12835:51:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12906:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12917:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12902:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12902:18:21"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12922:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12895:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "12895:34:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12895:34:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IClaimIssuer_$59_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12751:9:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12762:6:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12770:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12781:4:21",
														"type": ""
													}
												],
												"src": "12642:293:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13006:184:21",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13016:10:21",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "13025:1:21",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "13020:1:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13085:63:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "13110:3:21"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "13115:1:21"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "13106:3:21"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13106:11:21"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "13129:3:21"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "13134:1:21"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "13125:3:21"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "13125:11:21"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "13119:5:21"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13119:18:21"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "13099:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13099:39:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13099:39:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "13046:1:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13049:6:21"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "13043:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "13043:13:21"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "13057:19:21",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "13059:15:21",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "13068:1:21"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13071:2:21",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "13064:3:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13064:10:21"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "13059:1:21"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "13039:3:21",
																"statements": []
															},
															"src": "13035:113:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "13168:3:21"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "13173:6:21"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13164:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13164:16:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13182:1:21",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13157:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "13157:27:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13157:27:21"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "12984:3:21",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "12989:3:21",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12994:6:21",
														"type": ""
													}
												],
												"src": "12940:250:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13280:305:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13324:22:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "13326:16:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13326:18:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13326:18:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13296:6:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13304:18:21",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13293:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "13293:30:21"
															},
															"nodeType": "YulIf",
															"src": "13290:56:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13355:66:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "13392:6:21"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "13400:2:21",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "13388:3:21"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13388:15:21"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "13409:2:21",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "13405:3:21"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13405:7:21"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "13384:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13384:29:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13415:4:21",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13380:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13380:40:21"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "13364:15:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "13364:57:21"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "13355:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "13437:5:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13444:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13430:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "13430:21:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13430:21:21"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13489:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13498:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13501:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13491:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13491:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13491:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "13470:3:21"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "13475:6:21"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13466:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13466:16:21"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "13484:3:21"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13463:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "13463:25:21"
															},
															"nodeType": "YulIf",
															"src": "13460:45:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "13549:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "array",
																				"nodeType": "YulIdentifier",
																				"src": "13558:5:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13565:4:21",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13554:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13554:16:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13572:6:21"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "13514:34:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "13514:65:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13514:65:21"
														}
													]
												},
												"name": "abi_decode_available_length_bytes_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "13249:3:21",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13254:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13262:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "13270:5:21",
														"type": ""
													}
												],
												"src": "13195:390:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13653:172:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13702:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13711:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13714:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13704:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13704:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13704:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "13681:6:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13689:4:21",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13677:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13677:17:21"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "13696:3:21"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "13673:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13673:27:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13666:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "13666:35:21"
															},
															"nodeType": "YulIf",
															"src": "13663:55:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13727:92:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "13785:6:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13793:4:21",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13781:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13781:17:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "13806:6:21"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "13800:5:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13800:13:21"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "13815:3:21"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_bytes_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "13736:44:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "13736:83:21"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "13727:5:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "13627:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13635:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "13643:5:21",
														"type": ""
													}
												],
												"src": "13590:235:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14024:942:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14071:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14080:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14083:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14073:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14073:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14073:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14045:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14054:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14041:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14041:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14066:3:21",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "14037:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "14037:33:21"
															},
															"nodeType": "YulIf",
															"src": "14034:53:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14096:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14112:9:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14106:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "14106:16:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "14096:6:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14131:35:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14151:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14162:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14147:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14147:18:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14141:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "14141:25:21"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "14131:6:21"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14175:38:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14198:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14209:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14194:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14194:18:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14188:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "14188:25:21"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "14179:5:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14247:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "14222:24:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "14222:31:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14222:31:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14262:15:21",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "14272:5:21"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "14262:6:21"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14286:39:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14310:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14321:2:21",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14306:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14306:18:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14300:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "14300:25:21"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "14290:6:21",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14334:28:21",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "14344:18:21",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "14338:2:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14389:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14398:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14401:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14391:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14391:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14391:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "14377:6:21"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "14385:2:21"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14374:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "14374:14:21"
															},
															"nodeType": "YulIf",
															"src": "14371:34:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14414:70:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14456:9:21"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "14467:6:21"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14452:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14452:22:21"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "14476:7:21"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "14424:27:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "14424:60:21"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "14414:6:21"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14493:42:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14519:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14530:3:21",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14515:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14515:19:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14509:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "14509:26:21"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "14497:8:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14564:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14573:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14576:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14566:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14566:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14566:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "14550:8:21"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "14560:2:21"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14547:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "14547:16:21"
															},
															"nodeType": "YulIf",
															"src": "14544:36:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14589:72:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14631:9:21"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "14642:8:21"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14627:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14627:24:21"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "14653:7:21"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "14599:27:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "14599:62:21"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "14589:6:21"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14670:42:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14696:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14707:3:21",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14692:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14692:19:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14686:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "14686:26:21"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "14674:8:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14741:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14750:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14753:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14743:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14743:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14743:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "14727:8:21"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "14737:2:21"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14724:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "14724:16:21"
															},
															"nodeType": "YulIf",
															"src": "14721:36:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14766:34:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14780:9:21"
																	},
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "14791:8:21"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14776:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "14776:24:21"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "14770:2:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14848:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14857:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14860:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14850:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14850:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14850:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "14827:2:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14831:4:21",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14823:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14823:13:21"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14838:7:21"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "14819:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14819:27:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14812:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "14812:35:21"
															},
															"nodeType": "YulIf",
															"src": "14809:55:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14873:87:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "14932:2:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14936:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14928:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14928:11:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "14947:2:21"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "14941:5:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14941:9:21"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "14952:7:21"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_bytes_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "14883:44:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "14883:77:21"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "14873:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_addresst_bytes_memory_ptrt_bytes_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13950:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "13961:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13973:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13981:6:21",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "13989:6:21",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "13997:6:21",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "14005:6:21",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "14013:6:21",
														"type": ""
													}
												],
												"src": "13830:1136:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15020:221:21",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15030:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15050:5:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15044:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "15044:12:21"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "15034:6:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15072:3:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15077:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15065:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "15065:19:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15065:19:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15132:5:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15139:4:21",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15128:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15128:16:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "15150:3:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15155:4:21",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15146:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15146:14:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15162:6:21"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "15093:34:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "15093:76:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15093:76:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15178:57:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "15193:3:21"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "15206:6:21"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "15214:2:21",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "15202:3:21"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15202:15:21"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "15223:2:21",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "15219:3:21"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15219:7:21"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "15198:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15198:29:21"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15189:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15189:39:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15230:4:21",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15185:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "15185:50:21"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15178:3:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14997:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15004:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15012:3:21",
														"type": ""
													}
												],
												"src": "14971:270:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15484:326:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15501:9:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "15516:6:21"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "15532:3:21",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "15537:1:21",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "15528:3:21"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15528:11:21"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15541:1:21",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "15524:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15524:19:21"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "15512:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15512:32:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15494:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "15494:51:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15494:51:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15565:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15576:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15561:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15561:18:21"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "15581:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15554:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "15554:34:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15554:34:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15608:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15619:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15604:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15604:18:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15624:3:21",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15597:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "15597:31:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15597:31:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15637:59:21",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "15668:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15680:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15691:3:21",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15676:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15676:19:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "15651:16:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "15651:45:21"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "15641:6:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15716:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15727:2:21",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15712:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15712:18:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "15736:6:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15744:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15732:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15732:22:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15705:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "15705:50:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15705:50:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15764:40:21",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "15789:6:21"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "15797:6:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "15772:16:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "15772:32:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15764:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IIdentity_$323_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_address_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15429:9:21",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "15440:6:21",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15448:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15456:6:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15464:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15475:4:21",
														"type": ""
													}
												],
												"src": "15246:564:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15893:199:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15939:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15948:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15951:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15941:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15941:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15941:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15914:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15923:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15910:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15910:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15935:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "15906:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "15906:32:21"
															},
															"nodeType": "YulIf",
															"src": "15903:52:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15964:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15983:9:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15977:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "15977:16:21"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "15968:5:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16046:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16055:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16058:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "16048:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16048:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16048:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16015:5:21"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "16036:5:21"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "16029:6:21"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16029:13:21"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "16022:6:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16022:21:21"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "16012:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16012:32:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16005:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "16005:40:21"
															},
															"nodeType": "YulIf",
															"src": "16002:60:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16071:15:21",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "16081:5:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "16071:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15859:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "15870:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15882:6:21",
														"type": ""
													}
												],
												"src": "15815:277:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16146:79:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16156:17:21",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16168:1:21"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16171:1:21"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "16164:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "16164:9:21"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "16156:4:21"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16197:22:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "16199:16:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16199:18:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16199:18:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "16188:4:21"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16194:1:21"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "16185:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "16185:11:21"
															},
															"nodeType": "YulIf",
															"src": "16182:37:21"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "16128:1:21",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "16131:1:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "16137:4:21",
														"type": ""
													}
												],
												"src": "16097:128:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16328:170:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16374:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16383:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16386:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "16376:6:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16376:12:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16376:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16349:7:21"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16358:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16345:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16345:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16370:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "16341:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "16341:32:21"
															},
															"nodeType": "YulIf",
															"src": "16338:52:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16399:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16418:9:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16412:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "16412:16:21"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "16403:5:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16462:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "16437:24:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "16437:31:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16437:31:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16477:15:21",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "16487:5:21"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "16477:6:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IIdentity_$323_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16294:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "16305:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16317:6:21",
														"type": ""
													}
												],
												"src": "16230:268:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16677:228:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16694:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16705:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16687:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "16687:21:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16687:21:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16728:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16739:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16724:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16724:18:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16744:2:21",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16717:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "16717:30:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16717:30:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16767:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16778:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16763:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16763:18:21"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16783:34:21",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16756:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "16756:62:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16756:62:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16838:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16849:2:21",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16834:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16834:18:21"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16854:8:21",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16827:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "16827:36:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16827:36:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16872:27:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16884:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16895:3:21",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16880:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "16880:19:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16872:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16654:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16668:4:21",
														"type": ""
													}
												],
												"src": "16503:402:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17084:233:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17101:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17112:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17094:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "17094:21:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17094:21:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17135:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17146:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17131:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17131:18:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17151:2:21",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17124:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "17124:30:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17124:30:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17174:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17185:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17170:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17170:18:21"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17190:34:21",
																		"type": "",
																		"value": "Initializable: contract is not i"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17163:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "17163:62:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17163:62:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17245:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17256:2:21",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17241:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17241:18:21"
																	},
																	{
																		"hexValue": "6e697469616c697a696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17261:13:21",
																		"type": "",
																		"value": "nitializing"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17234:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "17234:41:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17234:41:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17284:27:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17296:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17307:3:21",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17292:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "17292:19:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17284:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17061:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17075:4:21",
														"type": ""
													}
												],
												"src": "16910:407:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17496:182:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17513:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17524:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17506:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "17506:21:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17506:21:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17547:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17558:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17543:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17543:18:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17563:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17536:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "17536:30:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17536:30:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17586:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17597:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17582:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17582:18:21"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17602:34:21",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17575:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "17575:62:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17575:62:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17646:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17658:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17669:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17654:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "17654:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17646:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17473:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17487:4:21",
														"type": ""
													}
												],
												"src": "17322:356:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18072:423:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18089:3:21"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18094:25:21",
																		"type": "",
																		"value": "AccessControl: account "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18082:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "18082:38:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18082:38:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18129:27:21",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "18149:6:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "18143:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "18143:13:21"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "18133:6:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "18204:6:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18212:4:21",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18200:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18200:17:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "18223:3:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18228:2:21",
																				"type": "",
																				"value": "23"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18219:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18219:12:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "18233:6:21"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "18165:34:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "18165:75:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18165:75:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18249:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18263:3:21"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "18268:6:21"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18259:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "18259:16:21"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "18253:2:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "18295:2:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18299:2:21",
																				"type": "",
																				"value": "23"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18291:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18291:11:21"
																	},
																	{
																		"hexValue": "206973206d697373696e6720726f6c6520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18304:19:21",
																		"type": "",
																		"value": " is missing role "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18284:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "18284:40:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18284:40:21"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18333:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "18355:6:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "18349:5:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "18349:13:21"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "18337:8:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "18410:6:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18418:4:21",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18406:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18406:17:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "18429:2:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18433:2:21",
																				"type": "",
																				"value": "40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18425:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18425:11:21"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "18438:8:21"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "18371:34:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "18371:76:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18371:76:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18456:33:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "18471:2:21"
																			},
																			{
																				"name": "length_1",
																				"nodeType": "YulIdentifier",
																				"src": "18475:8:21"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18467:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18467:17:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18486:2:21",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18463:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "18463:26:21"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18456:3:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18040:3:21",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "18045:6:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18053:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18064:3:21",
														"type": ""
													}
												],
												"src": "17683:812:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18621:98:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18638:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18649:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18631:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "18631:21:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18631:21:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18661:52:21",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "18686:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18698:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18709:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18694:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18694:18:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "18669:16:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "18669:44:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18661:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18590:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18601:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18612:4:21",
														"type": ""
													}
												],
												"src": "18500:219:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18776:116:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18786:20:21",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18801:1:21"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18804:1:21"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "18797:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "18797:9:21"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "18786:7:21"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18864:22:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "18866:16:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18866:18:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18866:18:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "18835:1:21"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "18828:6:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18828:9:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "18842:1:21"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "18849:7:21"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "18858:1:21"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "18845:3:21"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "18845:15:21"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "18839:2:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18839:22:21"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "18825:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18825:37:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18818:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "18818:45:21"
															},
															"nodeType": "YulIf",
															"src": "18815:71:21"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "18755:1:21",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "18758:1:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "18764:7:21",
														"type": ""
													}
												],
												"src": "18724:168:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18945:77:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18955:16:21",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18966:1:21"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18969:1:21"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18962:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "18962:9:21"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "18955:3:21"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18994:22:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "18996:16:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18996:18:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18996:18:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18986:1:21"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "18989:3:21"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "18983:2:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "18983:10:21"
															},
															"nodeType": "YulIf",
															"src": "18980:36:21"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "18928:1:21",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "18931:1:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "18937:3:21",
														"type": ""
													}
												],
												"src": "18897:125:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19074:89:21",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19101:22:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "19103:16:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19103:18:21"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19103:18:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19094:5:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19087:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "19087:13:21"
															},
															"nodeType": "YulIf",
															"src": "19084:39:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19132:25:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19143:5:21"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19154:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "19150:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19150:6:21"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19139:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "19139:18:21"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "19132:3:21"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19056:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "19066:3:21",
														"type": ""
													}
												],
												"src": "19027:136:21"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19342:182:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19359:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19370:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19352:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "19352:21:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19352:21:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19393:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19404:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19389:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19389:18:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19409:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19382:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "19382:30:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19382:30:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19432:9:21"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19443:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19428:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19428:18:21"
																	},
																	{
																		"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19448:34:21",
																		"type": "",
																		"value": "Strings: hex length insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19421:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "19421:62:21"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19421:62:21"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19492:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19504:9:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19515:2:21",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19500:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "19500:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19492:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19319:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19333:4:21",
														"type": ""
													}
												],
												"src": "19168:356:21"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function validator_revert_uint16(value)\n    {\n        if iszero(eq(value, and(value, 0xffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint16(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_uint16(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_contract$_IClaimTopicsRegistry_$3331__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_contract$_IIdentity_$323t_uint16(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_uint16(value_2)\n        value2 := value_2\n    }\n    function abi_decode_array_address_dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_contract$_IIdentity_$323_$dyn_calldata_ptrt_array$_t_uint16_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset_1), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n        let offset_2 := calldataload(add(headStart, 64))\n        if gt(offset_2, _1) { revert(0, 0) }\n        let value4_1, value5_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset_2), dataEnd)\n        value4 := value4_1\n        value5 := value5_1\n    }\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffff))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_contract$_IIdentity_$323(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_contract$_ITrustedIssuersRegistry_$3676__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IIdentity_$323__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IIdentityRegistryStorage_$3586__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"invalid argument - zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_uint16__to_t_address_t_uint16__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, 0xffff))\n    }\n    function abi_encode_tuple_t_address_t_contract$_IIdentity_$323_t_uint16__to_t_address_t_address_t_uint16__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, 0xffff))\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_contract$_IIdentity_$323(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint16(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_uint16(value)\n        value0 := value\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_decode_tuple_t_uint16_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_uint16(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_contract$_IIdentity_$323__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_uint256_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := mload(_2)\n        let dst := allocate_memory(array_allocation_size_array_uint256_dyn(_3))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _1)\n        let srcEnd := add(add(_2, shl(5, _3)), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            mstore(dst, mload(src))\n            dst := add(dst, _1)\n        }\n        value0 := dst_1\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_array$_t_contract$_IClaimIssuer_$59_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := mload(_2)\n        let dst := allocate_memory(array_allocation_size_array_uint256_dyn(_3))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _1)\n        let srcEnd := add(add(_2, shl(5, _3)), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            let value := mload(src)\n            validator_revert_address(value)\n            mstore(dst, value)\n            dst := add(dst, _1)\n        }\n        value0 := dst_1\n    }\n    function abi_encode_tuple_t_contract$_IClaimIssuer_$59_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_decode_available_length_bytes_fromMemory(src, length, end) -> array\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        array := allocate_memory(add(and(add(length, 31), not(31)), 0x20))\n        mstore(array, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_memory_to_memory_with_cleanup(src, add(array, 0x20), length)\n    }\n    function abi_decode_bytes_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        array := abi_decode_available_length_bytes_fromMemory(add(offset, 0x20), mload(offset), end)\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_addresst_bytes_memory_ptrt_bytes_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n        let value := mload(add(headStart, 64))\n        validator_revert_address(value)\n        value2 := value\n        let offset := mload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value3 := abi_decode_bytes_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 128))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes_fromMemory(add(headStart, offset_1), dataEnd)\n        let offset_2 := mload(add(headStart, 160))\n        if gt(offset_2, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset_2)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        value5 := abi_decode_available_length_bytes_fromMemory(add(_2, 32), mload(_2), dataEnd)\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_contract$_IIdentity_$323_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_address_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 128)\n        let tail_1 := abi_encode_bytes(value2, add(headStart, 128))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        tail := abi_encode_bytes(value3, tail_1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_decode_tuple_t_contract$_IIdentity_$323_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Initializable: contract is not i\")\n        mstore(add(headStart, 96), \"nitializing\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 21,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101c45760003560e01c80637e42683b116100f9578063b9209e3311610097578063e744d78911610071578063e744d789146103d5578063f0eb5e54146103e8578063f11abfd8146103fb578063f2fde38b1461040c57600080fd5b8063b9209e331461039a578063d547741f146103ad578063e58378bb146103c057600080fd5b806391d14854116100d357806391d148541461035b578063a217fddf1461036e578063a8d29d1d14610376578063b4f3fcb71461038957600080fd5b80637e42683b146103115780638da5cb5b146103375780638e098ca11461034857600080fd5b80633b239a7f116101665780635dbe47e8116101405780635dbe47e8146102d0578063653dc9f1146102e3578063670af6a9146102f6578063715018a61461030957600080fd5b80633b239a7f146102855780633b3e12f414610298578063454a03e0146102bd57600080fd5b8063248a9ca3116101a2578063248a9ca31461022957806326d941ae1461024c5780632f2ff15d1461025f57806336568abe1461027257600080fd5b806301ffc9a7146101c9578063184b9559146101f157806322459e1814610206575b600080fd5b6101dc6101d73660046116ba565b61041f565b60405190151581526020015b60405180910390f35b6102046101ff3660046116f9565b610456565b005b61021b600080516020611e8c83398151915281565b6040519081526020016101e8565b61021b610237366004611744565b60009081526065602052604090206001015490565b61020461025a36600461175d565b6106bb565b61020461026d36600461177a565b61071e565b61020461028036600461177a565b610748565b6102046102933660046117ba565b6107c6565b60c9546001600160a01b03165b6040516001600160a01b0390911681526020016101e8565b6102046102cb3660046117e8565b610886565b6101dc6102de36600461175d565b61094d565b6102046102f1366004611874565b610977565b61020461030436600461175d565b610a15565b610204610a78565b61032461031f36600461175d565b610a8c565b60405161ffff90911681526020016101e8565b6097546001600160a01b03166102a5565b61020461035636600461190e565b610afb565b6101dc61036936600461177a565b610bc5565b61021b600081565b61020461038436600461175d565b610bf0565b60ca546001600160a01b03166102a5565b6101dc6103a836600461175d565b610cb1565b6102046103bb36600461177a565b61113a565b61021b600080516020611e6c83398151915281565b6102046103e336600461175d565b61115f565b6102a56103f636600461175d565b6111c2565b60cb546001600160a01b03166102a5565b61020461041a36600461175d565b611231565b60006001600160e01b03198216637965db0b60e01b148061045057506301ffc9a760e01b6001600160e01b03198316145b92915050565b600054610100900460ff16158080156104765750600054600160ff909116105b806104905750303b158015610490575060005460ff166001145b6104f85760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff19166001179055801561051b576000805461ff0019166101001790555b6001600160a01b0384161580159061053b57506001600160a01b03831615155b801561054f57506001600160a01b03821615155b61059b5760405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d207a65726f20616464726573730060448201526064016104ef565b60c980546001600160a01b038086166001600160a01b0319928316811790935560ca805488831690841617905560cb8054918616919092161790556040517f7170bf15b246e880b2369cd7c67d057760d8a35149e8c64dde91efa22bcc76d090600090a26040516001600160a01b038516907f1b98cb79e6f73020175fe87333f1b91ad6a881519c0afe30340c2599b2b4bde090600090a26040516001600160a01b038316907f2fa8b95c1db7afe99e3398f3792f008135cedc1fa26b0bb2ecd2352cd166d53c90600090a261066f6112aa565b80156106b5576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b600080516020611e6c8339815191526106d3816112d9565b60cb80546001600160a01b0319166001600160a01b0384169081179091556040517f2fa8b95c1db7afe99e3398f3792f008135cedc1fa26b0bb2ecd2352cd166d53c90600090a25050565b600082815260656020526040902060010154610739816112d9565b61074383836112e3565b505050565b6001600160a01b03811633146107b85760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084016104ef565b6107c28282611369565b5050565b600080516020611e8c8339815191526107de816112d9565b60cb54604051639f3418d560e01b81526001600160a01b03858116600483015261ffff8516602483015290911690639f3418d590604401600060405180830381600087803b15801561082f57600080fd5b505af1158015610843573d6000803e3d6000fd5b505060405161ffff851692506001600160a01b03861691507f04ed3b726495c2dca1ff1215d9ca54e1a4030abb5e82b0f6ce55702416cee85390600090a3505050565b600080516020611e8c83398151915261089e816112d9565b60cb5460405163a53410dd60e01b81526001600160a01b038681166004830152858116602483015261ffff851660448301529091169063a53410dd90606401600060405180830381600087803b1580156108f757600080fd5b505af115801561090b573d6000803e3d6000fd5b50506040516001600160a01b038087169350871691507f6ae73635c50d24a45af6fbd5e016ac4bed179addbc8bf24e04ff0fcc6d33af1990600090a350505050565b600080610959836111c2565b6001600160a01b03160361096f57506000919050565b506001919050565b60005b85811015610a0c576109fa8787838181106109975761099761193c565b90506020020160208101906109ac919061175d565b8686848181106109be576109be61193c565b90506020020160208101906109d3919061175d565b8585858181106109e5576109e561193c565b90506020020160208101906102cb9190611952565b80610a0481611985565b91505061097a565b50505050505050565b600080516020611e6c833981519152610a2d816112d9565b60c980546001600160a01b0319166001600160a01b0384169081179091556040517f7170bf15b246e880b2369cd7c67d057760d8a35149e8c64dde91efa22bcc76d090600090a25050565b610a806113d0565b610a8a600061142a565b565b60cb54604051631c9f84ef60e21b81526001600160a01b038381166004830152600092169063727e13bc90602401602060405180830381865afa158015610ad7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610450919061199e565b600080516020611e8c833981519152610b13816112d9565b6000610b1e846111c2565b60cb54604051637402e7c360e11b81526001600160a01b038781166004830152868116602483015292935091169063e805cf8690604401600060405180830381600087803b158015610b6f57600080fd5b505af1158015610b83573d6000803e3d6000fd5b50506040516001600160a01b038087169350841691507fe98082932c8056a0f514da9104e4a66bc2cbaef102ad59d90c4b24220ebf601090600090a350505050565b60009182526065602090815260408084206001600160a01b0393909316845291905290205460ff1690565b600080516020611e8c833981519152610c08816112d9565b6000610c13836111c2565b60cb5460405163cf191bcd60e01b81526001600160a01b03868116600483015292935091169063cf191bcd90602401600060405180830381600087803b158015610c5c57600080fd5b505af1158015610c70573d6000803e3d6000fd5b50506040516001600160a01b038085169350861691507f59d6590e225b81befe259af056324092801080acbb7feab310eb34678871f32790600090a3505050565b600080610cbd836111c2565b6001600160a01b031603610cd357506000919050565b60c954604080516337c2758160e21b815290516000926001600160a01b03169163df09d60491600480830192869291908290030181865afa158015610d1c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d449190810190611a26565b90508051600003610d585750600192915050565b600080600060608060005b865181101561112b5760ca5487516000916001600160a01b0316906352c111d1908a9085908110610d9657610d9661193c565b60200260200101516040518263ffffffff1660e01b8152600401610dbc91815260200190565b600060405180830381865afa158015610dd9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e019190810190611abc565b90508051600003610e1c575060009998505050505050505050565b6000815167ffffffffffffffff811115610e3857610e386119bb565b604051908082528060200260200182016040528015610e61578160200160208202803683370190505b50905060005b8251811015610f0e57828181518110610e8257610e8261193c565b60200260200101518a8581518110610e9c57610e9c61193c565b6020026020010151604051602001610ec99291906001600160a01b03929092168252602082015260400190565b60405160208183030381529060405280519060200120828281518110610ef157610ef161193c565b602090810291909101015280610f0681611985565b915050610e67565b5060005b815181101561111557610f248c6111c2565b6001600160a01b031663c9100bcb838381518110610f4457610f4461193c565b60200260200101516040518263ffffffff1660e01b8152600401610f6a91815260200190565b600060405180830381865afa158015610f87573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610faf9190810190611bde565b508e51949d50929b50909950975095508a9085908110610fd157610fd161193c565b602002602001015189036110dd57866001600160a01b031663c0969a6e610ff78e6111c2565b8c87815181106110095761100961193c565b602002602001015189896040518563ffffffff1660e01b81526004016110329493929190611ccc565b602060405180830381865afa92505050801561106b575060408051601f3d908101601f1916820190925261106891810190611d05565b60015b61109a576001825161107d9190611d27565b8103611095575060009b9a5050505050505050505050565b611103565b80156110a557825191505b801580156110bf5750600183516110bc9190611d27565b82145b156110d7575060009c9b505050505050505050505050565b50611103565b600182516110eb9190611d27565b8103611103575060009b9a5050505050505050505050565b8061110d81611985565b915050610f12565b505050808061112390611985565b915050610d63565b50600198975050505050505050565b600082815260656020526040902060010154611155816112d9565b6107438383611369565b600080516020611e6c833981519152611177816112d9565b60ca80546001600160a01b0319166001600160a01b0384169081179091556040517f1b98cb79e6f73020175fe87333f1b91ad6a881519c0afe30340c2599b2b4bde090600090a25050565b60cb54604051637988d3a560e01b81526001600160a01b0383811660048301526000921690637988d3a590602401602060405180830381865afa15801561120d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104509190611d3a565b6112396113d0565b6001600160a01b03811661129e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104ef565b6112a78161142a565b50565b600054610100900460ff166112d15760405162461bcd60e51b81526004016104ef90611d57565b610a8a61147c565b6112a781336114ac565b6112ed8282610bc5565b6107c25760008281526065602090815260408083206001600160a01b03851684529091529020805460ff191660011790556113253390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6113738282610bc5565b156107c25760008281526065602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6097546001600160a01b03163314610a8a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104ef565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166114a35760405162461bcd60e51b81526004016104ef90611d57565b610a8a3361142a565b6114b68282610bc5565b6107c2576114c381611505565b6114ce836020611517565b6040516020016114df929190611da2565b60408051601f198184030181529082905262461bcd60e51b82526104ef91600401611e17565b60606104506001600160a01b03831660145b60606000611526836002611e2a565b611531906002611e41565b67ffffffffffffffff811115611549576115496119bb565b6040519080825280601f01601f191660200182016040528015611573576020820181803683370190505b509050600360fc1b8160008151811061158e5761158e61193c565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106115bd576115bd61193c565b60200101906001600160f81b031916908160001a90535060006115e1846002611e2a565b6115ec906001611e41565b90505b6001811115611664576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106116205761162061193c565b1a60f81b8282815181106116365761163661193c565b60200101906001600160f81b031916908160001a90535060049490941c9361165d81611e54565b90506115ef565b5083156116b35760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016104ef565b9392505050565b6000602082840312156116cc57600080fd5b81356001600160e01b0319811681146116b357600080fd5b6001600160a01b03811681146112a757600080fd5b60008060006060848603121561170e57600080fd5b8335611719816116e4565b92506020840135611729816116e4565b91506040840135611739816116e4565b809150509250925092565b60006020828403121561175657600080fd5b5035919050565b60006020828403121561176f57600080fd5b81356116b3816116e4565b6000806040838503121561178d57600080fd5b82359150602083013561179f816116e4565b809150509250929050565b61ffff811681146112a757600080fd5b600080604083850312156117cd57600080fd5b82356117d8816116e4565b9150602083013561179f816117aa565b6000806000606084860312156117fd57600080fd5b8335611808816116e4565b92506020840135611818816116e4565b91506040840135611739816117aa565b60008083601f84011261183a57600080fd5b50813567ffffffffffffffff81111561185257600080fd5b6020830191508360208260051b850101111561186d57600080fd5b9250929050565b6000806000806000806060878903121561188d57600080fd5b863567ffffffffffffffff808211156118a557600080fd5b6118b18a838b01611828565b909850965060208901359150808211156118ca57600080fd5b6118d68a838b01611828565b909650945060408901359150808211156118ef57600080fd5b506118fc89828a01611828565b979a9699509497509295939492505050565b6000806040838503121561192157600080fd5b823561192c816116e4565b9150602083013561179f816116e4565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561196457600080fd5b81356116b3816117aa565b634e487b7160e01b600052601160045260246000fd5b6000600182016119975761199761196f565b5060010190565b6000602082840312156119b057600080fd5b81516116b3816117aa565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156119fa576119fa6119bb565b604052919050565b600067ffffffffffffffff821115611a1c57611a1c6119bb565b5060051b60200190565b60006020808385031215611a3957600080fd5b825167ffffffffffffffff811115611a5057600080fd5b8301601f81018513611a6157600080fd5b8051611a74611a6f82611a02565b6119d1565b81815260059190911b82018301908381019087831115611a9357600080fd5b928401925b82841015611ab157835182529284019290840190611a98565b979650505050505050565b60006020808385031215611acf57600080fd5b825167ffffffffffffffff811115611ae657600080fd5b8301601f81018513611af757600080fd5b8051611b05611a6f82611a02565b81815260059190911b82018301908381019087831115611b2457600080fd5b928401925b82841015611ab1578351611b3c816116e4565b82529284019290840190611b29565b60005b83811015611b66578181015183820152602001611b4e565b50506000910152565b600067ffffffffffffffff831115611b8957611b896119bb565b611b9c601f8401601f19166020016119d1565b9050828152838383011115611bb057600080fd5b6116b3836020830184611b4b565b600082601f830112611bcf57600080fd5b6116b383835160208501611b6f565b60008060008060008060c08789031215611bf757600080fd5b86519550602087015194506040870151611c10816116e4565b606088015190945067ffffffffffffffff80821115611c2e57600080fd5b611c3a8a838b01611bbe565b94506080890151915080821115611c5057600080fd5b611c5c8a838b01611bbe565b935060a0890151915080821115611c7257600080fd5b508701601f81018913611c8457600080fd5b611c9389825160208401611b6f565b9150509295509295509295565b60008151808452611cb8816020860160208601611b4b565b601f01601f19169290920160200192915050565b60018060a01b0385168152836020820152608060408201526000611cf36080830185611ca0565b8281036060840152611ab18185611ca0565b600060208284031215611d1757600080fd5b815180151581146116b357600080fd5b818103818111156104505761045061196f565b600060208284031215611d4c57600080fd5b81516116b3816116e4565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611dda816017850160208801611b4b565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611e0b816028840160208801611b4b565b01602801949350505050565b6020815260006116b36020830184611ca0565b80820281158282048414176104505761045061196f565b808201808211156104505761045061196f565b600081611e6357611e6361196f565b50600019019056feb19546dff01e856fb3f010c267a7b1c60363cf8a4664e21cc89c26224620214ecab5a0bfe0b79d2c4b1c2e02599fa044d115b7511f9659307cb4276950967709a2646970667358221220e7a0b492083a7c3c8cdad88cf24513c6b5e8f4102c08e53ff65524bd979c216064736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7E42683B GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xB9209E33 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE744D789 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE744D789 EQ PUSH2 0x3D5 JUMPI DUP1 PUSH4 0xF0EB5E54 EQ PUSH2 0x3E8 JUMPI DUP1 PUSH4 0xF11ABFD8 EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x40C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB9209E33 EQ PUSH2 0x39A JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0xE58378BB EQ PUSH2 0x3C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x91D14854 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x36E JUMPI DUP1 PUSH4 0xA8D29D1D EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0xB4F3FCB7 EQ PUSH2 0x389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7E42683B EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0x8E098CA1 EQ PUSH2 0x348 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3B239A7F GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x5DBE47E8 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x5DBE47E8 EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0x653DC9F1 EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0x670AF6A9 EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x309 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3B239A7F EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x3B3E12F4 EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0x454A03E0 EQ PUSH2 0x2BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x26D941AE EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x184B9559 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0x22459E18 EQ PUSH2 0x206 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x16BA JUMP JUMPDEST PUSH2 0x41F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x204 PUSH2 0x1FF CALLDATASIZE PUSH1 0x4 PUSH2 0x16F9 JUMP JUMPDEST PUSH2 0x456 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21B PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E8C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E8 JUMP JUMPDEST PUSH2 0x21B PUSH2 0x237 CALLDATASIZE PUSH1 0x4 PUSH2 0x1744 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x25A CALLDATASIZE PUSH1 0x4 PUSH2 0x175D JUMP JUMPDEST PUSH2 0x6BB JUMP JUMPDEST PUSH2 0x204 PUSH2 0x26D CALLDATASIZE PUSH1 0x4 PUSH2 0x177A JUMP JUMPDEST PUSH2 0x71E JUMP JUMPDEST PUSH2 0x204 PUSH2 0x280 CALLDATASIZE PUSH1 0x4 PUSH2 0x177A JUMP JUMPDEST PUSH2 0x748 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x293 CALLDATASIZE PUSH1 0x4 PUSH2 0x17BA JUMP JUMPDEST PUSH2 0x7C6 JUMP JUMPDEST PUSH1 0xC9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E8 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x2CB CALLDATASIZE PUSH1 0x4 PUSH2 0x17E8 JUMP JUMPDEST PUSH2 0x886 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x2DE CALLDATASIZE PUSH1 0x4 PUSH2 0x175D JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH2 0x204 PUSH2 0x2F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1874 JUMP JUMPDEST PUSH2 0x977 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x304 CALLDATASIZE PUSH1 0x4 PUSH2 0x175D JUMP JUMPDEST PUSH2 0xA15 JUMP JUMPDEST PUSH2 0x204 PUSH2 0xA78 JUMP JUMPDEST PUSH2 0x324 PUSH2 0x31F CALLDATASIZE PUSH1 0x4 PUSH2 0x175D JUMP JUMPDEST PUSH2 0xA8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E8 JUMP JUMPDEST PUSH1 0x97 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2A5 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x356 CALLDATASIZE PUSH1 0x4 PUSH2 0x190E JUMP JUMPDEST PUSH2 0xAFB JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x369 CALLDATASIZE PUSH1 0x4 PUSH2 0x177A JUMP JUMPDEST PUSH2 0xBC5 JUMP JUMPDEST PUSH2 0x21B PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x384 CALLDATASIZE PUSH1 0x4 PUSH2 0x175D JUMP JUMPDEST PUSH2 0xBF0 JUMP JUMPDEST PUSH1 0xCA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2A5 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x3A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x175D JUMP JUMPDEST PUSH2 0xCB1 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x3BB CALLDATASIZE PUSH1 0x4 PUSH2 0x177A JUMP JUMPDEST PUSH2 0x113A JUMP JUMPDEST PUSH2 0x21B PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E6C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x3E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x175D JUMP JUMPDEST PUSH2 0x115F JUMP JUMPDEST PUSH2 0x2A5 PUSH2 0x3F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x175D JUMP JUMPDEST PUSH2 0x11C2 JUMP JUMPDEST PUSH1 0xCB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2A5 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x41A CALLDATASIZE PUSH1 0x4 PUSH2 0x175D JUMP JUMPDEST PUSH2 0x1231 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x450 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x476 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x490 JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x490 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x4F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x51B JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x53B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x54F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST PUSH2 0x59B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C696420617267756D656E74202D207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4EF JUMP JUMPDEST PUSH1 0xC9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0xCA DUP1 SLOAD DUP9 DUP4 AND SWAP1 DUP5 AND OR SWAP1 SSTORE PUSH1 0xCB DUP1 SLOAD SWAP2 DUP7 AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x7170BF15B246E880B2369CD7C67D057760D8A35149E8C64DDE91EFA22BCC76D0 SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0x1B98CB79E6F73020175FE87333F1B91AD6A881519C0AFE30340C2599B2B4BDE0 SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x2FA8B95C1DB7AFE99E3398F3792F008135CEDC1FA26B0BB2ECD2352CD166D53C SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH2 0x66F PUSH2 0x12AA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6B5 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E6C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x6D3 DUP2 PUSH2 0x12D9 JUMP JUMPDEST PUSH1 0xCB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x2FA8B95C1DB7AFE99E3398F3792F008135CEDC1FA26B0BB2ECD2352CD166D53C SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x739 DUP2 PUSH2 0x12D9 JUMP JUMPDEST PUSH2 0x743 DUP4 DUP4 PUSH2 0x12E3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x7B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4EF JUMP JUMPDEST PUSH2 0x7C2 DUP3 DUP3 PUSH2 0x1369 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E8C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x7DE DUP2 PUSH2 0x12D9 JUMP JUMPDEST PUSH1 0xCB SLOAD PUSH1 0x40 MLOAD PUSH4 0x9F3418D5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH2 0xFFFF DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x9F3418D5 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x82F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x843 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH2 0xFFFF DUP6 AND SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 POP PUSH32 0x4ED3B726495C2DCA1FF1215D9CA54E1A4030ABB5E82B0F6CE55702416CEE853 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E8C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x89E DUP2 PUSH2 0x12D9 JUMP JUMPDEST PUSH1 0xCB SLOAD PUSH1 0x40 MLOAD PUSH4 0xA53410DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH2 0xFFFF DUP6 AND PUSH1 0x44 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA53410DD SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x90B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND SWAP4 POP DUP8 AND SWAP2 POP PUSH32 0x6AE73635C50D24A45AF6FBD5E016AC4BED179ADDBC8BF24E04FF0FCC6D33AF19 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x959 DUP4 PUSH2 0x11C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x96F JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xA0C JUMPI PUSH2 0x9FA DUP8 DUP8 DUP4 DUP2 DUP2 LT PUSH2 0x997 JUMPI PUSH2 0x997 PUSH2 0x193C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x9AC SWAP2 SWAP1 PUSH2 0x175D JUMP JUMPDEST DUP7 DUP7 DUP5 DUP2 DUP2 LT PUSH2 0x9BE JUMPI PUSH2 0x9BE PUSH2 0x193C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x9D3 SWAP2 SWAP1 PUSH2 0x175D JUMP JUMPDEST DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x9E5 JUMPI PUSH2 0x9E5 PUSH2 0x193C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x1952 JUMP JUMPDEST DUP1 PUSH2 0xA04 DUP2 PUSH2 0x1985 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x97A JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E6C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xA2D DUP2 PUSH2 0x12D9 JUMP JUMPDEST PUSH1 0xC9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x7170BF15B246E880B2369CD7C67D057760D8A35149E8C64DDE91EFA22BCC76D0 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0xA80 PUSH2 0x13D0 JUMP JUMPDEST PUSH2 0xA8A PUSH1 0x0 PUSH2 0x142A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xCB SLOAD PUSH1 0x40 MLOAD PUSH4 0x1C9F84EF PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0x727E13BC SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAD7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x450 SWAP2 SWAP1 PUSH2 0x199E JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E8C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xB13 DUP2 PUSH2 0x12D9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB1E DUP5 PUSH2 0x11C2 JUMP JUMPDEST PUSH1 0xCB SLOAD PUSH1 0x40 MLOAD PUSH4 0x7402E7C3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP7 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP3 SWAP4 POP SWAP2 AND SWAP1 PUSH4 0xE805CF86 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB83 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND SWAP4 POP DUP5 AND SWAP2 POP PUSH32 0xE98082932C8056A0F514DA9104E4A66BC2CBAEF102AD59D90C4B24220EBF6010 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E8C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xC08 DUP2 PUSH2 0x12D9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC13 DUP4 PUSH2 0x11C2 JUMP JUMPDEST PUSH1 0xCB SLOAD PUSH1 0x40 MLOAD PUSH4 0xCF191BCD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP3 SWAP4 POP SWAP2 AND SWAP1 PUSH4 0xCF191BCD SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC70 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 POP DUP7 AND SWAP2 POP PUSH32 0x59D6590E225B81BEFE259AF056324092801080ACBB7FEAB310EB34678871F327 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xCBD DUP4 PUSH2 0x11C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xCD3 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xC9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x37C27581 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xDF09D604 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 DUP7 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD1C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xD44 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1A26 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xD58 JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 JUMPDEST DUP7 MLOAD DUP2 LT ISZERO PUSH2 0x112B JUMPI PUSH1 0xCA SLOAD DUP8 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x52C111D1 SWAP1 DUP11 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0xD96 JUMPI PUSH2 0xD96 PUSH2 0x193C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDBC SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDD9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xE01 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1ABC JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xE1C JUMPI POP PUSH1 0x0 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE38 JUMPI PUSH2 0xE38 PUSH2 0x19BB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE61 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xF0E JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xE82 JUMPI PUSH2 0xE82 PUSH2 0x193C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP11 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xE9C JUMPI PUSH2 0xE9C PUSH2 0x193C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xEC9 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xEF1 JUMPI PUSH2 0xEF1 PUSH2 0x193C JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0xF06 DUP2 PUSH2 0x1985 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xE67 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1115 JUMPI PUSH2 0xF24 DUP13 PUSH2 0x11C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC9100BCB DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xF44 JUMPI PUSH2 0xF44 PUSH2 0x193C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF6A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF87 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xFAF SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1BDE JUMP JUMPDEST POP DUP15 MLOAD SWAP5 SWAP14 POP SWAP3 SWAP12 POP SWAP1 SWAP10 POP SWAP8 POP SWAP6 POP DUP11 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0xFD1 JUMPI PUSH2 0xFD1 PUSH2 0x193C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP10 SUB PUSH2 0x10DD JUMPI DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC0969A6E PUSH2 0xFF7 DUP15 PUSH2 0x11C2 JUMP JUMPDEST DUP13 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0x1009 JUMPI PUSH2 0x1009 PUSH2 0x193C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP10 DUP10 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1032 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CCC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x106B JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1068 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1D05 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x109A JUMPI PUSH1 0x1 DUP3 MLOAD PUSH2 0x107D SWAP2 SWAP1 PUSH2 0x1D27 JUMP JUMPDEST DUP2 SUB PUSH2 0x1095 JUMPI POP PUSH1 0x0 SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1103 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x10A5 JUMPI DUP3 MLOAD SWAP2 POP JUMPDEST DUP1 ISZERO DUP1 ISZERO PUSH2 0x10BF JUMPI POP PUSH1 0x1 DUP4 MLOAD PUSH2 0x10BC SWAP2 SWAP1 PUSH2 0x1D27 JUMP JUMPDEST DUP3 EQ JUMPDEST ISZERO PUSH2 0x10D7 JUMPI POP PUSH1 0x0 SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST POP PUSH2 0x1103 JUMP JUMPDEST PUSH1 0x1 DUP3 MLOAD PUSH2 0x10EB SWAP2 SWAP1 PUSH2 0x1D27 JUMP JUMPDEST DUP2 SUB PUSH2 0x1103 JUMPI POP PUSH1 0x0 SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x110D DUP2 PUSH2 0x1985 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xF12 JUMP JUMPDEST POP POP POP DUP1 DUP1 PUSH2 0x1123 SWAP1 PUSH2 0x1985 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD63 JUMP JUMPDEST POP PUSH1 0x1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x1155 DUP2 PUSH2 0x12D9 JUMP JUMPDEST PUSH2 0x743 DUP4 DUP4 PUSH2 0x1369 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E6C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1177 DUP2 PUSH2 0x12D9 JUMP JUMPDEST PUSH1 0xCA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x1B98CB79E6F73020175FE87333F1B91AD6A881519C0AFE30340C2599B2B4BDE0 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0xCB SLOAD PUSH1 0x40 MLOAD PUSH4 0x7988D3A5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0x7988D3A5 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x120D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x450 SWAP2 SWAP1 PUSH2 0x1D3A JUMP JUMPDEST PUSH2 0x1239 PUSH2 0x13D0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x129E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4EF JUMP JUMPDEST PUSH2 0x12A7 DUP2 PUSH2 0x142A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x12D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4EF SWAP1 PUSH2 0x1D57 JUMP JUMPDEST PUSH2 0xA8A PUSH2 0x147C JUMP JUMPDEST PUSH2 0x12A7 DUP2 CALLER PUSH2 0x14AC JUMP JUMPDEST PUSH2 0x12ED DUP3 DUP3 PUSH2 0xBC5 JUMP JUMPDEST PUSH2 0x7C2 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1325 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x1373 DUP3 DUP3 PUSH2 0xBC5 JUMP JUMPDEST ISZERO PUSH2 0x7C2 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x97 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA8A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4EF JUMP JUMPDEST PUSH1 0x97 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x14A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4EF SWAP1 PUSH2 0x1D57 JUMP JUMPDEST PUSH2 0xA8A CALLER PUSH2 0x142A JUMP JUMPDEST PUSH2 0x14B6 DUP3 DUP3 PUSH2 0xBC5 JUMP JUMPDEST PUSH2 0x7C2 JUMPI PUSH2 0x14C3 DUP2 PUSH2 0x1505 JUMP JUMPDEST PUSH2 0x14CE DUP4 PUSH1 0x20 PUSH2 0x1517 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x14DF SWAP3 SWAP2 SWAP1 PUSH2 0x1DA2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x4EF SWAP2 PUSH1 0x4 ADD PUSH2 0x1E17 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x450 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x14 JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1526 DUP4 PUSH1 0x2 PUSH2 0x1E2A JUMP JUMPDEST PUSH2 0x1531 SWAP1 PUSH1 0x2 PUSH2 0x1E41 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1549 JUMPI PUSH2 0x1549 PUSH2 0x19BB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1573 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x158E JUMPI PUSH2 0x158E PUSH2 0x193C JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x15BD JUMPI PUSH2 0x15BD PUSH2 0x193C JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x15E1 DUP5 PUSH1 0x2 PUSH2 0x1E2A JUMP JUMPDEST PUSH2 0x15EC SWAP1 PUSH1 0x1 PUSH2 0x1E41 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1664 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x1620 JUMPI PUSH2 0x1620 PUSH2 0x193C JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1636 JUMPI PUSH2 0x1636 PUSH2 0x193C JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x165D DUP2 PUSH2 0x1E54 JUMP JUMPDEST SWAP1 POP PUSH2 0x15EF JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x16B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4EF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x16B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x12A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x170E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1719 DUP2 PUSH2 0x16E4 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1729 DUP2 PUSH2 0x16E4 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x1739 DUP2 PUSH2 0x16E4 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1756 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x176F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x16B3 DUP2 PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x178D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x179F DUP2 PUSH2 0x16E4 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x12A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x17D8 DUP2 PUSH2 0x16E4 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x179F DUP2 PUSH2 0x17AA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x17FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1808 DUP2 PUSH2 0x16E4 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1818 DUP2 PUSH2 0x16E4 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x1739 DUP2 PUSH2 0x17AA JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x183A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1852 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x186D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x188D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x18A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18B1 DUP11 DUP4 DUP12 ADD PUSH2 0x1828 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x18CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18D6 DUP11 DUP4 DUP12 ADD PUSH2 0x1828 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x18EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18FC DUP10 DUP3 DUP11 ADD PUSH2 0x1828 JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1921 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x192C DUP2 PUSH2 0x16E4 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x179F DUP2 PUSH2 0x16E4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1964 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x16B3 DUP2 PUSH2 0x17AA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1997 JUMPI PUSH2 0x1997 PUSH2 0x196F JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x16B3 DUP2 PUSH2 0x17AA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x19FA JUMPI PUSH2 0x19FA PUSH2 0x19BB JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1A1C JUMPI PUSH2 0x1A1C PUSH2 0x19BB JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x1A61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x1A74 PUSH2 0x1A6F DUP3 PUSH2 0x1A02 JUMP JUMPDEST PUSH2 0x19D1 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP8 DUP4 GT ISZERO PUSH2 0x1A93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x1AB1 JUMPI DUP4 MLOAD DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x1A98 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1ACF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x1AF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x1B05 PUSH2 0x1A6F DUP3 PUSH2 0x1A02 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP8 DUP4 GT ISZERO PUSH2 0x1B24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x1AB1 JUMPI DUP4 MLOAD PUSH2 0x1B3C DUP2 PUSH2 0x16E4 JUMP JUMPDEST DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x1B29 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B66 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1B4E JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x1B89 JUMPI PUSH2 0x1B89 PUSH2 0x19BB JUMP JUMPDEST PUSH2 0x1B9C PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x19D1 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE DUP4 DUP4 DUP4 ADD GT ISZERO PUSH2 0x1BB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16B3 DUP4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B4B JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1BCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16B3 DUP4 DUP4 MLOAD PUSH1 0x20 DUP6 ADD PUSH2 0x1B6F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1BF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 MLOAD SWAP6 POP PUSH1 0x20 DUP8 ADD MLOAD SWAP5 POP PUSH1 0x40 DUP8 ADD MLOAD PUSH2 0x1C10 DUP2 PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x60 DUP9 ADD MLOAD SWAP1 SWAP5 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1C2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C3A DUP11 DUP4 DUP12 ADD PUSH2 0x1BBE JUMP JUMPDEST SWAP5 POP PUSH1 0x80 DUP10 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1C50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C5C DUP11 DUP4 DUP12 ADD PUSH2 0x1BBE JUMP JUMPDEST SWAP4 POP PUSH1 0xA0 DUP10 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1C72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP8 ADD PUSH1 0x1F DUP2 ADD DUP10 SGT PUSH2 0x1C84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C93 DUP10 DUP3 MLOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1B6F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1CB8 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1B4B JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1CF3 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1CA0 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1AB1 DUP2 DUP6 PUSH2 0x1CA0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x16B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x450 JUMPI PUSH2 0x450 PUSH2 0x196F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x16B3 DUP2 PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x1DDA DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1B4B JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x1E0B DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1B4B JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x16B3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1CA0 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x450 JUMPI PUSH2 0x450 PUSH2 0x196F JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x450 JUMPI PUSH2 0x450 PUSH2 0x196F JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1E63 JUMPI PUSH2 0x1E63 PUSH2 0x196F JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP INVALID 0xB1 SWAP6 CHAINID 0xDF CREATE 0x1E DUP6 PUSH16 0xB3F010C267A7B1C60363CF8A4664E21C 0xC8 SWAP13 0x26 0x22 CHAINID KECCAK256 0x21 0x4E 0xCA 0xB5 LOG0 0xBF 0xE0 0xB7 SWAP14 0x2C 0x4B SHR 0x2E MUL MSIZE SWAP16 LOG0 DIFFICULTY 0xD1 ISZERO 0xB7 MLOAD 0x1F SWAP7 MSIZE ADDRESS PUSH29 0xB4276950967709A2646970667358221220E7A0B492083A7C3C8CDAD88C CALLCODE GASLIMIT SGT 0xC6 0xB5 0xE8 DELEGATECALL LT 0x2C ADDMOD 0xE5 EXTCODEHASH 0xF6 SSTORE 0x24 0xBD SWAP8 SWAP13 0x21 PUSH1 0x64 PUSH20 0x6F6C634300081100330000000000000000000000 ",
							"sourceMap": "587:8616:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3029:213:4;;;;;;:::i;:::-;;:::i;:::-;;;470:14:21;;463:22;445:41;;433:2;418:18;3029:213:4;;;;;;;;954:846:15;;;;;;:::i;:::-;;:::i;:::-;;713:111;;-1:-1:-1;;;;;;;;;;;713:111:15;;;;;1313:25:21;;;1301:2;1286:18;713:111:15;1167:177:21;4834:129:4;;;;;;:::i;:::-;4908:7;4934:12;;;:6;:12;;;;;:22;;;;4834:129;3468:309:15;;;;;;:::i;:::-;;:::i;5259:145:4:-;;;;;;:::i;:::-;;:::i;6368:214::-;;;;;;:::i;:::-;;:::i;2696:306:15:-;;;;;;:::i;:::-;;:::i;7803:160::-;7936:20;;-1:-1:-1;;;;;7936:20:15;7803:160;;;-1:-1:-1;;;;;2812:32:21;;;2794:51;;2782:2;2767:18;7803:160:15;2619:232:21;8590:351:15;;;;;;:::i;:::-;;:::i;8274:239::-;;;;;;:::i;:::-;;:::i;1882:337::-;;;;;;:::i;:::-;;:::i;3860:270::-;;;;;;:::i;:::-;;:::i;2064:101:6:-;;;:::i;7283:204:15:-;;;;;;:::i;:::-;;:::i;:::-;;;5060:6:21;5048:19;;;5030:38;;5018:2;5003:18;7283:204:15;4886:188:21;1441:85:6;1513:6;;-1:-1:-1;;;;;1513:6:6;1441:85;;2294:328:15;;;;;;:::i;:::-;;:::i;3329:145:4:-;;;;;;:::i;:::-;;:::i;2450:49::-;;2495:4;2450:49;;3077:304:15;;;;;;:::i;:::-;;:::i;7563:165::-;7700:21;;-1:-1:-1;;;;;7700:21:15;7563:165;;4647:2560;;;;;;:::i;:::-;;:::i;5684:147:4:-;;;;;;:::i;:::-;;:::i;831:111:15:-;;-1:-1:-1;;;;;;;;;;;831:111:15;;4216:311;;;;;;:::i;:::-;;:::i;9010:191::-;;;;;;:::i;:::-;;:::i;8039:166::-;8177:21;;-1:-1:-1;;;;;8177:21:15;8039:166;;2314:198:6;;;;;;:::i;:::-;;:::i;3029:213:4:-;3114:4;-1:-1:-1;;;;;;3137:58:4;;-1:-1:-1;;;3137:58:4;;:98;;-1:-1:-1;;;;;;;;;;1168:51:11;;;3199:36:4;3130:105;3029:213;-1:-1:-1;;3029:213:4:o;954:846:15:-;3279:19:7;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:7;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:7;1713:19:8;:23;;;3387:66:7;;-1:-1:-1;3436:12:7;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:7;;6605:2:21;3325:201:7;;;6587:21:21;6644:2;6624:18;;;6617:30;6683:34;6663:18;;;6656:62;-1:-1:-1;;;6734:18:21;;;6727:44;6788:19;;3325:201:7;;;;;;;;;3536:12;:16;;-1:-1:-1;;3536:16:7;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:7;;;;;3562:65;-1:-1:-1;;;;;1139:37:15;::::1;::::0;;::::1;::::0;:91:::1;;-1:-1:-1::0;;;;;;1196:34:15;::::1;::::0;::::1;1139:91;:141;;;;-1:-1:-1::0;;;;;;1250:30:15;::::1;::::0;::::1;1139:141;1118:219;;;::::0;-1:-1:-1;;;1118:219:15;;7020:2:21;1118:219:15::1;::::0;::::1;7002:21:21::0;7059:2;7039:18;;;7032:30;7098:33;7078:18;;;7071:61;7149:18;;1118:219:15::1;6818:355:21::0;1118:219:15::1;1347:20;:65:::0;;-1:-1:-1;;;;;1347:65:15;;::::1;-1:-1:-1::0;;;;;;1347:65:15;;::::1;::::0;::::1;::::0;;;1422:21:::1;:94:::0;;;;::::1;::::0;;::::1;;::::0;;1526:21:::1;:66:::0;;;;::::1;::::0;;;::::1;;::::0;;1607:44:::1;::::0;::::1;::::0;1347:20:::1;::::0;1607:44:::1;1666:50;::::0;-1:-1:-1;;;;;1666:50:15;::::1;::::0;::::1;::::0;;;::::1;1731:36;::::0;-1:-1:-1;;;;;1731:36:15;::::1;::::0;::::1;::::0;;;::::1;1777:16;:14;:16::i;:::-;3651:14:7::0;3647:99;;;3697:5;3681:21;;-1:-1:-1;;3681:21:7;;;3721:14;;-1:-1:-1;7330:36:21;;3721:14:7;;7318:2:21;7303:18;3721:14:7;;;;;;;3647:99;3269:483;954:846:15;;;:::o;3468:309::-;-1:-1:-1;;;;;;;;;;;2928:16:4;876:66:15;2928:10:4;:16::i;:::-;3615:21:15::1;:96:::0;;-1:-1:-1;;;;;;3615:96:15::1;-1:-1:-1::0;;;;;3615:96:15;::::1;::::0;;::::1;::::0;;;3726:44:::1;::::0;::::1;::::0;-1:-1:-1;;3726:44:15::1;3468:309:::0;;:::o;5259:145:4:-;4908:7;4934:12;;;:6;:12;;;;;:22;;;2928:16;2939:4;2928:10;:16::i;:::-;5372:25:::1;5383:4;5389:7;5372:10;:25::i;:::-;5259:145:::0;;;:::o;6368:214::-;-1:-1:-1;;;;;6463:23:4;;929:10:9;6463:23:4;6455:83;;;;-1:-1:-1;;;6455:83:4;;7579:2:21;6455:83:4;;;7561:21:21;7618:2;7598:18;;;7591:30;7657:34;7637:18;;;7630:62;-1:-1:-1;;;7708:18:21;;;7701:45;7763:19;;6455:83:4;7377:411:21;6455:83:4;6549:26;6561:4;6567:7;6549:11;:26::i;:::-;6368:214;;:::o;2696:306:15:-;-1:-1:-1;;;;;;;;;;;2928:16:4;758:66:15;2928:10:4;:16::i;:::-;2835:21:15::1;::::0;:107:::1;::::0;-1:-1:-1;;;2835:107:15;;-1:-1:-1;;;;;7983:32:21;;;2835:107:15::1;::::0;::::1;7965:51:21::0;8064:6;8052:19;;8032:18;;;8025:47;2835:21:15;;::::1;::::0;:49:::1;::::0;7938:18:21;;2835:107:15::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;2957:38:15::1;::::0;::::1;::::0;::::1;::::0;-1:-1:-1;;;;;;2957:38:15;::::1;::::0;-1:-1:-1;2957:38:15::1;::::0;;;::::1;2696:306:::0;;;:::o;8590:351::-;-1:-1:-1;;;;;;;;;;;2928:16:4;758:66:15;2928:10:4;:16::i;:::-;8753:21:15::1;::::0;:123:::1;::::0;-1:-1:-1;;;8753:123:15;;-1:-1:-1;;;;;8356:15:21;;;8753:123:15::1;::::0;::::1;8338:34:21::0;8408:15;;;8388:18;;;8381:43;8472:6;8460:19;;8440:18;;;8433:47;8753:21:15;;::::1;::::0;:42:::1;::::0;8273:18:21;;8753:123:15::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;8891:43:15::1;::::0;-1:-1:-1;;;;;8891:43:15;;::::1;::::0;-1:-1:-1;8891:43:15;::::1;::::0;-1:-1:-1;8891:43:15::1;::::0;;;::::1;8590:351:::0;;;;:::o;8274:239::-;8378:4;;8410:22;8419:12;8410:8;:22::i;:::-;-1:-1:-1;;;;;8402:45:15;;8398:88;;-1:-1:-1;8470:5:15;;8274:239;-1:-1:-1;8274:239:15:o;8398:88::-;-1:-1:-1;8502:4:15;;8274:239;-1:-1:-1;8274:239:15:o;1882:337::-;2075:9;2070:143;2090:25;;;2070:143;;;2136:66;2153:14;;2168:1;2153:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;2172:11;;2184:1;2172:14;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;2188:10;;2199:1;2188:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;2136:66::-;2117:3;;;;:::i;:::-;;;;2070:143;;;;1882:337;;;;;;:::o;3860:270::-;-1:-1:-1;;;;;;;;;;;2928:16:4;876:66:15;2928:10:4;:16::i;:::-;3999:20:15::1;:65:::0;;-1:-1:-1;;;;;;3999:65:15::1;-1:-1:-1::0;;;;;3999:65:15;::::1;::::0;;::::1;::::0;;;4079:44:::1;::::0;::::1;::::0;-1:-1:-1;;4079:44:15::1;3860:270:::0;;:::o;2064:101:6:-;1334:13;:11;:13::i;:::-;2128:30:::1;2155:1;2128:18;:30::i;:::-;2064:101::o:0;7283:204:15:-;7423:21;;:57;;-1:-1:-1;;;7423:57:15;;-1:-1:-1;;;;;2812:32:21;;;7423:57:15;;;2794:51:21;7394:6:15;;7423:21;;:43;;2767:18:21;;7423:57:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2294:328::-;-1:-1:-1;;;;;;;;;;;2928:16:4;758:66:15;2928:10:4;:16::i;:::-;2438:21:15::1;2462:22;2471:12;2462:8;:22::i;:::-;2494:21;::::0;:67:::1;::::0;-1:-1:-1;;;2494:67:15;;-1:-1:-1;;;;;9915:15:21;;;2494:67:15::1;::::0;::::1;9897:34:21::0;9967:15;;;9947:18;;;9940:43;2438:46:15;;-1:-1:-1;2494:21:15;::::1;::::0;:42:::1;::::0;9832:18:21;;2494:67:15::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;2576:39:15::1;::::0;-1:-1:-1;;;;;2576:39:15;;::::1;::::0;-1:-1:-1;2576:39:15;::::1;::::0;-1:-1:-1;2576:39:15::1;::::0;;;::::1;2428:194;2294:328:::0;;;:::o;3329:145:4:-;3415:4;3438:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3438:29:4;;;;;;;;;;;;;;;3329:145::o;3077:304:15:-;-1:-1:-1;;;;;;;;;;;2928:16:4;758:66:15;2928:10:4;:16::i;:::-;3200:21:15::1;3224:22;3233:12;3224:8;:22::i;:::-;3256:21;::::0;:61:::1;::::0;-1:-1:-1;;;3256:61:15;;-1:-1:-1;;;;;2812:32:21;;;3256:61:15::1;::::0;::::1;2794:51:21::0;3200:46:15;;-1:-1:-1;3256:21:15;::::1;::::0;:47:::1;::::0;2767:18:21;;3256:61:15::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;3332:42:15::1;::::0;-1:-1:-1;;;;;3332:42:15;;::::1;::::0;-1:-1:-1;3332:42:15;::::1;::::0;-1:-1:-1;3332:42:15::1;::::0;;;::::1;3190:191;3077:304:::0;;:::o;4647:2560::-;4753:4;;4785:22;4794:12;4785:8;:22::i;:::-;-1:-1:-1;;;;;4777:45:15;;4773:88;;-1:-1:-1;4845:5:15;;4647:2560;-1:-1:-1;4647:2560:15:o;4773:88::-;4909:20;;:50;;;-1:-1:-1;;;4909:50:15;;;;4870:36;;-1:-1:-1;;;;;4909:20:15;;:48;;:50;;;;;4870:36;;4909:50;;;;;;;:20;:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4909:50:15;;;;;;;;;;;;:::i;:::-;4870:89;;4973:19;:26;5003:1;4973:31;4969:73;;-1:-1:-1;5027:4:15;;4647:2560;-1:-1:-1;;4647:2560:15:o;4969:73::-;5052:23;5085:14;5109;5133:16;5159:17;5186:18;5214:1966;5273:19;:26;5260:10;:39;5214:1966;;;5389:21;;5480:31;;5350:36;;-1:-1:-1;;;;;5389:21:15;;:69;;5480:19;;5500:10;;5480:31;;;;;;:::i;:::-;;;;;;;5389:140;;;;;;;;;;;;;1313:25:21;;1301:2;1286:18;;1167:177;5389:140:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5389:140:15;;;;;;;;;;;;:::i;:::-;5350:179;;5548:14;:21;5573:1;5548:26;5544:77;;-1:-1:-1;5601:5:15;;4647:2560;-1:-1:-1;;;;;;;;;4647:2560:15:o;5544:77::-;5635:25;5677:14;:21;5663:36;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5663:36:15;;5635:64;;5718:9;5713:280;5737:14;:21;5733:1;:25;5713:280;;;5864:14;5879:1;5864:17;;;;;;;;:::i;:::-;;;;;;;5907:19;5927:10;5907:31;;;;;;;;:::i;:::-;;;;;;;5828:132;;;;;;;;-1:-1:-1;;;;;12853:32:21;;;;12835:51;;12917:2;12902:18;;12895:34;12823:2;12808:18;;12642:293;5828:132:15;;;;;;;;;;;;;5797:181;;;;;;5783:8;5792:1;5783:11;;;;;;;;:::i;:::-;;;;;;;;;;:195;5760:3;;;;:::i;:::-;;;;5713:280;;;;6012:9;6007:1163;6031:8;:15;6027:1;:19;6007:1163;;;6120:60;6150:12;6120:8;:60::i;:::-;-1:-1:-1;;;;;6120:69:15;;6190:8;6199:1;6190:11;;;;;;;;:::i;:::-;;;;;;;6120:82;;;;;;;;;;;;;1313:25:21;;1301:2;1286:18;;1167:177;6120:82:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6120:82:15;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6244:31:15;;6071:131;;-1:-1:-1;6071:131:15;;-1:-1:-1;6071:131:15;;-1:-1:-1;6071:131:15;-1:-1:-1;6071:131:15;-1:-1:-1;6244:19:15;;6264:10;;6244:31;;;;;;:::i;:::-;;;;;;;6225:15;:50;6221:935;;6340:6;-1:-1:-1;;;;;6327:33:15;;6390:22;6399:12;6390:8;:22::i;:::-;6442:19;6462:10;6442:31;;;;;;;;:::i;:::-;;;;;;;6503:3;6536:4;6327:239;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;6327:239:15;;;;;;;;-1:-1:-1;;6327:239:15;;;;;;;;;;;;:::i;:::-;;;6299:748;;6952:1;6934:8;:15;:19;;;;:::i;:::-;6928:1;:26;6924:101;;-1:-1:-1;6993:5:15;;4647:2560;-1:-1:-1;;;;;;;;;;;4647:2560:15:o;6924:101::-;6221:935;;6299:748;6642:9;6638:91;;;6687:8;:15;6683:19;;6638:91;6759:9;6758:10;:40;;;;;6796:1;6778:8;:15;:19;;;;:::i;:::-;6772:1;:26;6758:40;6754:115;;;-1:-1:-1;6837:5:15;;4647:2560;-1:-1:-1;;;;;;;;;;;;4647:2560:15:o;6754:115::-;6587:304;6221:935;;;7099:1;7081:8;:15;:19;;;;:::i;:::-;7075:1;:26;7071:85;;-1:-1:-1;7132:5:15;;4647:2560;-1:-1:-1;;;;;;;;;;;4647:2560:15:o;7071:85::-;6048:3;;;;:::i;:::-;;;;6007:1163;;;;5336:1844;;5313:12;;;;;:::i;:::-;;;;5214:1966;;;-1:-1:-1;7196:4:15;;4647:2560;-1:-1:-1;;;;;;;;4647:2560:15:o;5684:147:4:-;4908:7;4934:12;;;:6;:12;;;;;:22;;;2928:16;2939:4;2928:10;:16::i;:::-;5798:26:::1;5810:4;5816:7;5798:11;:26::i;4216:311:15:-:0;-1:-1:-1;;;;;;;;;;;2928:16:4;876:66:15;2928:10:4;:16::i;:::-;4361:21:15::1;:94:::0;;-1:-1:-1;;;;;;4361:94:15::1;-1:-1:-1::0;;;;;4361:94:15;::::1;::::0;;::::1;::::0;;;4470:50:::1;::::0;::::1;::::0;-1:-1:-1;;4470:50:15::1;4216:311:::0;;:::o;9010:191::-;9144:21;;:50;;-1:-1:-1;;;9144:50:15;;-1:-1:-1;;;;;2812:32:21;;;9144:50:15;;;2794:51:21;9112:9:15;;9144:21;;:36;;2767:18:21;;9144:50:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2314:198:6:-;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2402:22:6;::::1;2394:73;;;::::0;-1:-1:-1;;;2394:73:6;;16705:2:21;2394:73:6::1;::::0;::::1;16687:21:21::0;16744:2;16724:18;;;16717:30;16783:34;16763:18;;;16756:62;-1:-1:-1;;;16834:18:21;;;16827:36;16880:19;;2394:73:6::1;16503:402:21::0;2394:73:6::1;2477:28;2496:8;2477:18;:28::i;:::-;2314:198:::0;:::o;1003:95::-;5374:13:7;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:7;;;;;;;:::i;:::-;1065:26:6::1;:24;:26::i;3768:103:4:-:0;3834:30;3845:4;929:10:9;3834::4;:30::i;7917:233::-;8000:22;8008:4;8014:7;8000;:22::i;:::-;7995:149;;8038:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8038:29:4;;;;;;;;;:36;;-1:-1:-1;;8038:36:4;8070:4;8038:36;;;8120:12;929:10:9;;850:96;8120:12:4;-1:-1:-1;;;;;8093:40:4;8111:7;-1:-1:-1;;;;;8093:40:4;8105:4;8093:40;;;;;;;;;;7917:233;;:::o;8321:234::-;8404:22;8412:4;8418:7;8404;:22::i;:::-;8400:149;;;8474:5;8442:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8442:29:4;;;;;;;;;;:37;;-1:-1:-1;;8442:37:4;;;8498:40;929:10:9;;8442:12:4;;8498:40;;8474:5;8498:40;8321:234;;:::o;1599:130:6:-;1513:6;;-1:-1:-1;;;;;1513:6:6;929:10:9;1662:23:6;1654:68;;;;-1:-1:-1;;;1654:68:6;;17524:2:21;1654:68:6;;;17506:21:21;;;17543:18;;;17536:30;17602:34;17582:18;;;17575:62;17654:18;;1654:68:6;17322:356:21;2666:187:6;2758:6;;;-1:-1:-1;;;;;2774:17:6;;;-1:-1:-1;;;;;;2774:17:6;;;;;;;2806:40;;2758:6;;;2774:17;2758:6;;2806:40;;2739:16;;2806:40;2729:124;2666:187;:::o;1104:111::-;5374:13:7;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:7;;;;;;;:::i;:::-;1176:32:6::1;929:10:9::0;1176:18:6::1;:32::i;4152:501:4:-:0;4240:22;4248:4;4254:7;4240;:22::i;:::-;4235:412;;4423:39;4454:7;4423:30;:39::i;:::-;4533:49;4572:4;4579:2;4533:30;:49::i;:::-;4330:274;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4330:274:4;;;;;;;;;;-1:-1:-1;;;4278:358:4;;;;;;;:::i;2473:149:10:-;2531:13;2563:52;-1:-1:-1;;;;;2575:22:10;;376:2;1884:437;1959:13;1984:19;2016:10;2020:6;2016:1;:10;:::i;:::-;:14;;2029:1;2016:14;:::i;:::-;2006:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2006:25:10;;1984:47;;-1:-1:-1;;;2041:6:10;2048:1;2041:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2041:15:10;;;;;;;;;-1:-1:-1;;;2066:6:10;2073:1;2066:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2066:15:10;;;;;;;;-1:-1:-1;2096:9:10;2108:10;2112:6;2108:1;:10;:::i;:::-;:14;;2121:1;2108:14;:::i;:::-;2096:26;;2091:128;2128:1;2124;:5;2091:128;;;-1:-1:-1;;;2171:5:10;2179:3;2171:11;2162:21;;;;;;;:::i;:::-;;;;2150:6;2157:1;2150:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;2150:33:10;;;;;;;;-1:-1:-1;2207:1:10;2197:11;;;;;2131:3;;;:::i;:::-;;;2091:128;;;-1:-1:-1;2236:10:10;;2228:55;;;;-1:-1:-1;;;2228:55:10;;19370:2:21;2228:55:10;;;19352:21:21;;;19389:18;;;19382:30;19448:34;19428:18;;;19421:62;19500:18;;2228:55:10;19168:356:21;2228:55:10;2307:6;1884:437;-1:-1:-1;;;1884:437:10:o;14:286:21:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:21;;209:43;;199:71;;266:1;263;256:12;497:131;-1:-1:-1;;;;;572:31:21;;562:42;;552:70;;618:1;615;608:12;633:529;710:6;718;726;779:2;767:9;758:7;754:23;750:32;747:52;;;795:1;792;785:12;747:52;834:9;821:23;853:31;878:5;853:31;:::i;:::-;903:5;-1:-1:-1;960:2:21;945:18;;932:32;973:33;932:32;973:33;:::i;:::-;1025:7;-1:-1:-1;1084:2:21;1069:18;;1056:32;1097:33;1056:32;1097:33;:::i;:::-;1149:7;1139:17;;;633:529;;;;;:::o;1349:180::-;1408:6;1461:2;1449:9;1440:7;1436:23;1432:32;1429:52;;;1477:1;1474;1467:12;1429:52;-1:-1:-1;1500:23:21;;1349:180;-1:-1:-1;1349:180:21:o;1534:247::-;1593:6;1646:2;1634:9;1625:7;1621:23;1617:32;1614:52;;;1662:1;1659;1652:12;1614:52;1701:9;1688:23;1720:31;1745:5;1720:31;:::i;1786:315::-;1854:6;1862;1915:2;1903:9;1894:7;1890:23;1886:32;1883:52;;;1931:1;1928;1921:12;1883:52;1967:9;1954:23;1944:33;;2027:2;2016:9;2012:18;1999:32;2040:31;2065:5;2040:31;:::i;:::-;2090:5;2080:15;;;1786:315;;;;;:::o;2106:117::-;2191:6;2184:5;2180:18;2173:5;2170:29;2160:57;;2213:1;2210;2203:12;2228:386;2295:6;2303;2356:2;2344:9;2335:7;2331:23;2327:32;2324:52;;;2372:1;2369;2362:12;2324:52;2411:9;2398:23;2430:31;2455:5;2430:31;:::i;:::-;2480:5;-1:-1:-1;2537:2:21;2522:18;;2509:32;2550;2509;2550;:::i;2856:544::-;2949:6;2957;2965;3018:2;3006:9;2997:7;2993:23;2989:32;2986:52;;;3034:1;3031;3024:12;2986:52;3073:9;3060:23;3092:31;3117:5;3092:31;:::i;:::-;3142:5;-1:-1:-1;3199:2:21;3184:18;;3171:32;3212:33;3171:32;3212:33;:::i;:::-;3264:7;-1:-1:-1;3323:2:21;3308:18;;3295:32;3336;3295;3336;:::i;3405:367::-;3468:8;3478:6;3532:3;3525:4;3517:6;3513:17;3509:27;3499:55;;3550:1;3547;3540:12;3499:55;-1:-1:-1;3573:20:21;;3616:18;3605:30;;3602:50;;;3648:1;3645;3638:12;3602:50;3685:4;3677:6;3673:17;3661:29;;3745:3;3738:4;3728:6;3725:1;3721:14;3713:6;3709:27;3705:38;3702:47;3699:67;;;3762:1;3759;3752:12;3699:67;3405:367;;;;;:::o;3777:1104::-;3951:6;3959;3967;3975;3983;3991;4044:2;4032:9;4023:7;4019:23;4015:32;4012:52;;;4060:1;4057;4050:12;4012:52;4100:9;4087:23;4129:18;4170:2;4162:6;4159:14;4156:34;;;4186:1;4183;4176:12;4156:34;4225:70;4287:7;4278:6;4267:9;4263:22;4225:70;:::i;:::-;4314:8;;-1:-1:-1;4199:96:21;-1:-1:-1;4402:2:21;4387:18;;4374:32;;-1:-1:-1;4418:16:21;;;4415:36;;;4447:1;4444;4437:12;4415:36;4486:72;4550:7;4539:8;4528:9;4524:24;4486:72;:::i;:::-;4577:8;;-1:-1:-1;4460:98:21;-1:-1:-1;4665:2:21;4650:18;;4637:32;;-1:-1:-1;4681:16:21;;;4678:36;;;4710:1;4707;4700:12;4678:36;;4749:72;4813:7;4802:8;4791:9;4787:24;4749:72;:::i;:::-;3777:1104;;;;-1:-1:-1;3777:1104:21;;-1:-1:-1;3777:1104:21;;4840:8;;3777:1104;-1:-1:-1;;;3777:1104:21:o;5287:405::-;5372:6;5380;5433:2;5421:9;5412:7;5408:23;5404:32;5401:52;;;5449:1;5446;5439:12;5401:52;5488:9;5475:23;5507:31;5532:5;5507:31;:::i;:::-;5557:5;-1:-1:-1;5614:2:21;5599:18;;5586:32;5627:33;5586:32;5627:33;:::i;8491:127::-;8552:10;8547:3;8543:20;8540:1;8533:31;8583:4;8580:1;8573:15;8607:4;8604:1;8597:15;8892:245;8950:6;9003:2;8991:9;8982:7;8978:23;8974:32;8971:52;;;9019:1;9016;9009:12;8971:52;9058:9;9045:23;9077:30;9101:5;9077:30;:::i;9142:127::-;9203:10;9198:3;9194:20;9191:1;9184:31;9234:4;9231:1;9224:15;9258:4;9255:1;9248:15;9274:135;9313:3;9334:17;;;9331:43;;9354:18;;:::i;:::-;-1:-1:-1;9401:1:21;9390:13;;9274:135::o;9414:249::-;9483:6;9536:2;9524:9;9515:7;9511:23;9507:32;9504:52;;;9552:1;9549;9542:12;9504:52;9584:9;9578:16;9603:30;9627:5;9603:30;:::i;9994:127::-;10055:10;10050:3;10046:20;10043:1;10036:31;10086:4;10083:1;10076:15;10110:4;10107:1;10100:15;10126:275;10197:2;10191:9;10262:2;10243:13;;-1:-1:-1;;10239:27:21;10227:40;;10297:18;10282:34;;10318:22;;;10279:62;10276:88;;;10344:18;;:::i;:::-;10380:2;10373:22;10126:275;;-1:-1:-1;10126:275:21:o;10406:183::-;10466:4;10499:18;10491:6;10488:30;10485:56;;;10521:18;;:::i;:::-;-1:-1:-1;10566:1:21;10562:14;10578:4;10558:25;;10406:183::o;10594:881::-;10689:6;10720:2;10763;10751:9;10742:7;10738:23;10734:32;10731:52;;;10779:1;10776;10769:12;10731:52;10812:9;10806:16;10845:18;10837:6;10834:30;10831:50;;;10877:1;10874;10867:12;10831:50;10900:22;;10953:4;10945:13;;10941:27;-1:-1:-1;10931:55:21;;10982:1;10979;10972:12;10931:55;11011:2;11005:9;11034:60;11050:43;11090:2;11050:43;:::i;:::-;11034:60;:::i;:::-;11128:15;;;11210:1;11206:10;;;;11198:19;;11194:28;;;11159:12;;;;11234:19;;;11231:39;;;11266:1;11263;11256:12;11231:39;11290:11;;;;11310:135;11326:6;11321:3;11318:15;11310:135;;;11392:10;;11380:23;;11343:12;;;;11423;;;;11310:135;;;11464:5;10594:881;-1:-1:-1;;;;;;;10594:881:21:o;11662:975::-;11776:6;11807:2;11850;11838:9;11829:7;11825:23;11821:32;11818:52;;;11866:1;11863;11856:12;11818:52;11899:9;11893:16;11932:18;11924:6;11921:30;11918:50;;;11964:1;11961;11954:12;11918:50;11987:22;;12040:4;12032:13;;12028:27;-1:-1:-1;12018:55:21;;12069:1;12066;12059:12;12018:55;12098:2;12092:9;12121:60;12137:43;12177:2;12137:43;:::i;12121:60::-;12215:15;;;12297:1;12293:10;;;;12285:19;;12281:28;;;12246:12;;;;12321:19;;;12318:39;;;12353:1;12350;12343:12;12318:39;12377:11;;;;12397:210;12413:6;12408:3;12405:15;12397:210;;;12486:3;12480:10;12503:31;12528:5;12503:31;:::i;:::-;12547:18;;12430:12;;;;12585;;;;12397:210;;12940:250;13025:1;13035:113;13049:6;13046:1;13043:13;13035:113;;;13125:11;;;13119:18;13106:11;;;13099:39;13071:2;13064:10;13035:113;;;-1:-1:-1;;13182:1:21;13164:16;;13157:27;12940:250::o;13195:390::-;13270:5;13304:18;13296:6;13293:30;13290:56;;;13326:18;;:::i;:::-;13364:57;13409:2;13388:15;;-1:-1:-1;;13384:29:21;13415:4;13380:40;13364:57;:::i;:::-;13355:66;;13444:6;13437:5;13430:21;13484:3;13475:6;13470:3;13466:16;13463:25;13460:45;;;13501:1;13498;13491:12;13460:45;13514:65;13572:6;13565:4;13558:5;13554:16;13549:3;13514:65;:::i;13590:235::-;13643:5;13696:3;13689:4;13681:6;13677:17;13673:27;13663:55;;13714:1;13711;13704:12;13663:55;13736:83;13815:3;13806:6;13800:13;13793:4;13785:6;13781:17;13736:83;:::i;13830:1136::-;13973:6;13981;13989;13997;14005;14013;14066:3;14054:9;14045:7;14041:23;14037:33;14034:53;;;14083:1;14080;14073:12;14034:53;14112:9;14106:16;14096:26;;14162:2;14151:9;14147:18;14141:25;14131:35;;14209:2;14198:9;14194:18;14188:25;14222:31;14247:5;14222:31;:::i;:::-;14321:2;14306:18;;14300:25;14272:5;;-1:-1:-1;14344:18:21;14374:14;;;14371:34;;;14401:1;14398;14391:12;14371:34;14424:60;14476:7;14467:6;14456:9;14452:22;14424:60;:::i;:::-;14414:70;;14530:3;14519:9;14515:19;14509:26;14493:42;;14560:2;14550:8;14547:16;14544:36;;;14576:1;14573;14566:12;14544:36;14599:62;14653:7;14642:8;14631:9;14627:24;14599:62;:::i;:::-;14589:72;;14707:3;14696:9;14692:19;14686:26;14670:42;;14737:2;14727:8;14724:16;14721:36;;;14753:1;14750;14743:12;14721:36;-1:-1:-1;14776:24:21;;14831:4;14823:13;;14819:27;-1:-1:-1;14809:55:21;;14860:1;14857;14850:12;14809:55;14883:77;14952:7;14947:2;14941:9;14936:2;14932;14928:11;14883:77;:::i;:::-;14873:87;;;13830:1136;;;;;;;;:::o;14971:270::-;15012:3;15050:5;15044:12;15077:6;15072:3;15065:19;15093:76;15162:6;15155:4;15150:3;15146:14;15139:4;15132:5;15128:16;15093:76;:::i;:::-;15223:2;15202:15;-1:-1:-1;;15198:29:21;15189:39;;;;15230:4;15185:50;;14971:270;-1:-1:-1;;14971:270:21:o;15246:564::-;15541:1;15537;15532:3;15528:11;15524:19;15516:6;15512:32;15501:9;15494:51;15581:6;15576:2;15565:9;15561:18;15554:34;15624:3;15619:2;15608:9;15604:18;15597:31;15475:4;15651:45;15691:3;15680:9;15676:19;15668:6;15651:45;:::i;:::-;15744:9;15736:6;15732:22;15727:2;15716:9;15712:18;15705:50;15772:32;15797:6;15789;15772:32;:::i;15815:277::-;15882:6;15935:2;15923:9;15914:7;15910:23;15906:32;15903:52;;;15951:1;15948;15941:12;15903:52;15983:9;15977:16;16036:5;16029:13;16022:21;16015:5;16012:32;16002:60;;16058:1;16055;16048:12;16097:128;16164:9;;;16185:11;;;16182:37;;;16199:18;;:::i;16230:268::-;16317:6;16370:2;16358:9;16349:7;16345:23;16341:32;16338:52;;;16386:1;16383;16376:12;16338:52;16418:9;16412:16;16437:31;16462:5;16437:31;:::i;16910:407::-;17112:2;17094:21;;;17151:2;17131:18;;;17124:30;17190:34;17185:2;17170:18;;17163:62;-1:-1:-1;;;17256:2:21;17241:18;;17234:41;17307:3;17292:19;;16910:407::o;17683:812::-;18094:25;18089:3;18082:38;18064:3;18149:6;18143:13;18165:75;18233:6;18228:2;18223:3;18219:12;18212:4;18204:6;18200:17;18165:75;:::i;:::-;-1:-1:-1;;;18299:2:21;18259:16;;;18291:11;;;18284:40;18349:13;;18371:76;18349:13;18433:2;18425:11;;18418:4;18406:17;;18371:76;:::i;:::-;18467:17;18486:2;18463:26;;17683:812;-1:-1:-1;;;;17683:812:21:o;18500:219::-;18649:2;18638:9;18631:21;18612:4;18669:44;18709:2;18698:9;18694:18;18686:6;18669:44;:::i;18724:168::-;18797:9;;;18828;;18845:15;;;18839:22;;18825:37;18815:71;;18866:18;;:::i;18897:125::-;18962:9;;;18983:10;;;18980:36;;;18996:18;;:::i;19027:136::-;19066:3;19094:5;19084:39;;19103:18;;:::i;:::-;-1:-1:-1;;;19139:18:21;;19027:136::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1581000",
								"executionCost": "1659",
								"totalCost": "1582659"
							},
							"external": {
								"AGENT_ROLE()": "infinite",
								"DEFAULT_ADMIN_ROLE()": "262",
								"OWNER_ROLE()": "infinite",
								"batchRegisterIdentity(address[],address[],uint16[])": "infinite",
								"contains(address)": "infinite",
								"deleteIdentity(address)": "infinite",
								"getRoleAdmin(bytes32)": "2490",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "2698",
								"identity(address)": "infinite",
								"identityStorage()": "2419",
								"init(address,address,address)": "infinite",
								"investorCountry(address)": "infinite",
								"isVerified(address)": "infinite",
								"issuersRegistry()": "2442",
								"owner()": "2399",
								"registerIdentity(address,address,uint16)": "infinite",
								"renounceOwnership()": "infinite",
								"renounceRole(bytes32,address)": "29112",
								"revokeRole(bytes32,address)": "infinite",
								"setClaimTopicsRegistry(address)": "infinite",
								"setIdentityRegistryStorage(address)": "infinite",
								"setTrustedIssuersRegistry(address)": "infinite",
								"supportsInterface(bytes4)": "473",
								"topicsRegistry()": "2388",
								"transferOwnership(address)": "infinite",
								"updateCountry(address,uint16)": "infinite",
								"updateIdentity(address,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 587,
									"end": 9203,
									"name": "PUSH",
									"source": 15,
									"value": "80"
								},
								{
									"begin": 587,
									"end": 9203,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 587,
									"end": 9203,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 587,
									"end": 9203,
									"name": "CALLVALUE",
									"source": 15
								},
								{
									"begin": 587,
									"end": 9203,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 587,
									"end": 9203,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 587,
									"end": 9203,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 587,
									"end": 9203,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 587,
									"end": 9203,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 587,
									"end": 9203,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 587,
									"end": 9203,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 587,
									"end": 9203,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 587,
									"end": 9203,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 587,
									"end": 9203,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 587,
									"end": 9203,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 587,
									"end": 9203,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 587,
									"end": 9203,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 587,
									"end": 9203,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 587,
									"end": 9203,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 587,
									"end": 9203,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 587,
									"end": 9203,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e7a0b492083a7c3c8cdad88cf24513c6b5e8f4102c08e53ff65524bd979c216064736f6c63430008110033",
									".code": [
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "tag",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH",
											"source": 15,
											"value": "7E42683B"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "31"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH",
											"source": 15,
											"value": "B9209E33"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH",
											"source": 15,
											"value": "E744D789"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "33"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH",
											"source": 15,
											"value": "E744D789"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "27"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH",
											"source": 15,
											"value": "F0EB5E54"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "28"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH",
											"source": 15,
											"value": "F11ABFD8"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "29"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH",
											"source": 15,
											"value": "F2FDE38B"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "30"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "tag",
											"source": 15,
											"value": "33"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH",
											"source": 15,
											"value": "B9209E33"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH",
											"source": 15,
											"value": "D547741F"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "25"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH",
											"source": 15,
											"value": "E58378BB"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "26"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "tag",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH",
											"source": 15,
											"value": "91D14854"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "34"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH",
											"source": 15,
											"value": "91D14854"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH",
											"source": 15,
											"value": "A217FDDF"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH",
											"source": 15,
											"value": "A8D29D1D"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH",
											"source": 15,
											"value": "B4F3FCB7"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "23"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "tag",
											"source": 15,
											"value": "34"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH",
											"source": 15,
											"value": "7E42683B"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "17"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH",
											"source": 15,
											"value": "8DA5CB5B"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "18"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH",
											"source": 15,
											"value": "8E098CA1"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "19"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "tag",
											"source": 15,
											"value": "31"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH",
											"source": 15,
											"value": "3B239A7F"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "35"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH",
											"source": 15,
											"value": "5DBE47E8"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "36"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH",
											"source": 15,
											"value": "5DBE47E8"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "13"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH",
											"source": 15,
											"value": "653DC9F1"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH",
											"source": 15,
											"value": "670AF6A9"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "15"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH",
											"source": 15,
											"value": "715018A6"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "16"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "tag",
											"source": 15,
											"value": "36"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH",
											"source": 15,
											"value": "3B239A7F"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH",
											"source": 15,
											"value": "3B3E12F4"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH",
											"source": 15,
											"value": "454A03E0"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "tag",
											"source": 15,
											"value": "35"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH",
											"source": 15,
											"value": "248A9CA3"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "37"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH",
											"source": 15,
											"value": "248A9CA3"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH",
											"source": 15,
											"value": "26D941AE"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH",
											"source": 15,
											"value": "2F2FF15D"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH",
											"source": 15,
											"value": "36568ABE"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "9"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "tag",
											"source": 15,
											"value": "37"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH",
											"source": 15,
											"value": "1FFC9A7"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH",
											"source": 15,
											"value": "184B9559"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH",
											"source": 15,
											"value": "22459E18"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "tag",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 587,
											"end": 9203,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3029,
											"end": 3242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 3029,
											"end": 3242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 470,
											"end": 484,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 470,
											"end": 484,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 463,
											"end": 485,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 445,
											"end": 486,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 445,
											"end": 486,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 433,
											"end": 435,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 418,
											"end": 436,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1800,
											"name": "tag",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 954,
											"end": 1800,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 954,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 954,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "45"
										},
										{
											"begin": 954,
											"end": 1800,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 954,
											"end": 1800,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 954,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "46"
										},
										{
											"begin": 954,
											"end": 1800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 954,
											"end": 1800,
											"name": "tag",
											"source": 15,
											"value": "45"
										},
										{
											"begin": 954,
											"end": 1800,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 954,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "47"
										},
										{
											"begin": 954,
											"end": 1800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 954,
											"end": 1800,
											"name": "tag",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 954,
											"end": 1800,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 954,
											"end": 1800,
											"name": "STOP",
											"source": 15
										},
										{
											"begin": 713,
											"end": 824,
											"name": "tag",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 713,
											"end": 824,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 713,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "48"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "83599F2FD2D7ECEC31A0C854E1DFA0CD718F43D0F25B15E620B3800DBA1A8107"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 713,
											"end": 824,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 713,
											"end": 824,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 713,
											"end": 824,
											"name": "tag",
											"source": 15,
											"value": "48"
										},
										{
											"begin": 713,
											"end": 824,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 713,
											"end": 824,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 713,
											"end": 824,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1313,
											"end": 1338,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1313,
											"end": 1338,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1313,
											"end": 1338,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 1301,
											"end": 1303,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 1286,
											"end": 1304,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 713,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "42"
										},
										{
											"begin": 1167,
											"end": 1344,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 4834,
											"end": 4963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4908,
											"end": 4915,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4934,
											"end": 4940,
											"name": "PUSH",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4934,
											"end": 4956,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4934,
											"end": 4956,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4934,
											"end": 4956,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4934,
											"end": 4956,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3468,
											"end": 3777,
											"name": "tag",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 3468,
											"end": 3777,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3468,
											"end": 3777,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 3468,
											"end": 3777,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "58"
										},
										{
											"begin": 3468,
											"end": 3777,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 3468,
											"end": 3777,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 3468,
											"end": 3777,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "59"
										},
										{
											"begin": 3468,
											"end": 3777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3468,
											"end": 3777,
											"name": "tag",
											"source": 15,
											"value": "58"
										},
										{
											"begin": 3468,
											"end": 3777,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3468,
											"end": 3777,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 3468,
											"end": 3777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 5259,
											"end": 5404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 5259,
											"end": 5404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 6368,
											"end": 6582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 6368,
											"end": 6582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2696,
											"end": 3002,
											"name": "tag",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 2696,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2696,
											"end": 3002,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 2696,
											"end": 3002,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "69"
										},
										{
											"begin": 2696,
											"end": 3002,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 2696,
											"end": 3002,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 2696,
											"end": 3002,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "70"
										},
										{
											"begin": 2696,
											"end": 3002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2696,
											"end": 3002,
											"name": "tag",
											"source": 15,
											"value": "69"
										},
										{
											"begin": 2696,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2696,
											"end": 3002,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "71"
										},
										{
											"begin": 2696,
											"end": 3002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7803,
											"end": 7963,
											"name": "tag",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 7803,
											"end": 7963,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7936,
											"end": 7956,
											"name": "PUSH",
											"source": 15,
											"value": "C9"
										},
										{
											"begin": 7936,
											"end": 7956,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7936,
											"end": 7956,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 7803,
											"end": 7963,
											"name": "tag",
											"source": 15,
											"value": "72"
										},
										{
											"begin": 7803,
											"end": 7963,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7803,
											"end": 7963,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 7803,
											"end": 7963,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2812,
											"end": 2844,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2812,
											"end": 2844,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 2812,
											"end": 2844,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 2794,
											"end": 2845,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2794,
											"end": 2845,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 2782,
											"end": 2784,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 2767,
											"end": 2785,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7803,
											"end": 7963,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "42"
										},
										{
											"begin": 2619,
											"end": 2851,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8590,
											"end": 8941,
											"name": "tag",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 8590,
											"end": 8941,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8590,
											"end": 8941,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 8590,
											"end": 8941,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "77"
										},
										{
											"begin": 8590,
											"end": 8941,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 8590,
											"end": 8941,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 8590,
											"end": 8941,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "78"
										},
										{
											"begin": 8590,
											"end": 8941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8590,
											"end": 8941,
											"name": "tag",
											"source": 15,
											"value": "77"
										},
										{
											"begin": 8590,
											"end": 8941,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8590,
											"end": 8941,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "79"
										},
										{
											"begin": 8590,
											"end": 8941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8274,
											"end": 8513,
											"name": "tag",
											"source": 15,
											"value": "13"
										},
										{
											"begin": 8274,
											"end": 8513,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8274,
											"end": 8513,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "38"
										},
										{
											"begin": 8274,
											"end": 8513,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "81"
										},
										{
											"begin": 8274,
											"end": 8513,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 8274,
											"end": 8513,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 8274,
											"end": 8513,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "59"
										},
										{
											"begin": 8274,
											"end": 8513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8274,
											"end": 8513,
											"name": "tag",
											"source": 15,
											"value": "81"
										},
										{
											"begin": 8274,
											"end": 8513,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8274,
											"end": 8513,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "82"
										},
										{
											"begin": 8274,
											"end": 8513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1882,
											"end": 2219,
											"name": "tag",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 1882,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1882,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 1882,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "85"
										},
										{
											"begin": 1882,
											"end": 2219,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 1882,
											"end": 2219,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1882,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "86"
										},
										{
											"begin": 1882,
											"end": 2219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1882,
											"end": 2219,
											"name": "tag",
											"source": 15,
											"value": "85"
										},
										{
											"begin": 1882,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1882,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "87"
										},
										{
											"begin": 1882,
											"end": 2219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3860,
											"end": 4130,
											"name": "tag",
											"source": 15,
											"value": "15"
										},
										{
											"begin": 3860,
											"end": 4130,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3860,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 3860,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "89"
										},
										{
											"begin": 3860,
											"end": 4130,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 3860,
											"end": 4130,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 3860,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "59"
										},
										{
											"begin": 3860,
											"end": 4130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3860,
											"end": 4130,
											"name": "tag",
											"source": 15,
											"value": "89"
										},
										{
											"begin": 3860,
											"end": 4130,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3860,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "90"
										},
										{
											"begin": 3860,
											"end": 4130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2064,
											"end": 2165,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 2064,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2064,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2064,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 2064,
											"end": 2165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7283,
											"end": 7487,
											"name": "tag",
											"source": 15,
											"value": "17"
										},
										{
											"begin": 7283,
											"end": 7487,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7283,
											"end": 7487,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "93"
										},
										{
											"begin": 7283,
											"end": 7487,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "94"
										},
										{
											"begin": 7283,
											"end": 7487,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 7283,
											"end": 7487,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 7283,
											"end": 7487,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "59"
										},
										{
											"begin": 7283,
											"end": 7487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7283,
											"end": 7487,
											"name": "tag",
											"source": 15,
											"value": "94"
										},
										{
											"begin": 7283,
											"end": 7487,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7283,
											"end": 7487,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "95"
										},
										{
											"begin": 7283,
											"end": 7487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7283,
											"end": 7487,
											"name": "tag",
											"source": 15,
											"value": "93"
										},
										{
											"begin": 7283,
											"end": 7487,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7283,
											"end": 7487,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 7283,
											"end": 7487,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5060,
											"end": 5066,
											"name": "PUSH",
											"source": 21,
											"value": "FFFF"
										},
										{
											"begin": 5048,
											"end": 5067,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 5048,
											"end": 5067,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 5048,
											"end": 5067,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 5030,
											"end": 5068,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5030,
											"end": 5068,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 5018,
											"end": 5020,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 5003,
											"end": 5021,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7283,
											"end": 7487,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "42"
										},
										{
											"begin": 4886,
											"end": 5074,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2294,
											"end": 2622,
											"name": "tag",
											"source": 15,
											"value": "19"
										},
										{
											"begin": 2294,
											"end": 2622,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2294,
											"end": 2622,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 2294,
											"end": 2622,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "103"
										},
										{
											"begin": 2294,
											"end": 2622,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 2294,
											"end": 2622,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 2294,
											"end": 2622,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 2294,
											"end": 2622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2294,
											"end": 2622,
											"name": "tag",
											"source": 15,
											"value": "103"
										},
										{
											"begin": 2294,
											"end": 2622,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2294,
											"end": 2622,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "105"
										},
										{
											"begin": 2294,
											"end": 2622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 3329,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 3329,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2450,
											"end": 2499,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 2450,
											"end": 2499,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2450,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2495,
											"end": 2499,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2450,
											"end": 2499,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2450,
											"end": 2499,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3077,
											"end": 3381,
											"name": "tag",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 3077,
											"end": 3381,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3077,
											"end": 3381,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 3077,
											"end": 3381,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "114"
										},
										{
											"begin": 3077,
											"end": 3381,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 3077,
											"end": 3381,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 3077,
											"end": 3381,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "59"
										},
										{
											"begin": 3077,
											"end": 3381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3077,
											"end": 3381,
											"name": "tag",
											"source": 15,
											"value": "114"
										},
										{
											"begin": 3077,
											"end": 3381,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3077,
											"end": 3381,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "115"
										},
										{
											"begin": 3077,
											"end": 3381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7563,
											"end": 7728,
											"name": "tag",
											"source": 15,
											"value": "23"
										},
										{
											"begin": 7563,
											"end": 7728,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7700,
											"end": 7721,
											"name": "PUSH",
											"source": 15,
											"value": "CA"
										},
										{
											"begin": 7700,
											"end": 7721,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7700,
											"end": 7721,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 7563,
											"end": 7728,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "72"
										},
										{
											"begin": 7563,
											"end": 7728,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4647,
											"end": 7207,
											"name": "tag",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 4647,
											"end": 7207,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4647,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "38"
										},
										{
											"begin": 4647,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "121"
										},
										{
											"begin": 4647,
											"end": 7207,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 4647,
											"end": 7207,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 4647,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "59"
										},
										{
											"begin": 4647,
											"end": 7207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4647,
											"end": 7207,
											"name": "tag",
											"source": 15,
											"value": "121"
										},
										{
											"begin": 4647,
											"end": 7207,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4647,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "122"
										},
										{
											"begin": 4647,
											"end": 7207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5684,
											"end": 5831,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 5684,
											"end": 5831,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5684,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 5684,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 5684,
											"end": 5831,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5684,
											"end": 5831,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5684,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 5684,
											"end": 5831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5684,
											"end": 5831,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 5684,
											"end": 5831,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5684,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 5684,
											"end": 5831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 831,
											"end": 942,
											"name": "tag",
											"source": 15,
											"value": "26"
										},
										{
											"begin": 831,
											"end": 942,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 831,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "48"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "48848F6F4AF5FF2A90F75345111FFAB654DA14E01D0D715638DA4379C8C19AE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 831,
											"end": 942,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 831,
											"end": 942,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4216,
											"end": 4527,
											"name": "tag",
											"source": 15,
											"value": "27"
										},
										{
											"begin": 4216,
											"end": 4527,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4216,
											"end": 4527,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 4216,
											"end": 4527,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "131"
										},
										{
											"begin": 4216,
											"end": 4527,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 4216,
											"end": 4527,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 4216,
											"end": 4527,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "59"
										},
										{
											"begin": 4216,
											"end": 4527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4216,
											"end": 4527,
											"name": "tag",
											"source": 15,
											"value": "131"
										},
										{
											"begin": 4216,
											"end": 4527,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4216,
											"end": 4527,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "132"
										},
										{
											"begin": 4216,
											"end": 4527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9010,
											"end": 9201,
											"name": "tag",
											"source": 15,
											"value": "28"
										},
										{
											"begin": 9010,
											"end": 9201,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9010,
											"end": 9201,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "72"
										},
										{
											"begin": 9010,
											"end": 9201,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "134"
										},
										{
											"begin": 9010,
											"end": 9201,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 9010,
											"end": 9201,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 9010,
											"end": 9201,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "59"
										},
										{
											"begin": 9010,
											"end": 9201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9010,
											"end": 9201,
											"name": "tag",
											"source": 15,
											"value": "134"
										},
										{
											"begin": 9010,
											"end": 9201,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9010,
											"end": 9201,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "135"
										},
										{
											"begin": 9010,
											"end": 9201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8039,
											"end": 8205,
											"name": "tag",
											"source": 15,
											"value": "29"
										},
										{
											"begin": 8039,
											"end": 8205,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8177,
											"end": 8198,
											"name": "PUSH",
											"source": 15,
											"value": "CB"
										},
										{
											"begin": 8177,
											"end": 8198,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8177,
											"end": 8198,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 8039,
											"end": 8205,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "72"
										},
										{
											"begin": 8039,
											"end": 8205,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 2314,
											"end": 2512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 2314,
											"end": 2512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3114,
											"end": 3118,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3137,
											"end": 3195,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3137,
											"end": 3195,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7965DB0B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3137,
											"end": 3195,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3137,
											"end": 3195,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3137,
											"end": 3235,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 3137,
											"end": 3235,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1168,
											"end": 1219,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1168,
											"end": 1219,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1168,
											"end": 1219,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 3199,
											"end": 3235,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 3199,
											"end": 3235,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3130,
											"end": 3235,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3029,
											"end": 3242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1800,
											"name": "tag",
											"source": 15,
											"value": "47"
										},
										{
											"begin": 954,
											"end": 1800,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3279,
											"end": 3298,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3301,
											"end": 3315,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3301,
											"end": 3315,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3380,
											"end": 3381,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3365,
											"end": 3381,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3346,
											"end": 3454,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3346,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 3346,
											"end": 3454,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3426,
											"end": 3430,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 1713,
											"end": 1736,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1713,
											"end": 1736,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1713,
											"end": 1736,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3436,
											"end": 3453,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6605,
											"end": 6607,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6587,
											"end": 6608,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 6644,
											"end": 6646,
											"name": "PUSH",
											"source": 21,
											"value": "2E"
										},
										{
											"begin": 6624,
											"end": 6642,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 6624,
											"end": 6642,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 6624,
											"end": 6642,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6617,
											"end": 6647,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 6683,
											"end": 6717,
											"name": "PUSH",
											"source": 21,
											"value": "496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
										},
										{
											"begin": 6663,
											"end": 6681,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 6663,
											"end": 6681,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 6663,
											"end": 6681,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6656,
											"end": 6718,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "191E481A5B9A5D1A585B1A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6734,
											"end": 6752,
											"name": "PUSH",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 6734,
											"end": 6752,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 6734,
											"end": 6752,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6727,
											"end": 6771,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 6788,
											"end": 6807,
											"name": "PUSH",
											"source": 21,
											"value": "84"
										},
										{
											"begin": 6788,
											"end": 6807,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3536,
											"end": 3548,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3552,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3596,
											"end": 3609,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1139,
											"end": 1176,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1139,
											"end": 1176,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1139,
											"end": 1176,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1139,
											"end": 1176,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1139,
											"end": 1176,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1139,
											"end": 1176,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1139,
											"end": 1230,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "160"
										},
										{
											"begin": 1139,
											"end": 1230,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1196,
											"end": 1230,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1196,
											"end": 1230,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1196,
											"end": 1230,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1196,
											"end": 1230,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1139,
											"end": 1230,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "160"
										},
										{
											"begin": 1139,
											"end": 1230,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1139,
											"end": 1280,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1139,
											"end": 1280,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1139,
											"end": 1280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "161"
										},
										{
											"begin": 1139,
											"end": 1280,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1250,
											"end": 1280,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1250,
											"end": 1280,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1250,
											"end": 1280,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1250,
											"end": 1280,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1139,
											"end": 1280,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "161"
										},
										{
											"begin": 1139,
											"end": 1280,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1118,
											"end": 1337,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "162"
										},
										{
											"begin": 1118,
											"end": 1337,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1118,
											"end": 1337,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1118,
											"end": 1337,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1118,
											"end": 1337,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1118,
											"end": 1337,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7020,
											"end": 7022,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 1118,
											"end": 1337,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1118,
											"end": 1337,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1118,
											"end": 1337,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7002,
											"end": 7023,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 7059,
											"end": 7061,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 7039,
											"end": 7057,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 7039,
											"end": 7057,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7039,
											"end": 7057,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7032,
											"end": 7062,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 7098,
											"end": 7131,
											"name": "PUSH",
											"source": 21,
											"value": "696E76616C696420617267756D656E74202D207A65726F206164647265737300"
										},
										{
											"begin": 7078,
											"end": 7096,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 7078,
											"end": 7096,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7078,
											"end": 7096,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7071,
											"end": 7132,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 7149,
											"end": 7167,
											"name": "PUSH",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 7149,
											"end": 7167,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1118,
											"end": 1337,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "156"
										},
										{
											"begin": 6818,
											"end": 7173,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1118,
											"end": 1337,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "162"
										},
										{
											"begin": 1118,
											"end": 1337,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1347,
											"end": 1367,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "C9"
										},
										{
											"begin": 1347,
											"end": 1412,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1347,
											"end": 1412,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1347,
											"end": 1412,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1347,
											"end": 1412,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 1347,
											"end": 1412,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1347,
											"end": 1412,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1347,
											"end": 1412,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1347,
											"end": 1412,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1347,
											"end": 1412,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1347,
											"end": 1412,
											"modifierDepth": 1,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 1347,
											"end": 1412,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1347,
											"end": 1412,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 1347,
											"end": 1412,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 1422,
											"end": 1443,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "CA"
										},
										{
											"begin": 1422,
											"end": 1516,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1422,
											"end": 1516,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1422,
											"end": 1516,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 1422,
											"end": 1516,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1422,
											"end": 1516,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1422,
											"end": 1516,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1422,
											"end": 1516,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1422,
											"end": 1516,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1422,
											"end": 1516,
											"modifierDepth": 1,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 1422,
											"end": 1516,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1422,
											"end": 1516,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 1526,
											"end": 1547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "CB"
										},
										{
											"begin": 1526,
											"end": 1592,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1526,
											"end": 1592,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1526,
											"end": 1592,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1526,
											"end": 1592,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 1526,
											"end": 1592,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1526,
											"end": 1592,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1526,
											"end": 1592,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1526,
											"end": 1592,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1526,
											"end": 1592,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1526,
											"end": 1592,
											"modifierDepth": 1,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 1526,
											"end": 1592,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1526,
											"end": 1592,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 1607,
											"end": 1651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1607,
											"end": 1651,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1607,
											"end": 1651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "7170BF15B246E880B2369CD7C67D057760D8A35149E8C64DDE91EFA22BCC76D0"
										},
										{
											"begin": 1607,
											"end": 1651,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1347,
											"end": 1367,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1347,
											"end": 1367,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1607,
											"end": 1651,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 15
										},
										{
											"begin": 1666,
											"end": 1716,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1666,
											"end": 1716,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1666,
											"end": 1716,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1666,
											"end": 1716,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1666,
											"end": 1716,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1666,
											"end": 1716,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "1B98CB79E6F73020175FE87333F1B91AD6A881519C0AFE30340C2599B2B4BDE0"
										},
										{
											"begin": 1666,
											"end": 1716,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1666,
											"end": 1716,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1666,
											"end": 1716,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1666,
											"end": 1716,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 15
										},
										{
											"begin": 1731,
											"end": 1767,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1731,
											"end": 1767,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1731,
											"end": 1767,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1731,
											"end": 1767,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1731,
											"end": 1767,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1731,
											"end": 1767,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "2FA8B95C1DB7AFE99E3398F3792F008135CEDC1FA26B0BB2ECD2352CD166D53C"
										},
										{
											"begin": 1731,
											"end": 1767,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1731,
											"end": 1767,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1731,
											"end": 1767,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1731,
											"end": 1767,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 15
										},
										{
											"begin": 1777,
											"end": 1793,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "165"
										},
										{
											"begin": 1777,
											"end": 1791,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "166"
										},
										{
											"begin": 1777,
											"end": 1793,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1777,
											"end": 1793,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "165"
										},
										{
											"begin": 1777,
											"end": 1793,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3651,
											"end": 3665,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3697,
											"end": 3702,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 7330,
											"end": 7366,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 7330,
											"end": 7366,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH",
											"source": 7,
											"value": "7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7318,
											"end": 7320,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 7303,
											"end": 7321,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3269,
											"end": 3752,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 954,
											"end": 1800,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 954,
											"end": 1800,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 954,
											"end": 1800,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 954,
											"end": 1800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3468,
											"end": 3777,
											"name": "tag",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 3468,
											"end": 3777,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "48848F6F4AF5FF2A90F75345111FFAB654DA14E01D0D715638DA4379C8C19AE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 876,
											"end": 942,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2928,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 2928,
											"end": 2944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3615,
											"end": 3636,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "CB"
										},
										{
											"begin": 3615,
											"end": 3711,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3615,
											"end": 3711,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3615,
											"end": 3711,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3615,
											"end": 3711,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3615,
											"end": 3711,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3615,
											"end": 3711,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3615,
											"end": 3711,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3615,
											"end": 3711,
											"modifierDepth": 1,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 3615,
											"end": 3711,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3615,
											"end": 3711,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3615,
											"end": 3711,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 3726,
											"end": 3770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3726,
											"end": 3770,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 3726,
											"end": 3770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "2FA8B95C1DB7AFE99E3398F3792F008135CEDC1FA26B0BB2ECD2352CD166D53C"
										},
										{
											"begin": 3726,
											"end": 3770,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 3726,
											"end": 3770,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 15
										},
										{
											"begin": 3468,
											"end": 3777,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3468,
											"end": 3777,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3468,
											"end": 3777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4908,
											"end": 4915,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4934,
											"end": 4940,
											"name": "PUSH",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4934,
											"end": 4956,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4934,
											"end": 4956,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4934,
											"end": 4956,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 2939,
											"end": 2943,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2928,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 2928,
											"end": 2944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5372,
											"end": 5397,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 5383,
											"end": 5387,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5389,
											"end": 5396,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5372,
											"end": 5382,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 5372,
											"end": 5397,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5372,
											"end": 5397,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 5372,
											"end": 5397,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5259,
											"end": 5404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6463,
											"end": 6486,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6463,
											"end": 6486,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 6463,
											"end": 6486,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7579,
											"end": 7581,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7561,
											"end": 7582,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 7618,
											"end": 7620,
											"name": "PUSH",
											"source": 21,
											"value": "2F"
										},
										{
											"begin": 7598,
											"end": 7616,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 7598,
											"end": 7616,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7598,
											"end": 7616,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7591,
											"end": 7621,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 7657,
											"end": 7691,
											"name": "PUSH",
											"source": 21,
											"value": "416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365"
										},
										{
											"begin": 7637,
											"end": 7655,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 7637,
											"end": 7655,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7637,
											"end": 7655,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7630,
											"end": 7692,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "103937B632B9903337B91039B2B633"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7708,
											"end": 7726,
											"name": "PUSH",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 7708,
											"end": 7726,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7708,
											"end": 7726,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7701,
											"end": 7746,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 7763,
											"end": 7782,
											"name": "PUSH",
											"source": 21,
											"value": "84"
										},
										{
											"begin": 7763,
											"end": 7782,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 7377,
											"end": 7788,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6549,
											"end": 6575,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 6561,
											"end": 6565,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6567,
											"end": 6574,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6549,
											"end": 6560,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 6549,
											"end": 6575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6549,
											"end": 6575,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 6549,
											"end": 6575,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6368,
											"end": 6582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2696,
											"end": 3002,
											"name": "tag",
											"source": 15,
											"value": "71"
										},
										{
											"begin": 2696,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "83599F2FD2D7ECEC31A0C854E1DFA0CD718F43D0F25B15E620B3800DBA1A8107"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 758,
											"end": 824,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2928,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 2928,
											"end": 2944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2835,
											"end": 2856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "CB"
										},
										{
											"begin": 2835,
											"end": 2856,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 2835,
											"end": 2942,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2835,
											"end": 2942,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9F3418D5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2835,
											"end": 2942,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2835,
											"end": 2942,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7983,
											"end": 8015,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 7983,
											"end": 8015,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 7983,
											"end": 8015,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 2835,
											"end": 2942,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 2835,
											"end": 2942,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2835,
											"end": 2942,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7965,
											"end": 8016,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 8064,
											"end": 8070,
											"name": "PUSH",
											"source": 21,
											"value": "FFFF"
										},
										{
											"begin": 8052,
											"end": 8071,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 8052,
											"end": 8071,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 8032,
											"end": 8050,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 8032,
											"end": 8050,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 8032,
											"end": 8050,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8025,
											"end": 8072,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 2835,
											"end": 2856,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2835,
											"end": 2856,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2835,
											"end": 2856,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2835,
											"end": 2856,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2835,
											"end": 2884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "9F3418D5"
										},
										{
											"begin": 2835,
											"end": 2884,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7938,
											"end": 7956,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 7938,
											"end": 7956,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2835,
											"end": 2942,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2835,
											"end": 2942,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2835,
											"end": 2942,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2835,
											"end": 2942,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2835,
											"end": 2942,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2835,
											"end": 2942,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2835,
											"end": 2942,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2835,
											"end": 2942,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2835,
											"end": 2942,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 2835,
											"end": 2942,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2835,
											"end": 2942,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 15
										},
										{
											"begin": 2835,
											"end": 2942,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2835,
											"end": 2942,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2835,
											"end": 2942,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2835,
											"end": 2942,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "194"
										},
										{
											"begin": 2835,
											"end": 2942,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2835,
											"end": 2942,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2835,
											"end": 2942,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2835,
											"end": 2942,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2835,
											"end": 2942,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "194"
										},
										{
											"begin": 2835,
											"end": 2942,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2835,
											"end": 2942,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2835,
											"end": 2942,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 15
										},
										{
											"begin": 2835,
											"end": 2942,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 15
										},
										{
											"begin": 2835,
											"end": 2942,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2835,
											"end": 2942,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2835,
											"end": 2942,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2835,
											"end": 2942,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "196"
										},
										{
											"begin": 2835,
											"end": 2942,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2835,
											"end": 2942,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 2835,
											"end": 2942,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2835,
											"end": 2942,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2835,
											"end": 2942,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 15
										},
										{
											"begin": 2835,
											"end": 2942,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 2835,
											"end": 2942,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2835,
											"end": 2942,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2835,
											"end": 2942,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "196"
										},
										{
											"begin": 2835,
											"end": 2942,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2957,
											"end": 2995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2957,
											"end": 2995,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2957,
											"end": 2995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "FFFF"
										},
										{
											"begin": 2957,
											"end": 2995,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2957,
											"end": 2995,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2957,
											"end": 2995,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2957,
											"end": 2995,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2957,
											"end": 2995,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2957,
											"end": 2995,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2957,
											"end": 2995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "4ED3B726495C2DCA1FF1215D9CA54E1A4030ABB5E82B0F6CE55702416CEE853"
										},
										{
											"begin": 2957,
											"end": 2995,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2957,
											"end": 2995,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2957,
											"end": 2995,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2957,
											"end": 2995,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 15
										},
										{
											"begin": 2696,
											"end": 3002,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2696,
											"end": 3002,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2696,
											"end": 3002,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2696,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8590,
											"end": 8941,
											"name": "tag",
											"source": 15,
											"value": "79"
										},
										{
											"begin": 8590,
											"end": 8941,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "83599F2FD2D7ECEC31A0C854E1DFA0CD718F43D0F25B15E620B3800DBA1A8107"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 758,
											"end": 824,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2928,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 2928,
											"end": 2944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "tag",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8753,
											"end": 8774,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "CB"
										},
										{
											"begin": 8753,
											"end": 8774,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 8753,
											"end": 8876,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 8753,
											"end": 8876,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A53410DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8753,
											"end": 8876,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8753,
											"end": 8876,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8356,
											"end": 8371,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 8356,
											"end": 8371,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 8356,
											"end": 8371,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 8753,
											"end": 8876,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 8753,
											"end": 8876,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8753,
											"end": 8876,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8338,
											"end": 8372,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 8408,
											"end": 8423,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 8408,
											"end": 8423,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 8408,
											"end": 8423,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 8388,
											"end": 8406,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 8388,
											"end": 8406,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 8388,
											"end": 8406,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8381,
											"end": 8424,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 8472,
											"end": 8478,
											"name": "PUSH",
											"source": 21,
											"value": "FFFF"
										},
										{
											"begin": 8460,
											"end": 8479,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 8460,
											"end": 8479,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 8440,
											"end": 8458,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 8440,
											"end": 8458,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 8440,
											"end": 8458,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8433,
											"end": 8480,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 8753,
											"end": 8774,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8753,
											"end": 8774,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8753,
											"end": 8774,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 8753,
											"end": 8774,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8753,
											"end": 8795,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "A53410DD"
										},
										{
											"begin": 8753,
											"end": 8795,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8273,
											"end": 8291,
											"name": "PUSH",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 8273,
											"end": 8291,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 8753,
											"end": 8876,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8753,
											"end": 8876,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 8753,
											"end": 8876,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 8753,
											"end": 8876,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8753,
											"end": 8876,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8753,
											"end": 8876,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 8753,
											"end": 8876,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8753,
											"end": 8876,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8753,
											"end": 8876,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 8753,
											"end": 8876,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8753,
											"end": 8876,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 15
										},
										{
											"begin": 8753,
											"end": 8876,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8753,
											"end": 8876,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8753,
											"end": 8876,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8753,
											"end": 8876,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "203"
										},
										{
											"begin": 8753,
											"end": 8876,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8753,
											"end": 8876,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8753,
											"end": 8876,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8753,
											"end": 8876,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 8753,
											"end": 8876,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "203"
										},
										{
											"begin": 8753,
											"end": 8876,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8753,
											"end": 8876,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8753,
											"end": 8876,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 15
										},
										{
											"begin": 8753,
											"end": 8876,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 15
										},
										{
											"begin": 8753,
											"end": 8876,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8753,
											"end": 8876,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8753,
											"end": 8876,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8753,
											"end": 8876,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "205"
										},
										{
											"begin": 8753,
											"end": 8876,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8753,
											"end": 8876,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 8753,
											"end": 8876,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8753,
											"end": 8876,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8753,
											"end": 8876,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 15
										},
										{
											"begin": 8753,
											"end": 8876,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 8753,
											"end": 8876,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8753,
											"end": 8876,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 8753,
											"end": 8876,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "205"
										},
										{
											"begin": 8753,
											"end": 8876,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8891,
											"end": 8934,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 8891,
											"end": 8934,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8891,
											"end": 8934,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8891,
											"end": 8934,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 8891,
											"end": 8934,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 8891,
											"end": 8934,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8891,
											"end": 8934,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 8891,
											"end": 8934,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 8891,
											"end": 8934,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8891,
											"end": 8934,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "6AE73635C50D24A45AF6FBD5E016AC4BED179ADDBC8BF24E04FF0FCC6D33AF19"
										},
										{
											"begin": 8891,
											"end": 8934,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8891,
											"end": 8934,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8891,
											"end": 8934,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8891,
											"end": 8934,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 15
										},
										{
											"begin": 8590,
											"end": 8941,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8590,
											"end": 8941,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8590,
											"end": 8941,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8590,
											"end": 8941,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8590,
											"end": 8941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8274,
											"end": 8513,
											"name": "tag",
											"source": 15,
											"value": "82"
										},
										{
											"begin": 8274,
											"end": 8513,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8378,
											"end": 8382,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8378,
											"end": 8382,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8410,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "207"
										},
										{
											"begin": 8419,
											"end": 8431,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8410,
											"end": 8418,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "135"
										},
										{
											"begin": 8410,
											"end": 8432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8410,
											"end": 8432,
											"name": "tag",
											"source": 15,
											"value": "207"
										},
										{
											"begin": 8410,
											"end": 8432,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8402,
											"end": 8447,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 8402,
											"end": 8447,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 8398,
											"end": 8486,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "208"
										},
										{
											"begin": 8398,
											"end": 8486,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8470,
											"end": 8475,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8470,
											"end": 8475,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8274,
											"end": 8513,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8274,
											"end": 8513,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8398,
											"end": 8486,
											"name": "tag",
											"source": 15,
											"value": "208"
										},
										{
											"begin": 8398,
											"end": 8486,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8502,
											"end": 8506,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 8502,
											"end": 8506,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8274,
											"end": 8513,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8274,
											"end": 8513,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1882,
											"end": 2219,
											"name": "tag",
											"source": 15,
											"value": "87"
										},
										{
											"begin": 1882,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2075,
											"end": 2084,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2070,
											"end": 2213,
											"name": "tag",
											"source": 15,
											"value": "210"
										},
										{
											"begin": 2070,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2090,
											"end": 2115,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2090,
											"end": 2115,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2090,
											"end": 2115,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 2070,
											"end": 2213,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2070,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "211"
										},
										{
											"begin": 2070,
											"end": 2213,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2136,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "213"
										},
										{
											"begin": 2153,
											"end": 2167,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 2153,
											"end": 2167,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 2168,
											"end": 2169,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2153,
											"end": 2170,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2153,
											"end": 2170,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2153,
											"end": 2170,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 2153,
											"end": 2170,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "215"
										},
										{
											"begin": 2153,
											"end": 2170,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2153,
											"end": 2170,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "215"
										},
										{
											"begin": 2153,
											"end": 2170,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "216"
										},
										{
											"begin": 2153,
											"end": 2170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2153,
											"end": 2170,
											"name": "tag",
											"source": 15,
											"value": "215"
										},
										{
											"begin": 2153,
											"end": 2170,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2153,
											"end": 2170,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2153,
											"end": 2170,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2153,
											"end": 2170,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2153,
											"end": 2170,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 2153,
											"end": 2170,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2153,
											"end": 2170,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2153,
											"end": 2170,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2153,
											"end": 2170,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2153,
											"end": 2170,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2153,
											"end": 2170,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "217"
										},
										{
											"begin": 2153,
											"end": 2170,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2153,
											"end": 2170,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2153,
											"end": 2170,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "59"
										},
										{
											"begin": 2153,
											"end": 2170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2153,
											"end": 2170,
											"name": "tag",
											"source": 15,
											"value": "217"
										},
										{
											"begin": 2153,
											"end": 2170,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2172,
											"end": 2183,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2172,
											"end": 2183,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2184,
											"end": 2185,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2172,
											"end": 2186,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2172,
											"end": 2186,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2172,
											"end": 2186,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 2172,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "219"
										},
										{
											"begin": 2172,
											"end": 2186,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2172,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "219"
										},
										{
											"begin": 2172,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "216"
										},
										{
											"begin": 2172,
											"end": 2186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2172,
											"end": 2186,
											"name": "tag",
											"source": 15,
											"value": "219"
										},
										{
											"begin": 2172,
											"end": 2186,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2172,
											"end": 2186,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2172,
											"end": 2186,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2172,
											"end": 2186,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2172,
											"end": 2186,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 2172,
											"end": 2186,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2172,
											"end": 2186,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2172,
											"end": 2186,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2172,
											"end": 2186,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2172,
											"end": 2186,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2172,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "220"
										},
										{
											"begin": 2172,
											"end": 2186,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2172,
											"end": 2186,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2172,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "59"
										},
										{
											"begin": 2172,
											"end": 2186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2172,
											"end": 2186,
											"name": "tag",
											"source": 15,
											"value": "220"
										},
										{
											"begin": 2172,
											"end": 2186,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2188,
											"end": 2198,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2188,
											"end": 2198,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2199,
											"end": 2200,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2188,
											"end": 2201,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2188,
											"end": 2201,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2188,
											"end": 2201,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 2188,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "223"
										},
										{
											"begin": 2188,
											"end": 2201,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2188,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "223"
										},
										{
											"begin": 2188,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "216"
										},
										{
											"begin": 2188,
											"end": 2201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2188,
											"end": 2201,
											"name": "tag",
											"source": 15,
											"value": "223"
										},
										{
											"begin": 2188,
											"end": 2201,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2188,
											"end": 2201,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2188,
											"end": 2201,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2188,
											"end": 2201,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2188,
											"end": 2201,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 2188,
											"end": 2201,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2188,
											"end": 2201,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2188,
											"end": 2201,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2188,
											"end": 2201,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2188,
											"end": 2201,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2188,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "77"
										},
										{
											"begin": 2188,
											"end": 2201,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2188,
											"end": 2201,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2188,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "225"
										},
										{
											"begin": 2188,
											"end": 2201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2136,
											"end": 2202,
											"name": "tag",
											"source": 15,
											"value": "213"
										},
										{
											"begin": 2136,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2117,
											"end": 2120,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2117,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "226"
										},
										{
											"begin": 2117,
											"end": 2120,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2117,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "227"
										},
										{
											"begin": 2117,
											"end": 2120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2117,
											"end": 2120,
											"name": "tag",
											"source": 15,
											"value": "226"
										},
										{
											"begin": 2117,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2117,
											"end": 2120,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2117,
											"end": 2120,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2117,
											"end": 2120,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2070,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "210"
										},
										{
											"begin": 2070,
											"end": 2213,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2070,
											"end": 2213,
											"name": "tag",
											"source": 15,
											"value": "211"
										},
										{
											"begin": 2070,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2070,
											"end": 2213,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1882,
											"end": 2219,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1882,
											"end": 2219,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1882,
											"end": 2219,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1882,
											"end": 2219,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1882,
											"end": 2219,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1882,
											"end": 2219,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1882,
											"end": 2219,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3860,
											"end": 4130,
											"name": "tag",
											"source": 15,
											"value": "90"
										},
										{
											"begin": 3860,
											"end": 4130,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "48848F6F4AF5FF2A90F75345111FFAB654DA14E01D0D715638DA4379C8C19AE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 876,
											"end": 942,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2928,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 2928,
											"end": 2944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "tag",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3999,
											"end": 4019,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "C9"
										},
										{
											"begin": 3999,
											"end": 4064,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3999,
											"end": 4064,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3999,
											"end": 4064,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3999,
											"end": 4064,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3999,
											"end": 4064,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3999,
											"end": 4064,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3999,
											"end": 4064,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3999,
											"end": 4064,
											"modifierDepth": 1,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 3999,
											"end": 4064,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3999,
											"end": 4064,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3999,
											"end": 4064,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 4079,
											"end": 4123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4079,
											"end": 4123,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 4079,
											"end": 4123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "7170BF15B246E880B2369CD7C67D057760D8A35149E8C64DDE91EFA22BCC76D0"
										},
										{
											"begin": 4079,
											"end": 4123,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 4079,
											"end": 4123,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 15
										},
										{
											"begin": 3860,
											"end": 4130,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3860,
											"end": 4130,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3860,
											"end": 4130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2064,
											"end": 2165,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 2064,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 1334,
											"end": 1347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2128,
											"end": 2158,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 2155,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2128,
											"end": 2146,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 2128,
											"end": 2158,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2128,
											"end": 2158,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 2128,
											"end": 2158,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2064,
											"end": 2165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7283,
											"end": 7487,
											"name": "tag",
											"source": 15,
											"value": "95"
										},
										{
											"begin": 7283,
											"end": 7487,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7423,
											"end": 7444,
											"name": "PUSH",
											"source": 15,
											"value": "CB"
										},
										{
											"begin": 7423,
											"end": 7444,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 7423,
											"end": 7480,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 7423,
											"end": 7480,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C9F84EF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7423,
											"end": 7480,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7423,
											"end": 7480,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2812,
											"end": 2844,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 2812,
											"end": 2844,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2812,
											"end": 2844,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 7423,
											"end": 7480,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 7423,
											"end": 7480,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7423,
											"end": 7480,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2794,
											"end": 2845,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 7394,
											"end": 7400,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7394,
											"end": 7400,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 7423,
											"end": 7444,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 7423,
											"end": 7444,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7423,
											"end": 7466,
											"name": "PUSH",
											"source": 15,
											"value": "727E13BC"
										},
										{
											"begin": 7423,
											"end": 7466,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2767,
											"end": 2785,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 2767,
											"end": 2785,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7423,
											"end": 7480,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7423,
											"end": 7480,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 7423,
											"end": 7480,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 7423,
											"end": 7480,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7423,
											"end": 7480,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7423,
											"end": 7480,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 7423,
											"end": 7480,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7423,
											"end": 7480,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 7423,
											"end": 7480,
											"name": "GAS",
											"source": 15
										},
										{
											"begin": 7423,
											"end": 7480,
											"name": "STATICCALL",
											"source": 15
										},
										{
											"begin": 7423,
											"end": 7480,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7423,
											"end": 7480,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7423,
											"end": 7480,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7423,
											"end": 7480,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "240"
										},
										{
											"begin": 7423,
											"end": 7480,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7423,
											"end": 7480,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 7423,
											"end": 7480,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7423,
											"end": 7480,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7423,
											"end": 7480,
											"name": "RETURNDATACOPY",
											"source": 15
										},
										{
											"begin": 7423,
											"end": 7480,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 7423,
											"end": 7480,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7423,
											"end": 7480,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 7423,
											"end": 7480,
											"name": "tag",
											"source": 15,
											"value": "240"
										},
										{
											"begin": 7423,
											"end": 7480,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7423,
											"end": 7480,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7423,
											"end": 7480,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7423,
											"end": 7480,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7423,
											"end": 7480,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7423,
											"end": 7480,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 7423,
											"end": 7480,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 7423,
											"end": 7480,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 7423,
											"end": 7480,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 7423,
											"end": 7480,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 7423,
											"end": 7480,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 7423,
											"end": 7480,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7423,
											"end": 7480,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7423,
											"end": 7480,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 7423,
											"end": 7480,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7423,
											"end": 7480,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7423,
											"end": 7480,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7423,
											"end": 7480,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 7423,
											"end": 7480,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7423,
											"end": 7480,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7423,
											"end": 7480,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7423,
											"end": 7480,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7423,
											"end": 7480,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7423,
											"end": 7480,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "147"
										},
										{
											"begin": 7423,
											"end": 7480,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7423,
											"end": 7480,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7423,
											"end": 7480,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "242"
										},
										{
											"begin": 7423,
											"end": 7480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2294,
											"end": 2622,
											"name": "tag",
											"source": 15,
											"value": "105"
										},
										{
											"begin": 2294,
											"end": 2622,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "83599F2FD2D7ECEC31A0C854E1DFA0CD718F43D0F25B15E620B3800DBA1A8107"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 758,
											"end": 824,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2928,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 2928,
											"end": 2944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "tag",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2438,
											"end": 2459,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2462,
											"end": 2484,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "247"
										},
										{
											"begin": 2471,
											"end": 2483,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2462,
											"end": 2470,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "135"
										},
										{
											"begin": 2462,
											"end": 2484,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2462,
											"end": 2484,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "247"
										},
										{
											"begin": 2462,
											"end": 2484,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2494,
											"end": 2515,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "CB"
										},
										{
											"begin": 2494,
											"end": 2515,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 2494,
											"end": 2561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2494,
											"end": 2561,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7402E7C3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2494,
											"end": 2561,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2494,
											"end": 2561,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9915,
											"end": 9930,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 9915,
											"end": 9930,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 9915,
											"end": 9930,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 2494,
											"end": 2561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 2494,
											"end": 2561,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2494,
											"end": 2561,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9897,
											"end": 9931,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 9967,
											"end": 9982,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 9967,
											"end": 9982,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 9967,
											"end": 9982,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 9947,
											"end": 9965,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 9947,
											"end": 9965,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 9947,
											"end": 9965,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9940,
											"end": 9983,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 2438,
											"end": 2484,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2438,
											"end": 2484,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2494,
											"end": 2515,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2494,
											"end": 2515,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2494,
											"end": 2515,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2494,
											"end": 2536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "E805CF86"
										},
										{
											"begin": 2494,
											"end": 2536,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9832,
											"end": 9850,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 9832,
											"end": 9850,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2494,
											"end": 2561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2494,
											"end": 2561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2494,
											"end": 2561,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2494,
											"end": 2561,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2494,
											"end": 2561,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2494,
											"end": 2561,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2494,
											"end": 2561,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2494,
											"end": 2561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2494,
											"end": 2561,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 2494,
											"end": 2561,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2494,
											"end": 2561,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 15
										},
										{
											"begin": 2494,
											"end": 2561,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2494,
											"end": 2561,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2494,
											"end": 2561,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2494,
											"end": 2561,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "250"
										},
										{
											"begin": 2494,
											"end": 2561,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2494,
											"end": 2561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2494,
											"end": 2561,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2494,
											"end": 2561,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2494,
											"end": 2561,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "250"
										},
										{
											"begin": 2494,
											"end": 2561,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2494,
											"end": 2561,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2494,
											"end": 2561,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 15
										},
										{
											"begin": 2494,
											"end": 2561,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 15
										},
										{
											"begin": 2494,
											"end": 2561,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2494,
											"end": 2561,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2494,
											"end": 2561,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2494,
											"end": 2561,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 2494,
											"end": 2561,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2494,
											"end": 2561,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 2494,
											"end": 2561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2494,
											"end": 2561,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2494,
											"end": 2561,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 15
										},
										{
											"begin": 2494,
											"end": 2561,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 2494,
											"end": 2561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2494,
											"end": 2561,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2494,
											"end": 2561,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 2494,
											"end": 2561,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2576,
											"end": 2615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2576,
											"end": 2615,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2576,
											"end": 2615,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2576,
											"end": 2615,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 2576,
											"end": 2615,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2576,
											"end": 2615,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2576,
											"end": 2615,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2576,
											"end": 2615,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2576,
											"end": 2615,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2576,
											"end": 2615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "E98082932C8056A0F514DA9104E4A66BC2CBAEF102AD59D90C4B24220EBF6010"
										},
										{
											"begin": 2576,
											"end": 2615,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2576,
											"end": 2615,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2576,
											"end": 2615,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2576,
											"end": 2615,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 15
										},
										{
											"begin": 2428,
											"end": 2622,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2294,
											"end": 2622,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2294,
											"end": 2622,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2294,
											"end": 2622,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2294,
											"end": 2622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3419,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3438,
											"end": 3450,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3450,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3450,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3444,
											"name": "PUSH",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 3438,
											"end": 3450,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3438,
											"end": 3450,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3450,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3450,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3450,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3438,
											"end": 3450,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3450,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3450,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3438,
											"end": 3467,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3467,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3467,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3467,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3467,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3467,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3467,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3467,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3467,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3467,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3467,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3467,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3467,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 3438,
											"end": 3467,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3467,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3329,
											"end": 3474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3077,
											"end": 3381,
											"name": "tag",
											"source": 15,
											"value": "115"
										},
										{
											"begin": 3077,
											"end": 3381,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "83599F2FD2D7ECEC31A0C854E1DFA0CD718F43D0F25B15E620B3800DBA1A8107"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 758,
											"end": 824,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2928,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 2928,
											"end": 2944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "tag",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3200,
											"end": 3221,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3224,
											"end": 3246,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "257"
										},
										{
											"begin": 3233,
											"end": 3245,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3224,
											"end": 3232,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "135"
										},
										{
											"begin": 3224,
											"end": 3246,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3224,
											"end": 3246,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "257"
										},
										{
											"begin": 3224,
											"end": 3246,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3256,
											"end": 3277,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "CB"
										},
										{
											"begin": 3256,
											"end": 3277,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 3256,
											"end": 3317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3256,
											"end": 3317,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CF191BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3256,
											"end": 3317,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3256,
											"end": 3317,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2812,
											"end": 2844,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 2812,
											"end": 2844,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2812,
											"end": 2844,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 3256,
											"end": 3317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 3256,
											"end": 3317,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3256,
											"end": 3317,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2794,
											"end": 2845,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 3200,
											"end": 3246,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3200,
											"end": 3246,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3256,
											"end": 3277,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3256,
											"end": 3277,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3256,
											"end": 3277,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3256,
											"end": 3303,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "CF191BCD"
										},
										{
											"begin": 3256,
											"end": 3303,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2767,
											"end": 2785,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 2767,
											"end": 2785,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3256,
											"end": 3317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3256,
											"end": 3317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3256,
											"end": 3317,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 3256,
											"end": 3317,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3256,
											"end": 3317,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3256,
											"end": 3317,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 3256,
											"end": 3317,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3256,
											"end": 3317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3256,
											"end": 3317,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 3256,
											"end": 3317,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3256,
											"end": 3317,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 15
										},
										{
											"begin": 3256,
											"end": 3317,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3256,
											"end": 3317,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3256,
											"end": 3317,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3256,
											"end": 3317,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "259"
										},
										{
											"begin": 3256,
											"end": 3317,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3256,
											"end": 3317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3256,
											"end": 3317,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3256,
											"end": 3317,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3256,
											"end": 3317,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "259"
										},
										{
											"begin": 3256,
											"end": 3317,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3256,
											"end": 3317,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3256,
											"end": 3317,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 15
										},
										{
											"begin": 3256,
											"end": 3317,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 15
										},
										{
											"begin": 3256,
											"end": 3317,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3256,
											"end": 3317,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3256,
											"end": 3317,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3256,
											"end": 3317,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "261"
										},
										{
											"begin": 3256,
											"end": 3317,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3256,
											"end": 3317,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 3256,
											"end": 3317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3256,
											"end": 3317,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3256,
											"end": 3317,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 15
										},
										{
											"begin": 3256,
											"end": 3317,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 3256,
											"end": 3317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3256,
											"end": 3317,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3256,
											"end": 3317,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "261"
										},
										{
											"begin": 3256,
											"end": 3317,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3332,
											"end": 3374,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3332,
											"end": 3374,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3332,
											"end": 3374,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3332,
											"end": 3374,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3332,
											"end": 3374,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3332,
											"end": 3374,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3332,
											"end": 3374,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 3332,
											"end": 3374,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3332,
											"end": 3374,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3332,
											"end": 3374,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "59D6590E225B81BEFE259AF056324092801080ACBB7FEAB310EB34678871F327"
										},
										{
											"begin": 3332,
											"end": 3374,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3332,
											"end": 3374,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3332,
											"end": 3374,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3332,
											"end": 3374,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 15
										},
										{
											"begin": 3190,
											"end": 3381,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3077,
											"end": 3381,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3077,
											"end": 3381,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3077,
											"end": 3381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4647,
											"end": 7207,
											"name": "tag",
											"source": 15,
											"value": "122"
										},
										{
											"begin": 4647,
											"end": 7207,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4753,
											"end": 4757,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4753,
											"end": 4757,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4785,
											"end": 4807,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "264"
										},
										{
											"begin": 4794,
											"end": 4806,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4785,
											"end": 4793,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "135"
										},
										{
											"begin": 4785,
											"end": 4807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4785,
											"end": 4807,
											"name": "tag",
											"source": 15,
											"value": "264"
										},
										{
											"begin": 4785,
											"end": 4807,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4777,
											"end": 4822,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4777,
											"end": 4822,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4773,
											"end": 4861,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "265"
										},
										{
											"begin": 4773,
											"end": 4861,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4845,
											"end": 4850,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4845,
											"end": 4850,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4647,
											"end": 7207,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4647,
											"end": 7207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4773,
											"end": 4861,
											"name": "tag",
											"source": 15,
											"value": "265"
										},
										{
											"begin": 4773,
											"end": 4861,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4909,
											"end": 4929,
											"name": "PUSH",
											"source": 15,
											"value": "C9"
										},
										{
											"begin": 4909,
											"end": 4929,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37C27581"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 4870,
											"end": 4906,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4870,
											"end": 4906,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4909,
											"end": 4929,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4909,
											"end": 4929,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4909,
											"end": 4957,
											"name": "PUSH",
											"source": 15,
											"value": "DF09D604"
										},
										{
											"begin": 4909,
											"end": 4957,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4870,
											"end": 4906,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 4870,
											"end": 4906,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4909,
											"end": 4929,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "GAS",
											"source": 15
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "STATICCALL",
											"source": 15
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "RETURNDATACOPY",
											"source": 15
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "tag",
											"source": 15,
											"value": "267"
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "RETURNDATACOPY",
											"source": 15
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "268"
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "269"
										},
										{
											"begin": 4909,
											"end": 4959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "tag",
											"source": 15,
											"value": "268"
										},
										{
											"begin": 4909,
											"end": 4959,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4870,
											"end": 4959,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4870,
											"end": 4959,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4973,
											"end": 4992,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4973,
											"end": 4999,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5003,
											"end": 5004,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4973,
											"end": 5004,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4969,
											"end": 5042,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "270"
										},
										{
											"begin": 4969,
											"end": 5042,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5027,
											"end": 5031,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 5027,
											"end": 5031,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4647,
											"end": 7207,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4647,
											"end": 7207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4969,
											"end": 5042,
											"name": "tag",
											"source": 15,
											"value": "270"
										},
										{
											"begin": 4969,
											"end": 5042,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5052,
											"end": 5075,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5085,
											"end": 5099,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5109,
											"end": 5123,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5133,
											"end": 5149,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 5159,
											"end": 5176,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5186,
											"end": 5204,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5214,
											"end": 7180,
											"name": "tag",
											"source": 15,
											"value": "271"
										},
										{
											"begin": 5214,
											"end": 7180,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5273,
											"end": 5292,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 5273,
											"end": 5299,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5260,
											"end": 5270,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5260,
											"end": 5299,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 5214,
											"end": 7180,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5214,
											"end": 7180,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "272"
										},
										{
											"begin": 5214,
											"end": 7180,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5389,
											"end": 5410,
											"name": "PUSH",
											"source": 15,
											"value": "CA"
										},
										{
											"begin": 5389,
											"end": 5410,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 5480,
											"end": 5511,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 5480,
											"end": 5511,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5350,
											"end": 5386,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5350,
											"end": 5386,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5389,
											"end": 5410,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 5389,
											"end": 5410,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5389,
											"end": 5458,
											"name": "PUSH",
											"source": 15,
											"value": "52C111D1"
										},
										{
											"begin": 5389,
											"end": 5458,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5480,
											"end": 5499,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 5480,
											"end": 5499,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5500,
											"end": 5510,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5500,
											"end": 5510,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5480,
											"end": 5511,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5480,
											"end": 5511,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 5480,
											"end": 5511,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "275"
										},
										{
											"begin": 5480,
											"end": 5511,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5480,
											"end": 5511,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "275"
										},
										{
											"begin": 5480,
											"end": 5511,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "216"
										},
										{
											"begin": 5480,
											"end": 5511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5480,
											"end": 5511,
											"name": "tag",
											"source": 15,
											"value": "275"
										},
										{
											"begin": 5480,
											"end": 5511,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5480,
											"end": 5511,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5480,
											"end": 5511,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 5480,
											"end": 5511,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5480,
											"end": 5511,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5480,
											"end": 5511,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5480,
											"end": 5511,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "276"
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1313,
											"end": 1338,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1313,
											"end": 1338,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 1301,
											"end": 1303,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 1286,
											"end": 1304,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1286,
											"end": 1304,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1167,
											"end": 1344,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "tag",
											"source": 15,
											"value": "276"
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "GAS",
											"source": 15
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "STATICCALL",
											"source": 15
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "279"
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "RETURNDATACOPY",
											"source": 15
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "tag",
											"source": 15,
											"value": "279"
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "RETURNDATACOPY",
											"source": 15
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "280"
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "281"
										},
										{
											"begin": 5389,
											"end": 5529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "tag",
											"source": 15,
											"value": "280"
										},
										{
											"begin": 5389,
											"end": 5529,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5350,
											"end": 5529,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5350,
											"end": 5529,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5548,
											"end": 5562,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5548,
											"end": 5569,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5573,
											"end": 5574,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5548,
											"end": 5574,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 5544,
											"end": 5621,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "282"
										},
										{
											"begin": 5544,
											"end": 5621,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5601,
											"end": 5606,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5601,
											"end": 5606,
											"name": "SWAP10",
											"source": 15
										},
										{
											"begin": 4647,
											"end": 7207,
											"name": "SWAP9",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4647,
											"end": 7207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5544,
											"end": 5621,
											"name": "tag",
											"source": 15,
											"value": "282"
										},
										{
											"begin": 5544,
											"end": 5621,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5635,
											"end": 5660,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5677,
											"end": 5691,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5677,
											"end": 5698,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5663,
											"end": 5699,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5663,
											"end": 5699,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5663,
											"end": 5699,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 5663,
											"end": 5699,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5663,
											"end": 5699,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "284"
										},
										{
											"begin": 5663,
											"end": 5699,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5663,
											"end": 5699,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "284"
										},
										{
											"begin": 5663,
											"end": 5699,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "285"
										},
										{
											"begin": 5663,
											"end": 5699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5663,
											"end": 5699,
											"name": "tag",
											"source": 15,
											"value": "284"
										},
										{
											"begin": 5663,
											"end": 5699,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5663,
											"end": 5699,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5663,
											"end": 5699,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5663,
											"end": 5699,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5663,
											"end": 5699,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5663,
											"end": 5699,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5663,
											"end": 5699,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5663,
											"end": 5699,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5663,
											"end": 5699,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5663,
											"end": 5699,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 5663,
											"end": 5699,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5663,
											"end": 5699,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5663,
											"end": 5699,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5663,
											"end": 5699,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5663,
											"end": 5699,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5663,
											"end": 5699,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5663,
											"end": 5699,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5663,
											"end": 5699,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5663,
											"end": 5699,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "286"
										},
										{
											"begin": 5663,
											"end": 5699,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5663,
											"end": 5699,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5663,
											"end": 5699,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5663,
											"end": 5699,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5663,
											"end": 5699,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5663,
											"end": 5699,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5663,
											"end": 5699,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 5663,
											"end": 5699,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5663,
											"end": 5699,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 5663,
											"end": 5699,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5663,
											"end": 5699,
											"name": "CALLDATACOPY",
											"source": 15
										},
										{
											"begin": 5663,
											"end": 5699,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5663,
											"end": 5699,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5663,
											"end": 5699,
											"name": "tag",
											"source": 15,
											"value": "286"
										},
										{
											"begin": 5663,
											"end": 5699,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5663,
											"end": 5699,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5635,
											"end": 5699,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5635,
											"end": 5699,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5718,
											"end": 5727,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5713,
											"end": 5993,
											"name": "tag",
											"source": 15,
											"value": "287"
										},
										{
											"begin": 5713,
											"end": 5993,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5737,
											"end": 5751,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5737,
											"end": 5758,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5733,
											"end": 5734,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5733,
											"end": 5758,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 5713,
											"end": 5993,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5713,
											"end": 5993,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "288"
										},
										{
											"begin": 5713,
											"end": 5993,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5864,
											"end": 5878,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5879,
											"end": 5880,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5864,
											"end": 5881,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5864,
											"end": 5881,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5864,
											"end": 5881,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5864,
											"end": 5881,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 5864,
											"end": 5881,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "291"
										},
										{
											"begin": 5864,
											"end": 5881,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5864,
											"end": 5881,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "291"
										},
										{
											"begin": 5864,
											"end": 5881,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "216"
										},
										{
											"begin": 5864,
											"end": 5881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5864,
											"end": 5881,
											"name": "tag",
											"source": 15,
											"value": "291"
										},
										{
											"begin": 5864,
											"end": 5881,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5864,
											"end": 5881,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5864,
											"end": 5881,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 5864,
											"end": 5881,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5864,
											"end": 5881,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5864,
											"end": 5881,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5864,
											"end": 5881,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5907,
											"end": 5926,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 5927,
											"end": 5937,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5907,
											"end": 5938,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5907,
											"end": 5938,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5907,
											"end": 5938,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5907,
											"end": 5938,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 5907,
											"end": 5938,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "293"
										},
										{
											"begin": 5907,
											"end": 5938,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5907,
											"end": 5938,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "293"
										},
										{
											"begin": 5907,
											"end": 5938,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "216"
										},
										{
											"begin": 5907,
											"end": 5938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5907,
											"end": 5938,
											"name": "tag",
											"source": 15,
											"value": "293"
										},
										{
											"begin": 5907,
											"end": 5938,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5907,
											"end": 5938,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5907,
											"end": 5938,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 5907,
											"end": 5938,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5907,
											"end": 5938,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5907,
											"end": 5938,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5907,
											"end": 5938,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5828,
											"end": 5960,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5828,
											"end": 5960,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5828,
											"end": 5960,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5828,
											"end": 5960,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5828,
											"end": 5960,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "294"
										},
										{
											"begin": 5828,
											"end": 5960,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5828,
											"end": 5960,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5828,
											"end": 5960,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12853,
											"end": 12885,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 12853,
											"end": 12885,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 12853,
											"end": 12885,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 12853,
											"end": 12885,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 12835,
											"end": 12886,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 12835,
											"end": 12886,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 12917,
											"end": 12919,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 12902,
											"end": 12920,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 12902,
											"end": 12920,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 12895,
											"end": 12929,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 12823,
											"end": 12825,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 12808,
											"end": 12826,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 12808,
											"end": 12826,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 12642,
											"end": 12935,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5828,
											"end": 5960,
											"name": "tag",
											"source": 15,
											"value": "294"
										},
										{
											"begin": 5828,
											"end": 5960,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5828,
											"end": 5960,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5828,
											"end": 5960,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5828,
											"end": 5960,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5828,
											"end": 5960,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5828,
											"end": 5960,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5828,
											"end": 5960,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 5828,
											"end": 5960,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 5828,
											"end": 5960,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5828,
											"end": 5960,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5828,
											"end": 5960,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5828,
											"end": 5960,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5828,
											"end": 5960,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5797,
											"end": 5978,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5797,
											"end": 5978,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5797,
											"end": 5978,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5797,
											"end": 5978,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5797,
											"end": 5978,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5797,
											"end": 5978,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 5783,
											"end": 5791,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5792,
											"end": 5793,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5783,
											"end": 5794,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5783,
											"end": 5794,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5783,
											"end": 5794,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5783,
											"end": 5794,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 5783,
											"end": 5794,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "297"
										},
										{
											"begin": 5783,
											"end": 5794,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5783,
											"end": 5794,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "297"
										},
										{
											"begin": 5783,
											"end": 5794,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "216"
										},
										{
											"begin": 5783,
											"end": 5794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5783,
											"end": 5794,
											"name": "tag",
											"source": 15,
											"value": "297"
										},
										{
											"begin": 5783,
											"end": 5794,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5783,
											"end": 5794,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5783,
											"end": 5794,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5783,
											"end": 5794,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5783,
											"end": 5794,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 5783,
											"end": 5794,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5783,
											"end": 5794,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5783,
											"end": 5794,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5783,
											"end": 5794,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5783,
											"end": 5794,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5783,
											"end": 5978,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5760,
											"end": 5763,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5760,
											"end": 5763,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "298"
										},
										{
											"begin": 5760,
											"end": 5763,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5760,
											"end": 5763,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "227"
										},
										{
											"begin": 5760,
											"end": 5763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5760,
											"end": 5763,
											"name": "tag",
											"source": 15,
											"value": "298"
										},
										{
											"begin": 5760,
											"end": 5763,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5760,
											"end": 5763,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5760,
											"end": 5763,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5760,
											"end": 5763,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5713,
											"end": 5993,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "287"
										},
										{
											"begin": 5713,
											"end": 5993,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5713,
											"end": 5993,
											"name": "tag",
											"source": 15,
											"value": "288"
										},
										{
											"begin": 5713,
											"end": 5993,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5713,
											"end": 5993,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6012,
											"end": 6021,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6007,
											"end": 7170,
											"name": "tag",
											"source": 15,
											"value": "299"
										},
										{
											"begin": 6007,
											"end": 7170,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6031,
											"end": 6039,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6031,
											"end": 6046,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 6027,
											"end": 6028,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6027,
											"end": 6046,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 6007,
											"end": 7170,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6007,
											"end": 7170,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "300"
										},
										{
											"begin": 6007,
											"end": 7170,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6120,
											"end": 6180,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "302"
										},
										{
											"begin": 6150,
											"end": 6162,
											"name": "DUP13",
											"source": 15
										},
										{
											"begin": 6120,
											"end": 6128,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "135"
										},
										{
											"begin": 6120,
											"end": 6180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6120,
											"end": 6180,
											"name": "tag",
											"source": 15,
											"value": "302"
										},
										{
											"begin": 6120,
											"end": 6180,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6120,
											"end": 6189,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 6120,
											"end": 6189,
											"name": "PUSH",
											"source": 15,
											"value": "C9100BCB"
										},
										{
											"begin": 6190,
											"end": 6198,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6199,
											"end": 6200,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6190,
											"end": 6201,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6190,
											"end": 6201,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 6190,
											"end": 6201,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6190,
											"end": 6201,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 6190,
											"end": 6201,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "304"
										},
										{
											"begin": 6190,
											"end": 6201,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6190,
											"end": 6201,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "304"
										},
										{
											"begin": 6190,
											"end": 6201,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "216"
										},
										{
											"begin": 6190,
											"end": 6201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6190,
											"end": 6201,
											"name": "tag",
											"source": 15,
											"value": "304"
										},
										{
											"begin": 6190,
											"end": 6201,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6190,
											"end": 6201,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6190,
											"end": 6201,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 6190,
											"end": 6201,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6190,
											"end": 6201,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6190,
											"end": 6201,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6190,
											"end": 6201,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "305"
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1313,
											"end": 1338,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1313,
											"end": 1338,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 1301,
											"end": 1303,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 1286,
											"end": 1304,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1286,
											"end": 1304,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1167,
											"end": 1344,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "tag",
											"source": 15,
											"value": "305"
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "GAS",
											"source": 15
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "STATICCALL",
											"source": 15
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "307"
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "RETURNDATACOPY",
											"source": 15
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "tag",
											"source": 15,
											"value": "307"
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "RETURNDATACOPY",
											"source": 15
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "308"
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "309"
										},
										{
											"begin": 6120,
											"end": 6202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "tag",
											"source": 15,
											"value": "308"
										},
										{
											"begin": 6120,
											"end": 6202,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6244,
											"end": 6275,
											"name": "DUP15",
											"source": 15
										},
										{
											"begin": 6244,
											"end": 6275,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 6071,
											"end": 6202,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 6071,
											"end": 6202,
											"name": "SWAP14",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6071,
											"end": 6202,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6071,
											"end": 6202,
											"name": "SWAP12",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6071,
											"end": 6202,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6071,
											"end": 6202,
											"name": "SWAP10",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6071,
											"end": 6202,
											"name": "SWAP8",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6071,
											"end": 6202,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6244,
											"end": 6263,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 6244,
											"end": 6263,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6264,
											"end": 6274,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6264,
											"end": 6274,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6244,
											"end": 6275,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6244,
											"end": 6275,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 6244,
											"end": 6275,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "311"
										},
										{
											"begin": 6244,
											"end": 6275,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6244,
											"end": 6275,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "311"
										},
										{
											"begin": 6244,
											"end": 6275,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "216"
										},
										{
											"begin": 6244,
											"end": 6275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6244,
											"end": 6275,
											"name": "tag",
											"source": 15,
											"value": "311"
										},
										{
											"begin": 6244,
											"end": 6275,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6244,
											"end": 6275,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6244,
											"end": 6275,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 6244,
											"end": 6275,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6244,
											"end": 6275,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6244,
											"end": 6275,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6244,
											"end": 6275,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 6225,
											"end": 6240,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 6225,
											"end": 6275,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 6221,
											"end": 7156,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "312"
										},
										{
											"begin": 6221,
											"end": 7156,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6340,
											"end": 6346,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6327,
											"end": 6360,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 6327,
											"end": 6360,
											"name": "PUSH",
											"source": 15,
											"value": "C0969A6E"
										},
										{
											"begin": 6390,
											"end": 6412,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "313"
										},
										{
											"begin": 6399,
											"end": 6411,
											"name": "DUP15",
											"source": 15
										},
										{
											"begin": 6390,
											"end": 6398,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "135"
										},
										{
											"begin": 6390,
											"end": 6412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6390,
											"end": 6412,
											"name": "tag",
											"source": 15,
											"value": "313"
										},
										{
											"begin": 6390,
											"end": 6412,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6442,
											"end": 6461,
											"name": "DUP13",
											"source": 15
										},
										{
											"begin": 6462,
											"end": 6472,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 6442,
											"end": 6473,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6442,
											"end": 6473,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 6442,
											"end": 6473,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6442,
											"end": 6473,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 6442,
											"end": 6473,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "315"
										},
										{
											"begin": 6442,
											"end": 6473,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6442,
											"end": 6473,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "315"
										},
										{
											"begin": 6442,
											"end": 6473,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "216"
										},
										{
											"begin": 6442,
											"end": 6473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6442,
											"end": 6473,
											"name": "tag",
											"source": 15,
											"value": "315"
										},
										{
											"begin": 6442,
											"end": 6473,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6442,
											"end": 6473,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6442,
											"end": 6473,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 6442,
											"end": 6473,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6442,
											"end": 6473,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6442,
											"end": 6473,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6442,
											"end": 6473,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 6503,
											"end": 6506,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 6536,
											"end": 6540,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "316"
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "317"
										},
										{
											"begin": 6327,
											"end": 6566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "tag",
											"source": 15,
											"value": "316"
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "GAS",
											"source": 15
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "STATICCALL",
											"source": 15
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "318"
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "320"
										},
										{
											"begin": 6327,
											"end": 6566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "tag",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "tag",
											"source": 15,
											"value": "318"
										},
										{
											"begin": 6327,
											"end": 6566,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6299,
											"end": 7047,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "321"
										},
										{
											"begin": 6299,
											"end": 7047,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6952,
											"end": 6953,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 6934,
											"end": 6942,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6934,
											"end": 6949,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 6934,
											"end": 6953,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "325"
										},
										{
											"begin": 6934,
											"end": 6953,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6934,
											"end": 6953,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6934,
											"end": 6953,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "326"
										},
										{
											"begin": 6934,
											"end": 6953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6934,
											"end": 6953,
											"name": "tag",
											"source": 15,
											"value": "325"
										},
										{
											"begin": 6934,
											"end": 6953,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6928,
											"end": 6929,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6928,
											"end": 6954,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 6924,
											"end": 7025,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "327"
										},
										{
											"begin": 6924,
											"end": 7025,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6993,
											"end": 6998,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6993,
											"end": 6998,
											"name": "SWAP12",
											"source": 15
										},
										{
											"begin": 4647,
											"end": 7207,
											"name": "SWAP11",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4647,
											"end": 7207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6924,
											"end": 7025,
											"name": "tag",
											"source": 15,
											"value": "327"
										},
										{
											"begin": 6924,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6221,
											"end": 7156,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "335"
										},
										{
											"begin": 6221,
											"end": 7156,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6299,
											"end": 7047,
											"name": "tag",
											"source": 15,
											"value": "321"
										},
										{
											"begin": 6299,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6642,
											"end": 6651,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6638,
											"end": 6729,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6638,
											"end": 6729,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "329"
										},
										{
											"begin": 6638,
											"end": 6729,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6687,
											"end": 6695,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6687,
											"end": 6702,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 6683,
											"end": 6702,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6683,
											"end": 6702,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6638,
											"end": 6729,
											"name": "tag",
											"source": 15,
											"value": "329"
										},
										{
											"begin": 6638,
											"end": 6729,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6759,
											"end": 6768,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6758,
											"end": 6768,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6758,
											"end": 6798,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6758,
											"end": 6798,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6758,
											"end": 6798,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "330"
										},
										{
											"begin": 6758,
											"end": 6798,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6758,
											"end": 6798,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6796,
											"end": 6797,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 6778,
											"end": 6786,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6778,
											"end": 6793,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 6778,
											"end": 6797,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "331"
										},
										{
											"begin": 6778,
											"end": 6797,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6778,
											"end": 6797,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6778,
											"end": 6797,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "326"
										},
										{
											"begin": 6778,
											"end": 6797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6778,
											"end": 6797,
											"name": "tag",
											"source": 15,
											"value": "331"
										},
										{
											"begin": 6778,
											"end": 6797,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6772,
											"end": 6773,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6772,
											"end": 6798,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 6758,
											"end": 6798,
											"name": "tag",
											"source": 15,
											"value": "330"
										},
										{
											"begin": 6758,
											"end": 6798,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6754,
											"end": 6869,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6754,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "332"
										},
										{
											"begin": 6754,
											"end": 6869,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6837,
											"end": 6842,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6837,
											"end": 6842,
											"name": "SWAP13",
											"source": 15
										},
										{
											"begin": 4647,
											"end": 7207,
											"name": "SWAP12",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4647,
											"end": 7207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6754,
											"end": 6869,
											"name": "tag",
											"source": 15,
											"value": "332"
										},
										{
											"begin": 6754,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6587,
											"end": 6891,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6221,
											"end": 7156,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "335"
										},
										{
											"begin": 6221,
											"end": 7156,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6221,
											"end": 7156,
											"name": "tag",
											"source": 15,
											"value": "312"
										},
										{
											"begin": 6221,
											"end": 7156,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7099,
											"end": 7100,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 7081,
											"end": 7089,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7081,
											"end": 7096,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 7081,
											"end": 7100,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "334"
										},
										{
											"begin": 7081,
											"end": 7100,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7081,
											"end": 7100,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7081,
											"end": 7100,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "326"
										},
										{
											"begin": 7081,
											"end": 7100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7081,
											"end": 7100,
											"name": "tag",
											"source": 15,
											"value": "334"
										},
										{
											"begin": 7081,
											"end": 7100,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7075,
											"end": 7076,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7075,
											"end": 7101,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 7071,
											"end": 7156,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "335"
										},
										{
											"begin": 7071,
											"end": 7156,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7132,
											"end": 7137,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7132,
											"end": 7137,
											"name": "SWAP12",
											"source": 15
										},
										{
											"begin": 4647,
											"end": 7207,
											"name": "SWAP11",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4647,
											"end": 7207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7071,
											"end": 7156,
											"name": "tag",
											"source": 15,
											"value": "335"
										},
										{
											"begin": 7071,
											"end": 7156,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6048,
											"end": 6051,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6048,
											"end": 6051,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "336"
										},
										{
											"begin": 6048,
											"end": 6051,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6048,
											"end": 6051,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "227"
										},
										{
											"begin": 6048,
											"end": 6051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6048,
											"end": 6051,
											"name": "tag",
											"source": 15,
											"value": "336"
										},
										{
											"begin": 6048,
											"end": 6051,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6048,
											"end": 6051,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6048,
											"end": 6051,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6048,
											"end": 6051,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6007,
											"end": 7170,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "299"
										},
										{
											"begin": 6007,
											"end": 7170,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6007,
											"end": 7170,
											"name": "tag",
											"source": 15,
											"value": "300"
										},
										{
											"begin": 6007,
											"end": 7170,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6007,
											"end": 7170,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5336,
											"end": 7180,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5336,
											"end": 7180,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5313,
											"end": 5325,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5313,
											"end": 5325,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5313,
											"end": 5325,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "337"
										},
										{
											"begin": 5313,
											"end": 5325,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5313,
											"end": 5325,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "227"
										},
										{
											"begin": 5313,
											"end": 5325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5313,
											"end": 5325,
											"name": "tag",
											"source": 15,
											"value": "337"
										},
										{
											"begin": 5313,
											"end": 5325,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5313,
											"end": 5325,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5313,
											"end": 5325,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5313,
											"end": 5325,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5214,
											"end": 7180,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "271"
										},
										{
											"begin": 5214,
											"end": 7180,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5214,
											"end": 7180,
											"name": "tag",
											"source": 15,
											"value": "272"
										},
										{
											"begin": 5214,
											"end": 7180,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7196,
											"end": 7200,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 7196,
											"end": 7200,
											"name": "SWAP9",
											"source": 15
										},
										{
											"begin": 4647,
											"end": 7207,
											"name": "SWAP8",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4647,
											"end": 7207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5684,
											"end": 5831,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 5684,
											"end": 5831,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4908,
											"end": 4915,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4934,
											"end": 4940,
											"name": "PUSH",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4934,
											"end": 4956,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4934,
											"end": 4956,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4934,
											"end": 4956,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "340"
										},
										{
											"begin": 2939,
											"end": 2943,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2928,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 2928,
											"end": 2944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "tag",
											"source": 4,
											"value": "340"
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5798,
											"end": 5824,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 5810,
											"end": 5814,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5816,
											"end": 5823,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5798,
											"end": 5809,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 5798,
											"end": 5824,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4216,
											"end": 4527,
											"name": "tag",
											"source": 15,
											"value": "132"
										},
										{
											"begin": 4216,
											"end": 4527,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "48848F6F4AF5FF2A90F75345111FFAB654DA14E01D0D715638DA4379C8C19AE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "344"
										},
										{
											"begin": 876,
											"end": 942,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2928,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 2928,
											"end": 2944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "tag",
											"source": 4,
											"value": "344"
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4361,
											"end": 4382,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "CA"
										},
										{
											"begin": 4361,
											"end": 4455,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4455,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4361,
											"end": 4455,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4361,
											"end": 4455,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4455,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4455,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4455,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4455,
											"modifierDepth": 1,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4455,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4455,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4455,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 4470,
											"end": 4520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4470,
											"end": 4520,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 4470,
											"end": 4520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "1B98CB79E6F73020175FE87333F1B91AD6A881519C0AFE30340C2599B2B4BDE0"
										},
										{
											"begin": 4470,
											"end": 4520,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 4470,
											"end": 4520,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 15
										},
										{
											"begin": 4216,
											"end": 4527,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4216,
											"end": 4527,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4216,
											"end": 4527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9010,
											"end": 9201,
											"name": "tag",
											"source": 15,
											"value": "135"
										},
										{
											"begin": 9010,
											"end": 9201,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9144,
											"end": 9165,
											"name": "PUSH",
											"source": 15,
											"value": "CB"
										},
										{
											"begin": 9144,
											"end": 9165,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 9144,
											"end": 9194,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 9144,
											"end": 9194,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7988D3A5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9144,
											"end": 9194,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9144,
											"end": 9194,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2812,
											"end": 2844,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 2812,
											"end": 2844,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2812,
											"end": 2844,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 9144,
											"end": 9194,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 9144,
											"end": 9194,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9144,
											"end": 9194,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2794,
											"end": 2845,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 9112,
											"end": 9121,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9112,
											"end": 9121,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9144,
											"end": 9165,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 9144,
											"end": 9165,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9144,
											"end": 9180,
											"name": "PUSH",
											"source": 15,
											"value": "7988D3A5"
										},
										{
											"begin": 9144,
											"end": 9180,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2767,
											"end": 2785,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 2767,
											"end": 2785,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9144,
											"end": 9194,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9144,
											"end": 9194,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 9144,
											"end": 9194,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 9144,
											"end": 9194,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 9144,
											"end": 9194,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9144,
											"end": 9194,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 9144,
											"end": 9194,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9144,
											"end": 9194,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 9144,
											"end": 9194,
											"name": "GAS",
											"source": 15
										},
										{
											"begin": 9144,
											"end": 9194,
											"name": "STATICCALL",
											"source": 15
										},
										{
											"begin": 9144,
											"end": 9194,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9144,
											"end": 9194,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 9144,
											"end": 9194,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9144,
											"end": 9194,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "349"
										},
										{
											"begin": 9144,
											"end": 9194,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9144,
											"end": 9194,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 9144,
											"end": 9194,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9144,
											"end": 9194,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 9144,
											"end": 9194,
											"name": "RETURNDATACOPY",
											"source": 15
										},
										{
											"begin": 9144,
											"end": 9194,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 9144,
											"end": 9194,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9144,
											"end": 9194,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 9144,
											"end": 9194,
											"name": "tag",
											"source": 15,
											"value": "349"
										},
										{
											"begin": 9144,
											"end": 9194,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9144,
											"end": 9194,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9144,
											"end": 9194,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9144,
											"end": 9194,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9144,
											"end": 9194,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9144,
											"end": 9194,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 9144,
											"end": 9194,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 9144,
											"end": 9194,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 9144,
											"end": 9194,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 9144,
											"end": 9194,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 9144,
											"end": 9194,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 9144,
											"end": 9194,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9144,
											"end": 9194,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9144,
											"end": 9194,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 9144,
											"end": 9194,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9144,
											"end": 9194,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9144,
											"end": 9194,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 9144,
											"end": 9194,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 9144,
											"end": 9194,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9144,
											"end": 9194,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9144,
											"end": 9194,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9144,
											"end": 9194,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9144,
											"end": 9194,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9144,
											"end": 9194,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "147"
										},
										{
											"begin": 9144,
											"end": 9194,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9144,
											"end": 9194,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9144,
											"end": 9194,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "351"
										},
										{
											"begin": 9144,
											"end": 9194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 1334,
											"end": 1347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2402,
											"end": 2424,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2402,
											"end": 2424,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2394,
											"end": 2467,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2394,
											"end": 2467,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2467,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16705,
											"end": 16707,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2394,
											"end": 2467,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16687,
											"end": 16708,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 16744,
											"end": 16746,
											"name": "PUSH",
											"source": 21,
											"value": "26"
										},
										{
											"begin": 16724,
											"end": 16742,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 16724,
											"end": 16742,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 16724,
											"end": 16742,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 16717,
											"end": 16747,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 16783,
											"end": 16817,
											"name": "PUSH",
											"source": 21,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 16763,
											"end": 16781,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 16763,
											"end": 16781,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 16763,
											"end": 16781,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 16756,
											"end": 16818,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16834,
											"end": 16852,
											"name": "PUSH",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 16834,
											"end": 16852,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 16834,
											"end": 16852,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 16827,
											"end": 16863,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 16880,
											"end": 16899,
											"name": "PUSH",
											"source": 21,
											"value": "84"
										},
										{
											"begin": 16880,
											"end": 16899,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 16503,
											"end": 16905,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2477,
											"end": 2505,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 2496,
											"end": 2504,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2477,
											"end": 2495,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 2477,
											"end": 2505,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2477,
											"end": 2505,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 2477,
											"end": 2505,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2314,
											"end": 2512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1003,
											"end": 1098,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 1003,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 5366,
											"end": 5435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "tag",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1065,
											"end": 1091,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 1065,
											"end": 1089,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "368"
										},
										{
											"begin": 1065,
											"end": 1091,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3768,
											"end": 3871,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 3768,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3834,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "359"
										},
										{
											"begin": 3845,
											"end": 3849,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3834,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "372"
										},
										{
											"begin": 3834,
											"end": 3864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7917,
											"end": 8150,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 7917,
											"end": 8150,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8000,
											"end": 8022,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "374"
										},
										{
											"begin": 8008,
											"end": 8012,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8014,
											"end": 8021,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8000,
											"end": 8007,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 8000,
											"end": 8022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8000,
											"end": 8022,
											"name": "tag",
											"source": 4,
											"value": "374"
										},
										{
											"begin": 8000,
											"end": 8022,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7995,
											"end": 8144,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 7995,
											"end": 8144,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8038,
											"end": 8050,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8038,
											"end": 8050,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8038,
											"end": 8050,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8038,
											"end": 8050,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8038,
											"end": 8044,
											"name": "PUSH",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 8038,
											"end": 8050,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8038,
											"end": 8050,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8038,
											"end": 8050,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8038,
											"end": 8050,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8038,
											"end": 8050,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8038,
											"end": 8050,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8038,
											"end": 8050,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8038,
											"end": 8050,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8038,
											"end": 8067,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8038,
											"end": 8067,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8038,
											"end": 8067,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8038,
											"end": 8067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8038,
											"end": 8067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8038,
											"end": 8067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8038,
											"end": 8067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8038,
											"end": 8067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8038,
											"end": 8067,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8038,
											"end": 8074,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8038,
											"end": 8074,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8038,
											"end": 8074,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8070,
											"end": 8074,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8038,
											"end": 8074,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 8038,
											"end": 8074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8038,
											"end": 8074,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8120,
											"end": 8132,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "376"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 929,
											"end": 939,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 850,
											"end": 946,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8120,
											"end": 8132,
											"name": "tag",
											"source": 4,
											"value": "376"
										},
										{
											"begin": 8120,
											"end": 8132,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8093,
											"end": 8133,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8111,
											"end": 8118,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8093,
											"end": 8133,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8105,
											"end": 8109,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8093,
											"end": 8133,
											"name": "PUSH",
											"source": 4,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 8093,
											"end": 8133,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8093,
											"end": 8133,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8093,
											"end": 8133,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8093,
											"end": 8133,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8093,
											"end": 8133,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8093,
											"end": 8133,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8093,
											"end": 8133,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8093,
											"end": 8133,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8093,
											"end": 8133,
											"name": "LOG4",
											"source": 4
										},
										{
											"begin": 7917,
											"end": 8150,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7917,
											"end": 8150,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7917,
											"end": 8150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8321,
											"end": 8555,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 8321,
											"end": 8555,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8404,
											"end": 8426,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "379"
										},
										{
											"begin": 8412,
											"end": 8416,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8418,
											"end": 8425,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8404,
											"end": 8411,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 8404,
											"end": 8426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8404,
											"end": 8426,
											"name": "tag",
											"source": 4,
											"value": "379"
										},
										{
											"begin": 8404,
											"end": 8426,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8400,
											"end": 8549,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8400,
											"end": 8549,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 8400,
											"end": 8549,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8474,
											"end": 8479,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8442,
											"end": 8454,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8442,
											"end": 8454,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8442,
											"end": 8454,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8442,
											"end": 8448,
											"name": "PUSH",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 8442,
											"end": 8454,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8442,
											"end": 8454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8442,
											"end": 8454,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8442,
											"end": 8454,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8442,
											"end": 8454,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8442,
											"end": 8454,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8442,
											"end": 8454,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8442,
											"end": 8454,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8442,
											"end": 8471,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8442,
											"end": 8471,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8442,
											"end": 8471,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8442,
											"end": 8471,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8442,
											"end": 8471,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8442,
											"end": 8471,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8442,
											"end": 8471,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8442,
											"end": 8471,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8442,
											"end": 8471,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8442,
											"end": 8471,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8442,
											"end": 8479,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8442,
											"end": 8479,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8442,
											"end": 8479,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8442,
											"end": 8479,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8442,
											"end": 8479,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8498,
											"end": 8538,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 929,
											"end": 939,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8442,
											"end": 8454,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8442,
											"end": 8454,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8498,
											"end": 8538,
											"name": "PUSH",
											"source": 4,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 8498,
											"end": 8538,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8474,
											"end": 8479,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8498,
											"end": 8538,
											"name": "LOG4",
											"source": 4
										},
										{
											"begin": 8321,
											"end": 8555,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8321,
											"end": 8555,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8321,
											"end": 8555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1599,
											"end": 1729,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 1599,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1662,
											"end": 1685,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17524,
											"end": 17526,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17506,
											"end": 17527,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 17506,
											"end": 17527,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 17506,
											"end": 17527,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 17543,
											"end": 17561,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 17543,
											"end": 17561,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 17543,
											"end": 17561,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 17536,
											"end": 17566,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 17602,
											"end": 17636,
											"name": "PUSH",
											"source": 21,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 17582,
											"end": 17600,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 17582,
											"end": 17600,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 17582,
											"end": 17600,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 17575,
											"end": 17637,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 17654,
											"end": 17672,
											"name": "PUSH",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 17654,
											"end": 17672,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 17322,
											"end": 17678,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2666,
											"end": 2853,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 2666,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "PUSH",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 2846,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2806,
											"end": 2846,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 2846,
											"name": "PUSH",
											"source": 6,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2806,
											"end": 2846,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2739,
											"end": 2755,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2739,
											"end": 2755,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 2846,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 2729,
											"end": 2853,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2853,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1104,
											"end": 1215,
											"name": "tag",
											"source": 6,
											"value": "368"
										},
										{
											"begin": 1104,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 5366,
											"end": 5435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "tag",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 1176,
											"end": 1208,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4152,
											"end": 4653,
											"name": "tag",
											"source": 4,
											"value": "372"
										},
										{
											"begin": 4152,
											"end": 4653,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "396"
										},
										{
											"begin": 4248,
											"end": 4252,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4254,
											"end": 4261,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4240,
											"end": 4247,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 4240,
											"end": 4262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "tag",
											"source": 4,
											"value": "396"
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4235,
											"end": 4647,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 4235,
											"end": 4647,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4423,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "398"
										},
										{
											"begin": 4454,
											"end": 4461,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4423,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "399"
										},
										{
											"begin": 4423,
											"end": 4462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4423,
											"end": 4462,
											"name": "tag",
											"source": 4,
											"value": "398"
										},
										{
											"begin": 4423,
											"end": 4462,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4533,
											"end": 4582,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "400"
										},
										{
											"begin": 4572,
											"end": 4576,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4579,
											"end": 4581,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4533,
											"end": 4563,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "401"
										},
										{
											"begin": 4533,
											"end": 4582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4533,
											"end": 4582,
											"name": "tag",
											"source": 4,
											"value": "400"
										},
										{
											"begin": 4533,
											"end": 4582,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "402"
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "403"
										},
										{
											"begin": 4330,
											"end": 4604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "tag",
											"source": 4,
											"value": "402"
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4278,
											"end": 4636,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4278,
											"end": 4636,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4278,
											"end": 4636,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 4278,
											"end": 4636,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4278,
											"end": 4636,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4278,
											"end": 4636,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4278,
											"end": 4636,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "405"
										},
										{
											"begin": 4278,
											"end": 4636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2473,
											"end": 2622,
											"name": "tag",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 2473,
											"end": 2622,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2531,
											"end": 2544,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2563,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2575,
											"end": 2597,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2575,
											"end": 2597,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 376,
											"end": 378,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 1884,
											"end": 2321,
											"name": "tag",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 1884,
											"end": 2321,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1959,
											"end": 1972,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1984,
											"end": 2003,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2016,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 2020,
											"end": 2026,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2016,
											"end": 2017,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2016,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 2016,
											"end": 2026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2016,
											"end": 2026,
											"name": "tag",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 2016,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2029,
											"end": 2030,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 2016,
											"end": 2030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "tag",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 2006,
											"end": 2031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "tag",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "tag",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1984,
											"end": 2031,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1984,
											"end": 2031,
											"name": "POP",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2041,
											"end": 2047,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2048,
											"end": 2049,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 2041,
											"end": 2050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "tag",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "BYTE",
											"source": 10
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "MSTORE8",
											"source": 10
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "POP",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2066,
											"end": 2072,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2073,
											"end": 2074,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 2066,
											"end": 2075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "tag",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "BYTE",
											"source": 10
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "MSTORE8",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2096,
											"end": 2105,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2108,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 2112,
											"end": 2118,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2108,
											"end": 2109,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2108,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 2108,
											"end": 2118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2108,
											"end": 2118,
											"name": "tag",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 2108,
											"end": 2118,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2108,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 2108,
											"end": 2122,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2121,
											"end": 2122,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2108,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 2108,
											"end": 2122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2108,
											"end": 2122,
											"name": "tag",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 2108,
											"end": 2122,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2096,
											"end": 2122,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2096,
											"end": 2122,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "tag",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2128,
											"end": 2129,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2124,
											"end": 2125,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2124,
											"end": 2129,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "181899199A1A9B1B9C1CB0B131B232B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2171,
											"end": 2176,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2179,
											"end": 2182,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 2171,
											"end": 2182,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 2162,
											"end": 2183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "tag",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "BYTE",
											"source": 10
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "PUSH",
											"source": 10,
											"value": "F8"
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2150,
											"end": 2156,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2157,
											"end": 2158,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 2150,
											"end": 2159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "tag",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "BYTE",
											"source": 10
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "MSTORE8",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2207,
											"end": 2208,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2197,
											"end": 2208,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2197,
											"end": 2208,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2197,
											"end": 2208,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2197,
											"end": 2208,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 2197,
											"end": 2208,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2131,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 2131,
											"end": 2134,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2131,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 2131,
											"end": 2134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2131,
											"end": 2134,
											"name": "tag",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 2131,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2131,
											"end": 2134,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2131,
											"end": 2134,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "tag",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2236,
											"end": 2246,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2236,
											"end": 2246,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19370,
											"end": 19372,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19352,
											"end": 19373,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 19352,
											"end": 19373,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 19352,
											"end": 19373,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 19389,
											"end": 19407,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 19389,
											"end": 19407,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 19389,
											"end": 19407,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 19382,
											"end": 19412,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 19448,
											"end": 19482,
											"name": "PUSH",
											"source": 21,
											"value": "537472696E67733A20686578206C656E67746820696E73756666696369656E74"
										},
										{
											"begin": 19428,
											"end": 19446,
											"name": "PUSH",
											"source": 21,
											"value": "44"
										},
										{
											"begin": 19428,
											"end": 19446,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 19428,
											"end": 19446,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 19421,
											"end": 19483,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 19500,
											"end": 19518,
											"name": "PUSH",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 19500,
											"end": 19518,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 19168,
											"end": 19524,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "tag",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2307,
											"end": 2313,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1884,
											"end": 2321,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1884,
											"end": 2321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 72,
											"end": 78,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 127,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 113,
											"end": 122,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 104,
											"end": 111,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 100,
											"end": 123,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 96,
											"end": 128,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 93,
											"end": 145,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 93,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "446"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 141,
											"end": 142,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 139,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 131,
											"end": 143,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 93,
											"end": 145,
											"name": "tag",
											"source": 21,
											"value": "446"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 167,
											"end": 190,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 167,
											"end": 190,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 219,
											"end": 251,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 219,
											"end": 251,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 209,
											"end": 252,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 209,
											"end": 252,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 199,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "431"
										},
										{
											"begin": 199,
											"end": 270,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 497,
											"end": 628,
											"name": "tag",
											"source": 21,
											"value": "434"
										},
										{
											"begin": 497,
											"end": 628,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 572,
											"end": 603,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 572,
											"end": 603,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 562,
											"end": 604,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 562,
											"end": 604,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 552,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "359"
										},
										{
											"begin": 552,
											"end": 622,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 618,
											"end": 619,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 615,
											"end": 616,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 608,
											"end": 620,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 633,
											"end": 1162,
											"name": "tag",
											"source": 21,
											"value": "46"
										},
										{
											"begin": 633,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 710,
											"end": 716,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 718,
											"end": 724,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 726,
											"end": 732,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 781,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 767,
											"end": 776,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 758,
											"end": 765,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 754,
											"end": 777,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 750,
											"end": 782,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 747,
											"end": 799,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 747,
											"end": 799,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "452"
										},
										{
											"begin": 747,
											"end": 799,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 795,
											"end": 796,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 792,
											"end": 793,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 785,
											"end": 797,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 747,
											"end": 799,
											"name": "tag",
											"source": 21,
											"value": "452"
										},
										{
											"begin": 747,
											"end": 799,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 834,
											"end": 843,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 821,
											"end": 844,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 853,
											"end": 884,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "453"
										},
										{
											"begin": 878,
											"end": 883,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 853,
											"end": 884,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "434"
										},
										{
											"begin": 853,
											"end": 884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 853,
											"end": 884,
											"name": "tag",
											"source": 21,
											"value": "453"
										},
										{
											"begin": 853,
											"end": 884,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 903,
											"end": 908,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 960,
											"end": 962,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 945,
											"end": 963,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 945,
											"end": 963,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 932,
											"end": 964,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 973,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "454"
										},
										{
											"begin": 932,
											"end": 964,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 973,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "434"
										},
										{
											"begin": 973,
											"end": 1006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 973,
											"end": 1006,
											"name": "tag",
											"source": 21,
											"value": "454"
										},
										{
											"begin": 973,
											"end": 1006,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1025,
											"end": 1032,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1084,
											"end": 1086,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 1069,
											"end": 1087,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 1069,
											"end": 1087,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1056,
											"end": 1088,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 1097,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "455"
										},
										{
											"begin": 1056,
											"end": 1088,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1097,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "434"
										},
										{
											"begin": 1097,
											"end": 1130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1097,
											"end": 1130,
											"name": "tag",
											"source": 21,
											"value": "455"
										},
										{
											"begin": 1097,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1149,
											"end": 1156,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1139,
											"end": 1156,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1139,
											"end": 1156,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1139,
											"end": 1156,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 633,
											"end": 1162,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 633,
											"end": 1162,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 633,
											"end": 1162,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 633,
											"end": 1162,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 633,
											"end": 1162,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 633,
											"end": 1162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1349,
											"end": 1529,
											"name": "tag",
											"source": 21,
											"value": "54"
										},
										{
											"begin": 1349,
											"end": 1529,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1408,
											"end": 1414,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1461,
											"end": 1463,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 1449,
											"end": 1458,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1440,
											"end": 1447,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 1436,
											"end": 1459,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 1432,
											"end": 1464,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 1429,
											"end": 1481,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 1429,
											"end": 1481,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "458"
										},
										{
											"begin": 1429,
											"end": 1481,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 1477,
											"end": 1478,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1474,
											"end": 1475,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1467,
											"end": 1479,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 1429,
											"end": 1481,
											"name": "tag",
											"source": 21,
											"value": "458"
										},
										{
											"begin": 1429,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1500,
											"end": 1523,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 1500,
											"end": 1523,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1349,
											"end": 1529,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1349,
											"end": 1529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1534,
											"end": 1781,
											"name": "tag",
											"source": 21,
											"value": "59"
										},
										{
											"begin": 1534,
											"end": 1781,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1593,
											"end": 1599,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1648,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1625,
											"end": 1632,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 1621,
											"end": 1644,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 1617,
											"end": 1649,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 1614,
											"end": 1666,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 1614,
											"end": 1666,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "460"
										},
										{
											"begin": 1614,
											"end": 1666,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 1662,
											"end": 1663,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1659,
											"end": 1660,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1652,
											"end": 1664,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 1614,
											"end": 1666,
											"name": "tag",
											"source": 21,
											"value": "460"
										},
										{
											"begin": 1614,
											"end": 1666,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1701,
											"end": 1710,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1688,
											"end": 1711,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "431"
										},
										{
											"begin": 1745,
											"end": 1750,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "434"
										},
										{
											"begin": 1720,
											"end": 1751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1786,
											"end": 2101,
											"name": "tag",
											"source": 21,
											"value": "63"
										},
										{
											"begin": 1786,
											"end": 2101,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1854,
											"end": 1860,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1862,
											"end": 1868,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1915,
											"end": 1917,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 1903,
											"end": 1912,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 1894,
											"end": 1901,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 1890,
											"end": 1913,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 1886,
											"end": 1918,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 1883,
											"end": 1935,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 1883,
											"end": 1935,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "463"
										},
										{
											"begin": 1883,
											"end": 1935,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 1931,
											"end": 1932,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1928,
											"end": 1929,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1921,
											"end": 1933,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 1883,
											"end": 1935,
											"name": "tag",
											"source": 21,
											"value": "463"
										},
										{
											"begin": 1883,
											"end": 1935,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1967,
											"end": 1976,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1954,
											"end": 1977,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 1944,
											"end": 1977,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1944,
											"end": 1977,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2027,
											"end": 2029,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 2016,
											"end": 2025,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 2012,
											"end": 2030,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 2040,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "464"
										},
										{
											"begin": 2065,
											"end": 2070,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2040,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "434"
										},
										{
											"begin": 2040,
											"end": 2071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2040,
											"end": 2071,
											"name": "tag",
											"source": 21,
											"value": "464"
										},
										{
											"begin": 2040,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2090,
											"end": 2095,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 2080,
											"end": 2095,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 2080,
											"end": 2095,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2080,
											"end": 2095,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1786,
											"end": 2101,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 1786,
											"end": 2101,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1786,
											"end": 2101,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 1786,
											"end": 2101,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1786,
											"end": 2101,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1786,
											"end": 2101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2106,
											"end": 2223,
											"name": "tag",
											"source": 21,
											"value": "435"
										},
										{
											"begin": 2106,
											"end": 2223,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2191,
											"end": 2197,
											"name": "PUSH",
											"source": 21,
											"value": "FFFF"
										},
										{
											"begin": 2184,
											"end": 2189,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2180,
											"end": 2198,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 2173,
											"end": 2178,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2170,
											"end": 2199,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 2160,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "359"
										},
										{
											"begin": 2160,
											"end": 2217,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 2213,
											"end": 2214,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2210,
											"end": 2211,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 2203,
											"end": 2215,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 2228,
											"end": 2614,
											"name": "tag",
											"source": 21,
											"value": "70"
										},
										{
											"begin": 2228,
											"end": 2614,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2295,
											"end": 2301,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2303,
											"end": 2309,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 2356,
											"end": 2358,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 2344,
											"end": 2353,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 2335,
											"end": 2342,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 2331,
											"end": 2354,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 2327,
											"end": 2359,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 2324,
											"end": 2376,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 2324,
											"end": 2376,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "468"
										},
										{
											"begin": 2324,
											"end": 2376,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 2372,
											"end": 2373,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2369,
											"end": 2370,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 2362,
											"end": 2374,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 2324,
											"end": 2376,
											"name": "tag",
											"source": 21,
											"value": "468"
										},
										{
											"begin": 2324,
											"end": 2376,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2411,
											"end": 2420,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 2398,
											"end": 2421,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 2430,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "469"
										},
										{
											"begin": 2455,
											"end": 2460,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2430,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "434"
										},
										{
											"begin": 2430,
											"end": 2461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2430,
											"end": 2461,
											"name": "tag",
											"source": 21,
											"value": "469"
										},
										{
											"begin": 2430,
											"end": 2461,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2480,
											"end": 2485,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2537,
											"end": 2539,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 2522,
											"end": 2540,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 2522,
											"end": 2540,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2509,
											"end": 2541,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 2550,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "464"
										},
										{
											"begin": 2509,
											"end": 2541,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2550,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "435"
										},
										{
											"begin": 2550,
											"end": 2582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2856,
											"end": 3400,
											"name": "tag",
											"source": 21,
											"value": "78"
										},
										{
											"begin": 2856,
											"end": 3400,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2949,
											"end": 2955,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2957,
											"end": 2963,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 2965,
											"end": 2971,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3018,
											"end": 3020,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 3006,
											"end": 3015,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 2997,
											"end": 3004,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 2993,
											"end": 3016,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 2989,
											"end": 3021,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 2986,
											"end": 3038,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 2986,
											"end": 3038,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "473"
										},
										{
											"begin": 2986,
											"end": 3038,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 3034,
											"end": 3035,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3031,
											"end": 3032,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 3024,
											"end": 3036,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 2986,
											"end": 3038,
											"name": "tag",
											"source": 21,
											"value": "473"
										},
										{
											"begin": 2986,
											"end": 3038,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3073,
											"end": 3082,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 3060,
											"end": 3083,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 3092,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "474"
										},
										{
											"begin": 3117,
											"end": 3122,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3092,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "434"
										},
										{
											"begin": 3092,
											"end": 3123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3092,
											"end": 3123,
											"name": "tag",
											"source": 21,
											"value": "474"
										},
										{
											"begin": 3092,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3142,
											"end": 3147,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3199,
											"end": 3201,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 3184,
											"end": 3202,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 3184,
											"end": 3202,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3171,
											"end": 3203,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 3212,
											"end": 3245,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "475"
										},
										{
											"begin": 3171,
											"end": 3203,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3212,
											"end": 3245,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "434"
										},
										{
											"begin": 3212,
											"end": 3245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3212,
											"end": 3245,
											"name": "tag",
											"source": 21,
											"value": "475"
										},
										{
											"begin": 3212,
											"end": 3245,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3264,
											"end": 3271,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3323,
											"end": 3325,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 3308,
											"end": 3326,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 3308,
											"end": 3326,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3295,
											"end": 3327,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "455"
										},
										{
											"begin": 3295,
											"end": 3327,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3336,
											"end": 3368,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "435"
										},
										{
											"begin": 3336,
											"end": 3368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3405,
											"end": 3772,
											"name": "tag",
											"source": 21,
											"value": "436"
										},
										{
											"begin": 3405,
											"end": 3772,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3468,
											"end": 3476,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3478,
											"end": 3484,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 3532,
											"end": 3535,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 3525,
											"end": 3529,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 3517,
											"end": 3523,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 3513,
											"end": 3530,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3509,
											"end": 3536,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 3499,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "478"
										},
										{
											"begin": 3499,
											"end": 3554,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 3550,
											"end": 3551,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3547,
											"end": 3548,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 3540,
											"end": 3552,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 3499,
											"end": 3554,
											"name": "tag",
											"source": 21,
											"value": "478"
										},
										{
											"begin": 3499,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3573,
											"end": 3593,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3573,
											"end": 3593,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 3616,
											"end": 3634,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3605,
											"end": 3635,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3605,
											"end": 3635,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 3602,
											"end": 3652,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 3602,
											"end": 3652,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "479"
										},
										{
											"begin": 3602,
											"end": 3652,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 3648,
											"end": 3649,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3645,
											"end": 3646,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 3638,
											"end": 3650,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 3602,
											"end": 3652,
											"name": "tag",
											"source": 21,
											"value": "479"
										},
										{
											"begin": 3602,
											"end": 3652,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3685,
											"end": 3689,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 3677,
											"end": 3683,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 3673,
											"end": 3690,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3661,
											"end": 3690,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 3661,
											"end": 3690,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3745,
											"end": 3748,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 3738,
											"end": 3742,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 3728,
											"end": 3734,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3725,
											"end": 3726,
											"name": "PUSH",
											"source": 21,
											"value": "5"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SHL",
											"source": 21
										},
										{
											"begin": 3713,
											"end": 3719,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 3709,
											"end": 3736,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3705,
											"end": 3743,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3702,
											"end": 3749,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "480"
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 3762,
											"end": 3763,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3759,
											"end": 3760,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 3752,
											"end": 3764,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "tag",
											"source": 21,
											"value": "480"
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3405,
											"end": 3772,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 3405,
											"end": 3772,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3405,
											"end": 3772,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 3405,
											"end": 3772,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3405,
											"end": 3772,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3405,
											"end": 3772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3777,
											"end": 4881,
											"name": "tag",
											"source": 21,
											"value": "86"
										},
										{
											"begin": 3777,
											"end": 4881,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3951,
											"end": 3957,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3959,
											"end": 3965,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 3967,
											"end": 3973,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3975,
											"end": 3981,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 3983,
											"end": 3989,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3991,
											"end": 3997,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 4044,
											"end": 4046,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 4032,
											"end": 4041,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 4023,
											"end": 4030,
											"name": "DUP10",
											"source": 21
										},
										{
											"begin": 4019,
											"end": 4042,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 4015,
											"end": 4047,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 4012,
											"end": 4064,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 4012,
											"end": 4064,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "482"
										},
										{
											"begin": 4012,
											"end": 4064,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 4060,
											"end": 4061,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4057,
											"end": 4058,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 4050,
											"end": 4062,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 4012,
											"end": 4064,
											"name": "tag",
											"source": 21,
											"value": "482"
										},
										{
											"begin": 4012,
											"end": 4064,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4100,
											"end": 4109,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 4087,
											"end": 4110,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 4129,
											"end": 4147,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4170,
											"end": 4172,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 4162,
											"end": 4168,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4159,
											"end": 4173,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 4156,
											"end": 4190,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 4156,
											"end": 4190,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "483"
										},
										{
											"begin": 4156,
											"end": 4190,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 4186,
											"end": 4187,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4183,
											"end": 4184,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 4176,
											"end": 4188,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 4156,
											"end": 4190,
											"name": "tag",
											"source": 21,
											"value": "483"
										},
										{
											"begin": 4156,
											"end": 4190,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4225,
											"end": 4295,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "484"
										},
										{
											"begin": 4287,
											"end": 4294,
											"name": "DUP11",
											"source": 21
										},
										{
											"begin": 4278,
											"end": 4284,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 4267,
											"end": 4276,
											"name": "DUP12",
											"source": 21
										},
										{
											"begin": 4263,
											"end": 4285,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4225,
											"end": 4295,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "436"
										},
										{
											"begin": 4225,
											"end": 4295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4225,
											"end": 4295,
											"name": "tag",
											"source": 21,
											"value": "484"
										},
										{
											"begin": 4225,
											"end": 4295,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4314,
											"end": 4322,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 4314,
											"end": 4322,
											"name": "SWAP9",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4199,
											"end": 4295,
											"name": "SWAP7",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4402,
											"end": 4404,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 4387,
											"end": 4405,
											"name": "DUP10",
											"source": 21
										},
										{
											"begin": 4387,
											"end": 4405,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4374,
											"end": 4406,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 4374,
											"end": 4406,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4418,
											"end": 4434,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 4418,
											"end": 4434,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4418,
											"end": 4434,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 4415,
											"end": 4451,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 4415,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "485"
										},
										{
											"begin": 4415,
											"end": 4451,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 4447,
											"end": 4448,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4444,
											"end": 4445,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 4437,
											"end": 4449,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 4415,
											"end": 4451,
											"name": "tag",
											"source": 21,
											"value": "485"
										},
										{
											"begin": 4415,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4486,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "486"
										},
										{
											"begin": 4550,
											"end": 4557,
											"name": "DUP11",
											"source": 21
										},
										{
											"begin": 4539,
											"end": 4547,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 4528,
											"end": 4537,
											"name": "DUP12",
											"source": 21
										},
										{
											"begin": 4524,
											"end": 4548,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4486,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "436"
										},
										{
											"begin": 4486,
											"end": 4558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4486,
											"end": 4558,
											"name": "tag",
											"source": 21,
											"value": "486"
										},
										{
											"begin": 4486,
											"end": 4558,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4577,
											"end": 4585,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 4577,
											"end": 4585,
											"name": "SWAP7",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4460,
											"end": 4558,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4665,
											"end": 4667,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 4650,
											"end": 4668,
											"name": "DUP10",
											"source": 21
										},
										{
											"begin": 4650,
											"end": 4668,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4637,
											"end": 4669,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 4637,
											"end": 4669,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4681,
											"end": 4697,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 4681,
											"end": 4697,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4681,
											"end": 4697,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 4678,
											"end": 4714,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 4678,
											"end": 4714,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "487"
										},
										{
											"begin": 4678,
											"end": 4714,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 4710,
											"end": 4711,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4707,
											"end": 4708,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 4700,
											"end": 4712,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 4678,
											"end": 4714,
											"name": "tag",
											"source": 21,
											"value": "487"
										},
										{
											"begin": 4678,
											"end": 4714,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4678,
											"end": 4714,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4749,
											"end": 4821,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "488"
										},
										{
											"begin": 4813,
											"end": 4820,
											"name": "DUP10",
											"source": 21
										},
										{
											"begin": 4802,
											"end": 4810,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4791,
											"end": 4800,
											"name": "DUP11",
											"source": 21
										},
										{
											"begin": 4787,
											"end": 4811,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4749,
											"end": 4821,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "436"
										},
										{
											"begin": 4749,
											"end": 4821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4749,
											"end": 4821,
											"name": "tag",
											"source": 21,
											"value": "488"
										},
										{
											"begin": 4749,
											"end": 4821,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3777,
											"end": 4881,
											"name": "SWAP8",
											"source": 21
										},
										{
											"begin": 3777,
											"end": 4881,
											"name": "SWAP11",
											"source": 21
										},
										{
											"begin": 3777,
											"end": 4881,
											"name": "SWAP7",
											"source": 21
										},
										{
											"begin": 3777,
											"end": 4881,
											"name": "SWAP10",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3777,
											"end": 4881,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 3777,
											"end": 4881,
											"name": "SWAP8",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3777,
											"end": 4881,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 3777,
											"end": 4881,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 4840,
											"end": 4848,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 4840,
											"end": 4848,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 3777,
											"end": 4881,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3777,
											"end": 4881,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5287,
											"end": 5692,
											"name": "tag",
											"source": 21,
											"value": "104"
										},
										{
											"begin": 5287,
											"end": 5692,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5372,
											"end": 5378,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5380,
											"end": 5386,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 5433,
											"end": 5435,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 5421,
											"end": 5430,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 5412,
											"end": 5419,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 5408,
											"end": 5431,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 5404,
											"end": 5436,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 5401,
											"end": 5453,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 5401,
											"end": 5453,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "492"
										},
										{
											"begin": 5401,
											"end": 5453,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 5449,
											"end": 5450,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5446,
											"end": 5447,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 5439,
											"end": 5451,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 5401,
											"end": 5453,
											"name": "tag",
											"source": 21,
											"value": "492"
										},
										{
											"begin": 5401,
											"end": 5453,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5488,
											"end": 5497,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5475,
											"end": 5498,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 5507,
											"end": 5538,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "493"
										},
										{
											"begin": 5532,
											"end": 5537,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5507,
											"end": 5538,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "434"
										},
										{
											"begin": 5507,
											"end": 5538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5507,
											"end": 5538,
											"name": "tag",
											"source": 21,
											"value": "493"
										},
										{
											"begin": 5507,
											"end": 5538,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5557,
											"end": 5562,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5614,
											"end": 5616,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 5599,
											"end": 5617,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 5599,
											"end": 5617,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5586,
											"end": 5618,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 5627,
											"end": 5660,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "464"
										},
										{
											"begin": 5586,
											"end": 5618,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5627,
											"end": 5660,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "434"
										},
										{
											"begin": 5627,
											"end": 5660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8491,
											"end": 8618,
											"name": "tag",
											"source": 21,
											"value": "216"
										},
										{
											"begin": 8491,
											"end": 8618,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8552,
											"end": 8562,
											"name": "PUSH",
											"source": 21,
											"value": "4E487B71"
										},
										{
											"begin": 8547,
											"end": 8550,
											"name": "PUSH",
											"source": 21,
											"value": "E0"
										},
										{
											"begin": 8543,
											"end": 8563,
											"name": "SHL",
											"source": 21
										},
										{
											"begin": 8540,
											"end": 8541,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 8533,
											"end": 8564,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 8583,
											"end": 8587,
											"name": "PUSH",
											"source": 21,
											"value": "32"
										},
										{
											"begin": 8580,
											"end": 8581,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 8573,
											"end": 8588,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 8607,
											"end": 8611,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 8604,
											"end": 8605,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 8597,
											"end": 8612,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 8892,
											"end": 9137,
											"name": "tag",
											"source": 21,
											"value": "225"
										},
										{
											"begin": 8892,
											"end": 9137,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8950,
											"end": 8956,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 9003,
											"end": 9005,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 8991,
											"end": 9000,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8982,
											"end": 8989,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 8978,
											"end": 9001,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 8974,
											"end": 9006,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 8971,
											"end": 9023,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 8971,
											"end": 9023,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "509"
										},
										{
											"begin": 8971,
											"end": 9023,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 9019,
											"end": 9020,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 9016,
											"end": 9017,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 9009,
											"end": 9021,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 8971,
											"end": 9023,
											"name": "tag",
											"source": 21,
											"value": "509"
										},
										{
											"begin": 8971,
											"end": 9023,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9058,
											"end": 9067,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 9045,
											"end": 9068,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 9077,
											"end": 9107,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "431"
										},
										{
											"begin": 9101,
											"end": 9106,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 9077,
											"end": 9107,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "435"
										},
										{
											"begin": 9077,
											"end": 9107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9142,
											"end": 9269,
											"name": "tag",
											"source": 21,
											"value": "437"
										},
										{
											"begin": 9142,
											"end": 9269,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9203,
											"end": 9213,
											"name": "PUSH",
											"source": 21,
											"value": "4E487B71"
										},
										{
											"begin": 9198,
											"end": 9201,
											"name": "PUSH",
											"source": 21,
											"value": "E0"
										},
										{
											"begin": 9194,
											"end": 9214,
											"name": "SHL",
											"source": 21
										},
										{
											"begin": 9191,
											"end": 9192,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 9184,
											"end": 9215,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 9234,
											"end": 9238,
											"name": "PUSH",
											"source": 21,
											"value": "11"
										},
										{
											"begin": 9231,
											"end": 9232,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 9224,
											"end": 9239,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 9258,
											"end": 9262,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 9255,
											"end": 9256,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 9248,
											"end": 9263,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 9274,
											"end": 9409,
											"name": "tag",
											"source": 21,
											"value": "227"
										},
										{
											"begin": 9274,
											"end": 9409,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9313,
											"end": 9316,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 9334,
											"end": 9351,
											"name": "PUSH",
											"source": 21,
											"value": "1"
										},
										{
											"begin": 9334,
											"end": 9351,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 9334,
											"end": 9351,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9331,
											"end": 9374,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "514"
										},
										{
											"begin": 9331,
											"end": 9374,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 9354,
											"end": 9372,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "514"
										},
										{
											"begin": 9354,
											"end": 9372,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "437"
										},
										{
											"begin": 9354,
											"end": 9372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9354,
											"end": 9372,
											"name": "tag",
											"source": 21,
											"value": "514"
										},
										{
											"begin": 9354,
											"end": 9372,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9401,
											"end": 9402,
											"name": "PUSH",
											"source": 21,
											"value": "1"
										},
										{
											"begin": 9390,
											"end": 9403,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9390,
											"end": 9403,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 9274,
											"end": 9409,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9414,
											"end": 9663,
											"name": "tag",
											"source": 21,
											"value": "242"
										},
										{
											"begin": 9414,
											"end": 9663,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9483,
											"end": 9489,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 9536,
											"end": 9538,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 9524,
											"end": 9533,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 9515,
											"end": 9522,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 9511,
											"end": 9534,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 9507,
											"end": 9539,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 9504,
											"end": 9556,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 9504,
											"end": 9556,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "516"
										},
										{
											"begin": 9504,
											"end": 9556,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 9552,
											"end": 9553,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 9549,
											"end": 9550,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 9542,
											"end": 9554,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 9504,
											"end": 9556,
											"name": "tag",
											"source": 21,
											"value": "516"
										},
										{
											"begin": 9504,
											"end": 9556,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9584,
											"end": 9593,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 9578,
											"end": 9594,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 9603,
											"end": 9633,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "431"
										},
										{
											"begin": 9627,
											"end": 9632,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 9603,
											"end": 9633,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "435"
										},
										{
											"begin": 9603,
											"end": 9633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9994,
											"end": 10121,
											"name": "tag",
											"source": 21,
											"value": "285"
										},
										{
											"begin": 9994,
											"end": 10121,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10055,
											"end": 10065,
											"name": "PUSH",
											"source": 21,
											"value": "4E487B71"
										},
										{
											"begin": 10050,
											"end": 10053,
											"name": "PUSH",
											"source": 21,
											"value": "E0"
										},
										{
											"begin": 10046,
											"end": 10066,
											"name": "SHL",
											"source": 21
										},
										{
											"begin": 10043,
											"end": 10044,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 10036,
											"end": 10067,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 10086,
											"end": 10090,
											"name": "PUSH",
											"source": 21,
											"value": "41"
										},
										{
											"begin": 10083,
											"end": 10084,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 10076,
											"end": 10091,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 10110,
											"end": 10114,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 10107,
											"end": 10108,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 10100,
											"end": 10115,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 10126,
											"end": 10401,
											"name": "tag",
											"source": 21,
											"value": "438"
										},
										{
											"begin": 10126,
											"end": 10401,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10197,
											"end": 10199,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 10191,
											"end": 10200,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 10262,
											"end": 10264,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 10243,
											"end": 10256,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 10243,
											"end": 10256,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10239,
											"end": 10266,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 10227,
											"end": 10267,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 10227,
											"end": 10267,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 10297,
											"end": 10315,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10282,
											"end": 10316,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 10282,
											"end": 10316,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 10318,
											"end": 10340,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 10318,
											"end": 10340,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 10318,
											"end": 10340,
											"name": "LT",
											"source": 21
										},
										{
											"begin": 10279,
											"end": 10341,
											"name": "OR",
											"source": 21
										},
										{
											"begin": 10276,
											"end": 10364,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 10276,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "522"
										},
										{
											"begin": 10276,
											"end": 10364,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 10344,
											"end": 10362,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "522"
										},
										{
											"begin": 10344,
											"end": 10362,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "285"
										},
										{
											"begin": 10344,
											"end": 10362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 10344,
											"end": 10362,
											"name": "tag",
											"source": 21,
											"value": "522"
										},
										{
											"begin": 10344,
											"end": 10362,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10380,
											"end": 10382,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 10373,
											"end": 10395,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 10126,
											"end": 10401,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 10126,
											"end": 10401,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10126,
											"end": 10401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 10406,
											"end": 10589,
											"name": "tag",
											"source": 21,
											"value": "439"
										},
										{
											"begin": 10406,
											"end": 10589,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10466,
											"end": 10470,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 10499,
											"end": 10517,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10491,
											"end": 10497,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 10488,
											"end": 10518,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 10485,
											"end": 10541,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 10485,
											"end": 10541,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "525"
										},
										{
											"begin": 10485,
											"end": 10541,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 10521,
											"end": 10539,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "525"
										},
										{
											"begin": 10521,
											"end": 10539,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "285"
										},
										{
											"begin": 10521,
											"end": 10539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 10521,
											"end": 10539,
											"name": "tag",
											"source": 21,
											"value": "525"
										},
										{
											"begin": 10521,
											"end": 10539,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10566,
											"end": 10567,
											"name": "PUSH",
											"source": 21,
											"value": "5"
										},
										{
											"begin": 10562,
											"end": 10576,
											"name": "SHL",
											"source": 21
										},
										{
											"begin": 10578,
											"end": 10582,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 10558,
											"end": 10583,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 10558,
											"end": 10583,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 10406,
											"end": 10589,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 10594,
											"end": 11475,
											"name": "tag",
											"source": 21,
											"value": "269"
										},
										{
											"begin": 10594,
											"end": 11475,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10689,
											"end": 10695,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 10720,
											"end": 10722,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 10763,
											"end": 10765,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 10751,
											"end": 10760,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 10742,
											"end": 10749,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 10738,
											"end": 10761,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 10734,
											"end": 10766,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 10731,
											"end": 10783,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 10731,
											"end": 10783,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "527"
										},
										{
											"begin": 10731,
											"end": 10783,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 10779,
											"end": 10780,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 10776,
											"end": 10777,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 10769,
											"end": 10781,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 10731,
											"end": 10783,
											"name": "tag",
											"source": 21,
											"value": "527"
										},
										{
											"begin": 10731,
											"end": 10783,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10812,
											"end": 10821,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 10806,
											"end": 10822,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 10845,
											"end": 10863,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10837,
											"end": 10843,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 10834,
											"end": 10864,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 10831,
											"end": 10881,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 10831,
											"end": 10881,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "528"
										},
										{
											"begin": 10831,
											"end": 10881,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 10877,
											"end": 10878,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 10874,
											"end": 10875,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 10867,
											"end": 10879,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 10831,
											"end": 10881,
											"name": "tag",
											"source": 21,
											"value": "528"
										},
										{
											"begin": 10831,
											"end": 10881,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10900,
											"end": 10922,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 10900,
											"end": 10922,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 10953,
											"end": 10957,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 10945,
											"end": 10958,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 10945,
											"end": 10958,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 10941,
											"end": 10968,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 10931,
											"end": 10986,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "529"
										},
										{
											"begin": 10931,
											"end": 10986,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 10982,
											"end": 10983,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 10979,
											"end": 10980,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 10972,
											"end": 10984,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 10931,
											"end": 10986,
											"name": "tag",
											"source": 21,
											"value": "529"
										},
										{
											"begin": 10931,
											"end": 10986,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11011,
											"end": 11013,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 11005,
											"end": 11014,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 11034,
											"end": 11094,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "530"
										},
										{
											"begin": 11050,
											"end": 11093,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "531"
										},
										{
											"begin": 11090,
											"end": 11092,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11050,
											"end": 11093,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "439"
										},
										{
											"begin": 11050,
											"end": 11093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 11050,
											"end": 11093,
											"name": "tag",
											"source": 21,
											"value": "531"
										},
										{
											"begin": 11050,
											"end": 11093,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11034,
											"end": 11094,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "438"
										},
										{
											"begin": 11034,
											"end": 11094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 11034,
											"end": 11094,
											"name": "tag",
											"source": 21,
											"value": "530"
										},
										{
											"begin": 11034,
											"end": 11094,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11128,
											"end": 11143,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 11128,
											"end": 11143,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 11128,
											"end": 11143,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 11210,
											"end": 11211,
											"name": "PUSH",
											"source": 21,
											"value": "5"
										},
										{
											"begin": 11206,
											"end": 11216,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 11206,
											"end": 11216,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 11206,
											"end": 11216,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 11206,
											"end": 11216,
											"name": "SHL",
											"source": 21
										},
										{
											"begin": 11198,
											"end": 11217,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11198,
											"end": 11217,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11194,
											"end": 11222,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 11194,
											"end": 11222,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11194,
											"end": 11222,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 11159,
											"end": 11171,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 11159,
											"end": 11171,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 11159,
											"end": 11171,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11159,
											"end": 11171,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 11234,
											"end": 11253,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 11234,
											"end": 11253,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 11234,
											"end": 11253,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 11231,
											"end": 11270,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 11231,
											"end": 11270,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "532"
										},
										{
											"begin": 11231,
											"end": 11270,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 11266,
											"end": 11267,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 11263,
											"end": 11264,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 11256,
											"end": 11268,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 11231,
											"end": 11270,
											"name": "tag",
											"source": 21,
											"value": "532"
										},
										{
											"begin": 11231,
											"end": 11270,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11290,
											"end": 11301,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 11290,
											"end": 11301,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 11290,
											"end": 11301,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11290,
											"end": 11301,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 11310,
											"end": 11445,
											"name": "tag",
											"source": 21,
											"value": "533"
										},
										{
											"begin": 11310,
											"end": 11445,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11326,
											"end": 11332,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11321,
											"end": 11324,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 11318,
											"end": 11333,
											"name": "LT",
											"source": 21
										},
										{
											"begin": 11310,
											"end": 11445,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 11310,
											"end": 11445,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "535"
										},
										{
											"begin": 11310,
											"end": 11445,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 11392,
											"end": 11402,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 11392,
											"end": 11402,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 11380,
											"end": 11403,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11380,
											"end": 11403,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 11343,
											"end": 11355,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 11343,
											"end": 11355,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 11343,
											"end": 11355,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11343,
											"end": 11355,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 11423,
											"end": 11435,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 11423,
											"end": 11435,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 11423,
											"end": 11435,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11423,
											"end": 11435,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 11310,
											"end": 11445,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "533"
										},
										{
											"begin": 11310,
											"end": 11445,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 11310,
											"end": 11445,
											"name": "tag",
											"source": 21,
											"value": "535"
										},
										{
											"begin": 11310,
											"end": 11445,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11464,
											"end": 11469,
											"name": "SWAP8",
											"source": 21
										},
										{
											"begin": 10594,
											"end": 11475,
											"name": "SWAP7",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10594,
											"end": 11475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 11662,
											"end": 12637,
											"name": "tag",
											"source": 21,
											"value": "281"
										},
										{
											"begin": 11662,
											"end": 12637,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11776,
											"end": 11782,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 11807,
											"end": 11809,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 11850,
											"end": 11852,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 11838,
											"end": 11847,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 11829,
											"end": 11836,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 11825,
											"end": 11848,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 11821,
											"end": 11853,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 11818,
											"end": 11870,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 11818,
											"end": 11870,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "538"
										},
										{
											"begin": 11818,
											"end": 11870,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 11866,
											"end": 11867,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 11863,
											"end": 11864,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 11856,
											"end": 11868,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 11818,
											"end": 11870,
											"name": "tag",
											"source": 21,
											"value": "538"
										},
										{
											"begin": 11818,
											"end": 11870,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11899,
											"end": 11908,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11893,
											"end": 11909,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 11932,
											"end": 11950,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11924,
											"end": 11930,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 11921,
											"end": 11951,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 11918,
											"end": 11968,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 11918,
											"end": 11968,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "539"
										},
										{
											"begin": 11918,
											"end": 11968,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 11964,
											"end": 11965,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 11961,
											"end": 11962,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 11954,
											"end": 11966,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 11918,
											"end": 11968,
											"name": "tag",
											"source": 21,
											"value": "539"
										},
										{
											"begin": 11918,
											"end": 11968,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11987,
											"end": 12009,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 11987,
											"end": 12009,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 12040,
											"end": 12044,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 12032,
											"end": 12045,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 12032,
											"end": 12045,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 12028,
											"end": 12055,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 12018,
											"end": 12073,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "540"
										},
										{
											"begin": 12018,
											"end": 12073,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 12069,
											"end": 12070,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 12066,
											"end": 12067,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 12059,
											"end": 12071,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 12018,
											"end": 12073,
											"name": "tag",
											"source": 21,
											"value": "540"
										},
										{
											"begin": 12018,
											"end": 12073,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12098,
											"end": 12100,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 12092,
											"end": 12101,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 12121,
											"end": 12181,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "541"
										},
										{
											"begin": 12137,
											"end": 12180,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "531"
										},
										{
											"begin": 12177,
											"end": 12179,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 12137,
											"end": 12180,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "439"
										},
										{
											"begin": 12137,
											"end": 12180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 12121,
											"end": 12181,
											"name": "tag",
											"source": 21,
											"value": "541"
										},
										{
											"begin": 12121,
											"end": 12181,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12215,
											"end": 12230,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 12215,
											"end": 12230,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 12215,
											"end": 12230,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 12297,
											"end": 12298,
											"name": "PUSH",
											"source": 21,
											"value": "5"
										},
										{
											"begin": 12293,
											"end": 12303,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 12293,
											"end": 12303,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 12293,
											"end": 12303,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 12293,
											"end": 12303,
											"name": "SHL",
											"source": 21
										},
										{
											"begin": 12285,
											"end": 12304,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 12285,
											"end": 12304,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 12281,
											"end": 12309,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 12281,
											"end": 12309,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 12281,
											"end": 12309,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 12246,
											"end": 12258,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 12246,
											"end": 12258,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 12246,
											"end": 12258,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 12246,
											"end": 12258,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 12321,
											"end": 12340,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 12321,
											"end": 12340,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 12321,
											"end": 12340,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 12318,
											"end": 12357,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 12318,
											"end": 12357,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "543"
										},
										{
											"begin": 12318,
											"end": 12357,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 12353,
											"end": 12354,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 12350,
											"end": 12351,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 12343,
											"end": 12355,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 12318,
											"end": 12357,
											"name": "tag",
											"source": 21,
											"value": "543"
										},
										{
											"begin": 12318,
											"end": 12357,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12377,
											"end": 12388,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 12377,
											"end": 12388,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 12377,
											"end": 12388,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 12377,
											"end": 12388,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 12397,
											"end": 12607,
											"name": "tag",
											"source": 21,
											"value": "544"
										},
										{
											"begin": 12397,
											"end": 12607,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12413,
											"end": 12419,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 12408,
											"end": 12411,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 12405,
											"end": 12420,
											"name": "LT",
											"source": 21
										},
										{
											"begin": 12397,
											"end": 12607,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 12397,
											"end": 12607,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "535"
										},
										{
											"begin": 12397,
											"end": 12607,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 12486,
											"end": 12489,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 12480,
											"end": 12490,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 12503,
											"end": 12534,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "547"
										},
										{
											"begin": 12528,
											"end": 12533,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 12503,
											"end": 12534,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "434"
										},
										{
											"begin": 12503,
											"end": 12534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 12503,
											"end": 12534,
											"name": "tag",
											"source": 21,
											"value": "547"
										},
										{
											"begin": 12503,
											"end": 12534,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12547,
											"end": 12565,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 12547,
											"end": 12565,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 12430,
											"end": 12442,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 12430,
											"end": 12442,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 12430,
											"end": 12442,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 12430,
											"end": 12442,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 12585,
											"end": 12597,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 12585,
											"end": 12597,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 12585,
											"end": 12597,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 12585,
											"end": 12597,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 12397,
											"end": 12607,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "544"
										},
										{
											"begin": 12397,
											"end": 12607,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 12940,
											"end": 13190,
											"name": "tag",
											"source": 21,
											"value": "440"
										},
										{
											"begin": 12940,
											"end": 13190,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13025,
											"end": 13026,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 13035,
											"end": 13148,
											"name": "tag",
											"source": 21,
											"value": "550"
										},
										{
											"begin": 13035,
											"end": 13148,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13049,
											"end": 13055,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 13046,
											"end": 13047,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 13043,
											"end": 13056,
											"name": "LT",
											"source": 21
										},
										{
											"begin": 13035,
											"end": 13148,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 13035,
											"end": 13148,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "552"
										},
										{
											"begin": 13035,
											"end": 13148,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 13125,
											"end": 13136,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 13125,
											"end": 13136,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 13125,
											"end": 13136,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 13119,
											"end": 13137,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 13106,
											"end": 13117,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 13106,
											"end": 13117,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 13106,
											"end": 13117,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 13099,
											"end": 13138,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 13071,
											"end": 13073,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 13064,
											"end": 13074,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 13035,
											"end": 13148,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "550"
										},
										{
											"begin": 13035,
											"end": 13148,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 13035,
											"end": 13148,
											"name": "tag",
											"source": 21,
											"value": "552"
										},
										{
											"begin": 13035,
											"end": 13148,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13182,
											"end": 13183,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 13164,
											"end": 13180,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 13164,
											"end": 13180,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 13157,
											"end": 13184,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 12940,
											"end": 13190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 13195,
											"end": 13585,
											"name": "tag",
											"source": 21,
											"value": "441"
										},
										{
											"begin": 13195,
											"end": 13585,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13270,
											"end": 13275,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 13304,
											"end": 13322,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13296,
											"end": 13302,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 13293,
											"end": 13323,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 13290,
											"end": 13346,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 13290,
											"end": 13346,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "555"
										},
										{
											"begin": 13290,
											"end": 13346,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 13326,
											"end": 13344,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "555"
										},
										{
											"begin": 13326,
											"end": 13344,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "285"
										},
										{
											"begin": 13326,
											"end": 13344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 13326,
											"end": 13344,
											"name": "tag",
											"source": 21,
											"value": "555"
										},
										{
											"begin": 13326,
											"end": 13344,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13364,
											"end": 13421,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "556"
										},
										{
											"begin": 13409,
											"end": 13411,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 13388,
											"end": 13403,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 13388,
											"end": 13403,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13384,
											"end": 13413,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 13415,
											"end": 13419,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 13380,
											"end": 13420,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 13364,
											"end": 13421,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "438"
										},
										{
											"begin": 13364,
											"end": 13421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 13364,
											"end": 13421,
											"name": "tag",
											"source": 21,
											"value": "556"
										},
										{
											"begin": 13364,
											"end": 13421,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13355,
											"end": 13421,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 13355,
											"end": 13421,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13444,
											"end": 13450,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 13437,
											"end": 13442,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 13430,
											"end": 13451,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 13484,
											"end": 13487,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 13475,
											"end": 13481,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 13470,
											"end": 13473,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 13466,
											"end": 13482,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 13463,
											"end": 13488,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 13460,
											"end": 13505,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 13460,
											"end": 13505,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "557"
										},
										{
											"begin": 13460,
											"end": 13505,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 13501,
											"end": 13502,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 13498,
											"end": 13499,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 13491,
											"end": 13503,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 13460,
											"end": 13505,
											"name": "tag",
											"source": 21,
											"value": "557"
										},
										{
											"begin": 13460,
											"end": 13505,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13514,
											"end": 13579,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "431"
										},
										{
											"begin": 13572,
											"end": 13578,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 13565,
											"end": 13569,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 13558,
											"end": 13563,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 13554,
											"end": 13570,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 13549,
											"end": 13552,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 13514,
											"end": 13579,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "440"
										},
										{
											"begin": 13514,
											"end": 13579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 13590,
											"end": 13825,
											"name": "tag",
											"source": 21,
											"value": "442"
										},
										{
											"begin": 13590,
											"end": 13825,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13643,
											"end": 13648,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 13696,
											"end": 13699,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 13689,
											"end": 13693,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 13681,
											"end": 13687,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 13677,
											"end": 13694,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 13673,
											"end": 13700,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 13663,
											"end": 13718,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "560"
										},
										{
											"begin": 13663,
											"end": 13718,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 13714,
											"end": 13715,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 13711,
											"end": 13712,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 13704,
											"end": 13716,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 13663,
											"end": 13718,
											"name": "tag",
											"source": 21,
											"value": "560"
										},
										{
											"begin": 13663,
											"end": 13718,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13736,
											"end": 13819,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "431"
										},
										{
											"begin": 13815,
											"end": 13818,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 13806,
											"end": 13812,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 13800,
											"end": 13813,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 13793,
											"end": 13797,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 13785,
											"end": 13791,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 13781,
											"end": 13798,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 13736,
											"end": 13819,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "441"
										},
										{
											"begin": 13736,
											"end": 13819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 13830,
											"end": 14966,
											"name": "tag",
											"source": 21,
											"value": "309"
										},
										{
											"begin": 13830,
											"end": 14966,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13973,
											"end": 13979,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 13981,
											"end": 13987,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 13989,
											"end": 13995,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 13997,
											"end": 14003,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 14005,
											"end": 14011,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 14013,
											"end": 14019,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 14066,
											"end": 14069,
											"name": "PUSH",
											"source": 21,
											"value": "C0"
										},
										{
											"begin": 14054,
											"end": 14063,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 14045,
											"end": 14052,
											"name": "DUP10",
											"source": 21
										},
										{
											"begin": 14041,
											"end": 14064,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 14037,
											"end": 14070,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 14034,
											"end": 14087,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 14034,
											"end": 14087,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "563"
										},
										{
											"begin": 14034,
											"end": 14087,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 14083,
											"end": 14084,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 14080,
											"end": 14081,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 14073,
											"end": 14085,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 14034,
											"end": 14087,
											"name": "tag",
											"source": 21,
											"value": "563"
										},
										{
											"begin": 14034,
											"end": 14087,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14112,
											"end": 14121,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 14106,
											"end": 14122,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 14096,
											"end": 14122,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 14096,
											"end": 14122,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14162,
											"end": 14164,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 14151,
											"end": 14160,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 14147,
											"end": 14165,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 14141,
											"end": 14166,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 14131,
											"end": 14166,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 14131,
											"end": 14166,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14209,
											"end": 14211,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 14198,
											"end": 14207,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 14194,
											"end": 14212,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 14188,
											"end": 14213,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 14222,
											"end": 14253,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "564"
										},
										{
											"begin": 14247,
											"end": 14252,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 14222,
											"end": 14253,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "434"
										},
										{
											"begin": 14222,
											"end": 14253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 14222,
											"end": 14253,
											"name": "tag",
											"source": 21,
											"value": "564"
										},
										{
											"begin": 14222,
											"end": 14253,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14321,
											"end": 14323,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 14306,
											"end": 14324,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 14306,
											"end": 14324,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 14300,
											"end": 14325,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 14272,
											"end": 14277,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 14272,
											"end": 14277,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14344,
											"end": 14362,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14374,
											"end": 14388,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 14374,
											"end": 14388,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 14374,
											"end": 14388,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 14371,
											"end": 14405,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 14371,
											"end": 14405,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "565"
										},
										{
											"begin": 14371,
											"end": 14405,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 14401,
											"end": 14402,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 14398,
											"end": 14399,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 14391,
											"end": 14403,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 14371,
											"end": 14405,
											"name": "tag",
											"source": 21,
											"value": "565"
										},
										{
											"begin": 14371,
											"end": 14405,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14424,
											"end": 14484,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "566"
										},
										{
											"begin": 14476,
											"end": 14483,
											"name": "DUP11",
											"source": 21
										},
										{
											"begin": 14467,
											"end": 14473,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 14456,
											"end": 14465,
											"name": "DUP12",
											"source": 21
										},
										{
											"begin": 14452,
											"end": 14474,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 14424,
											"end": 14484,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "442"
										},
										{
											"begin": 14424,
											"end": 14484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 14424,
											"end": 14484,
											"name": "tag",
											"source": 21,
											"value": "566"
										},
										{
											"begin": 14424,
											"end": 14484,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14414,
											"end": 14484,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 14414,
											"end": 14484,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14530,
											"end": 14533,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 14519,
											"end": 14528,
											"name": "DUP10",
											"source": 21
										},
										{
											"begin": 14515,
											"end": 14534,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 14509,
											"end": 14535,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 14493,
											"end": 14535,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 14493,
											"end": 14535,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14560,
											"end": 14562,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 14550,
											"end": 14558,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 14547,
											"end": 14563,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 14544,
											"end": 14580,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 14544,
											"end": 14580,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "567"
										},
										{
											"begin": 14544,
											"end": 14580,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 14576,
											"end": 14577,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 14573,
											"end": 14574,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 14566,
											"end": 14578,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 14544,
											"end": 14580,
											"name": "tag",
											"source": 21,
											"value": "567"
										},
										{
											"begin": 14544,
											"end": 14580,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14599,
											"end": 14661,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "568"
										},
										{
											"begin": 14653,
											"end": 14660,
											"name": "DUP11",
											"source": 21
										},
										{
											"begin": 14642,
											"end": 14650,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 14631,
											"end": 14640,
											"name": "DUP12",
											"source": 21
										},
										{
											"begin": 14627,
											"end": 14651,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 14599,
											"end": 14661,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "442"
										},
										{
											"begin": 14599,
											"end": 14661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 14599,
											"end": 14661,
											"name": "tag",
											"source": 21,
											"value": "568"
										},
										{
											"begin": 14599,
											"end": 14661,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14589,
											"end": 14661,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 14589,
											"end": 14661,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14707,
											"end": 14710,
											"name": "PUSH",
											"source": 21,
											"value": "A0"
										},
										{
											"begin": 14696,
											"end": 14705,
											"name": "DUP10",
											"source": 21
										},
										{
											"begin": 14692,
											"end": 14711,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 14686,
											"end": 14712,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 14670,
											"end": 14712,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 14670,
											"end": 14712,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14737,
											"end": 14739,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 14727,
											"end": 14735,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 14724,
											"end": 14740,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 14721,
											"end": 14757,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 14721,
											"end": 14757,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "569"
										},
										{
											"begin": 14721,
											"end": 14757,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 14753,
											"end": 14754,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 14750,
											"end": 14751,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 14743,
											"end": 14755,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 14721,
											"end": 14757,
											"name": "tag",
											"source": 21,
											"value": "569"
										},
										{
											"begin": 14721,
											"end": 14757,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14776,
											"end": 14800,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 14776,
											"end": 14800,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 14831,
											"end": 14835,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 14823,
											"end": 14836,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 14823,
											"end": 14836,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 14819,
											"end": 14846,
											"name": "DUP10",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 14809,
											"end": 14864,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "570"
										},
										{
											"begin": 14809,
											"end": 14864,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 14860,
											"end": 14861,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 14857,
											"end": 14858,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 14850,
											"end": 14862,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 14809,
											"end": 14864,
											"name": "tag",
											"source": 21,
											"value": "570"
										},
										{
											"begin": 14809,
											"end": 14864,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14883,
											"end": 14960,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "571"
										},
										{
											"begin": 14952,
											"end": 14959,
											"name": "DUP10",
											"source": 21
										},
										{
											"begin": 14947,
											"end": 14949,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 14941,
											"end": 14950,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 14936,
											"end": 14938,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 14932,
											"end": 14934,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 14928,
											"end": 14939,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 14883,
											"end": 14960,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "441"
										},
										{
											"begin": 14883,
											"end": 14960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 14883,
											"end": 14960,
											"name": "tag",
											"source": 21,
											"value": "571"
										},
										{
											"begin": 14883,
											"end": 14960,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14873,
											"end": 14960,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 14873,
											"end": 14960,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14873,
											"end": 14960,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13830,
											"end": 14966,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 13830,
											"end": 14966,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 13830,
											"end": 14966,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13830,
											"end": 14966,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 13830,
											"end": 14966,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 13830,
											"end": 14966,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13830,
											"end": 14966,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 13830,
											"end": 14966,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 13830,
											"end": 14966,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 14971,
											"end": 15241,
											"name": "tag",
											"source": 21,
											"value": "443"
										},
										{
											"begin": 14971,
											"end": 15241,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 15012,
											"end": 15015,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 15050,
											"end": 15055,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 15044,
											"end": 15056,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 15077,
											"end": 15083,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 15072,
											"end": 15075,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 15065,
											"end": 15084,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 15093,
											"end": 15169,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "573"
										},
										{
											"begin": 15162,
											"end": 15168,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 15155,
											"end": 15159,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 15150,
											"end": 15153,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 15146,
											"end": 15160,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 15139,
											"end": 15143,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 15132,
											"end": 15137,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 15128,
											"end": 15144,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 15093,
											"end": 15169,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "440"
										},
										{
											"begin": 15093,
											"end": 15169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 15093,
											"end": 15169,
											"name": "tag",
											"source": 21,
											"value": "573"
										},
										{
											"begin": 15093,
											"end": 15169,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 15223,
											"end": 15225,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 15202,
											"end": 15217,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15198,
											"end": 15227,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 15189,
											"end": 15228,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 15189,
											"end": 15228,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 15189,
											"end": 15228,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 15189,
											"end": 15228,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 15230,
											"end": 15234,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 15185,
											"end": 15235,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 15185,
											"end": 15235,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 14971,
											"end": 15241,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14971,
											"end": 15241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 15246,
											"end": 15810,
											"name": "tag",
											"source": 21,
											"value": "317"
										},
										{
											"begin": 15246,
											"end": 15810,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 15541,
											"end": 15542,
											"name": "PUSH",
											"source": 21,
											"value": "1"
										},
										{
											"begin": 15537,
											"end": 15538,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 15532,
											"end": 15535,
											"name": "PUSH",
											"source": 21,
											"value": "A0"
										},
										{
											"begin": 15528,
											"end": 15539,
											"name": "SHL",
											"source": 21
										},
										{
											"begin": 15524,
											"end": 15543,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 15516,
											"end": 15522,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 15512,
											"end": 15544,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 15501,
											"end": 15510,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 15494,
											"end": 15545,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 15581,
											"end": 15587,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 15576,
											"end": 15578,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 15565,
											"end": 15574,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 15561,
											"end": 15579,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 15554,
											"end": 15588,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 15624,
											"end": 15627,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 15619,
											"end": 15621,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 15608,
											"end": 15617,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 15604,
											"end": 15622,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 15597,
											"end": 15628,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 15475,
											"end": 15479,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 15651,
											"end": 15696,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "575"
										},
										{
											"begin": 15691,
											"end": 15694,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 15680,
											"end": 15689,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 15676,
											"end": 15695,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 15668,
											"end": 15674,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 15651,
											"end": 15696,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "443"
										},
										{
											"begin": 15651,
											"end": 15696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 15651,
											"end": 15696,
											"name": "tag",
											"source": 21,
											"value": "575"
										},
										{
											"begin": 15651,
											"end": 15696,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 15744,
											"end": 15753,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 15736,
											"end": 15742,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 15732,
											"end": 15754,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 15727,
											"end": 15729,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 15716,
											"end": 15725,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 15712,
											"end": 15730,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 15705,
											"end": 15755,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 15772,
											"end": 15804,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "535"
										},
										{
											"begin": 15797,
											"end": 15803,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 15789,
											"end": 15795,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 15772,
											"end": 15804,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "443"
										},
										{
											"begin": 15772,
											"end": 15804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 15815,
											"end": 16092,
											"name": "tag",
											"source": 21,
											"value": "320"
										},
										{
											"begin": 15815,
											"end": 16092,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 15882,
											"end": 15888,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 15935,
											"end": 15937,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 15923,
											"end": 15932,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 15914,
											"end": 15921,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 15910,
											"end": 15933,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 15906,
											"end": 15938,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 15903,
											"end": 15955,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 15903,
											"end": 15955,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "578"
										},
										{
											"begin": 15903,
											"end": 15955,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 15951,
											"end": 15952,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 15948,
											"end": 15949,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 15941,
											"end": 15953,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 15903,
											"end": 15955,
											"name": "tag",
											"source": 21,
											"value": "578"
										},
										{
											"begin": 15903,
											"end": 15955,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 15983,
											"end": 15992,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 15977,
											"end": 15993,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 16036,
											"end": 16041,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 16029,
											"end": 16042,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 16022,
											"end": 16043,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 16015,
											"end": 16020,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 16012,
											"end": 16044,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 16002,
											"end": 16062,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "431"
										},
										{
											"begin": 16002,
											"end": 16062,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 16058,
											"end": 16059,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 16055,
											"end": 16056,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 16048,
											"end": 16060,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 16097,
											"end": 16225,
											"name": "tag",
											"source": 21,
											"value": "326"
										},
										{
											"begin": 16097,
											"end": 16225,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 16164,
											"end": 16173,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 16164,
											"end": 16173,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 16164,
											"end": 16173,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 16185,
											"end": 16196,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 16185,
											"end": 16196,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 16185,
											"end": 16196,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 16182,
											"end": 16219,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 16182,
											"end": 16219,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "147"
										},
										{
											"begin": 16182,
											"end": 16219,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 16199,
											"end": 16217,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "147"
										},
										{
											"begin": 16199,
											"end": 16217,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "437"
										},
										{
											"begin": 16199,
											"end": 16217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 16230,
											"end": 16498,
											"name": "tag",
											"source": 21,
											"value": "351"
										},
										{
											"begin": 16230,
											"end": 16498,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 16317,
											"end": 16323,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 16370,
											"end": 16372,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 16358,
											"end": 16367,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 16349,
											"end": 16356,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 16345,
											"end": 16368,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 16341,
											"end": 16373,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 16338,
											"end": 16390,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 16338,
											"end": 16390,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "584"
										},
										{
											"begin": 16338,
											"end": 16390,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 16386,
											"end": 16387,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 16383,
											"end": 16384,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 16376,
											"end": 16388,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 16338,
											"end": 16390,
											"name": "tag",
											"source": 21,
											"value": "584"
										},
										{
											"begin": 16338,
											"end": 16390,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 16418,
											"end": 16427,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 16412,
											"end": 16428,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 16437,
											"end": 16468,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "431"
										},
										{
											"begin": 16462,
											"end": 16467,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 16437,
											"end": 16468,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "434"
										},
										{
											"begin": 16437,
											"end": 16468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 16910,
											"end": 17317,
											"name": "tag",
											"source": 21,
											"value": "365"
										},
										{
											"begin": 16910,
											"end": 17317,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 17112,
											"end": 17114,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 17094,
											"end": 17115,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 17094,
											"end": 17115,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 17094,
											"end": 17115,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 17151,
											"end": 17153,
											"name": "PUSH",
											"source": 21,
											"value": "2B"
										},
										{
											"begin": 17131,
											"end": 17149,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 17131,
											"end": 17149,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 17131,
											"end": 17149,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 17124,
											"end": 17154,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 17190,
											"end": 17224,
											"name": "PUSH",
											"source": 21,
											"value": "496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069"
										},
										{
											"begin": 17185,
											"end": 17187,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 17170,
											"end": 17188,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 17170,
											"end": 17188,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 17163,
											"end": 17225,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E697469616C697A696E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17256,
											"end": 17258,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 17241,
											"end": 17259,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 17241,
											"end": 17259,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 17234,
											"end": 17275,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 17307,
											"end": 17310,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 17292,
											"end": 17311,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 17292,
											"end": 17311,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 16910,
											"end": 17317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 17683,
											"end": 18495,
											"name": "tag",
											"source": 21,
											"value": "403"
										},
										{
											"begin": 17683,
											"end": 18495,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 18094,
											"end": 18119,
											"name": "PUSH",
											"source": 21,
											"value": "416363657373436F6E74726F6C3A206163636F756E7420000000000000000000"
										},
										{
											"begin": 18089,
											"end": 18092,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 18082,
											"end": 18120,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 18064,
											"end": 18067,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 18149,
											"end": 18155,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 18143,
											"end": 18156,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 18165,
											"end": 18240,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "590"
										},
										{
											"begin": 18233,
											"end": 18239,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 18228,
											"end": 18230,
											"name": "PUSH",
											"source": 21,
											"value": "17"
										},
										{
											"begin": 18223,
											"end": 18226,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 18219,
											"end": 18231,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 18212,
											"end": 18216,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 18204,
											"end": 18210,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 18200,
											"end": 18217,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 18165,
											"end": 18240,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "440"
										},
										{
											"begin": 18165,
											"end": 18240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 18165,
											"end": 18240,
											"name": "tag",
											"source": 21,
											"value": "590"
										},
										{
											"begin": 18165,
											"end": 18240,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1034B99036B4B9B9B4B733903937B6329"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18299,
											"end": 18301,
											"name": "PUSH",
											"source": 21,
											"value": "17"
										},
										{
											"begin": 18259,
											"end": 18275,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 18259,
											"end": 18275,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 18259,
											"end": 18275,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 18291,
											"end": 18302,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 18291,
											"end": 18302,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 18291,
											"end": 18302,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 18284,
											"end": 18324,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 18349,
											"end": 18362,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 18349,
											"end": 18362,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 18371,
											"end": 18447,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "591"
										},
										{
											"begin": 18349,
											"end": 18362,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 18433,
											"end": 18435,
											"name": "PUSH",
											"source": 21,
											"value": "28"
										},
										{
											"begin": 18425,
											"end": 18436,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 18425,
											"end": 18436,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 18418,
											"end": 18422,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 18406,
											"end": 18423,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 18406,
											"end": 18423,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 18371,
											"end": 18447,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "440"
										},
										{
											"begin": 18371,
											"end": 18447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 18371,
											"end": 18447,
											"name": "tag",
											"source": 21,
											"value": "591"
										},
										{
											"begin": 18371,
											"end": 18447,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 18467,
											"end": 18484,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 18486,
											"end": 18488,
											"name": "PUSH",
											"source": 21,
											"value": "28"
										},
										{
											"begin": 18463,
											"end": 18489,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 18463,
											"end": 18489,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 17683,
											"end": 18495,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17683,
											"end": 18495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 18500,
											"end": 18719,
											"name": "tag",
											"source": 21,
											"value": "405"
										},
										{
											"begin": 18500,
											"end": 18719,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 18649,
											"end": 18651,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 18638,
											"end": 18647,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 18631,
											"end": 18652,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 18612,
											"end": 18616,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 18669,
											"end": 18713,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "431"
										},
										{
											"begin": 18709,
											"end": 18711,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 18698,
											"end": 18707,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 18694,
											"end": 18712,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 18686,
											"end": 18692,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 18669,
											"end": 18713,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "443"
										},
										{
											"begin": 18669,
											"end": 18713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 18724,
											"end": 18892,
											"name": "tag",
											"source": 21,
											"value": "410"
										},
										{
											"begin": 18724,
											"end": 18892,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 18797,
											"end": 18806,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 18797,
											"end": 18806,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 18797,
											"end": 18806,
											"name": "MUL",
											"source": 21
										},
										{
											"begin": 18828,
											"end": 18837,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 18828,
											"end": 18837,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 18845,
											"end": 18860,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 18845,
											"end": 18860,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 18845,
											"end": 18860,
											"name": "DIV",
											"source": 21
										},
										{
											"begin": 18839,
											"end": 18861,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 18839,
											"end": 18861,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 18825,
											"end": 18862,
											"name": "OR",
											"source": 21
										},
										{
											"begin": 18815,
											"end": 18886,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "147"
										},
										{
											"begin": 18815,
											"end": 18886,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 18866,
											"end": 18884,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "147"
										},
										{
											"begin": 18866,
											"end": 18884,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "437"
										},
										{
											"begin": 18866,
											"end": 18884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 18897,
											"end": 19022,
											"name": "tag",
											"source": 21,
											"value": "412"
										},
										{
											"begin": 18897,
											"end": 19022,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 18962,
											"end": 18971,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 18962,
											"end": 18971,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 18962,
											"end": 18971,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 18983,
											"end": 18993,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 18983,
											"end": 18993,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 18983,
											"end": 18993,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 18980,
											"end": 19016,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 18980,
											"end": 19016,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "147"
										},
										{
											"begin": 18980,
											"end": 19016,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 18996,
											"end": 19014,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "147"
										},
										{
											"begin": 18996,
											"end": 19014,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "437"
										},
										{
											"begin": 18996,
											"end": 19014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 19027,
											"end": 19163,
											"name": "tag",
											"source": 21,
											"value": "430"
										},
										{
											"begin": 19027,
											"end": 19163,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 19066,
											"end": 19069,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 19094,
											"end": 19099,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 19084,
											"end": 19123,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "602"
										},
										{
											"begin": 19084,
											"end": 19123,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 19103,
											"end": 19121,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "602"
										},
										{
											"begin": 19103,
											"end": 19121,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "437"
										},
										{
											"begin": 19103,
											"end": 19121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 19103,
											"end": 19121,
											"name": "tag",
											"source": 21,
											"value": "602"
										},
										{
											"begin": 19103,
											"end": 19121,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 19139,
											"end": 19157,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 19139,
											"end": 19157,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 19027,
											"end": 19163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										}
									],
									".data": {
										"48848F6F4AF5FF2A90F75345111FFAB654DA14E01D0D715638DA4379C8C19AE3": "b19546dff01e856fb3f010c267a7b1c60363cf8a4664e21cc89c26224620214e",
										"83599F2FD2D7ECEC31A0C854E1DFA0CD718F43D0F25B15E620B3800DBA1A8107": "cab5a0bfe0b79d2c4b1c2e02599fa044d115b7511f9659307cb4276950967709"
									}
								}
							},
							"sourceList": [
								"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
								"@onchain-id/solidity/contracts/interface/IERC734.sol",
								"@onchain-id/solidity/contracts/interface/IERC735.sol",
								"@onchain-id/solidity/contracts/interface/IIdentity.sol",
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
								"erc3643/registry/implementation/IdentityRegistry.sol",
								"erc3643/registry/interface/IClaimTopicsRegistry.sol",
								"erc3643/registry/interface/IIdentityRegistry.sol",
								"erc3643/registry/interface/IIdentityRegistryStorage.sol",
								"erc3643/registry/interface/ITrustedIssuersRegistry.sol",
								"erc3643/registry/storage/IRStorage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"AGENT_ROLE()": "22459e18",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"OWNER_ROLE()": "e58378bb",
							"batchRegisterIdentity(address[],address[],uint16[])": "653dc9f1",
							"contains(address)": "5dbe47e8",
							"deleteIdentity(address)": "a8d29d1d",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"identity(address)": "f0eb5e54",
							"identityStorage()": "f11abfd8",
							"init(address,address,address)": "184b9559",
							"investorCountry(address)": "7e42683b",
							"isVerified(address)": "b9209e33",
							"issuersRegistry()": "b4f3fcb7",
							"owner()": "8da5cb5b",
							"registerIdentity(address,address,uint16)": "454a03e0",
							"renounceOwnership()": "715018a6",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"setClaimTopicsRegistry(address)": "670af6a9",
							"setIdentityRegistryStorage(address)": "26d941ae",
							"setTrustedIssuersRegistry(address)": "e744d789",
							"supportsInterface(bytes4)": "01ffc9a7",
							"topicsRegistry()": "3b3e12f4",
							"transferOwnership(address)": "f2fde38b",
							"updateCountry(address,uint16)": "3b239a7f",
							"updateIdentity(address,address)": "8e098ca1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimTopicsRegistry\",\"type\":\"address\"}],\"name\":\"ClaimTopicsRegistrySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"country\",\"type\":\"uint16\"}],\"name\":\"CountryUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"identity\",\"type\":\"address\"}],\"name\":\"IdentityRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"identity\",\"type\":\"address\"}],\"name\":\"IdentityRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"identityStorage\",\"type\":\"address\"}],\"name\":\"IdentityStorageSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"oldIdentity\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"newIdentity\",\"type\":\"address\"}],\"name\":\"IdentityUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trustedIssuersRegistry\",\"type\":\"address\"}],\"name\":\"TrustedIssuersRegistrySet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"AGENT_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OWNER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_userAddresses\",\"type\":\"address[]\"},{\"internalType\":\"contract IIdentity[]\",\"name\":\"_identities\",\"type\":\"address[]\"},{\"internalType\":\"uint16[]\",\"name\":\"_countries\",\"type\":\"uint16[]\"}],\"name\":\"batchRegisterIdentity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"contains\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"deleteIdentity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"identity\",\"outputs\":[{\"internalType\":\"contract IIdentity\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"identityStorage\",\"outputs\":[{\"internalType\":\"contract IIdentityRegistryStorage\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trustedIssuersRegistry\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_claimTopicsRegistry\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_identityStorage\",\"type\":\"address\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"investorCountry\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"isVerified\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"issuersRegistry\",\"outputs\":[{\"internalType\":\"contract ITrustedIssuersRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"contract IIdentity\",\"name\":\"_identity\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_country\",\"type\":\"uint16\"}],\"name\":\"registerIdentity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_claimTopicsRegistry\",\"type\":\"address\"}],\"name\":\"setClaimTopicsRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_identityRegistryStorage\",\"type\":\"address\"}],\"name\":\"setIdentityRegistryStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trustedIssuersRegistry\",\"type\":\"address\"}],\"name\":\"setTrustedIssuersRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"topicsRegistry\",\"outputs\":[{\"internalType\":\"contract IClaimTopicsRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_country\",\"type\":\"uint16\"}],\"name\":\"updateCountry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"contract IIdentity\",\"name\":\"_identity\",\"type\":\"address\"}],\"name\":\"updateIdentity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"batchRegisterIdentity(address[],address[],uint16[])\":{\"details\":\"See {IIdentityRegistry-batchRegisterIdentity}.\"},\"contains(address)\":{\"details\":\"See {IIdentityRegistry-contains}.\"},\"deleteIdentity(address)\":{\"details\":\"See {IIdentityRegistry-deleteIdentity}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"identity(address)\":{\"details\":\"See {IIdentityRegistry-identity}.\"},\"identityStorage()\":{\"details\":\"See {IIdentityRegistry-identityStorage}.\"},\"investorCountry(address)\":{\"details\":\"See {IIdentityRegistry-investorCountry}.\"},\"isVerified(address)\":{\"details\":\"See {IIdentityRegistry-isVerified}.\"},\"issuersRegistry()\":{\"details\":\"See {IIdentityRegistry-issuersRegistry}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"registerIdentity(address,address,uint16)\":{\"details\":\"See {IIdentityRegistry-registerIdentity}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setClaimTopicsRegistry(address)\":{\"details\":\"See {IIdentityRegistry-setClaimTopicsRegistry}.\"},\"setIdentityRegistryStorage(address)\":{\"details\":\"See {IIdentityRegistry-setIdentityRegistryStorage}.\"},\"setTrustedIssuersRegistry(address)\":{\"details\":\"See {IIdentityRegistry-setTrustedIssuersRegistry}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"topicsRegistry()\":{\"details\":\"See {IIdentityRegistry-topicsRegistry}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateCountry(address,uint16)\":{\"details\":\"See {IIdentityRegistry-updateCountry}.\"},\"updateIdentity(address,address)\":{\"details\":\"See {IIdentityRegistry-updateIdentity}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc3643/registry/implementation/IdentityRegistry.sol\":\"IdentityRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\":{\"keccak256\":\"0xa7372faa967bc7eaedf66ec51907a21ca789123ad8a6fd371b32f2d2a6f27817\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dcf7cf65c7aff1f78a9071c47b05865c0fbce9d7c965430e8438ba7a451a2ba4\",\"dweb:/ipfs/QmViSrFA2KQpFeWssbJWQtdpa62A9MeEWaxqgs8dyPssga\"]},\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x419198390ae57e3a090a454452931ac8a6605acfd296809c43d4966c9cea2d19\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8f8c7d8d74a6e7dff2858abd7f10aefe1cc88bb629ec6a0c164e4043e2c70eb7\",\"dweb:/ipfs/QmRg2WFW8T2YEt1zJ7PGSAFxcu1L46pNWxm6MZbuN7M4Qc\"]},\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0xfeefb24d068524440e1ba885efdf105d91f83504af3c2d745ffacc4595396831\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3df5f6a75f86411cb20df54362ed4ec9b4c270720be20da7095f169932fa2709\",\"dweb:/ipfs/QmTThfuAwFYAvtHgZbmp6ZAbN2MVGSabAnhAbsB6JQxJCF\"]},\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]},\"erc3643/registry/implementation/IdentityRegistry.sol\":{\"keccak256\":\"0x251ab523109cab6900e14adf76a7ea842e65f744ed6829dbe118c0f7eb5075dd\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://de352c38903970117228ea1d176c562f369bfbcea73063f1755770f16ea3fb01\",\"dweb:/ipfs/QmW8kGcvXvxevzv3GXWu9L95sZWGjLcMwEjDDX3iWv5rMh\"]},\"erc3643/registry/interface/IClaimTopicsRegistry.sol\":{\"keccak256\":\"0x209963b4e545f78c8fbf76bd3779bedc134bd3f3419b4b8eb0af63249689f2ea\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b0633ef0e22df28c198104c5f076f927a3171b73b1e24ab28d8127c7ed191ce1\",\"dweb:/ipfs/QmT7QJHzkoBvx4Xp58BhL2PRhHMdtJKPNgcpvhBfPjnNyf\"]},\"erc3643/registry/interface/IIdentityRegistry.sol\":{\"keccak256\":\"0x0a78c51c1a0b9adf7f90741828b7c48d504340f5c5753a8f45f867233b6e03c2\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://42dea7e5cb01a71df62c32eacf53d521dafa3177c5153ea98b47d2842378f219\",\"dweb:/ipfs/QmV4EjwueWYU8Dw2Erpps74esHUKbBr3Pmdx2zQUNXuMry\"]},\"erc3643/registry/interface/IIdentityRegistryStorage.sol\":{\"keccak256\":\"0x1bceb5cfc0da1a742c663fe4425001ccbdb2112e7718173cfb3243088e5999bd\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b1f71e93952528462a65db44e568ac64a74ee01b44031f0c9e4ace353396827c\",\"dweb:/ipfs/QmcF5uQzZpFZ7qC53afv4osebpAYAHupUyrQD6nmv17E9U\"]},\"erc3643/registry/interface/ITrustedIssuersRegistry.sol\":{\"keccak256\":\"0x461f5ba0f4e76ee6106a484a2d010009aa540202cb5c917a6ee9f91ae42351c2\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c6d8abd21d71763eade0cd28deb6f93e3fcbce49bfca2e2e2d8e983755534e34\",\"dweb:/ipfs/QmcYoXQ5AujdqVnJDjBSygDTibum4WMubZKeUt98uiT6P9\"]},\"erc3643/registry/storage/IRStorage.sol\":{\"keccak256\":\"0xb83471542f0cafba8b6c09658d66d842b967320ef062a4e00ae0a2e6b3a37fc5\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6dff2050d92096df4c3ca1a9355d13eb51afba81b98ae1b03cab370227882cdb\",\"dweb:/ipfs/QmYBEriBxY37moGDa9r8zaQkCzkLfaya5goKyMsg4r1TYn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 871,
								"contract": "erc3643/registry/implementation/IdentityRegistry.sol:IdentityRegistry",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 874,
								"contract": "erc3643/registry/implementation/IdentityRegistry.sol:IdentityRegistry",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1404,
								"contract": "erc3643/registry/implementation/IdentityRegistry.sol:IdentityRegistry",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 1677,
								"contract": "erc3643/registry/implementation/IdentityRegistry.sol:IdentityRegistry",
								"label": "__gap",
								"offset": 0,
								"slot": "51",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 363,
								"contract": "erc3643/registry/implementation/IdentityRegistry.sol:IdentityRegistry",
								"label": "_roles",
								"offset": 0,
								"slot": "101",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)358_storage)"
							},
							{
								"astId": 658,
								"contract": "erc3643/registry/implementation/IdentityRegistry.sol:IdentityRegistry",
								"label": "__gap",
								"offset": 0,
								"slot": "102",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 743,
								"contract": "erc3643/registry/implementation/IdentityRegistry.sol:IdentityRegistry",
								"label": "_owner",
								"offset": 0,
								"slot": "151",
								"type": "t_address"
							},
							{
								"astId": 863,
								"contract": "erc3643/registry/implementation/IdentityRegistry.sol:IdentityRegistry",
								"label": "__gap",
								"offset": 0,
								"slot": "152",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 3684,
								"contract": "erc3643/registry/implementation/IdentityRegistry.sol:IdentityRegistry",
								"label": "_tokenTopicsRegistry",
								"offset": 0,
								"slot": "201",
								"type": "t_contract(IClaimTopicsRegistry)3331"
							},
							{
								"astId": 3687,
								"contract": "erc3643/registry/implementation/IdentityRegistry.sol:IdentityRegistry",
								"label": "_tokenIssuersRegistry",
								"offset": 0,
								"slot": "202",
								"type": "t_contract(ITrustedIssuersRegistry)3676"
							},
							{
								"astId": 3690,
								"contract": "erc3643/registry/implementation/IdentityRegistry.sol:IdentityRegistry",
								"label": "_tokenIdentityStorage",
								"offset": 0,
								"slot": "203",
								"type": "t_contract(IIdentityRegistryStorage)3586"
							},
							{
								"astId": 3694,
								"contract": "erc3643/registry/implementation/IdentityRegistry.sol:IdentityRegistry",
								"label": "__gap",
								"offset": 0,
								"slot": "204",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IClaimTopicsRegistry)3331": {
								"encoding": "inplace",
								"label": "contract IClaimTopicsRegistry",
								"numberOfBytes": "20"
							},
							"t_contract(IIdentityRegistryStorage)3586": {
								"encoding": "inplace",
								"label": "contract IIdentityRegistryStorage",
								"numberOfBytes": "20"
							},
							"t_contract(ITrustedIssuersRegistry)3676": {
								"encoding": "inplace",
								"label": "contract ITrustedIssuersRegistry",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)358_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)358_storage"
							},
							"t_struct(RoleData)358_storage": {
								"encoding": "inplace",
								"label": "struct AccessControlUpgradeable.RoleData",
								"members": [
									{
										"astId": 355,
										"contract": "erc3643/registry/implementation/IdentityRegistry.sol:IdentityRegistry",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 357,
										"contract": "erc3643/registry/implementation/IdentityRegistry.sol:IdentityRegistry",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"erc3643/registry/interface/IClaimTopicsRegistry.sol": {
				"IClaimTopicsRegistry": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "claimTopic",
									"type": "uint256"
								}
							],
							"name": "ClaimTopicAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "claimTopic",
									"type": "uint256"
								}
							],
							"name": "ClaimTopicRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_claimTopic",
									"type": "uint256"
								}
							],
							"name": "addClaimTopic",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getClaimTopics",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_claimTopic",
									"type": "uint256"
								}
							],
							"name": "removeClaimTopic",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addClaimTopic(uint256)": "c7b22551",
							"getClaimTopics()": "df09d604",
							"removeClaimTopic(uint256)": "08297846"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"}],\"name\":\"ClaimTopicAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"}],\"name\":\"ClaimTopicRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_claimTopic\",\"type\":\"uint256\"}],\"name\":\"addClaimTopic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getClaimTopics\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_claimTopic\",\"type\":\"uint256\"}],\"name\":\"removeClaimTopic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc3643/registry/interface/IClaimTopicsRegistry.sol\":\"IClaimTopicsRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc3643/registry/interface/IClaimTopicsRegistry.sol\":{\"keccak256\":\"0x209963b4e545f78c8fbf76bd3779bedc134bd3f3419b4b8eb0af63249689f2ea\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b0633ef0e22df28c198104c5f076f927a3171b73b1e24ab28d8127c7ed191ce1\",\"dweb:/ipfs/QmT7QJHzkoBvx4Xp58BhL2PRhHMdtJKPNgcpvhBfPjnNyf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"erc3643/registry/interface/IIdentityRegistry.sol": {
				"IIdentityRegistry": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "claimTopicsRegistry",
									"type": "address"
								}
							],
							"name": "ClaimTopicsRegistrySet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "investorAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint16",
									"name": "country",
									"type": "uint16"
								}
							],
							"name": "CountryUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "investorAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "contract IIdentity",
									"name": "identity",
									"type": "address"
								}
							],
							"name": "IdentityRegistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "investorAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "contract IIdentity",
									"name": "identity",
									"type": "address"
								}
							],
							"name": "IdentityRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "identityStorage",
									"type": "address"
								}
							],
							"name": "IdentityStorageSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IIdentity",
									"name": "oldIdentity",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "contract IIdentity",
									"name": "newIdentity",
									"type": "address"
								}
							],
							"name": "IdentityUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "trustedIssuersRegistry",
									"type": "address"
								}
							],
							"name": "TrustedIssuersRegistrySet",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_userAddresses",
									"type": "address[]"
								},
								{
									"internalType": "contract IIdentity[]",
									"name": "_identities",
									"type": "address[]"
								},
								{
									"internalType": "uint16[]",
									"name": "_countries",
									"type": "uint16[]"
								}
							],
							"name": "batchRegisterIdentity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "contains",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "deleteIdentity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "identity",
							"outputs": [
								{
									"internalType": "contract IIdentity",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "identityStorage",
							"outputs": [
								{
									"internalType": "contract IIdentityRegistryStorage",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "investorCountry",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "isVerified",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "issuersRegistry",
							"outputs": [
								{
									"internalType": "contract ITrustedIssuersRegistry",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "contract IIdentity",
									"name": "_identity",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "_country",
									"type": "uint16"
								}
							],
							"name": "registerIdentity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_claimTopicsRegistry",
									"type": "address"
								}
							],
							"name": "setClaimTopicsRegistry",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_identityRegistryStorage",
									"type": "address"
								}
							],
							"name": "setIdentityRegistryStorage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_trustedIssuersRegistry",
									"type": "address"
								}
							],
							"name": "setTrustedIssuersRegistry",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "topicsRegistry",
							"outputs": [
								{
									"internalType": "contract IClaimTopicsRegistry",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "_country",
									"type": "uint16"
								}
							],
							"name": "updateCountry",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "contract IIdentity",
									"name": "_identity",
									"type": "address"
								}
							],
							"name": "updateIdentity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"batchRegisterIdentity(address[],address[],uint16[])": "653dc9f1",
							"contains(address)": "5dbe47e8",
							"deleteIdentity(address)": "a8d29d1d",
							"identity(address)": "f0eb5e54",
							"identityStorage()": "f11abfd8",
							"investorCountry(address)": "7e42683b",
							"isVerified(address)": "b9209e33",
							"issuersRegistry()": "b4f3fcb7",
							"registerIdentity(address,address,uint16)": "454a03e0",
							"setClaimTopicsRegistry(address)": "670af6a9",
							"setIdentityRegistryStorage(address)": "26d941ae",
							"setTrustedIssuersRegistry(address)": "e744d789",
							"topicsRegistry()": "3b3e12f4",
							"updateCountry(address,uint16)": "3b239a7f",
							"updateIdentity(address,address)": "8e098ca1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimTopicsRegistry\",\"type\":\"address\"}],\"name\":\"ClaimTopicsRegistrySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"country\",\"type\":\"uint16\"}],\"name\":\"CountryUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"identity\",\"type\":\"address\"}],\"name\":\"IdentityRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"identity\",\"type\":\"address\"}],\"name\":\"IdentityRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"identityStorage\",\"type\":\"address\"}],\"name\":\"IdentityStorageSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"oldIdentity\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"newIdentity\",\"type\":\"address\"}],\"name\":\"IdentityUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trustedIssuersRegistry\",\"type\":\"address\"}],\"name\":\"TrustedIssuersRegistrySet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_userAddresses\",\"type\":\"address[]\"},{\"internalType\":\"contract IIdentity[]\",\"name\":\"_identities\",\"type\":\"address[]\"},{\"internalType\":\"uint16[]\",\"name\":\"_countries\",\"type\":\"uint16[]\"}],\"name\":\"batchRegisterIdentity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"contains\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"deleteIdentity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"identity\",\"outputs\":[{\"internalType\":\"contract IIdentity\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"identityStorage\",\"outputs\":[{\"internalType\":\"contract IIdentityRegistryStorage\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"investorCountry\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"isVerified\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"issuersRegistry\",\"outputs\":[{\"internalType\":\"contract ITrustedIssuersRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"contract IIdentity\",\"name\":\"_identity\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_country\",\"type\":\"uint16\"}],\"name\":\"registerIdentity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_claimTopicsRegistry\",\"type\":\"address\"}],\"name\":\"setClaimTopicsRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_identityRegistryStorage\",\"type\":\"address\"}],\"name\":\"setIdentityRegistryStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trustedIssuersRegistry\",\"type\":\"address\"}],\"name\":\"setTrustedIssuersRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"topicsRegistry\",\"outputs\":[{\"internalType\":\"contract IClaimTopicsRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_country\",\"type\":\"uint16\"}],\"name\":\"updateCountry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"contract IIdentity\",\"name\":\"_identity\",\"type\":\"address\"}],\"name\":\"updateIdentity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc3643/registry/interface/IIdentityRegistry.sol\":\"IIdentityRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\":{\"keccak256\":\"0xa7372faa967bc7eaedf66ec51907a21ca789123ad8a6fd371b32f2d2a6f27817\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dcf7cf65c7aff1f78a9071c47b05865c0fbce9d7c965430e8438ba7a451a2ba4\",\"dweb:/ipfs/QmViSrFA2KQpFeWssbJWQtdpa62A9MeEWaxqgs8dyPssga\"]},\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x419198390ae57e3a090a454452931ac8a6605acfd296809c43d4966c9cea2d19\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8f8c7d8d74a6e7dff2858abd7f10aefe1cc88bb629ec6a0c164e4043e2c70eb7\",\"dweb:/ipfs/QmRg2WFW8T2YEt1zJ7PGSAFxcu1L46pNWxm6MZbuN7M4Qc\"]},\"erc3643/registry/interface/IClaimTopicsRegistry.sol\":{\"keccak256\":\"0x209963b4e545f78c8fbf76bd3779bedc134bd3f3419b4b8eb0af63249689f2ea\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b0633ef0e22df28c198104c5f076f927a3171b73b1e24ab28d8127c7ed191ce1\",\"dweb:/ipfs/QmT7QJHzkoBvx4Xp58BhL2PRhHMdtJKPNgcpvhBfPjnNyf\"]},\"erc3643/registry/interface/IIdentityRegistry.sol\":{\"keccak256\":\"0x0a78c51c1a0b9adf7f90741828b7c48d504340f5c5753a8f45f867233b6e03c2\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://42dea7e5cb01a71df62c32eacf53d521dafa3177c5153ea98b47d2842378f219\",\"dweb:/ipfs/QmV4EjwueWYU8Dw2Erpps74esHUKbBr3Pmdx2zQUNXuMry\"]},\"erc3643/registry/interface/IIdentityRegistryStorage.sol\":{\"keccak256\":\"0x1bceb5cfc0da1a742c663fe4425001ccbdb2112e7718173cfb3243088e5999bd\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b1f71e93952528462a65db44e568ac64a74ee01b44031f0c9e4ace353396827c\",\"dweb:/ipfs/QmcF5uQzZpFZ7qC53afv4osebpAYAHupUyrQD6nmv17E9U\"]},\"erc3643/registry/interface/ITrustedIssuersRegistry.sol\":{\"keccak256\":\"0x461f5ba0f4e76ee6106a484a2d010009aa540202cb5c917a6ee9f91ae42351c2\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c6d8abd21d71763eade0cd28deb6f93e3fcbce49bfca2e2e2d8e983755534e34\",\"dweb:/ipfs/QmcYoXQ5AujdqVnJDjBSygDTibum4WMubZKeUt98uiT6P9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"erc3643/registry/interface/IIdentityRegistryStorage.sol": {
				"IIdentityRegistryStorage": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "investorAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint16",
									"name": "country",
									"type": "uint16"
								}
							],
							"name": "CountryModified",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IIdentity",
									"name": "oldIdentity",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "contract IIdentity",
									"name": "newIdentity",
									"type": "address"
								}
							],
							"name": "IdentityModified",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "identityRegistry",
									"type": "address"
								}
							],
							"name": "IdentityRegistryBound",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "identityRegistry",
									"type": "address"
								}
							],
							"name": "IdentityRegistryUnbound",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "investorAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "contract IIdentity",
									"name": "identity",
									"type": "address"
								}
							],
							"name": "IdentityStored",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "investorAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "contract IIdentity",
									"name": "identity",
									"type": "address"
								}
							],
							"name": "IdentityUnstored",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "contract IIdentity",
									"name": "_identity",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "_country",
									"type": "uint16"
								}
							],
							"name": "addIdentityToStorage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_identityRegistry",
									"type": "address"
								}
							],
							"name": "bindIdentityRegistry",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "linkedIdentityRegistries",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "contract IIdentity",
									"name": "_identity",
									"type": "address"
								}
							],
							"name": "modifyStoredIdentity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "_country",
									"type": "uint16"
								}
							],
							"name": "modifyStoredInvestorCountry",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "removeIdentityFromStorage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "storedIdentity",
							"outputs": [
								{
									"internalType": "contract IIdentity",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "storedInvestorCountry",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_identityRegistry",
									"type": "address"
								}
							],
							"name": "unbindIdentityRegistry",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addIdentityToStorage(address,address,uint16)": "a53410dd",
							"bindIdentityRegistry(address)": "690a49f9",
							"linkedIdentityRegistries()": "bf9eb959",
							"modifyStoredIdentity(address,address)": "e805cf86",
							"modifyStoredInvestorCountry(address,uint16)": "9f3418d5",
							"removeIdentityFromStorage(address)": "cf191bcd",
							"storedIdentity(address)": "7988d3a5",
							"storedInvestorCountry(address)": "727e13bc",
							"unbindIdentityRegistry(address)": "97a012f7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"country\",\"type\":\"uint16\"}],\"name\":\"CountryModified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"oldIdentity\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"newIdentity\",\"type\":\"address\"}],\"name\":\"IdentityModified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"identityRegistry\",\"type\":\"address\"}],\"name\":\"IdentityRegistryBound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"identityRegistry\",\"type\":\"address\"}],\"name\":\"IdentityRegistryUnbound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"identity\",\"type\":\"address\"}],\"name\":\"IdentityStored\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"identity\",\"type\":\"address\"}],\"name\":\"IdentityUnstored\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"contract IIdentity\",\"name\":\"_identity\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_country\",\"type\":\"uint16\"}],\"name\":\"addIdentityToStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_identityRegistry\",\"type\":\"address\"}],\"name\":\"bindIdentityRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"linkedIdentityRegistries\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"contract IIdentity\",\"name\":\"_identity\",\"type\":\"address\"}],\"name\":\"modifyStoredIdentity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_country\",\"type\":\"uint16\"}],\"name\":\"modifyStoredInvestorCountry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"removeIdentityFromStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"storedIdentity\",\"outputs\":[{\"internalType\":\"contract IIdentity\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"storedInvestorCountry\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_identityRegistry\",\"type\":\"address\"}],\"name\":\"unbindIdentityRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addIdentityToStorage(address,address,uint16)\":{\"notice\":\"functions\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc3643/registry/interface/IIdentityRegistryStorage.sol\":\"IIdentityRegistryStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x419198390ae57e3a090a454452931ac8a6605acfd296809c43d4966c9cea2d19\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8f8c7d8d74a6e7dff2858abd7f10aefe1cc88bb629ec6a0c164e4043e2c70eb7\",\"dweb:/ipfs/QmRg2WFW8T2YEt1zJ7PGSAFxcu1L46pNWxm6MZbuN7M4Qc\"]},\"erc3643/registry/interface/IIdentityRegistryStorage.sol\":{\"keccak256\":\"0x1bceb5cfc0da1a742c663fe4425001ccbdb2112e7718173cfb3243088e5999bd\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b1f71e93952528462a65db44e568ac64a74ee01b44031f0c9e4ace353396827c\",\"dweb:/ipfs/QmcF5uQzZpFZ7qC53afv4osebpAYAHupUyrQD6nmv17E9U\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"addIdentityToStorage(address,address,uint16)": {
								"notice": "functions"
							}
						},
						"version": 1
					}
				}
			},
			"erc3643/registry/interface/ITrustedIssuersRegistry.sol": {
				"ITrustedIssuersRegistry": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IClaimIssuer",
									"name": "trustedIssuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "claimTopics",
									"type": "uint256[]"
								}
							],
							"name": "ClaimTopicsUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IClaimIssuer",
									"name": "trustedIssuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "claimTopics",
									"type": "uint256[]"
								}
							],
							"name": "TrustedIssuerAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IClaimIssuer",
									"name": "trustedIssuer",
									"type": "address"
								}
							],
							"name": "TrustedIssuerRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "contract IClaimIssuer",
									"name": "_trustedIssuer",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "_claimTopics",
									"type": "uint256[]"
								}
							],
							"name": "addTrustedIssuer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IClaimIssuer",
									"name": "_trustedIssuer",
									"type": "address"
								}
							],
							"name": "getTrustedIssuerClaimTopics",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTrustedIssuers",
							"outputs": [
								{
									"internalType": "contract IClaimIssuer[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "claimTopic",
									"type": "uint256"
								}
							],
							"name": "getTrustedIssuersForClaimTopic",
							"outputs": [
								{
									"internalType": "contract IClaimIssuer[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_issuer",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_claimTopic",
									"type": "uint256"
								}
							],
							"name": "hasClaimTopic",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_issuer",
									"type": "address"
								}
							],
							"name": "isTrustedIssuer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IClaimIssuer",
									"name": "_trustedIssuer",
									"type": "address"
								}
							],
							"name": "removeTrustedIssuer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IClaimIssuer",
									"name": "_trustedIssuer",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "_claimTopics",
									"type": "uint256[]"
								}
							],
							"name": "updateIssuerClaimTopics",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addTrustedIssuer(address,uint256[])": "9f63ea98",
							"getTrustedIssuerClaimTopics(address)": "c28fb278",
							"getTrustedIssuers()": "d9dd24c5",
							"getTrustedIssuersForClaimTopic(uint256)": "52c111d1",
							"hasClaimTopic(address,uint256)": "34a89987",
							"isTrustedIssuer(address)": "ef2ed1a4",
							"removeTrustedIssuer(address)": "b93d28eb",
							"updateIssuerClaimTopics(address,uint256[])": "04bc7e84"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IClaimIssuer\",\"name\":\"trustedIssuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"claimTopics\",\"type\":\"uint256[]\"}],\"name\":\"ClaimTopicsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IClaimIssuer\",\"name\":\"trustedIssuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"claimTopics\",\"type\":\"uint256[]\"}],\"name\":\"TrustedIssuerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IClaimIssuer\",\"name\":\"trustedIssuer\",\"type\":\"address\"}],\"name\":\"TrustedIssuerRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_trustedIssuer\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_claimTopics\",\"type\":\"uint256[]\"}],\"name\":\"addTrustedIssuer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_trustedIssuer\",\"type\":\"address\"}],\"name\":\"getTrustedIssuerClaimTopics\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTrustedIssuers\",\"outputs\":[{\"internalType\":\"contract IClaimIssuer[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"}],\"name\":\"getTrustedIssuersForClaimTopic\",\"outputs\":[{\"internalType\":\"contract IClaimIssuer[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_issuer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_claimTopic\",\"type\":\"uint256\"}],\"name\":\"hasClaimTopic\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_issuer\",\"type\":\"address\"}],\"name\":\"isTrustedIssuer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_trustedIssuer\",\"type\":\"address\"}],\"name\":\"removeTrustedIssuer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_trustedIssuer\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_claimTopics\",\"type\":\"uint256[]\"}],\"name\":\"updateIssuerClaimTopics\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc3643/registry/interface/ITrustedIssuersRegistry.sol\":\"ITrustedIssuersRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\":{\"keccak256\":\"0xa7372faa967bc7eaedf66ec51907a21ca789123ad8a6fd371b32f2d2a6f27817\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dcf7cf65c7aff1f78a9071c47b05865c0fbce9d7c965430e8438ba7a451a2ba4\",\"dweb:/ipfs/QmViSrFA2KQpFeWssbJWQtdpa62A9MeEWaxqgs8dyPssga\"]},\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x419198390ae57e3a090a454452931ac8a6605acfd296809c43d4966c9cea2d19\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8f8c7d8d74a6e7dff2858abd7f10aefe1cc88bb629ec6a0c164e4043e2c70eb7\",\"dweb:/ipfs/QmRg2WFW8T2YEt1zJ7PGSAFxcu1L46pNWxm6MZbuN7M4Qc\"]},\"erc3643/registry/interface/ITrustedIssuersRegistry.sol\":{\"keccak256\":\"0x461f5ba0f4e76ee6106a484a2d010009aa540202cb5c917a6ee9f91ae42351c2\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c6d8abd21d71763eade0cd28deb6f93e3fcbce49bfca2e2e2d8e983755534e34\",\"dweb:/ipfs/QmcYoXQ5AujdqVnJDjBSygDTibum4WMubZKeUt98uiT6P9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"erc3643/registry/storage/IRStorage.sol": {
				"IRStorage": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"erc3643/registry/storage/IRStorage.sol\":214:612  contract IRStorage {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"erc3643/registry/storage/IRStorage.sol\":214:612  contract IRStorage {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e13d45567a94f580cd894e2d96d5a3310f970ef6d8fe8d6ef8420f7ede96d2ae64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220e13d45567a94f580cd894e2d96d5a3310f970ef6d8fe8d6ef8420f7ede96d2ae64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 RETURNDATASIZE GASLIMIT JUMP PUSH27 0x94F580CD894E2D96D5A3310F970EF6D8FE8D6EF8420F7EDE96D2AE PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "214:398:20:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220e13d45567a94f580cd894e2d96d5a3310f970ef6d8fe8d6ef8420f7ede96d2ae64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 RETURNDATASIZE GASLIMIT JUMP PUSH27 0x94F580CD894E2D96D5A3310F970EF6D8FE8D6EF8420F7EDE96D2AE PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "214:398:20:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 214,
									"end": 612,
									"name": "PUSH",
									"source": 20,
									"value": "80"
								},
								{
									"begin": 214,
									"end": 612,
									"name": "PUSH",
									"source": 20,
									"value": "40"
								},
								{
									"begin": 214,
									"end": 612,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 214,
									"end": 612,
									"name": "CALLVALUE",
									"source": 20
								},
								{
									"begin": 214,
									"end": 612,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 214,
									"end": 612,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 214,
									"end": 612,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 214,
									"end": 612,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 214,
									"end": 612,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 214,
									"end": 612,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 214,
									"end": 612,
									"name": "REVERT",
									"source": 20
								},
								{
									"begin": 214,
									"end": 612,
									"name": "tag",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 214,
									"end": 612,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 214,
									"end": 612,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 214,
									"end": 612,
									"name": "PUSH #[$]",
									"source": 20,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 214,
									"end": 612,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 214,
									"end": 612,
									"name": "PUSH [$]",
									"source": 20,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 214,
									"end": 612,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 214,
									"end": 612,
									"name": "CODECOPY",
									"source": 20
								},
								{
									"begin": 214,
									"end": 612,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 214,
									"end": 612,
									"name": "RETURN",
									"source": 20
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e13d45567a94f580cd894e2d96d5a3310f970ef6d8fe8d6ef8420f7ede96d2ae64736f6c63430008110033",
									".code": [
										{
											"begin": 214,
											"end": 612,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 214,
											"end": 612,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 214,
											"end": 612,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 214,
											"end": 612,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 214,
											"end": 612,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 214,
											"end": 612,
											"name": "REVERT",
											"source": 20
										}
									]
								}
							},
							"sourceList": [
								"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
								"@onchain-id/solidity/contracts/interface/IERC734.sol",
								"@onchain-id/solidity/contracts/interface/IERC735.sol",
								"@onchain-id/solidity/contracts/interface/IIdentity.sol",
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
								"erc3643/registry/implementation/IdentityRegistry.sol",
								"erc3643/registry/interface/IClaimTopicsRegistry.sol",
								"erc3643/registry/interface/IIdentityRegistry.sol",
								"erc3643/registry/interface/IIdentityRegistryStorage.sol",
								"erc3643/registry/interface/ITrustedIssuersRegistry.sol",
								"erc3643/registry/storage/IRStorage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc3643/registry/storage/IRStorage.sol\":\"IRStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\":{\"keccak256\":\"0xa7372faa967bc7eaedf66ec51907a21ca789123ad8a6fd371b32f2d2a6f27817\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dcf7cf65c7aff1f78a9071c47b05865c0fbce9d7c965430e8438ba7a451a2ba4\",\"dweb:/ipfs/QmViSrFA2KQpFeWssbJWQtdpa62A9MeEWaxqgs8dyPssga\"]},\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x419198390ae57e3a090a454452931ac8a6605acfd296809c43d4966c9cea2d19\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8f8c7d8d74a6e7dff2858abd7f10aefe1cc88bb629ec6a0c164e4043e2c70eb7\",\"dweb:/ipfs/QmRg2WFW8T2YEt1zJ7PGSAFxcu1L46pNWxm6MZbuN7M4Qc\"]},\"erc3643/registry/interface/IClaimTopicsRegistry.sol\":{\"keccak256\":\"0x209963b4e545f78c8fbf76bd3779bedc134bd3f3419b4b8eb0af63249689f2ea\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b0633ef0e22df28c198104c5f076f927a3171b73b1e24ab28d8127c7ed191ce1\",\"dweb:/ipfs/QmT7QJHzkoBvx4Xp58BhL2PRhHMdtJKPNgcpvhBfPjnNyf\"]},\"erc3643/registry/interface/IIdentityRegistryStorage.sol\":{\"keccak256\":\"0x1bceb5cfc0da1a742c663fe4425001ccbdb2112e7718173cfb3243088e5999bd\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b1f71e93952528462a65db44e568ac64a74ee01b44031f0c9e4ace353396827c\",\"dweb:/ipfs/QmcF5uQzZpFZ7qC53afv4osebpAYAHupUyrQD6nmv17E9U\"]},\"erc3643/registry/interface/ITrustedIssuersRegistry.sol\":{\"keccak256\":\"0x461f5ba0f4e76ee6106a484a2d010009aa540202cb5c917a6ee9f91ae42351c2\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c6d8abd21d71763eade0cd28deb6f93e3fcbce49bfca2e2e2d8e983755534e34\",\"dweb:/ipfs/QmcYoXQ5AujdqVnJDjBSygDTibum4WMubZKeUt98uiT6P9\"]},\"erc3643/registry/storage/IRStorage.sol\":{\"keccak256\":\"0xb83471542f0cafba8b6c09658d66d842b967320ef062a4e00ae0a2e6b3a37fc5\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6dff2050d92096df4c3ca1a9355d13eb51afba81b98ae1b03cab370227882cdb\",\"dweb:/ipfs/QmYBEriBxY37moGDa9r8zaQkCzkLfaya5goKyMsg4r1TYn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3684,
								"contract": "erc3643/registry/storage/IRStorage.sol:IRStorage",
								"label": "_tokenTopicsRegistry",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IClaimTopicsRegistry)3331"
							},
							{
								"astId": 3687,
								"contract": "erc3643/registry/storage/IRStorage.sol:IRStorage",
								"label": "_tokenIssuersRegistry",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(ITrustedIssuersRegistry)3676"
							},
							{
								"astId": 3690,
								"contract": "erc3643/registry/storage/IRStorage.sol:IRStorage",
								"label": "_tokenIdentityStorage",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IIdentityRegistryStorage)3586"
							},
							{
								"astId": 3694,
								"contract": "erc3643/registry/storage/IRStorage.sol:IRStorage",
								"label": "__gap",
								"offset": 0,
								"slot": "3",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_contract(IClaimTopicsRegistry)3331": {
								"encoding": "inplace",
								"label": "contract IClaimTopicsRegistry",
								"numberOfBytes": "20"
							},
							"t_contract(IIdentityRegistryStorage)3586": {
								"encoding": "inplace",
								"label": "contract IIdentityRegistryStorage",
								"numberOfBytes": "20"
							},
							"t_contract(ITrustedIssuersRegistry)3676": {
								"encoding": "inplace",
								"label": "contract ITrustedIssuersRegistry",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol": {
				"ast": {
					"absolutePath": "@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
					"exportedSymbols": {
						"IClaimIssuer": [
							59
						],
						"IERC734": [
							206
						],
						"IERC735": [
							314
						],
						"IIdentity": [
							323
						]
					},
					"id": 60,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:0"
						},
						{
							"absolutePath": "@onchain-id/solidity/contracts/interface/IIdentity.sol",
							"file": "./IIdentity.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 60,
							"sourceUnit": 324,
							"src": "61:25:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "IIdentity",
										"nameLocations": [
											"114:9:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 323,
										"src": "114:9:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "114:9:0"
								}
							],
							"canonicalName": "IClaimIssuer",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 59,
							"linearizedBaseContracts": [
								59,
								323,
								314,
								206
							],
							"name": "IClaimIssuer",
							"nameLocation": "98:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 5,
										"nodeType": "StructuredDocumentation",
										"src": "131:126:0",
										"text": " @dev Emitted when a claim is revoked.\n Specification: MUST be triggered when revoking a claim."
									},
									"eventSelector": "7f484e37f24c0a92f81dd74afa3027b3ea31f2e9fb6b9fa29fe9865f81ac5569",
									"id": 9,
									"name": "ClaimRevoked",
									"nameLocation": "268:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "295:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "281:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 6,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "281:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "280:25:0"
									},
									"src": "262:44:0"
								},
								{
									"documentation": {
										"id": 10,
										"nodeType": "StructuredDocumentation",
										"src": "312:351:0",
										"text": " @dev Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\n @notice will fetch the claim from the identity contract (unsafe).\n @param _claimId the id of the claim\n @param _identity the address of the identity contract\n @return isRevoked true when the claim is revoked"
									},
									"functionSelector": "73c33708",
									"id": 19,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeClaim",
									"nameLocation": "677:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "_claimId",
												"nameLocation": "697:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "689:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 11,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "689:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "_identity",
												"nameLocation": "715:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "707:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "707:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "688:37:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "743:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "743:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "742:6:0"
									},
									"scope": 59,
									"src": "668:81:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "755:169:0",
										"text": " @dev Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\n @param signature the signature of the claim"
									},
									"functionSelector": "9f7f9edd",
									"id": 25,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeClaimBySignature",
									"nameLocation": "938:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "976:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "961:24:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 21,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "961:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "960:26:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "995:0:0"
									},
									"scope": 59,
									"src": "929:67:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "1002:181:0",
										"text": " @dev Returns revocation status of a claim.\n @param _sig the signature of the claim\n @return isRevoked true if the claim is revoked and false otherwise"
									},
									"functionSelector": "2646b264",
									"id": 33,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isClaimRevoked",
									"nameLocation": "1197:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "_sig",
												"nameLocation": "1227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1212:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 27,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1212:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1211:21:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 30,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1255:6:0"
									},
									"scope": 59,
									"src": "1188:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "1268:334:0",
										"text": " @dev Checks if a claim is valid.\n @param _identity the identity contract related to the claim\n @param claimTopic the claim topic of the claim\n @param sig the signature of the claim\n @param data the data field of the claim\n @return claimValid true if the claim is valid, false otherwise"
									},
									"functionSelector": "c0969a6e",
									"id": 48,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isClaimValid",
									"nameLocation": "1616:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "_identity",
												"nameLocation": "1648:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1638:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$323",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 36,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 35,
														"name": "IIdentity",
														"nameLocations": [
															"1638:9:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "1638:9:0"
													},
													"referencedDeclaration": 323,
													"src": "1638:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$323",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "claimTopic",
												"nameLocation": "1675:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1667:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1667:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "sig",
												"nameLocation": "1710:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1695:18:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 40,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1695:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1738:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1723:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 42,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1723:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1628:115:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1771:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 45,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1771:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1770:6:0"
									},
									"scope": 59,
									"src": "1607:170:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 49,
										"nodeType": "StructuredDocumentation",
										"src": "1783:240:0",
										"text": " @dev returns the address that signed the given data\n @param sig the signature of the data\n @param dataHash the data that was signed\n returns the address that signed dataHash and created the signature sig"
									},
									"functionSelector": "c3b129e3",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRecoveredAddress",
									"nameLocation": "2037:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "sig",
												"nameLocation": "2072:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2057:18:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 50,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2057:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "dataHash",
												"nameLocation": "2085:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2077:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 52,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2077:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2056:38:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2118:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2118:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2117:9:0"
									},
									"scope": 59,
									"src": "2028:99:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 60,
							"src": "88:2041:0",
							"usedErrors": []
						}
					],
					"src": "36:2094:0"
				},
				"id": 0
			},
			"@onchain-id/solidity/contracts/interface/IERC734.sol": {
				"ast": {
					"absolutePath": "@onchain-id/solidity/contracts/interface/IERC734.sol",
					"exportedSymbols": {
						"IERC734": [
							206
						]
					},
					"id": 207,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 61,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC734",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 62,
								"nodeType": "StructuredDocumentation",
								"src": "61:84:1",
								"text": " @dev interface of the ERC734 (Key Holder) standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 206,
							"linearizedBaseContracts": [
								206
							],
							"name": "IERC734",
							"nameLocation": "156:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "171:156:1",
										"text": " @dev Emitted when an execution request was approved.\n Specification: MUST be triggered when approve was successfully called."
									},
									"eventSelector": "b3932da477fe5d6c8ff2eafef050c0f3a1af18fc07121001482600f36f3715d8",
									"id": 69,
									"name": "Approved",
									"nameLocation": "338:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"indexed": true,
												"mutability": "mutable",
												"name": "executionId",
												"nameLocation": "363:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "347:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "347:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "381:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "376:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 66,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "376:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "346:44:1"
									},
									"src": "332:59:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "397:214:1",
										"text": " @dev Emitted when an execute operation was approved and successfully performed.\n Specification: MUST be triggered when approve was called and the execution was successfully approved."
									},
									"eventSelector": "1f920dbda597d7bf95035464170fa58d0a4b57f13a1c315ace6793b9f63688b8",
									"id": 80,
									"name": "Executed",
									"nameLocation": "622:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"indexed": true,
												"mutability": "mutable",
												"name": "executionId",
												"nameLocation": "647:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "631:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "631:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "676:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "660:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"indexed": true,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "696:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "680:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "680:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 78,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "709:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "703:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 77,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "703:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "630:84:1"
									},
									"src": "616:99:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "721:171:1",
										"text": " @dev Emitted when an execution request was performed via `execute`.\n Specification: MUST be triggered when execute was successfully called."
									},
									"eventSelector": "8afcfabcb00e47a53a8fc3e9f23ff47ee1926194bb1350dd007c50b412a6cee8",
									"id": 91,
									"name": "ExecutionRequested",
									"nameLocation": "903:18:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"indexed": true,
												"mutability": "mutable",
												"name": "executionId",
												"nameLocation": "938:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "922:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 82,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "922:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "967:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "951:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "951:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"indexed": true,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "987:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "971:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1000:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "994:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 88,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "994:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "921:84:1"
									},
									"src": "897:109:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "1012:151:1",
										"text": " @dev Emitted when an execute operation was called and failed\n Specification: MUST be triggered when execute call failed"
									},
									"eventSelector": "e10c49d9f7c71da23262367013434763cfdb2332267641728d25cd712c5c6a68",
									"id": 102,
									"name": "ExecutionFailed",
									"nameLocation": "1174:15:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"indexed": true,
												"mutability": "mutable",
												"name": "executionId",
												"nameLocation": "1206:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "1190:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 93,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1190:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1235:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "1219:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"indexed": true,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1255:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "1239:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 97,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1239:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 100,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1268:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "1262:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 99,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1262:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1189:84:1"
									},
									"src": "1168:106:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 103,
										"nodeType": "StructuredDocumentation",
										"src": "1280:153:1",
										"text": " @dev Emitted when a key was added to the Identity.\n Specification: MUST be triggered when addKey was successfully called."
									},
									"eventSelector": "480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e9",
									"id": 111,
									"name": "KeyAdded",
									"nameLocation": "1444:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"indexed": true,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "1469:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "1453:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 104,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1453:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 107,
												"indexed": true,
												"mutability": "mutable",
												"name": "purpose",
												"nameLocation": "1490:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "1474:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1474:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"indexed": true,
												"mutability": "mutable",
												"name": "keyType",
												"nameLocation": "1515:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "1499:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1499:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1452:71:1"
									},
									"src": "1438:86:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "1530:160:1",
										"text": " @dev Emitted when a key was removed from the Identity.\n Specification: MUST be triggered when removeKey was successfully called."
									},
									"eventSelector": "585a4aef50f8267a92b32412b331b20f7f8b96f2245b253b9cc50dcc621d3397",
									"id": 120,
									"name": "KeyRemoved",
									"nameLocation": "1701:10:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"indexed": true,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "1728:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "1712:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 113,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1712:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"indexed": true,
												"mutability": "mutable",
												"name": "purpose",
												"nameLocation": "1749:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "1733:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1733:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"indexed": true,
												"mutability": "mutable",
												"name": "keyType",
												"nameLocation": "1774:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "1758:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1758:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1711:71:1"
									},
									"src": "1695:88:1"
								},
								{
									"documentation": {
										"id": 121,
										"nodeType": "StructuredDocumentation",
										"src": "1789:319:1",
										"text": " @dev Adds a _key to the identity. The _purpose specifies the purpose of the key.\n Triggers Event: `KeyAdded`\n Specification: MUST only be done by keys of purpose 1, or the identity\n itself. If it's the identity itself, the approval process will determine its approval."
									},
									"functionSelector": "1d381240",
									"id": 132,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addKey",
									"nameLocation": "2122:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "_key",
												"nameLocation": "2137:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2129:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 122,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2129:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "_purpose",
												"nameLocation": "2151:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2143:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "_keyType",
												"nameLocation": "2169:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2161:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2161:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2128:50:1"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2202:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2197:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 129,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2197:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2196:14:1"
									},
									"scope": 206,
									"src": "2113:98:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2217:201:1",
										"text": " @dev Approves an execution.\n Triggers Event: `Approved`\n Triggers on execution successful Event: `Executed`\n Triggers on execution failure Event: `ExecutionFailed`"
									},
									"functionSelector": "747442d3",
									"id": 142,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2432:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "2448:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "2440:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "_approve",
												"nameLocation": "2458:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "2453:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 136,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2453:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:28:1"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2491:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "2486:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2486:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2485:14:1"
									},
									"scope": 206,
									"src": "2423:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 143,
										"nodeType": "StructuredDocumentation",
										"src": "2506:290:1",
										"text": " @dev Removes _purpose for _key from the identity.\n Triggers Event: `KeyRemoved`\n Specification: MUST only be done by keys of purpose 1, or the identity itself.\n If it's the identity itself, the approval process will determine its approval."
									},
									"functionSelector": "53d413c5",
									"id": 152,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeKey",
									"nameLocation": "2810:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "_key",
												"nameLocation": "2828:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "2820:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 144,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "_purpose",
												"nameLocation": "2842:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "2834:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2834:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2819:32:1"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2875:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "2870:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 149,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2870:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2869:14:1"
									},
									"scope": 206,
									"src": "2801:83:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "2890:481:1",
										"text": " @dev Passes an execution instruction to an ERC734 identity.\n How the execution is handled is up to the identity implementation:\n An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to\n approve this execution.\n Execute COULD be used as the only accessor for `addKey` and `removeKey`.\n Triggers Event: ExecutionRequested\n Triggers on direct execution Event: Executed"
									},
									"functionSelector": "b61d27f6",
									"id": 164,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "execute",
									"nameLocation": "3385:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "3401:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3393:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3393:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "3414:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3406:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3406:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "3437:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3422:20:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 158,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3422:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3392:51:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "executionId",
												"nameLocation": "3478:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3470:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3470:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3469:21:1"
									},
									"scope": 206,
									"src": "3376:115:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "3497:78:1",
										"text": " @dev Returns the full key data, if present in the identity."
									},
									"functionSelector": "12aaac70",
									"id": 177,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getKey",
									"nameLocation": "3589:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "_key",
												"nameLocation": "3604:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "3596:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 166,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3596:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3595:14:1"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "purposes",
												"nameLocation": "3650:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "3633:25:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 169,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3633:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 170,
													"nodeType": "ArrayTypeName",
													"src": "3633:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "keyType",
												"nameLocation": "3668:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "3660:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3660:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "3685:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "3677:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 174,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3677:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3632:57:1"
									},
									"scope": 206,
									"src": "3580:110:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "3696:75:1",
										"text": " @dev Returns the list of purposes associated with a key."
									},
									"functionSelector": "fb307b34",
									"id": 186,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getKeyPurposes",
									"nameLocation": "3785:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "_key",
												"nameLocation": "3808:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "3800:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 179,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3800:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3799:14:1"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "_purposes",
												"nameLocation": "3853:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "3836:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 182,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3836:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 183,
													"nodeType": "ArrayTypeName",
													"src": "3836:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3835:28:1"
									},
									"scope": 206,
									"src": "3776:88:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "3870:85:1",
										"text": " @dev Returns an array of public key bytes32 held by this identity."
									},
									"functionSelector": "9010f726",
									"id": 195,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getKeysByPurpose",
									"nameLocation": "3969:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "_purpose",
												"nameLocation": "3994:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "3986:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3986:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3985:18:1"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "keys",
												"nameLocation": "4044:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "4027:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 191,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "4027:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 192,
													"nodeType": "ArrayTypeName",
													"src": "4027:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4026:23:1"
									},
									"scope": 206,
									"src": "3960:90:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "4056:127:1",
										"text": " @dev Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE."
									},
									"functionSelector": "d202158d",
									"id": 205,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "keyHasPurpose",
									"nameLocation": "4197:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "_key",
												"nameLocation": "4219:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "4211:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 197,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4211:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "_purpose",
												"nameLocation": "4233:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "4225:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4225:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4210:32:1"
									},
									"returnParameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "exists",
												"nameLocation": "4271:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "4266:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 202,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4266:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4265:13:1"
									},
									"scope": 206,
									"src": "4188:91:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 207,
							"src": "146:4135:1",
							"usedErrors": []
						}
					],
					"src": "36:4246:1"
				},
				"id": 1
			},
			"@onchain-id/solidity/contracts/interface/IERC735.sol": {
				"ast": {
					"absolutePath": "@onchain-id/solidity/contracts/interface/IERC735.sol",
					"exportedSymbols": {
						"IERC735": [
							314
						]
					},
					"id": 315,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 208,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC735",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 209,
								"nodeType": "StructuredDocumentation",
								"src": "61:86:2",
								"text": " @dev interface of the ERC735 (Claim Holder) standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 314,
							"linearizedBaseContracts": [
								314
							],
							"name": "IERC735",
							"nameLocation": "158:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "173:139:2",
										"text": " @dev Emitted when a claim was added.\n Specification: MUST be triggered when a claim was successfully added."
									},
									"eventSelector": "46149b18aa084502c3f12bc75e19eda8bda8d102b82cce8474677a6d0d5f43c5",
									"id": 226,
									"name": "ClaimAdded",
									"nameLocation": "323:10:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimId",
												"nameLocation": "359:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "343:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 211,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"indexed": true,
												"mutability": "mutable",
												"name": "topic",
												"nameLocation": "392:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "376:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "376:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"indexed": false,
												"mutability": "mutable",
												"name": "scheme",
												"nameLocation": "415:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "407:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "407:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"indexed": true,
												"mutability": "mutable",
												"name": "issuer",
												"nameLocation": "447:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "431:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"indexed": false,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "469:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "463:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 219,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "463:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "494:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "488:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 221,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "488:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"indexed": false,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "515:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "508:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 223,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "508:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "333:186:2"
									},
									"src": "317:203:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "526:146:2",
										"text": " @dev Emitted when a claim was removed.\n Specification: MUST be triggered when removeClaim was successfully called."
									},
									"eventSelector": "3cf57863a89432c61c4a27073c6ee39e8a764bff5a05aebfbcdcdc80b2e6130a",
									"id": 243,
									"name": "ClaimRemoved",
									"nameLocation": "683:12:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimId",
												"nameLocation": "721:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "705:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 228,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "705:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"indexed": true,
												"mutability": "mutable",
												"name": "topic",
												"nameLocation": "754:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "738:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"indexed": false,
												"mutability": "mutable",
												"name": "scheme",
												"nameLocation": "777:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "769:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"indexed": true,
												"mutability": "mutable",
												"name": "issuer",
												"nameLocation": "809:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "793:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "793:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"indexed": false,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "831:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "825:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 236,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "825:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "856:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "850:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 238,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "850:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"indexed": false,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "877:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "870:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 240,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "870:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "695:186:2"
									},
									"src": "677:205:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "888:166:2",
										"text": " @dev Emitted when a claim was changed.\n Specification: MUST be triggered when addClaim was successfully called on an existing claimId."
									},
									"eventSelector": "3bab293fc00db832d7619a9299914251b8747c036867ec056cbd506f60135b13",
									"id": 260,
									"name": "ClaimChanged",
									"nameLocation": "1065:12:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimId",
												"nameLocation": "1103:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "1087:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 245,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1087:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"indexed": true,
												"mutability": "mutable",
												"name": "topic",
												"nameLocation": "1136:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "1120:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1120:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"indexed": false,
												"mutability": "mutable",
												"name": "scheme",
												"nameLocation": "1159:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "1151:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1151:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"indexed": true,
												"mutability": "mutable",
												"name": "issuer",
												"nameLocation": "1191:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "1175:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1175:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"indexed": false,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "1213:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "1207:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 253,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1207:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1238:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "1232:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 255,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1232:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"indexed": false,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "1259:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "1252:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 257,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1252:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1077:186:2"
									},
									"src": "1059:205:2"
								},
								{
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "1270:438:2",
										"text": " @dev Add or update a claim.\n Triggers Event: `ClaimAdded`, `ClaimChanged`\n Specification: Add or update a claim from an issuer.\n _signature is a signed message of the following structure:\n `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`.\n Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`."
									},
									"functionSelector": "b1a34e0d",
									"id": 278,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addClaim",
									"nameLocation": "1722:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "_topic",
												"nameLocation": "1748:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "1740:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1740:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "_scheme",
												"nameLocation": "1772:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "1764:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1764:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "issuer",
												"nameLocation": "1797:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "1789:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1789:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "_signature",
												"nameLocation": "1828:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "1813:25:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 268,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1813:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "1863:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "1848:20:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 270,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1848:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "_uri",
												"nameLocation": "1894:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "1878:20:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 272,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1878:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1730:169:2"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "claimRequestId",
												"nameLocation": "1930:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "1922:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 275,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1922:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1921:24:2"
									},
									"scope": 314,
									"src": "1713:233:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "1952:193:2",
										"text": " @dev Removes a claim.\n Triggers Event: `ClaimRemoved`\n Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
									},
									"functionSelector": "4eee424a",
									"id": 286,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeClaim",
									"nameLocation": "2159:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "_claimId",
												"nameLocation": "2179:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "2171:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 280,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2170:18:2"
									},
									"returnParameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2212:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "2207:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 283,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2207:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2206:14:2"
									},
									"scope": 314,
									"src": "2150:71:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "2227:154:2",
										"text": " @dev Get a claim by its ID.\n Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
									},
									"functionSelector": "c9100bcb",
									"id": 304,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getClaim",
									"nameLocation": "2395:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "_claimId",
												"nameLocation": "2412:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "2404:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 288,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2404:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2403:18:2"
									},
									"returnParameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "topic",
												"nameLocation": "2465:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "2457:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2457:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "scheme",
												"nameLocation": "2488:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "2480:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2480:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "issuer",
												"nameLocation": "2512:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "2504:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2504:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "2541:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "2528:22:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 297,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2528:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2573:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "2560:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 299,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2560:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "2601:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "2587:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 301,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2587:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2447:158:2"
									},
									"scope": 314,
									"src": "2386:220:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 305,
										"nodeType": "StructuredDocumentation",
										"src": "2612:63:2",
										"text": " @dev Returns an array of claim IDs by topic."
									},
									"functionSelector": "80e9e9e1",
									"id": 313,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getClaimIdsByTopic",
									"nameLocation": "2689:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "_topic",
												"nameLocation": "2716:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "2708:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2708:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2707:16:2"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "claimIds",
												"nameLocation": "2763:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "2746:25:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 309,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "2746:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 310,
													"nodeType": "ArrayTypeName",
													"src": "2746:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2745:27:2"
									},
									"scope": 314,
									"src": "2680:93:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 315,
							"src": "148:2627:2",
							"usedErrors": []
						}
					],
					"src": "36:2740:2"
				},
				"id": 2
			},
			"@onchain-id/solidity/contracts/interface/IIdentity.sol": {
				"ast": {
					"absolutePath": "@onchain-id/solidity/contracts/interface/IIdentity.sol",
					"exportedSymbols": {
						"IERC734": [
							206
						],
						"IERC735": [
							314
						],
						"IIdentity": [
							323
						]
					},
					"id": 324,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 316,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:3"
						},
						{
							"absolutePath": "@onchain-id/solidity/contracts/interface/IERC734.sol",
							"file": "./IERC734.sol",
							"id": 317,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 324,
							"sourceUnit": 207,
							"src": "61:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@onchain-id/solidity/contracts/interface/IERC735.sol",
							"file": "./IERC735.sol",
							"id": 318,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 324,
							"sourceUnit": 315,
							"src": "85:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 319,
										"name": "IERC734",
										"nameLocations": [
											"178:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 206,
										"src": "178:7:3"
									},
									"id": 320,
									"nodeType": "InheritanceSpecifier",
									"src": "178:7:3"
								},
								{
									"baseName": {
										"id": 321,
										"name": "IERC735",
										"nameLocations": [
											"187:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 314,
										"src": "187:7:3"
									},
									"id": 322,
									"nodeType": "InheritanceSpecifier",
									"src": "187:7:3"
								}
							],
							"canonicalName": "IIdentity",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 323,
							"linearizedBaseContracts": [
								323,
								314,
								206
							],
							"name": "IIdentity",
							"nameLocation": "165:9:3",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 324,
							"src": "155:42:3",
							"usedErrors": []
						}
					],
					"src": "36:162:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
					"exportedSymbols": {
						"AccessControlUpgradeable": [
							659
						],
						"AddressUpgradeable": [
							1363
						],
						"ContextUpgradeable": [
							1405
						],
						"ERC165Upgradeable": [
							1678
						],
						"IAccessControlUpgradeable": [
							732
						],
						"IERC165Upgradeable": [
							1690
						],
						"Initializable": [
							1033
						],
						"MathUpgradeable": [
							2556
						],
						"SignedMathUpgradeable": [
							2661
						],
						"StringsUpgradeable": [
							1634
						]
					},
					"id": 660,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 325,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
							"file": "./IAccessControlUpgradeable.sol",
							"id": 326,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 660,
							"sourceUnit": 733,
							"src": "133:41:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 327,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 660,
							"sourceUnit": 1406,
							"src": "175:41:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
							"file": "../utils/StringsUpgradeable.sol",
							"id": 328,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 660,
							"sourceUnit": 1635,
							"src": "217:41:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
							"file": "../utils/introspection/ERC165Upgradeable.sol",
							"id": 329,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 660,
							"sourceUnit": 1679,
							"src": "259:54:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 330,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 660,
							"sourceUnit": 1034,
							"src": "314:42:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 332,
										"name": "Initializable",
										"nameLocations": [
											"2065:13:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1033,
										"src": "2065:13:4"
									},
									"id": 333,
									"nodeType": "InheritanceSpecifier",
									"src": "2065:13:4"
								},
								{
									"baseName": {
										"id": 334,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"2080:18:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1405,
										"src": "2080:18:4"
									},
									"id": 335,
									"nodeType": "InheritanceSpecifier",
									"src": "2080:18:4"
								},
								{
									"baseName": {
										"id": 336,
										"name": "IAccessControlUpgradeable",
										"nameLocations": [
											"2100:25:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 732,
										"src": "2100:25:4"
									},
									"id": 337,
									"nodeType": "InheritanceSpecifier",
									"src": "2100:25:4"
								},
								{
									"baseName": {
										"id": 338,
										"name": "ERC165Upgradeable",
										"nameLocations": [
											"2127:17:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1678,
										"src": "2127:17:4"
									},
									"id": 339,
									"nodeType": "InheritanceSpecifier",
									"src": "2127:17:4"
								}
							],
							"canonicalName": "AccessControlUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 331,
								"nodeType": "StructuredDocumentation",
								"src": "358:1660:4",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 659,
							"linearizedBaseContracts": [
								659,
								1678,
								1690,
								732,
								1405,
								1033
							],
							"name": "AccessControlUpgradeable",
							"nameLocation": "2037:24:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "2209:7:4",
										"statements": []
									},
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 342,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 341,
												"name": "onlyInitializing",
												"nameLocations": [
													"2192:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 978,
												"src": "2192:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2192:16:4"
										}
									],
									"name": "__AccessControl_init",
									"nameLocation": "2160:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2180:2:4"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2209:0:4"
									},
									"scope": 659,
									"src": "2151:65:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 350,
										"nodeType": "Block",
										"src": "2290:7:4",
										"statements": []
									},
									"id": 351,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 348,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 347,
												"name": "onlyInitializing",
												"nameLocations": [
													"2273:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 978,
												"src": "2273:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2273:16:4"
										}
									],
									"name": "__AccessControl_init_unchained",
									"nameLocation": "2231:30:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2261:2:4"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2290:0:4"
									},
									"scope": 659,
									"src": "2222:75:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "AccessControlUpgradeable.RoleData",
									"id": 358,
									"members": [
										{
											"constant": false,
											"id": 355,
											"mutability": "mutable",
											"name": "members",
											"nameLocation": "2353:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 358,
											"src": "2328:32:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 354,
												"keyType": {
													"id": 352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2336:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2328:24:4",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueType": {
													"id": 353,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2347:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 357,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2378:9:4",
											"nodeType": "VariableDeclaration",
											"scope": 358,
											"src": "2370:17:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 356,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2370:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2309:8:4",
									"nodeType": "StructDefinition",
									"scope": 659,
									"src": "2302:92:4",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 363,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2437:6:4",
									"nodeType": "VariableDeclaration",
									"scope": 659,
									"src": "2400:43:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$358_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
									},
									"typeName": {
										"id": 362,
										"keyType": {
											"id": 359,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2408:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2400:28:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$358_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
										},
										"valueType": {
											"id": 361,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 360,
												"name": "RoleData",
												"nameLocations": [
													"2419:8:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 358,
												"src": "2419:8:4"
											},
											"referencedDeclaration": 358,
											"src": "2419:8:4",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$358_storage_ptr",
												"typeString": "struct AccessControlUpgradeable.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 366,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2474:18:4",
									"nodeType": "VariableDeclaration",
									"scope": 659,
									"src": "2450:49:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 364,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2450:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 365,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2495:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 376,
										"nodeType": "Block",
										"src": "2918:44:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 372,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "2939:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 371,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															431,
															470
														],
														"referencedDeclaration": 431,
														"src": "2928:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2928:16:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 374,
												"nodeType": "ExpressionStatement",
												"src": "2928:16:4"
											},
											{
												"id": 375,
												"nodeType": "PlaceholderStatement",
												"src": "2954:1:4"
											}
										]
									},
									"documentation": {
										"id": 367,
										"nodeType": "StructuredDocumentation",
										"src": "2506:375:4",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"
									},
									"id": 377,
									"name": "onlyRole",
									"nameLocation": "2895:8:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2912:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "2904:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 368,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2904:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2903:14:4"
									},
									"src": "2886:76:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1672
									],
									"body": {
										"id": 398,
										"nodeType": "Block",
										"src": "3120:122:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 391,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 386,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "3137:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 388,
																		"name": "IAccessControlUpgradeable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 732,
																		"src": "3157:25:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControlUpgradeable_$732_$",
																			"typeString": "type(contract IAccessControlUpgradeable)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControlUpgradeable_$732_$",
																			"typeString": "type(contract IAccessControlUpgradeable)"
																		}
																	],
																	"id": 387,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "3152:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 389,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3152:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControlUpgradeable_$732",
																	"typeString": "type(contract IAccessControlUpgradeable)"
																}
															},
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3184:11:4",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "3152:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "3137:58:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 394,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 380,
																"src": "3223:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 392,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "3199:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControlUpgradeable_$659_$",
																	"typeString": "type(contract super AccessControlUpgradeable)"
																}
															},
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3205:17:4",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1672,
															"src": "3199:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3199:36:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3137:98:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 385,
												"id": 397,
												"nodeType": "Return",
												"src": "3130:105:4"
											}
										]
									},
									"documentation": {
										"id": 378,
										"nodeType": "StructuredDocumentation",
										"src": "2968:56:4",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "3038:17:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 382,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3096:8:4"
									},
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "3063:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "3056:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 379,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3056:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3055:20:4"
									},
									"returnParameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "3114:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 383,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3114:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3113:6:4"
									},
									"scope": 659,
									"src": "3029:213:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										699
									],
									"body": {
										"id": 417,
										"nodeType": "Block",
										"src": "3421:53:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 410,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 363,
																"src": "3438:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$358_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																}
															},
															"id": 412,
															"indexExpression": {
																"id": 411,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 402,
																"src": "3445:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3438:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$358_storage",
																"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
															}
														},
														"id": 413,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3451:7:4",
														"memberName": "members",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 355,
														"src": "3438:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 415,
													"indexExpression": {
														"id": 414,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "3459:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3438:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 409,
												"id": 416,
												"nodeType": "Return",
												"src": "3431:36:4"
											}
										]
									},
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "3248:76:4",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "3338:7:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 406,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3397:8:4"
									},
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3354:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "3346:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 401,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3346:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3368:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "3360:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3360:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3345:31:4"
									},
									"returnParameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "3415:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 407,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3415:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3414:6:4"
									},
									"scope": 659,
									"src": "3329:145:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 430,
										"nodeType": "Block",
										"src": "3824:47:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 425,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "3845:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 426,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1390,
																"src": "3851:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3851:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 424,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															431,
															470
														],
														"referencedDeclaration": 470,
														"src": "3834:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3834:30:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 429,
												"nodeType": "ExpressionStatement",
												"src": "3834:30:4"
											}
										]
									},
									"documentation": {
										"id": 419,
										"nodeType": "StructuredDocumentation",
										"src": "3480:283:4",
										"text": " @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"
									},
									"id": 431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3777:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3796:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "3788:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 420,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3788:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3787:14:4"
									},
									"returnParameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3824:0:4"
									},
									"scope": 659,
									"src": "3768:103:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 469,
										"nodeType": "Block",
										"src": "4225:428:4",
										"statements": [
											{
												"condition": {
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4239:23:4",
													"subExpression": {
														"arguments": [
															{
																"id": 440,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 434,
																"src": "4248:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 441,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 436,
																"src": "4254:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 439,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 418,
															"src": "4240:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 442,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4240:22:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 468,
												"nodeType": "IfStatement",
												"src": "4235:412:4",
												"trueBody": {
													"id": 467,
													"nodeType": "Block",
													"src": "4264:383:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																						"id": 449,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4372:25:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						"value": "AccessControl: account "
																					},
																					{
																						"arguments": [
																							{
																								"id": 452,
																								"name": "account",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 436,
																								"src": "4454:7:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"expression": {
																								"id": 450,
																								"name": "StringsUpgradeable",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1634,
																								"src": "4423:18:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_StringsUpgradeable_$1634_$",
																									"typeString": "type(library StringsUpgradeable)"
																								}
																							},
																							"id": 451,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4442:11:4",
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1608,
																							"src": "4423:30:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (address) pure returns (string memory)"
																							}
																						},
																						"id": 453,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4423:39:4",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					{
																						"hexValue": "206973206d697373696e6720726f6c6520",
																						"id": 454,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4488:19:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						"value": " is missing role "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 459,
																										"name": "role",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 434,
																										"src": "4572:4:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									],
																									"id": 458,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "4564:7:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint256_$",
																										"typeString": "type(uint256)"
																									},
																									"typeName": {
																										"id": 457,
																										"name": "uint256",
																										"nodeType": "ElementaryTypeName",
																										"src": "4564:7:4",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 460,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4564:13:4",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"hexValue": "3332",
																								"id": 461,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4579:2:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								},
																								"value": "32"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								}
																							],
																							"expression": {
																								"id": 455,
																								"name": "StringsUpgradeable",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1634,
																								"src": "4533:18:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_StringsUpgradeable_$1634_$",
																									"typeString": "type(library StringsUpgradeable)"
																								}
																							},
																							"id": 456,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4552:11:4",
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1588,
																							"src": "4533:30:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 462,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4533:49:4",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						},
																						{
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"expression": {
																						"id": 447,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "4330:3:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 448,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "4334:12:4",
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "4330:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 463,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4330:274:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 446,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4302:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																				"typeString": "type(string storage pointer)"
																			},
																			"typeName": {
																				"id": 445,
																				"name": "string",
																				"nodeType": "ElementaryTypeName",
																				"src": "4302:6:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 464,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4302:320:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 444,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "4278:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4278:358:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 466,
															"nodeType": "ExpressionStatement",
															"src": "4278:358:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "3877:270:4",
										"text": " @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"
									},
									"id": 470,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "4161:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4180:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "4172:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 433,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4172:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4194:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "4186:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4186:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4171:31:4"
									},
									"returnParameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4225:0:4"
									},
									"scope": 659,
									"src": "4152:501:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										707
									],
									"body": {
										"id": 484,
										"nodeType": "Block",
										"src": "4917:46:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 479,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "4934:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$358_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
															}
														},
														"id": 481,
														"indexExpression": {
															"id": 480,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "4941:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4934:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$358_storage",
															"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
														}
													},
													"id": 482,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4947:9:4",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 357,
													"src": "4934:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 478,
												"id": 483,
												"nodeType": "Return",
												"src": "4927:29:4"
											}
										]
									},
									"documentation": {
										"id": 471,
										"nodeType": "StructuredDocumentation",
										"src": "4659:170:4",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "4843:12:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 475,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4890:8:4"
									},
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4864:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "4856:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 472,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4856:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4855:14:4"
									},
									"returnParameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "4908:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 476,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4908:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4907:9:4"
									},
									"scope": 659,
									"src": "4834:129:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										715
									],
									"body": {
										"id": 504,
										"nodeType": "Block",
										"src": "5362:42:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 500,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 488,
															"src": "5383:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 501,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 490,
															"src": "5389:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 499,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 622,
														"src": "5372:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5372:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "5372:25:4"
											}
										]
									},
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "4969:285:4",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 505,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 495,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 488,
															"src": "5355:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 494,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5342:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5342:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 497,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 493,
												"name": "onlyRole",
												"nameLocations": [
													"5333:8:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 377,
												"src": "5333:8:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "5333:28:4"
										}
									],
									"name": "grantRole",
									"nameLocation": "5268:9:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 492,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5324:8:4"
									},
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5286:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "5278:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 487,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5278:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5300:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "5292:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5292:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5277:31:4"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5362:0:4"
									},
									"scope": 659,
									"src": "5259:145:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										723
									],
									"body": {
										"id": 524,
										"nodeType": "Block",
										"src": "5788:43:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 520,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "5810:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 521,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "5816:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 519,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 653,
														"src": "5798:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5798:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 523,
												"nodeType": "ExpressionStatement",
												"src": "5798:26:4"
											}
										]
									},
									"documentation": {
										"id": 506,
										"nodeType": "StructuredDocumentation",
										"src": "5410:269:4",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 525,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 515,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "5781:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 514,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5768:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5768:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 517,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 513,
												"name": "onlyRole",
												"nameLocations": [
													"5759:8:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 377,
												"src": "5759:8:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "5759:28:4"
										}
									],
									"name": "revokeRole",
									"nameLocation": "5693:10:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 512,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5750:8:4"
									},
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5712:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "5704:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 507,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5704:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5726:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "5718:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5718:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5703:31:4"
									},
									"returnParameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5788:0:4"
									},
									"scope": 659,
									"src": "5684:147:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										731
									],
									"body": {
										"id": 547,
										"nodeType": "Block",
										"src": "6445:137:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 535,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 530,
																"src": "6463:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 536,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1390,
																	"src": "6474:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 537,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6474:12:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6463:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66",
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6488:49:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															},
															"value": "AccessControl: can only renounce roles for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															}
														],
														"id": 534,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6455:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6455:83:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 541,
												"nodeType": "ExpressionStatement",
												"src": "6455:83:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 543,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "6561:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 544,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 530,
															"src": "6567:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 542,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 653,
														"src": "6549:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6549:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 546,
												"nodeType": "ExpressionStatement",
												"src": "6549:26:4"
											}
										]
									},
									"documentation": {
										"id": 526,
										"nodeType": "StructuredDocumentation",
										"src": "5837:526:4",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 548,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "6377:12:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 532,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6436:8:4"
									},
									"parameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6398:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "6390:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 527,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6390:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6412:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "6404:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6404:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6389:31:4"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6445:0:4"
									},
									"scope": 659,
									"src": "6368:214:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "7335:42:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 557,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 551,
															"src": "7356:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 558,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 553,
															"src": "7362:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 556,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 622,
														"src": "7345:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7345:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 560,
												"nodeType": "ExpressionStatement",
												"src": "7345:25:4"
											}
										]
									},
									"documentation": {
										"id": 549,
										"nodeType": "StructuredDocumentation",
										"src": "6588:674:4",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."
									},
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupRole",
									"nameLocation": "7276:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7295:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "7287:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 550,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7287:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7309:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "7301:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7301:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7286:31:4"
									},
									"returnParameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7335:0:4"
									},
									"scope": 659,
									"src": "7267:110:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 589,
										"nodeType": "Block",
										"src": "7575:174:4",
										"statements": [
											{
												"assignments": [
													571
												],
												"declarations": [
													{
														"constant": false,
														"id": 571,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "7593:17:4",
														"nodeType": "VariableDeclaration",
														"scope": 589,
														"src": "7585:25:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 570,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7585:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 575,
												"initialValue": {
													"arguments": [
														{
															"id": 573,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 565,
															"src": "7626:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 572,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "7613:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7613:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7585:46:4"
											},
											{
												"expression": {
													"id": 581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 576,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 363,
																"src": "7641:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$358_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																}
															},
															"id": 578,
															"indexExpression": {
																"id": 577,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 565,
																"src": "7648:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7641:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$358_storage",
																"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
															}
														},
														"id": 579,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7654:9:4",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 357,
														"src": "7641:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 580,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 567,
														"src": "7666:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "7641:34:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 582,
												"nodeType": "ExpressionStatement",
												"src": "7641:34:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 584,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 565,
															"src": "7707:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 585,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 571,
															"src": "7713:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 586,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 567,
															"src": "7732:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 583,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "7690:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7690:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 588,
												"nodeType": "EmitStatement",
												"src": "7685:57:4"
											}
										]
									},
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "7383:114:4",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "7511:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7533:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "7525:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 564,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7525:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "7547:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "7539:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 566,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7539:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7524:33:4"
									},
									"returnParameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7575:0:4"
									},
									"scope": 659,
									"src": "7502:247:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 621,
										"nodeType": "Block",
										"src": "7985:165:4",
										"statements": [
											{
												"condition": {
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7999:23:4",
													"subExpression": {
														"arguments": [
															{
																"id": 599,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 593,
																"src": "8008:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 600,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 595,
																"src": "8014:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 598,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 418,
															"src": "8000:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 601,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8000:22:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 620,
												"nodeType": "IfStatement",
												"src": "7995:149:4",
												"trueBody": {
													"id": 619,
													"nodeType": "Block",
													"src": "8024:120:4",
													"statements": [
														{
															"expression": {
																"id": 610,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 603,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 363,
																				"src": "8038:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$358_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																				}
																			},
																			"id": 605,
																			"indexExpression": {
																				"id": 604,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 593,
																				"src": "8045:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8038:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$358_storage",
																				"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
																			}
																		},
																		"id": 606,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8051:7:4",
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 355,
																		"src": "8038:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 608,
																	"indexExpression": {
																		"id": 607,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 595,
																		"src": "8059:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8038:29:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 609,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8070:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "8038:36:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 611,
															"nodeType": "ExpressionStatement",
															"src": "8038:36:4"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 613,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 593,
																		"src": "8105:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 614,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 595,
																		"src": "8111:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 615,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1390,
																			"src": "8120:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 616,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8120:12:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 612,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 680,
																	"src": "8093:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8093:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 618,
															"nodeType": "EmitStatement",
															"src": "8088:45:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 591,
										"nodeType": "StructuredDocumentation",
										"src": "7755:157:4",
										"text": " @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 622,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "7926:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7945:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "7937:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 592,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7937:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7959:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "7951:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7951:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7936:31:4"
									},
									"returnParameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7985:0:4"
									},
									"scope": 659,
									"src": "7917:233:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 652,
										"nodeType": "Block",
										"src": "8390:165:4",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 631,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "8412:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 632,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "8418:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 630,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 418,
														"src": "8404:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8404:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 651,
												"nodeType": "IfStatement",
												"src": "8400:149:4",
												"trueBody": {
													"id": 650,
													"nodeType": "Block",
													"src": "8428:121:4",
													"statements": [
														{
															"expression": {
																"id": 641,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 634,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 363,
																				"src": "8442:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$358_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																				}
																			},
																			"id": 636,
																			"indexExpression": {
																				"id": 635,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 625,
																				"src": "8449:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8442:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$358_storage",
																				"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
																			}
																		},
																		"id": 637,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8455:7:4",
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 355,
																		"src": "8442:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 639,
																	"indexExpression": {
																		"id": 638,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 627,
																		"src": "8463:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8442:29:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 640,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8474:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "8442:37:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 642,
															"nodeType": "ExpressionStatement",
															"src": "8442:37:4"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 644,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 625,
																		"src": "8510:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 645,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 627,
																		"src": "8516:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 646,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1390,
																			"src": "8525:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8525:12:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 643,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 689,
																	"src": "8498:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 648,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8498:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 649,
															"nodeType": "EmitStatement",
															"src": "8493:45:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 623,
										"nodeType": "StructuredDocumentation",
										"src": "8156:160:4",
										"text": " @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 653,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "8330:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "8350:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "8342:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 624,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8342:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8364:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "8356:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8356:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8341:31:4"
									},
									"returnParameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8390:0:4"
									},
									"scope": 659,
									"src": "8321:234:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 654,
										"nodeType": "StructuredDocumentation",
										"src": "8561:254:4",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 658,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "8840:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 659,
									"src": "8820:25:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 655,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "8820:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 657,
										"length": {
											"hexValue": "3439",
											"id": 656,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "8828:2:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "8820:11:4",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 660,
							"src": "2019:6829:4",
							"usedErrors": []
						}
					],
					"src": "108:8741:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
					"exportedSymbols": {
						"IAccessControlUpgradeable": [
							732
						]
					},
					"id": 733,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 661,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "94:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControlUpgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 662,
								"nodeType": "StructuredDocumentation",
								"src": "119:89:5",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 732,
							"linearizedBaseContracts": [
								732
							],
							"name": "IAccessControlUpgradeable",
							"nameLocation": "219:25:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 663,
										"nodeType": "StructuredDocumentation",
										"src": "251:292:5",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 671,
									"name": "RoleAdminChanged",
									"nameLocation": "554:16:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "587:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "571:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 664,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "571:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "609:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "593:33:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 666,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "593:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "644:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "628:28:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 668,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "628:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "570:87:5"
									},
									"src": "548:110:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "664:212:5",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 680,
									"name": "RoleGranted",
									"nameLocation": "887:11:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "915:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "899:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 673,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "937:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "921:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "921:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 678,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "962:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "946:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 677,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "946:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "898:71:5"
									},
									"src": "881:89:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 681,
										"nodeType": "StructuredDocumentation",
										"src": "976:275:5",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 689,
									"name": "RoleRevoked",
									"nameLocation": "1262:11:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1290:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "1274:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 682,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1312:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "1296:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1296:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 687,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1337:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "1321:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1321:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1273:71:5"
									},
									"src": "1256:89:5"
								},
								{
									"documentation": {
										"id": 690,
										"nodeType": "StructuredDocumentation",
										"src": "1351:76:5",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 699,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1441:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1457:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "1449:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 691,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1449:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1471:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "1463:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1463:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1448:31:5"
									},
									"returnParameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "1503:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 696,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1503:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1502:6:5"
									},
									"scope": 732,
									"src": "1432:77:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 700,
										"nodeType": "StructuredDocumentation",
										"src": "1515:184:5",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 707,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "1713:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1734:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "1726:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 701,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1726:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1725:14:5"
									},
									"returnParameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "1763:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 704,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1763:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1762:9:5"
									},
									"scope": 732,
									"src": "1704:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 708,
										"nodeType": "StructuredDocumentation",
										"src": "1778:239:5",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 715,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2031:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2049:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "2041:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 709,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2063:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "2055:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2055:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2040:31:5"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2080:0:5"
									},
									"scope": 732,
									"src": "2022:59:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 716,
										"nodeType": "StructuredDocumentation",
										"src": "2087:223:5",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 723,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2324:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2343:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "2335:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 717,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2335:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2357:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "2349:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2349:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2334:31:5"
									},
									"returnParameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2374:0:5"
									},
									"scope": 732,
									"src": "2315:60:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 724,
										"nodeType": "StructuredDocumentation",
										"src": "2381:480:5",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 731,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "2875:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2896:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "2888:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 725,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2888:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2910:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "2902:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 727,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2902:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2887:31:5"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2927:0:5"
									},
									"scope": 732,
									"src": "2866:62:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 733,
							"src": "209:2721:5",
							"usedErrors": []
						}
					],
					"src": "94:2837:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1363
						],
						"ContextUpgradeable": [
							1405
						],
						"Initializable": [
							1033
						],
						"OwnableUpgradeable": [
							864
						]
					},
					"id": 865,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 734,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 735,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 1406,
							"src": "127:41:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 736,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 1034,
							"src": "169:42:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 738,
										"name": "Initializable",
										"nameLocations": [
											"748:13:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1033,
										"src": "748:13:6"
									},
									"id": 739,
									"nodeType": "InheritanceSpecifier",
									"src": "748:13:6"
								},
								{
									"baseName": {
										"id": 740,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"763:18:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1405,
										"src": "763:18:6"
									},
									"id": 741,
									"nodeType": "InheritanceSpecifier",
									"src": "763:18:6"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 737,
								"nodeType": "StructuredDocumentation",
								"src": "213:494:6",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 864,
							"linearizedBaseContracts": [
								864,
								1405,
								1033
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "726:18:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 743,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "804:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "788:22:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 742,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "788:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 749,
									"name": "OwnershipTransferred",
									"nameLocation": "823:20:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "860:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "844:29:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "844:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 747,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "891:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "875:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:57:6"
									},
									"src": "817:84:6"
								},
								{
									"body": {
										"id": 758,
										"nodeType": "Block",
										"src": "1055:43:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 755,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "1065:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1065:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 757,
												"nodeType": "ExpressionStatement",
												"src": "1065:26:6"
											}
										]
									},
									"documentation": {
										"id": 750,
										"nodeType": "StructuredDocumentation",
										"src": "907:91:6",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 759,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 753,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 752,
												"name": "onlyInitializing",
												"nameLocations": [
													"1038:16:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 978,
												"src": "1038:16:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1038:16:6"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1012:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1026:2:6"
									},
									"returnParameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1055:0:6"
									},
									"scope": 864,
									"src": "1003:95:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 769,
										"nodeType": "Block",
										"src": "1166:49:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 765,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1390,
																"src": "1195:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1195:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 764,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 858,
														"src": "1176:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1176:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 768,
												"nodeType": "ExpressionStatement",
												"src": "1176:32:6"
											}
										]
									},
									"id": 770,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 762,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 761,
												"name": "onlyInitializing",
												"nameLocations": [
													"1149:16:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 978,
												"src": "1149:16:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1149:16:6"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1113:24:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1137:2:6"
									},
									"returnParameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1166:0:6"
									},
									"scope": 864,
									"src": "1104:111:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 777,
										"nodeType": "Block",
										"src": "1324:41:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 773,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 801,
														"src": "1334:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1334:13:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 775,
												"nodeType": "ExpressionStatement",
												"src": "1334:13:6"
											},
											{
												"id": 776,
												"nodeType": "PlaceholderStatement",
												"src": "1357:1:6"
											}
										]
									},
									"documentation": {
										"id": 771,
										"nodeType": "StructuredDocumentation",
										"src": "1221:77:6",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 778,
									"name": "onlyOwner",
									"nameLocation": "1312:9:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1321:2:6"
									},
									"src": "1303:62:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 786,
										"nodeType": "Block",
										"src": "1496:30:6",
										"statements": [
											{
												"expression": {
													"id": 784,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 743,
													"src": "1513:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 783,
												"id": 785,
												"nodeType": "Return",
												"src": "1506:13:6"
											}
										]
									},
									"documentation": {
										"id": 779,
										"nodeType": "StructuredDocumentation",
										"src": "1371:65:6",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 787,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1450:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1455:2:6"
									},
									"returnParameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "1487:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1487:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1486:9:6"
									},
									"scope": 864,
									"src": "1441:85:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 800,
										"nodeType": "Block",
										"src": "1644:85:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 792,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 787,
																	"src": "1662:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 793,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1662:7:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 794,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1390,
																	"src": "1673:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 795,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1673:12:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1662:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1687:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 791,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1654:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1654:68:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 799,
												"nodeType": "ExpressionStatement",
												"src": "1654:68:6"
											}
										]
									},
									"documentation": {
										"id": 788,
										"nodeType": "StructuredDocumentation",
										"src": "1532:62:6",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 801,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1608:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1619:2:6"
									},
									"returnParameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1644:0:6"
									},
									"scope": 864,
									"src": "1599:130:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 814,
										"nodeType": "Block",
										"src": "2118:47:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 810,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2155:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 809,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2147:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 808,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2147:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2147:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 807,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 858,
														"src": "2128:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2128:30:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 813,
												"nodeType": "ExpressionStatement",
												"src": "2128:30:6"
											}
										]
									},
									"documentation": {
										"id": 802,
										"nodeType": "StructuredDocumentation",
										"src": "1735:324:6",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 815,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 805,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 804,
												"name": "onlyOwner",
												"nameLocations": [
													"2108:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 778,
												"src": "2108:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2108:9:6"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2073:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2090:2:6"
									},
									"returnParameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2118:0:6"
									},
									"scope": 864,
									"src": "2064:101:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 837,
										"nodeType": "Block",
										"src": "2384:128:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 824,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 818,
																"src": "2402:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 827,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2422:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 826,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2414:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 825,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2414:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 828,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2414:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2402:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 830,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2426:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 823,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2394:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2394:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 832,
												"nodeType": "ExpressionStatement",
												"src": "2394:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 834,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 818,
															"src": "2496:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 833,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 858,
														"src": "2477:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2477:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 836,
												"nodeType": "ExpressionStatement",
												"src": "2477:28:6"
											}
										]
									},
									"documentation": {
										"id": 816,
										"nodeType": "StructuredDocumentation",
										"src": "2171:138:6",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 838,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 821,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 820,
												"name": "onlyOwner",
												"nameLocations": [
													"2374:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 778,
												"src": "2374:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2374:9:6"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2323:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2349:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "2341:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2341:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2340:18:6"
									},
									"returnParameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2384:0:6"
									},
									"scope": 864,
									"src": "2314:198:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 857,
										"nodeType": "Block",
										"src": "2729:124:6",
										"statements": [
											{
												"assignments": [
													845
												],
												"declarations": [
													{
														"constant": false,
														"id": 845,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2747:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 857,
														"src": "2739:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 844,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2739:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 847,
												"initialValue": {
													"id": 846,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 743,
													"src": "2758:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2739:25:6"
											},
											{
												"expression": {
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 848,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 743,
														"src": "2774:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 849,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 841,
														"src": "2783:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2774:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 851,
												"nodeType": "ExpressionStatement",
												"src": "2774:17:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 853,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 845,
															"src": "2827:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 854,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "2837:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 852,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "2806:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2806:40:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 856,
												"nodeType": "EmitStatement",
												"src": "2801:45:6"
											}
										]
									},
									"documentation": {
										"id": 839,
										"nodeType": "StructuredDocumentation",
										"src": "2518:143:6",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 858,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2675:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2702:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "2694:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2693:18:6"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2729:0:6"
									},
									"scope": 864,
									"src": "2666:187:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 859,
										"nodeType": "StructuredDocumentation",
										"src": "2859:254:6",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 863,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "3138:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "3118:25:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 860,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3118:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 862,
										"length": {
											"hexValue": "3439",
											"id": 861,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3126:2:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "3118:11:6",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 865,
							"src": "708:2438:6",
							"usedErrors": []
						}
					],
					"src": "102:3045:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1363
						],
						"Initializable": [
							1033
						]
					},
					"id": 1034,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 866,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
							"file": "../../utils/AddressUpgradeable.sol",
							"id": 867,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1034,
							"sourceUnit": 1364,
							"src": "138:44:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 868,
								"nodeType": "StructuredDocumentation",
								"src": "184:2209:7",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 1033,
							"linearizedBaseContracts": [
								1033
							],
							"name": "Initializable",
							"nameLocation": "2412:13:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 869,
										"nodeType": "StructuredDocumentation",
										"src": "2432:109:7",
										"text": " @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"
									},
									"id": 871,
									"mutability": "mutable",
									"name": "_initialized",
									"nameLocation": "2560:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 1033,
									"src": "2546:26:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 870,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "2546:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 872,
										"nodeType": "StructuredDocumentation",
										"src": "2579:91:7",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 874,
									"mutability": "mutable",
									"name": "_initializing",
									"nameLocation": "2688:13:7",
									"nodeType": "VariableDeclaration",
									"scope": 1033,
									"src": "2675:26:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 873,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2675:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 875,
										"nodeType": "StructuredDocumentation",
										"src": "2708:90:7",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498",
									"id": 879,
									"name": "Initialized",
									"nameLocation": "2809:11:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 877,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "2827:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "2821:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 876,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2821:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2820:15:7"
									},
									"src": "2803:33:7"
								},
								{
									"body": {
										"id": 934,
										"nodeType": "Block",
										"src": "3269:483:7",
										"statements": [
											{
												"assignments": [
													883
												],
												"declarations": [
													{
														"constant": false,
														"id": 883,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "3284:14:7",
														"nodeType": "VariableDeclaration",
														"scope": 934,
														"src": "3279:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 882,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3279:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 886,
												"initialValue": {
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3301:14:7",
													"subExpression": {
														"id": 884,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "3302:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3279:36:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 907,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 892,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 888,
																			"name": "isTopLevelCall",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 883,
																			"src": "3347:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 891,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 889,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 871,
																				"src": "3365:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 890,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3380:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3365:16:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3347:34:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 893,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3346:36:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 905,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 901,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "3387:45:7",
																			"subExpression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 898,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967268,
																								"src": "3426:4:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_Initializable_$1033",
																									"typeString": "contract Initializable"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_Initializable_$1033",
																									"typeString": "contract Initializable"
																								}
																							],
																							"id": 897,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3418:7:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 896,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "3418:7:7",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 899,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3418:13:7",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"id": 894,
																						"name": "AddressUpgradeable",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1363,
																						"src": "3388:18:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1363_$",
																							"typeString": "type(library AddressUpgradeable)"
																						}
																					},
																					"id": 895,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3407:10:7",
																					"memberName": "isContract",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1051,
																					"src": "3388:29:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																						"typeString": "function (address) view returns (bool)"
																					}
																				},
																				"id": 900,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3388:44:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 904,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 902,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 871,
																				"src": "3436:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 903,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3452:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3436:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3387:66:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 906,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3386:68:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3346:108:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3468:48:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 887,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3325:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3325:201:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 910,
												"nodeType": "ExpressionStatement",
												"src": "3325:201:7"
											},
											{
												"expression": {
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 911,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 871,
														"src": "3536:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 912,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3551:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3536:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 914,
												"nodeType": "ExpressionStatement",
												"src": "3536:16:7"
											},
											{
												"condition": {
													"id": 915,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 883,
													"src": "3566:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 921,
												"nodeType": "IfStatement",
												"src": "3562:65:7",
												"trueBody": {
													"id": 920,
													"nodeType": "Block",
													"src": "3582:45:7",
													"statements": [
														{
															"expression": {
																"id": 918,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 916,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 874,
																	"src": "3596:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 917,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3612:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3596:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 919,
															"nodeType": "ExpressionStatement",
															"src": "3596:20:7"
														}
													]
												}
											},
											{
												"id": 922,
												"nodeType": "PlaceholderStatement",
												"src": "3636:1:7"
											},
											{
												"condition": {
													"id": 923,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 883,
													"src": "3651:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 933,
												"nodeType": "IfStatement",
												"src": "3647:99:7",
												"trueBody": {
													"id": 932,
													"nodeType": "Block",
													"src": "3667:79:7",
													"statements": [
														{
															"expression": {
																"id": 926,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 924,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 874,
																	"src": "3681:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 925,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3697:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "3681:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 927,
															"nodeType": "ExpressionStatement",
															"src": "3681:21:7"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 929,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3733:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 928,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 879,
																	"src": "3721:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 930,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3721:14:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 931,
															"nodeType": "EmitStatement",
															"src": "3716:19:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 880,
										"nodeType": "StructuredDocumentation",
										"src": "2842:399:7",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."
									},
									"id": 935,
									"name": "initializer",
									"nameLocation": "3255:11:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3266:2:7"
									},
									"src": "3246:506:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 967,
										"nodeType": "Block",
										"src": "4863:255:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 942,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "4881:14:7",
																"subExpression": {
																	"id": 941,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 874,
																	"src": "4882:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 945,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 943,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 871,
																	"src": "4899:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 944,
																	"name": "version",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 938,
																	"src": "4914:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "4899:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4881:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 947,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4923:48:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 940,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4873:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:99:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 949,
												"nodeType": "ExpressionStatement",
												"src": "4873:99:7"
											},
											{
												"expression": {
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 950,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 871,
														"src": "4982:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 951,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 938,
														"src": "4997:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4982:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 953,
												"nodeType": "ExpressionStatement",
												"src": "4982:22:7"
											},
											{
												"expression": {
													"id": 956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 954,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "5014:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 955,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5030:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5014:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 957,
												"nodeType": "ExpressionStatement",
												"src": "5014:20:7"
											},
											{
												"id": 958,
												"nodeType": "PlaceholderStatement",
												"src": "5044:1:7"
											},
											{
												"expression": {
													"id": 961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 959,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "5055:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 960,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5071:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "5055:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 962,
												"nodeType": "ExpressionStatement",
												"src": "5055:21:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 964,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 938,
															"src": "5103:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 963,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 879,
														"src": "5091:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
															"typeString": "function (uint8)"
														}
													},
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5091:20:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 966,
												"nodeType": "EmitStatement",
												"src": "5086:25:7"
											}
										]
									},
									"documentation": {
										"id": 936,
										"nodeType": "StructuredDocumentation",
										"src": "3758:1062:7",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 968,
									"name": "reinitializer",
									"nameLocation": "4834:13:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "4854:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "4848:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 937,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4848:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4847:15:7"
									},
									"src": "4825:293:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 977,
										"nodeType": "Block",
										"src": "5356:97:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 972,
															"name": "_initializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "5374:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67",
															"id": 973,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5389:45:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															},
															"value": "Initializable: contract is not initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															}
														],
														"id": 971,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5366:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5366:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 975,
												"nodeType": "ExpressionStatement",
												"src": "5366:69:7"
											},
											{
												"id": 976,
												"nodeType": "PlaceholderStatement",
												"src": "5445:1:7"
											}
										]
									},
									"documentation": {
										"id": 969,
										"nodeType": "StructuredDocumentation",
										"src": "5124:199:7",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 978,
									"name": "onlyInitializing",
									"nameLocation": "5337:16:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5353:2:7"
									},
									"src": "5328:125:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1013,
										"nodeType": "Block",
										"src": "5988:231:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "6006:14:7",
															"subExpression": {
																"id": 983,
																"name": "_initializing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 874,
																"src": "6007:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67",
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6022:41:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															},
															"value": "Initializable: contract is initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															}
														],
														"id": 982,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5998:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5998:66:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 987,
												"nodeType": "ExpressionStatement",
												"src": "5998:66:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 988,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 871,
														"src": "6078:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 991,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6099:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 990,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "6099:5:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 989,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6094:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 992,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6094:11:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 993,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6106:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6094:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "6078:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1012,
												"nodeType": "IfStatement",
												"src": "6074:139:7",
												"trueBody": {
													"id": 1011,
													"nodeType": "Block",
													"src": "6111:102:7",
													"statements": [
														{
															"expression": {
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 995,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 871,
																	"src": "6125:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 998,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6145:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 997,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "6145:5:7",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				}
																			],
																			"id": 996,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "6140:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 999,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6140:11:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint8",
																			"typeString": "type(uint8)"
																		}
																	},
																	"id": 1000,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "6152:3:7",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "6140:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "6125:30:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1002,
															"nodeType": "ExpressionStatement",
															"src": "6125:30:7"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1006,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "6191:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					},
																					"typeName": {
																						"id": 1005,
																						"name": "uint8",
																						"nodeType": "ElementaryTypeName",
																						"src": "6191:5:7",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					}
																				],
																				"id": 1004,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "6186:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1007,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6186:11:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint8",
																				"typeString": "type(uint8)"
																			}
																		},
																		"id": 1008,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6198:3:7",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "6186:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 1003,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 879,
																	"src": "6174:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 1009,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6174:28:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1010,
															"nodeType": "EmitStatement",
															"src": "6169:33:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 979,
										"nodeType": "StructuredDocumentation",
										"src": "5459:475:7",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 1014,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "5948:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5968:2:7"
									},
									"returnParameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5988:0:7"
									},
									"scope": 1033,
									"src": "5939:280:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1022,
										"nodeType": "Block",
										"src": "6393:36:7",
										"statements": [
											{
												"expression": {
													"id": 1020,
													"name": "_initialized",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 871,
													"src": "6410:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 1019,
												"id": 1021,
												"nodeType": "Return",
												"src": "6403:19:7"
											}
										]
									},
									"documentation": {
										"id": 1015,
										"nodeType": "StructuredDocumentation",
										"src": "6225:99:7",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 1023,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "6338:22:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6360:2:7"
									},
									"returnParameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "6386:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1017,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6386:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6385:7:7"
									},
									"scope": 1033,
									"src": "6329:100:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1031,
										"nodeType": "Block",
										"src": "6601:37:7",
										"statements": [
											{
												"expression": {
													"id": 1029,
													"name": "_initializing",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 874,
													"src": "6618:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1028,
												"id": 1030,
												"nodeType": "Return",
												"src": "6611:20:7"
											}
										]
									},
									"documentation": {
										"id": 1024,
										"nodeType": "StructuredDocumentation",
										"src": "6435:105:7",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 1032,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "6554:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6569:2:7"
									},
									"returnParameters": {
										"id": 1028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "6595:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1026,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6595:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6594:6:7"
									},
									"scope": 1033,
									"src": "6545:93:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1034,
							"src": "2394:4246:7",
							"usedErrors": []
						}
					],
					"src": "113:6528:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1363
						]
					},
					"id": 1364,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1035,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AddressUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1036,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:8",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1363,
							"linearizedBaseContracts": [
								1363
							],
							"name": "AddressUpgradeable",
							"nameLocation": "202:18:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1050,
										"nodeType": "Block",
										"src": "1489:254:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1044,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1039,
																"src": "1713:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1045,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1721:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1713:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1046,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1726:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1713:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1047,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1735:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1713:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1043,
												"id": 1049,
												"nodeType": "Return",
												"src": "1706:30:8"
											}
										]
									},
									"documentation": {
										"id": 1037,
										"nodeType": "StructuredDocumentation",
										"src": "227:1191:8",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1432:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1451:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "1443:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1038,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1443:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1442:17:8"
									},
									"returnParameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "1483:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1041,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1483:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1482:6:8"
									},
									"scope": 1363,
									"src": "1423:320:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1084,
										"nodeType": "Block",
										"src": "2729:241:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1062,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2755:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1363",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1363",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 1061,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2747:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1060,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2747:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1063,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2747:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1064,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2761:7:8",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2747:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1065,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1056,
																"src": "2772:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2747:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2780:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1059,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2739:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2739:73:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1069,
												"nodeType": "ExpressionStatement",
												"src": "2739:73:8"
											},
											{
												"assignments": [
													1071,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1071,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2829:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1084,
														"src": "2824:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1070,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2824:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1078,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1076,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2872:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1072,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1054,
																"src": "2842:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2852:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2842:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1075,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1074,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1056,
																"src": "2864:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2842:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2842:33:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2823:52:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1080,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "2893:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1081,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2902:60:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1079,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2885:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2885:78:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1083,
												"nodeType": "ExpressionStatement",
												"src": "2885:78:8"
											}
										]
									},
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "1749:904:8",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1085,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2667:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2693:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "2677:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1053,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:15:8",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2712:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "2704:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2676:43:8"
									},
									"returnParameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2729:0:8"
									},
									"scope": 1363,
									"src": "2658:312:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1102,
										"nodeType": "Block",
										"src": "3801:96:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1096,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1088,
															"src": "3840:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1097,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1090,
															"src": "3848:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1098,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3854:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1099,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3857:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1095,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1143,
															1187
														],
														"referencedDeclaration": 1187,
														"src": "3818:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3818:72:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1094,
												"id": 1101,
												"nodeType": "Return",
												"src": "3811:79:8"
											}
										]
									},
									"documentation": {
										"id": 1086,
										"nodeType": "StructuredDocumentation",
										"src": "2976:731:8",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3721:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3742:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "3734:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1087,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3734:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3763:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "3750:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1089,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3750:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3733:35:8"
									},
									"returnParameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "3787:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1092,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3787:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3786:14:8"
									},
									"scope": 1363,
									"src": "3712:185:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1122,
										"nodeType": "Block",
										"src": "4266:76:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1116,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1106,
															"src": "4305:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1117,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1108,
															"src": "4313:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1118,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4319:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1119,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1110,
															"src": "4322:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1115,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1143,
															1187
														],
														"referencedDeclaration": 1187,
														"src": "4283:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4283:52:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1114,
												"id": 1121,
												"nodeType": "Return",
												"src": "4276:59:8"
											}
										]
									},
									"documentation": {
										"id": 1104,
										"nodeType": "StructuredDocumentation",
										"src": "3903:211:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4128:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4158:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "4150:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4150:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4187:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "4174:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1107,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4174:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4215:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "4201:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1109,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4201:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4140:93:8"
									},
									"returnParameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "4252:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1112,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4252:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4251:14:8"
									},
									"scope": 1363,
									"src": "4119:223:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1142,
										"nodeType": "Block",
										"src": "4817:111:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1136,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1126,
															"src": "4856:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1137,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1128,
															"src": "4864:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1138,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1130,
															"src": "4870:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4877:43:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1135,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1143,
															1187
														],
														"referencedDeclaration": 1187,
														"src": "4834:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4834:87:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1134,
												"id": 1141,
												"nodeType": "Return",
												"src": "4827:94:8"
											}
										]
									},
									"documentation": {
										"id": 1124,
										"nodeType": "StructuredDocumentation",
										"src": "4348:351:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4713:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4743:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "4735:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4735:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4764:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "4751:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1127,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4751:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4778:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "4770:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4770:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4734:50:8"
									},
									"returnParameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "4803:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1132,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4803:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4802:14:8"
									},
									"scope": 1363,
									"src": "4704:224:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1186,
										"nodeType": "Block",
										"src": "5355:267:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1160,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5381:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1363",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1363",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 1159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5373:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1158,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5373:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1161,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5373:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5387:7:8",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5373:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1163,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1150,
																"src": "5398:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5373:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1165,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5405:40:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1157,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5365:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5365:81:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1167,
												"nodeType": "ExpressionStatement",
												"src": "5365:81:8"
											},
											{
												"assignments": [
													1169,
													1171
												],
												"declarations": [
													{
														"constant": false,
														"id": 1169,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5462:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1186,
														"src": "5457:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1168,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5457:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1171,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5484:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1186,
														"src": "5471:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1170,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5471:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1178,
												"initialValue": {
													"arguments": [
														{
															"id": 1176,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1148,
															"src": "5524:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1172,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1146,
																"src": "5498:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1173,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5505:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5498:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1175,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1174,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1150,
																"src": "5517:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5498:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5498:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5456:73:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1180,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1146,
															"src": "5573:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1181,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "5581:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1182,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1171,
															"src": "5590:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1183,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1152,
															"src": "5602:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1179,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1318,
														"src": "5546:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5546:69:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1156,
												"id": 1185,
												"nodeType": "Return",
												"src": "5539:76:8"
											}
										]
									},
									"documentation": {
										"id": 1144,
										"nodeType": "StructuredDocumentation",
										"src": "4934:237:8",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5185:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5224:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "5216:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5216:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5253:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "5240:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1147,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5240:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5275:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "5267:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5267:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5304:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "5290:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1151,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5290:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5206:116:8"
									},
									"returnParameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "5341:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1154,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5341:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5340:14:8"
									},
									"scope": 1363,
									"src": "5176:446:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1203,
										"nodeType": "Block",
										"src": "5899:97:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1198,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1190,
															"src": "5935:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1199,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1192,
															"src": "5943:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1200,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5949:39:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1197,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1204,
															1233
														],
														"referencedDeclaration": 1233,
														"src": "5916:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5916:73:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1196,
												"id": 1202,
												"nodeType": "Return",
												"src": "5909:80:8"
											}
										]
									},
									"documentation": {
										"id": 1188,
										"nodeType": "StructuredDocumentation",
										"src": "5628:166:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5808:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5835:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "5827:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5827:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5856:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "5843:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1191,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5843:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5826:35:8"
									},
									"returnParameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "5885:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1194,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5885:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5884:14:8"
									},
									"scope": 1363,
									"src": "5799:197:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1232,
										"nodeType": "Block",
										"src": "6338:168:8",
										"statements": [
											{
												"assignments": [
													1217,
													1219
												],
												"declarations": [
													{
														"constant": false,
														"id": 1217,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6354:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1232,
														"src": "6349:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1216,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6349:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1219,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6376:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1232,
														"src": "6363:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1218,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6363:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1224,
												"initialValue": {
													"arguments": [
														{
															"id": 1222,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1209,
															"src": "6408:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1220,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1207,
															"src": "6390:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1221,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6397:10:8",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6390:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6348:65:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1226,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1207,
															"src": "6457:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1227,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1217,
															"src": "6465:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1228,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1219,
															"src": "6474:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1229,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1211,
															"src": "6486:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1225,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1318,
														"src": "6430:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6430:69:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1215,
												"id": 1231,
												"nodeType": "Return",
												"src": "6423:76:8"
											}
										]
									},
									"documentation": {
										"id": 1205,
										"nodeType": "StructuredDocumentation",
										"src": "6002:173:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1233,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6189:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6225:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "6217:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6217:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6254:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "6241:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1208,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6241:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6282:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "6268:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1210,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6268:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6207:93:8"
									},
									"returnParameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "6324:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1213,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6324:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6323:14:8"
									},
									"scope": 1363,
									"src": "6180:326:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1249,
										"nodeType": "Block",
										"src": "6782:101:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1244,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1236,
															"src": "6820:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1245,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1238,
															"src": "6828:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1246,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6834:41:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1243,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1250,
															1279
														],
														"referencedDeclaration": 1279,
														"src": "6799:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6799:77:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1242,
												"id": 1248,
												"nodeType": "Return",
												"src": "6792:84:8"
											}
										]
									},
									"documentation": {
										"id": 1234,
										"nodeType": "StructuredDocumentation",
										"src": "6512:168:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6694:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6723:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "6715:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6715:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6744:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "6731:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1237,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6731:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6714:35:8"
									},
									"returnParameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "6768:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1240,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6768:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6767:14:8"
									},
									"scope": 1363,
									"src": "6685:198:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1278,
										"nodeType": "Block",
										"src": "7224:170:8",
										"statements": [
											{
												"assignments": [
													1263,
													1265
												],
												"declarations": [
													{
														"constant": false,
														"id": 1263,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7240:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1278,
														"src": "7235:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1262,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7235:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1265,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7262:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1278,
														"src": "7249:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1264,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7249:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1270,
												"initialValue": {
													"arguments": [
														{
															"id": 1268,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1255,
															"src": "7296:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1266,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1253,
															"src": "7276:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1267,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7283:12:8",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7276:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7276:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7234:67:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1272,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1253,
															"src": "7345:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1273,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1263,
															"src": "7353:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1274,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1265,
															"src": "7362:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1275,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1257,
															"src": "7374:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1271,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1318,
														"src": "7318:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7318:69:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1261,
												"id": 1277,
												"nodeType": "Return",
												"src": "7311:76:8"
											}
										]
									},
									"documentation": {
										"id": 1251,
										"nodeType": "StructuredDocumentation",
										"src": "6889:175:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1279,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7078:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7116:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "7108:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7145:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "7132:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1254,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7132:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7173:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "7159:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1256,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7159:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7098:93:8"
									},
									"returnParameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "7210:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1259,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7210:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7209:14:8"
									},
									"scope": 1363,
									"src": "7069:325:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1317,
										"nodeType": "Block",
										"src": "7876:434:8",
										"statements": [
											{
												"condition": {
													"id": 1293,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1284,
													"src": "7890:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1315,
													"nodeType": "Block",
													"src": "8246:58:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1311,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1286,
																		"src": "8268:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1312,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1288,
																		"src": "8280:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1310,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1362,
																	"src": "8260:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1313,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8260:33:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1314,
															"nodeType": "ExpressionStatement",
															"src": "8260:33:8"
														}
													]
												},
												"id": 1316,
												"nodeType": "IfStatement",
												"src": "7886:418:8",
												"trueBody": {
													"id": 1309,
													"nodeType": "Block",
													"src": "7899:341:8",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1294,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1286,
																		"src": "7917:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7928:6:8",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7917:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7938:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7917:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1306,
															"nodeType": "IfStatement",
															"src": "7913:286:8",
															"trueBody": {
																"id": 1305,
																"nodeType": "Block",
																"src": "7941:258:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1300,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1282,
																							"src": "8143:6:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1299,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1051,
																						"src": "8132:10:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 1301,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8132:18:8",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 1302,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8152:31:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 1298,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8124:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1303,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8124:60:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1304,
																		"nodeType": "ExpressionStatement",
																		"src": "8124:60:8"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1307,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1286,
																"src": "8219:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1292,
															"id": 1308,
															"nodeType": "Return",
															"src": "8212:17:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1280,
										"nodeType": "StructuredDocumentation",
										"src": "7400:277:8",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 1318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7691:26:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7735:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "7727:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7727:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7756:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "7751:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1283,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7751:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7786:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "7773:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1285,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7773:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7820:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "7806:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1287,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7806:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7717:121:8"
									},
									"returnParameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "7862:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1290,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7862:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7861:14:8"
									},
									"scope": 1363,
									"src": "7682:628:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1341,
										"nodeType": "Block",
										"src": "8691:135:8",
										"statements": [
											{
												"condition": {
													"id": 1330,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1321,
													"src": "8705:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1339,
													"nodeType": "Block",
													"src": "8762:58:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1335,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1323,
																		"src": "8784:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1336,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1325,
																		"src": "8796:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1334,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1362,
																	"src": "8776:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1337,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8776:33:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1338,
															"nodeType": "ExpressionStatement",
															"src": "8776:33:8"
														}
													]
												},
												"id": 1340,
												"nodeType": "IfStatement",
												"src": "8701:119:8",
												"trueBody": {
													"id": 1333,
													"nodeType": "Block",
													"src": "8714:42:8",
													"statements": [
														{
															"expression": {
																"id": 1331,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1323,
																"src": "8735:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1329,
															"id": 1332,
															"nodeType": "Return",
															"src": "8728:17:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1319,
										"nodeType": "StructuredDocumentation",
										"src": "8316:210:8",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 1342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8540:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8571:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "8566:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1320,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8566:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8601:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "8588:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1322,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8588:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8635:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "8621:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1324,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8621:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8556:97:8"
									},
									"returnParameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "8677:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1327,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8677:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8676:14:8"
									},
									"scope": 1363,
									"src": "8531:295:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1361,
										"nodeType": "Block",
										"src": "8915:457:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1349,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1344,
															"src": "8991:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1350,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9002:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8991:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1351,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9011:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8991:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1359,
													"nodeType": "Block",
													"src": "9321:45:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1356,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1346,
																		"src": "9342:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1355,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9335:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1357,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9335:20:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1358,
															"nodeType": "ExpressionStatement",
															"src": "9335:20:8"
														}
													]
												},
												"id": 1360,
												"nodeType": "IfStatement",
												"src": "8987:379:8",
												"trueBody": {
													"id": 1354,
													"nodeType": "Block",
													"src": "9014:301:8",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "9172:133:8",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9190:40:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9219:10:8"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "9213:5:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9213:17:8"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "9194:15:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9258:2:8",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9262:10:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9254:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9254:19:8"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9275:15:8"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9247:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9247:44:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9247:44:8"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 1344,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9219:10:8",
																	"valueSize": 1
																},
																{
																	"declaration": 1344,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9262:10:8",
																	"valueSize": 1
																}
															],
															"id": 1353,
															"nodeType": "InlineAssembly",
															"src": "9163:142:8"
														}
													]
												}
											}
										]
									},
									"id": 1362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8841:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8862:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "8849:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1343,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8849:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8888:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "8874:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1345,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8874:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8848:53:8"
									},
									"returnParameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8915:0:8"
									},
									"scope": 1363,
									"src": "8832:540:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1364,
							"src": "194:9180:8",
							"usedErrors": []
						}
					],
					"src": "101:9274:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1363
						],
						"ContextUpgradeable": [
							1405
						],
						"Initializable": [
							1033
						]
					},
					"id": 1406,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1365,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 1366,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1406,
							"sourceUnit": 1034,
							"src": "110:42:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1368,
										"name": "Initializable",
										"nameLocations": [
											"691:13:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1033,
										"src": "691:13:9"
									},
									"id": 1369,
									"nodeType": "InheritanceSpecifier",
									"src": "691:13:9"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1367,
								"nodeType": "StructuredDocumentation",
								"src": "154:496:9",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1405,
							"linearizedBaseContracts": [
								1405,
								1033
							],
							"name": "ContextUpgradeable",
							"nameLocation": "669:18:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1374,
										"nodeType": "Block",
										"src": "763:7:9",
										"statements": []
									},
									"id": 1375,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1372,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1371,
												"name": "onlyInitializing",
												"nameLocations": [
													"746:16:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 978,
												"src": "746:16:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "746:16:9"
										}
									],
									"name": "__Context_init",
									"nameLocation": "720:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "734:2:9"
									},
									"returnParameters": {
										"id": 1373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "763:0:9"
									},
									"scope": 1405,
									"src": "711:59:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1380,
										"nodeType": "Block",
										"src": "838:7:9",
										"statements": []
									},
									"id": 1381,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1378,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1377,
												"name": "onlyInitializing",
												"nameLocations": [
													"821:16:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 978,
												"src": "821:16:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "821:16:9"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "785:24:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "809:2:9"
									},
									"returnParameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "838:0:9"
									},
									"scope": 1405,
									"src": "776:69:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1389,
										"nodeType": "Block",
										"src": "912:34:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1386,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "929:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "933:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "929:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1385,
												"id": 1388,
												"nodeType": "Return",
												"src": "922:17:9"
											}
										]
									},
									"id": 1390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "859:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "869:2:9"
									},
									"returnParameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "903:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "903:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "902:9:9"
									},
									"scope": 1405,
									"src": "850:96:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1398,
										"nodeType": "Block",
										"src": "1019:32:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1395,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1036:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1040:4:9",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1036:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1394,
												"id": 1397,
												"nodeType": "Return",
												"src": "1029:15:9"
											}
										]
									},
									"id": 1399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "961:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "969:2:9"
									},
									"returnParameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "1003:14:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1392,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1003:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1002:16:9"
									},
									"scope": 1405,
									"src": "952:99:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1400,
										"nodeType": "StructuredDocumentation",
										"src": "1057:254:9",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 1404,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "1336:5:9",
									"nodeType": "VariableDeclaration",
									"scope": 1405,
									"src": "1316:25:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 1401,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1316:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1403,
										"length": {
											"hexValue": "3530",
											"id": 1402,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1324:2:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1316:11:9",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 1406,
							"src": "651:693:9",
							"usedErrors": []
						}
					],
					"src": "86:1259:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
					"exportedSymbols": {
						"MathUpgradeable": [
							2556
						],
						"SignedMathUpgradeable": [
							2661
						],
						"StringsUpgradeable": [
							1634
						]
					},
					"id": 1635,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1407,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
							"file": "./math/MathUpgradeable.sol",
							"id": 1408,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1635,
							"sourceUnit": 2557,
							"src": "126:36:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
							"file": "./math/SignedMathUpgradeable.sol",
							"id": 1409,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1635,
							"sourceUnit": 2662,
							"src": "163:42:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StringsUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1410,
								"nodeType": "StructuredDocumentation",
								"src": "207:34:10",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1634,
							"linearizedBaseContracts": [
								1634
							],
							"name": "StringsUpgradeable",
							"nameLocation": "250:18:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1413,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "300:8:10",
									"nodeType": "VariableDeclaration",
									"scope": 1634,
									"src": "275:54:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1411,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "275:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1412,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:10",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1416,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "358:15:10",
									"nodeType": "VariableDeclaration",
									"scope": 1634,
									"src": "335:43:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1414,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1415,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "376:2:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1463,
										"nodeType": "Block",
										"src": "551:636:10",
										"statements": [
											{
												"id": 1462,
												"nodeType": "UncheckedBlock",
												"src": "561:620:10",
												"statements": [
													{
														"assignments": [
															1425
														],
														"declarations": [
															{
																"constant": false,
																"id": 1425,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "593:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 1462,
																"src": "585:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1424,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "585:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1432,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1428,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1419,
																		"src": "624:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1426,
																		"name": "MathUpgradeable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2556,
																		"src": "602:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_MathUpgradeable_$2556_$",
																			"typeString": "type(library MathUpgradeable)"
																		}
																	},
																	"id": 1427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "618:5:10",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2393,
																	"src": "602:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "602:28:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1430,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "633:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "602:32:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "585:49:10"
													},
													{
														"assignments": [
															1434
														],
														"declarations": [
															{
																"constant": false,
																"id": 1434,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "662:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 1462,
																"src": "648:20:10",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1433,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "648:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1439,
														"initialValue": {
															"arguments": [
																{
																	"id": 1437,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1425,
																	"src": "682:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1436,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "671:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1435,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "675:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "671:18:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "648:41:10"
													},
													{
														"assignments": [
															1441
														],
														"declarations": [
															{
																"constant": false,
																"id": 1441,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "711:3:10",
																"nodeType": "VariableDeclaration",
																"scope": 1462,
																"src": "703:11:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1440,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "703:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1442,
														"nodeType": "VariableDeclarationStatement",
														"src": "703:11:10"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "784:67:10",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "802:35:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "813:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "825:2:10",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "829:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "821:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "821:15:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "809:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "809:28:10"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "802:3:10"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 1434,
																"isOffset": false,
																"isSlot": false,
																"src": "813:6:10",
																"valueSize": 1
															},
															{
																"declaration": 1425,
																"isOffset": false,
																"isSlot": false,
																"src": "829:6:10",
																"valueSize": 1
															},
															{
																"declaration": 1441,
																"isOffset": false,
																"isSlot": false,
																"src": "802:3:10",
																"valueSize": 1
															}
														],
														"id": 1443,
														"nodeType": "InlineAssembly",
														"src": "775:76:10"
													},
													{
														"body": {
															"id": 1458,
															"nodeType": "Block",
															"src": "877:267:10",
															"statements": [
																{
																	"expression": {
																		"id": 1446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "895:5:10",
																		"subExpression": {
																			"id": 1445,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1441,
																			"src": "895:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1447,
																	"nodeType": "ExpressionStatement",
																	"src": "895:5:10"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "978:84:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "1008:3:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "1022:5:10"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "1029:2:10",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "1018:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1018:14:10"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nodeType": "YulIdentifier",
																									"src": "1034:8:10"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "1013:4:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1013:30:10"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "1000:7:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1000:44:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1000:44:10"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "london",
																	"externalReferences": [
																		{
																			"declaration": 1413,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1034:8:10",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1441,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1008:3:10",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1419,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1022:5:10",
																			"valueSize": 1
																		}
																	],
																	"id": 1448,
																	"nodeType": "InlineAssembly",
																	"src": "969:93:10"
																},
																{
																	"expression": {
																		"id": 1451,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1449,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1419,
																			"src": "1079:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1450,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1088:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1079:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1452,
																	"nodeType": "ExpressionStatement",
																	"src": "1079:11:10"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1453,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1419,
																			"src": "1112:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1454,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1121:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1112:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1457,
																	"nodeType": "IfStatement",
																	"src": "1108:21:10",
																	"trueBody": {
																		"id": 1456,
																		"nodeType": "Break",
																		"src": "1124:5:10"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1444,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "871:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1459,
														"nodeType": "WhileStatement",
														"src": "864:280:10"
													},
													{
														"expression": {
															"id": 1460,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1434,
															"src": "1164:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1423,
														"id": 1461,
														"nodeType": "Return",
														"src": "1157:13:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1417,
										"nodeType": "StructuredDocumentation",
										"src": "385:90:10",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "489:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "506:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "498:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "498:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "497:15:10"
									},
									"returnParameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "536:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1421,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "536:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "535:15:10"
									},
									"scope": 1634,
									"src": "480:707:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1491,
										"nodeType": "Block",
										"src": "1357:114:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1476,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1467,
																			"src": "1398:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1477,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1406:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1398:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"hexValue": "",
																		"id": 1480,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1416:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	},
																	"id": 1481,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1398:20:10",
																	"trueExpression": {
																		"hexValue": "2d",
																		"id": 1479,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1410:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																			"typeString": "literal_string \"-\""
																		},
																		"value": "-"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1485,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1467,
																					"src": "1455:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"expression": {
																					"id": 1483,
																					"name": "SignedMathUpgradeable",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2661,
																					"src": "1429:21:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SignedMathUpgradeable_$2661_$",
																						"typeString": "type(library SignedMathUpgradeable)"
																					}
																				},
																				"id": 1484,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1451:3:10",
																				"memberName": "abs",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2660,
																				"src": "1429:25:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																					"typeString": "function (int256) pure returns (uint256)"
																				}
																			},
																			"id": 1486,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1429:32:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1482,
																		"name": "toString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1464,
																			1492
																		],
																		"referencedDeclaration": 1464,
																		"src": "1420:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 1487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1420:42:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 1474,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1381:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1475,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1385:12:10",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1381:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1381:82:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1473,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1374:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1472,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1374:6:10",
															"typeDescriptions": {}
														}
													},
													"id": 1489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1374:90:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1471,
												"id": 1490,
												"nodeType": "Return",
												"src": "1367:97:10"
											}
										]
									},
									"documentation": {
										"id": 1465,
										"nodeType": "StructuredDocumentation",
										"src": "1193:89:10",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1492,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "1296:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1467,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1312:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1492,
												"src": "1305:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1466,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1305:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1304:14:10"
									},
									"returnParameters": {
										"id": 1471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1492,
												"src": "1342:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1469,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1342:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1341:15:10"
									},
									"scope": 1634,
									"src": "1287:184:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1511,
										"nodeType": "Block",
										"src": "1650:111:10",
										"statements": [
											{
												"id": 1510,
												"nodeType": "UncheckedBlock",
												"src": "1660:95:10",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1501,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1495,
																	"src": "1703:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1507,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1504,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1495,
																				"src": "1733:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1502,
																				"name": "MathUpgradeable",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2556,
																				"src": "1710:15:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_MathUpgradeable_$2556_$",
																					"typeString": "type(library MathUpgradeable)"
																				}
																			},
																			"id": 1503,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1726:6:10",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2516,
																			"src": "1710:22:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1505,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1710:29:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1506,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1742:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1710:33:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1500,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1512,
																	1588,
																	1608
																],
																"referencedDeclaration": 1588,
																"src": "1691:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1691:53:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1499,
														"id": 1509,
														"nodeType": "Return",
														"src": "1684:60:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1493,
										"nodeType": "StructuredDocumentation",
										"src": "1477:94:10",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1585:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1495,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1605:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "1597:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1597:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1596:15:10"
									},
									"returnParameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "1635:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1497,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1635:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1634:15:10"
									},
									"scope": 1634,
									"src": "1576:185:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1587,
										"nodeType": "Block",
										"src": "1974:347:10",
										"statements": [
											{
												"assignments": [
													1523
												],
												"declarations": [
													{
														"constant": false,
														"id": 1523,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1997:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1587,
														"src": "1984:19:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1522,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1984:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1532,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1528,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2016:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1527,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1517,
																	"src": "2020:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2016:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1529,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2029:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2016:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1525,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2006:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1524,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2010:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2006:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1984:47:10"
											},
											{
												"expression": {
													"id": 1537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1533,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1523,
															"src": "2041:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1535,
														"indexExpression": {
															"hexValue": "30",
															"id": 1534,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2048:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2041:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1536,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2053:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2041:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1538,
												"nodeType": "ExpressionStatement",
												"src": "2041:15:10"
											},
											{
												"expression": {
													"id": 1543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1539,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1523,
															"src": "2066:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1541,
														"indexExpression": {
															"hexValue": "31",
															"id": 1540,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2073:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2066:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1542,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2078:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2066:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1544,
												"nodeType": "ExpressionStatement",
												"src": "2066:15:10"
											},
											{
												"body": {
													"id": 1573,
													"nodeType": "Block",
													"src": "2136:83:10",
													"statements": [
														{
															"expression": {
																"id": 1567,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1559,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1523,
																		"src": "2150:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1561,
																	"indexExpression": {
																		"id": 1560,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1546,
																		"src": "2157:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2150:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1562,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1413,
																		"src": "2162:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1566,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1565,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1563,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1515,
																			"src": "2171:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1564,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2179:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2171:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2162:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2150:33:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1568,
															"nodeType": "ExpressionStatement",
															"src": "2150:33:10"
														},
														{
															"expression": {
																"id": 1571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1569,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1515,
																	"src": "2197:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2207:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2197:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1572,
															"nodeType": "ExpressionStatement",
															"src": "2197:11:10"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1553,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1546,
														"src": "2124:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1554,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2128:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2124:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1574,
												"initializationExpression": {
													"assignments": [
														1546
													],
													"declarations": [
														{
															"constant": false,
															"id": 1546,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2104:1:10",
															"nodeType": "VariableDeclaration",
															"scope": 1574,
															"src": "2096:9:10",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1545,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2096:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1552,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1551,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1547,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2108:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1548,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1517,
																"src": "2112:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2108:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1550,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2121:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2108:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2096:26:10"
												},
												"loopExpression": {
													"expression": {
														"id": 1557,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2131:3:10",
														"subExpression": {
															"id": 1556,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1546,
															"src": "2133:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1558,
													"nodeType": "ExpressionStatement",
													"src": "2131:3:10"
												},
												"nodeType": "ForStatement",
												"src": "2091:128:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1576,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1515,
																"src": "2236:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1577,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2245:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 1579,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2248:34:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 1575,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2228:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2228:55:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1581,
												"nodeType": "ExpressionStatement",
												"src": "2228:55:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1584,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1523,
															"src": "2307:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1583,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2300:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1582,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2300:6:10",
															"typeDescriptions": {}
														}
													},
													"id": 1585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2300:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1521,
												"id": 1586,
												"nodeType": "Return",
												"src": "2293:21:10"
											}
										]
									},
									"documentation": {
										"id": 1513,
										"nodeType": "StructuredDocumentation",
										"src": "1767:112:10",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1588,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1893:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1913:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1588,
												"src": "1905:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1905:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1928:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1588,
												"src": "1920:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1920:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1904:31:10"
									},
									"returnParameters": {
										"id": 1521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1520,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1588,
												"src": "1959:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1519,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1959:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1958:15:10"
									},
									"scope": 1634,
									"src": "1884:437:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1607,
										"nodeType": "Block",
										"src": "2546:76:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1601,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1591,
																			"src": "2591:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2583:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1599,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2583:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2583:13:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1598,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2575:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1597,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2575:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2575:22:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1604,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1416,
															"src": "2599:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1596,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1512,
															1588,
															1608
														],
														"referencedDeclaration": 1588,
														"src": "2563:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2563:52:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1595,
												"id": 1606,
												"nodeType": "Return",
												"src": "2556:59:10"
											}
										]
									},
									"documentation": {
										"id": 1589,
										"nodeType": "StructuredDocumentation",
										"src": "2327:141:10",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 1608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2482:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1591,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2502:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "2494:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2494:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2493:14:10"
									},
									"returnParameters": {
										"id": 1595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "2531:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1593,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2531:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2530:15:10"
									},
									"scope": 1634,
									"src": "2473:149:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1632,
										"nodeType": "Block",
										"src": "2777:66:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 1630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1621,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1611,
																		"src": "2810:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2804:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1619,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2804:5:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2804:8:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1618,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2794:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1623,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2794:19:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1627,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1613,
																		"src": "2833:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2827:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1625,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2827:5:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2827:8:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1624,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2817:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1629,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2817:19:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2794:42:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1617,
												"id": 1631,
												"nodeType": "Return",
												"src": "2787:49:10"
											}
										]
									},
									"documentation": {
										"id": 1609,
										"nodeType": "StructuredDocumentation",
										"src": "2628:66:10",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2708:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2728:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "2714:15:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1610,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2714:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1613,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2745:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "2731:15:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1612,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2731:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2713:34:10"
									},
									"returnParameters": {
										"id": 1617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1616,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "2771:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1615,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:10"
									},
									"scope": 1634,
									"src": "2699:144:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1635,
							"src": "242:2603:10",
							"usedErrors": []
						}
					],
					"src": "101:2745:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1363
						],
						"ERC165Upgradeable": [
							1678
						],
						"IERC165Upgradeable": [
							1690
						],
						"Initializable": [
							1033
						]
					},
					"id": 1679,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1636,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
							"file": "./IERC165Upgradeable.sol",
							"id": 1637,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1679,
							"sourceUnit": 1691,
							"src": "124:34:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../../proxy/utils/Initializable.sol",
							"id": 1638,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1679,
							"sourceUnit": 1034,
							"src": "159:45:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1640,
										"name": "Initializable",
										"nameLocations": [
											"822:13:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1033,
										"src": "822:13:11"
									},
									"id": 1641,
									"nodeType": "InheritanceSpecifier",
									"src": "822:13:11"
								},
								{
									"baseName": {
										"id": 1642,
										"name": "IERC165Upgradeable",
										"nameLocations": [
											"837:18:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1690,
										"src": "837:18:11"
									},
									"id": 1643,
									"nodeType": "InheritanceSpecifier",
									"src": "837:18:11"
								}
							],
							"canonicalName": "ERC165Upgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1639,
								"nodeType": "StructuredDocumentation",
								"src": "206:576:11",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1678,
							"linearizedBaseContracts": [
								1678,
								1690,
								1033
							],
							"name": "ERC165Upgradeable",
							"nameLocation": "801:17:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1648,
										"nodeType": "Block",
										"src": "913:7:11",
										"statements": []
									},
									"id": 1649,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1646,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1645,
												"name": "onlyInitializing",
												"nameLocations": [
													"896:16:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 978,
												"src": "896:16:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "896:16:11"
										}
									],
									"name": "__ERC165_init",
									"nameLocation": "871:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1644,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "884:2:11"
									},
									"returnParameters": {
										"id": 1647,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "913:0:11"
									},
									"scope": 1678,
									"src": "862:58:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1654,
										"nodeType": "Block",
										"src": "987:7:11",
										"statements": []
									},
									"id": 1655,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1652,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1651,
												"name": "onlyInitializing",
												"nameLocations": [
													"970:16:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 978,
												"src": "970:16:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "970:16:11"
										}
									],
									"name": "__ERC165_init_unchained",
									"nameLocation": "935:23:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1650,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "958:2:11"
									},
									"returnParameters": {
										"id": 1653,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "987:0:11"
									},
									"scope": 1678,
									"src": "926:68:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1689
									],
									"body": {
										"id": 1671,
										"nodeType": "Block",
										"src": "1151:75:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1664,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1658,
														"src": "1168:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1666,
																	"name": "IERC165Upgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1690,
																	"src": "1188:18:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165Upgradeable_$1690_$",
																		"typeString": "type(contract IERC165Upgradeable)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165Upgradeable_$1690_$",
																		"typeString": "type(contract IERC165Upgradeable)"
																	}
																],
																"id": 1665,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "1183:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1183:24:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165Upgradeable_$1690",
																"typeString": "type(contract IERC165Upgradeable)"
															}
														},
														"id": 1668,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1208:11:11",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "1183:36:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "1168:51:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1663,
												"id": 1670,
												"nodeType": "Return",
												"src": "1161:58:11"
											}
										]
									},
									"documentation": {
										"id": 1656,
										"nodeType": "StructuredDocumentation",
										"src": "999:56:11",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1069:17:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1660,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1127:8:11"
									},
									"parameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1658,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1094:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "1087:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1657,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1087:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1086:20:11"
									},
									"returnParameters": {
										"id": 1663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1662,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "1145:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1661,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1145:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1144:6:11"
									},
									"scope": 1678,
									"src": "1060:166:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1673,
										"nodeType": "StructuredDocumentation",
										"src": "1232:254:11",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 1677,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "1511:5:11",
									"nodeType": "VariableDeclaration",
									"scope": 1678,
									"src": "1491:25:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 1674,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1491:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1676,
										"length": {
											"hexValue": "3530",
											"id": 1675,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1499:2:11",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1491:11:11",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 1679,
							"src": "783:736:11",
							"usedErrors": []
						}
					],
					"src": "99:1421:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
					"exportedSymbols": {
						"IERC165Upgradeable": [
							1690
						]
					},
					"id": 1691,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1680,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1681,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:12",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1690,
							"linearizedBaseContracts": [
								1690
							],
							"name": "IERC165Upgradeable",
							"nameLocation": "415:18:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1682,
										"nodeType": "StructuredDocumentation",
										"src": "440:340:12",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1689,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "794:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1684,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "819:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "812:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1683,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "812:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "811:20:12"
									},
									"returnParameters": {
										"id": 1688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1687,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "855:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1686,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "855:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "854:6:12"
									},
									"scope": 1690,
									"src": "785:76:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1691,
							"src": "405:458:12",
							"usedErrors": []
						}
					],
					"src": "100:764:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
					"exportedSymbols": {
						"MathUpgradeable": [
							2556
						]
					},
					"id": 2557,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1692,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MathUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1693,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:13",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2556,
							"linearizedBaseContracts": [
								2556
							],
							"name": "MathUpgradeable",
							"nameLocation": "210:15:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "MathUpgradeable.Rounding",
									"id": 1697,
									"members": [
										{
											"id": 1694,
											"name": "Down",
											"nameLocation": "256:4:13",
											"nodeType": "EnumValue",
											"src": "256:4:13"
										},
										{
											"id": 1695,
											"name": "Up",
											"nameLocation": "298:2:13",
											"nodeType": "EnumValue",
											"src": "298:2:13"
										},
										{
											"id": 1696,
											"name": "Zero",
											"nameLocation": "329:4:13",
											"nodeType": "EnumValue",
											"src": "329:4:13"
										}
									],
									"name": "Rounding",
									"nameLocation": "237:8:13",
									"nodeType": "EnumDefinition",
									"src": "232:122:13"
								},
								{
									"body": {
										"id": 1714,
										"nodeType": "Block",
										"src": "491:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1709,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1707,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1700,
															"src": "508:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1708,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1702,
															"src": "512:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "508:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1711,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1702,
														"src": "520:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "508:13:13",
													"trueExpression": {
														"id": 1710,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1700,
														"src": "516:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1706,
												"id": 1713,
												"nodeType": "Return",
												"src": "501:20:13"
											}
										]
									},
									"documentation": {
										"id": 1698,
										"nodeType": "StructuredDocumentation",
										"src": "360:59:13",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1715,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "433:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "445:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1715,
												"src": "437:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "456:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1715,
												"src": "448:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "436:22:13"
									},
									"returnParameters": {
										"id": 1706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1715,
												"src": "482:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "482:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "481:9:13"
									},
									"scope": 2556,
									"src": "424:104:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1732,
										"nodeType": "Block",
										"src": "666:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1727,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1725,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1718,
															"src": "683:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1726,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1720,
															"src": "687:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "683:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1729,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1720,
														"src": "695:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "683:13:13",
													"trueExpression": {
														"id": 1728,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1718,
														"src": "691:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1724,
												"id": 1731,
												"nodeType": "Return",
												"src": "676:20:13"
											}
										]
									},
									"documentation": {
										"id": 1716,
										"nodeType": "StructuredDocumentation",
										"src": "534:60:13",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1733,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "608:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1718,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "620:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "612:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "631:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "623:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "623:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "611:22:13"
									},
									"returnParameters": {
										"id": 1724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1723,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "657:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:9:13"
									},
									"scope": 2556,
									"src": "599:104:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1755,
										"nodeType": "Block",
										"src": "887:82:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1743,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1736,
																	"src": "942:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1744,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1738,
																	"src": "946:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "942:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1746,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "941:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1752,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1749,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1747,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1736,
																		"src": "952:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1748,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1738,
																		"src": "956:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "952:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1750,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "951:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1751,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "961:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "951:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "941:21:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1742,
												"id": 1754,
												"nodeType": "Return",
												"src": "934:28:13"
											}
										]
									},
									"documentation": {
										"id": 1734,
										"nodeType": "StructuredDocumentation",
										"src": "709:102:13",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1756,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "825:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "841:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1756,
												"src": "833:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1738,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "852:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1756,
												"src": "844:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "844:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "832:22:13"
									},
									"returnParameters": {
										"id": 1742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1756,
												"src": "878:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:9:13"
									},
									"scope": 2556,
									"src": "816:153:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1780,
										"nodeType": "Block",
										"src": "1239:123:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1768,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1766,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1759,
															"src": "1327:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1767,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1332:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1327:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1777,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1772,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1770,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1759,
																			"src": "1341:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1771,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1345:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1341:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1773,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1340:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1774,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1761,
																"src": "1350:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1340:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1776,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1354:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1340:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1327:28:13",
													"trueExpression": {
														"hexValue": "30",
														"id": 1769,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1336:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1765,
												"id": 1779,
												"nodeType": "Return",
												"src": "1320:35:13"
											}
										]
									},
									"documentation": {
										"id": 1757,
										"nodeType": "StructuredDocumentation",
										"src": "975:188:13",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 1781,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1177:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1193:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1781,
												"src": "1185:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1761,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1204:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1781,
												"src": "1196:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1196:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1184:22:13"
									},
									"returnParameters": {
										"id": 1765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1781,
												"src": "1230:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1230:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1229:9:13"
									},
									"scope": 2556,
									"src": "1168:194:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1903,
										"nodeType": "Block",
										"src": "1776:4115:13",
										"statements": [
											{
												"id": 1902,
												"nodeType": "UncheckedBlock",
												"src": "1786:4099:13",
												"statements": [
													{
														"assignments": [
															1794
														],
														"declarations": [
															{
																"constant": false,
																"id": 1794,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2115:5:13",
																"nodeType": "VariableDeclaration",
																"scope": 1902,
																"src": "2107:13:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1793,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2107:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1795,
														"nodeType": "VariableDeclarationStatement",
														"src": "2107:13:13"
													},
													{
														"assignments": [
															1797
														],
														"declarations": [
															{
																"constant": false,
																"id": 1797,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2187:5:13",
																"nodeType": "VariableDeclaration",
																"scope": 1902,
																"src": "2179:13:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1796,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2179:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1798,
														"nodeType": "VariableDeclarationStatement",
														"src": "2179:13:13"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "2259:157:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2277:30:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2294:1:13"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2297:1:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2304:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2300:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2300:6:13"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "2287:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2287:20:13"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "2281:2:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2324:18:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2337:1:13"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2340:1:13"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "2333:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2333:9:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "2324:5:13"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2359:43:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2376:2:13"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2380:5:13"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2372:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2372:14:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2391:2:13"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2395:5:13"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2388:2:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2388:13:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2368:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2368:34:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "2359:5:13"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 1794,
																"isOffset": false,
																"isSlot": false,
																"src": "2324:5:13",
																"valueSize": 1
															},
															{
																"declaration": 1794,
																"isOffset": false,
																"isSlot": false,
																"src": "2380:5:13",
																"valueSize": 1
															},
															{
																"declaration": 1794,
																"isOffset": false,
																"isSlot": false,
																"src": "2395:5:13",
																"valueSize": 1
															},
															{
																"declaration": 1797,
																"isOffset": false,
																"isSlot": false,
																"src": "2359:5:13",
																"valueSize": 1
															},
															{
																"declaration": 1784,
																"isOffset": false,
																"isSlot": false,
																"src": "2294:1:13",
																"valueSize": 1
															},
															{
																"declaration": 1784,
																"isOffset": false,
																"isSlot": false,
																"src": "2337:1:13",
																"valueSize": 1
															},
															{
																"declaration": 1786,
																"isOffset": false,
																"isSlot": false,
																"src": "2297:1:13",
																"valueSize": 1
															},
															{
																"declaration": 1786,
																"isOffset": false,
																"isSlot": false,
																"src": "2340:1:13",
																"valueSize": 1
															}
														],
														"id": 1799,
														"nodeType": "InlineAssembly",
														"src": "2250:166:13"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1800,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1797,
																"src": "2497:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1801,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2506:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2497:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1808,
														"nodeType": "IfStatement",
														"src": "2493:368:13",
														"trueBody": {
															"id": 1807,
															"nodeType": "Block",
															"src": "2509:352:13",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1805,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1803,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1794,
																			"src": "2827:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1804,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1788,
																			"src": "2835:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2827:19:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1792,
																	"id": 1806,
																	"nodeType": "Return",
																	"src": "2820:26:13"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1810,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1788,
																		"src": "2971:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 1811,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1797,
																		"src": "2985:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2971:19:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "4d6174683a206d756c446976206f766572666c6f77",
																	"id": 1813,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2992:23:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	},
																	"value": "Math: mulDiv overflow"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	}
																],
																"id": 1809,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2963:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1814,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2963:53:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1815,
														"nodeType": "ExpressionStatement",
														"src": "2963:53:13"
													},
													{
														"assignments": [
															1817
														],
														"declarations": [
															{
																"constant": false,
																"id": 1817,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "3280:9:13",
																"nodeType": "VariableDeclaration",
																"scope": 1902,
																"src": "3272:17:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1816,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3272:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1818,
														"nodeType": "VariableDeclarationStatement",
														"src": "3272:17:13"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3312:291:13",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3381:38:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "3401:1:13"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3404:1:13"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3407:11:13"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "3394:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3394:25:13"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "3381:9:13"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3501:41:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "3514:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "3524:9:13"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "3535:5:13"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "3521:2:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3521:20:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3510:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3510:32:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "3501:5:13"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3559:30:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3572:5:13"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "3579:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3568:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3568:21:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3559:5:13"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 1788,
																"isOffset": false,
																"isSlot": false,
																"src": "3407:11:13",
																"valueSize": 1
															},
															{
																"declaration": 1794,
																"isOffset": false,
																"isSlot": false,
																"src": "3535:5:13",
																"valueSize": 1
															},
															{
																"declaration": 1794,
																"isOffset": false,
																"isSlot": false,
																"src": "3559:5:13",
																"valueSize": 1
															},
															{
																"declaration": 1794,
																"isOffset": false,
																"isSlot": false,
																"src": "3572:5:13",
																"valueSize": 1
															},
															{
																"declaration": 1797,
																"isOffset": false,
																"isSlot": false,
																"src": "3501:5:13",
																"valueSize": 1
															},
															{
																"declaration": 1797,
																"isOffset": false,
																"isSlot": false,
																"src": "3514:5:13",
																"valueSize": 1
															},
															{
																"declaration": 1817,
																"isOffset": false,
																"isSlot": false,
																"src": "3381:9:13",
																"valueSize": 1
															},
															{
																"declaration": 1817,
																"isOffset": false,
																"isSlot": false,
																"src": "3524:9:13",
																"valueSize": 1
															},
															{
																"declaration": 1817,
																"isOffset": false,
																"isSlot": false,
																"src": "3579:9:13",
																"valueSize": 1
															},
															{
																"declaration": 1784,
																"isOffset": false,
																"isSlot": false,
																"src": "3401:1:13",
																"valueSize": 1
															},
															{
																"declaration": 1786,
																"isOffset": false,
																"isSlot": false,
																"src": "3404:1:13",
																"valueSize": 1
															}
														],
														"id": 1819,
														"nodeType": "InlineAssembly",
														"src": "3303:300:13"
													},
													{
														"assignments": [
															1821
														],
														"declarations": [
															{
																"constant": false,
																"id": 1821,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3918:4:13",
																"nodeType": "VariableDeclaration",
																"scope": 1902,
																"src": "3910:12:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1820,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3910:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1829,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1822,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1788,
																"src": "3925:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1826,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1824,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3940:12:13",
																			"subExpression": {
																				"id": 1823,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1788,
																				"src": "3941:11:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1825,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3955:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3940:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1827,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3939:18:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3925:32:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3910:47:13"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3980:362:13",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "4045:37:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "4064:11:13"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "4077:4:13"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "4060:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4060:22:13"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "4045:11:13"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4149:25:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "4162:5:13"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "4169:4:13"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "4158:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4158:16:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "4149:5:13"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4289:39:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4309:1:13",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "4312:4:13"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "4305:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4305:12:13"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "4319:4:13"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4301:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4301:23:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4326:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4297:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4297:31:13"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "4289:4:13"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 1788,
																"isOffset": false,
																"isSlot": false,
																"src": "4045:11:13",
																"valueSize": 1
															},
															{
																"declaration": 1788,
																"isOffset": false,
																"isSlot": false,
																"src": "4064:11:13",
																"valueSize": 1
															},
															{
																"declaration": 1794,
																"isOffset": false,
																"isSlot": false,
																"src": "4149:5:13",
																"valueSize": 1
															},
															{
																"declaration": 1794,
																"isOffset": false,
																"isSlot": false,
																"src": "4162:5:13",
																"valueSize": 1
															},
															{
																"declaration": 1821,
																"isOffset": false,
																"isSlot": false,
																"src": "4077:4:13",
																"valueSize": 1
															},
															{
																"declaration": 1821,
																"isOffset": false,
																"isSlot": false,
																"src": "4169:4:13",
																"valueSize": 1
															},
															{
																"declaration": 1821,
																"isOffset": false,
																"isSlot": false,
																"src": "4289:4:13",
																"valueSize": 1
															},
															{
																"declaration": 1821,
																"isOffset": false,
																"isSlot": false,
																"src": "4312:4:13",
																"valueSize": 1
															},
															{
																"declaration": 1821,
																"isOffset": false,
																"isSlot": false,
																"src": "4319:4:13",
																"valueSize": 1
															}
														],
														"id": 1830,
														"nodeType": "InlineAssembly",
														"src": "3971:371:13"
													},
													{
														"expression": {
															"id": 1835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1831,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1794,
																"src": "4408:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1834,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1832,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1797,
																	"src": "4417:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1833,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1821,
																	"src": "4425:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4417:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4408:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1836,
														"nodeType": "ExpressionStatement",
														"src": "4408:21:13"
													},
													{
														"assignments": [
															1838
														],
														"declarations": [
															{
																"constant": false,
																"id": 1838,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4755:7:13",
																"nodeType": "VariableDeclaration",
																"scope": 1902,
																"src": "4747:15:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1837,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4747:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1845,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1844,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1841,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1839,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4766:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1840,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1788,
																			"src": "4770:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4766:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1842,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4765:17:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1843,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4785:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4765:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4747:39:13"
													},
													{
														"expression": {
															"id": 1852,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1846,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1838,
																"src": "5003:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1851,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1847,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5014:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1848,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1788,
																		"src": "5018:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1849,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1838,
																		"src": "5032:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5018:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5014:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5003:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1853,
														"nodeType": "ExpressionStatement",
														"src": "5003:36:13"
													},
													{
														"expression": {
															"id": 1860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1854,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1838,
																"src": "5072:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1859,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1855,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5083:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1858,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1856,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1788,
																		"src": "5087:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1857,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1838,
																		"src": "5101:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5087:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5083:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5072:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1861,
														"nodeType": "ExpressionStatement",
														"src": "5072:36:13"
													},
													{
														"expression": {
															"id": 1868,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1862,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1838,
																"src": "5142:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1867,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5153:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1866,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1864,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1788,
																		"src": "5157:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1865,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1838,
																		"src": "5171:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5157:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5153:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5142:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1869,
														"nodeType": "ExpressionStatement",
														"src": "5142:36:13"
													},
													{
														"expression": {
															"id": 1876,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1870,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1838,
																"src": "5212:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1875,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1871,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5223:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1874,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1872,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1788,
																		"src": "5227:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1873,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1838,
																		"src": "5241:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5227:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5223:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5212:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1877,
														"nodeType": "ExpressionStatement",
														"src": "5212:36:13"
													},
													{
														"expression": {
															"id": 1884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1878,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1838,
																"src": "5282:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1883,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5293:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1882,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1880,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1788,
																		"src": "5297:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1881,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1838,
																		"src": "5311:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5297:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5293:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5282:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1885,
														"nodeType": "ExpressionStatement",
														"src": "5282:36:13"
													},
													{
														"expression": {
															"id": 1892,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1886,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1838,
																"src": "5353:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1887,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5364:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1888,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1788,
																		"src": "5368:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1889,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1838,
																		"src": "5382:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5368:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5364:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5353:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1893,
														"nodeType": "ExpressionStatement",
														"src": "5353:36:13"
													},
													{
														"expression": {
															"id": 1898,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1894,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1791,
																"src": "5823:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1897,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1895,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1794,
																	"src": "5832:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1896,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1838,
																	"src": "5840:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5832:15:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5823:24:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1899,
														"nodeType": "ExpressionStatement",
														"src": "5823:24:13"
													},
													{
														"expression": {
															"id": 1900,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1791,
															"src": "5868:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1792,
														"id": 1901,
														"nodeType": "Return",
														"src": "5861:13:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1782,
										"nodeType": "StructuredDocumentation",
										"src": "1368:305:13",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 1904,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1687:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1702:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1904,
												"src": "1694:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1694:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1786,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1713:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1904,
												"src": "1705:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1785,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1724:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1904,
												"src": "1716:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1716:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1693:43:13"
									},
									"returnParameters": {
										"id": 1792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1791,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1768:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1904,
												"src": "1760:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1760:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1759:16:13"
									},
									"scope": 2556,
									"src": "1678:4213:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1947,
										"nodeType": "Block",
										"src": "6133:189:13",
										"statements": [
											{
												"assignments": [
													1920
												],
												"declarations": [
													{
														"constant": false,
														"id": 1920,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "6151:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 1947,
														"src": "6143:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1919,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6143:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1926,
												"initialValue": {
													"arguments": [
														{
															"id": 1922,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1907,
															"src": "6167:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1923,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1909,
															"src": "6170:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1924,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1911,
															"src": "6173:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1921,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1904,
															1948
														],
														"referencedDeclaration": 1904,
														"src": "6160:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6160:25:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6143:42:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$1697",
															"typeString": "enum MathUpgradeable.Rounding"
														},
														"id": 1930,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1927,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1914,
															"src": "6199:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1697",
																"typeString": "enum MathUpgradeable.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1928,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1697,
																"src": "6211:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$1697_$",
																	"typeString": "type(enum MathUpgradeable.Rounding)"
																}
															},
															"id": 1929,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6220:2:13",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1695,
															"src": "6211:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1697",
																"typeString": "enum MathUpgradeable.Rounding"
															}
														},
														"src": "6199:23:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1937,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1932,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1907,
																	"src": "6233:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1933,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1909,
																	"src": "6236:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1934,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1911,
																	"src": "6239:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1931,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "6226:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6226:25:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1936,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6254:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6226:29:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6199:56:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1944,
												"nodeType": "IfStatement",
												"src": "6195:98:13",
												"trueBody": {
													"id": 1943,
													"nodeType": "Block",
													"src": "6257:36:13",
													"statements": [
														{
															"expression": {
																"id": 1941,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1939,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1920,
																	"src": "6271:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6281:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6271:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1942,
															"nodeType": "ExpressionStatement",
															"src": "6271:11:13"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1945,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1920,
													"src": "6309:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1918,
												"id": 1946,
												"nodeType": "Return",
												"src": "6302:13:13"
											}
										]
									},
									"documentation": {
										"id": 1905,
										"nodeType": "StructuredDocumentation",
										"src": "5897:121:13",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1948,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "6032:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1907,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "6047:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "6039:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1909,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "6058:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "6050:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6050:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1911,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "6069:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "6061:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6061:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1914,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "6091:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "6082:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1697",
													"typeString": "enum MathUpgradeable.Rounding"
												},
												"typeName": {
													"id": 1913,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1912,
														"name": "Rounding",
														"nameLocations": [
															"6082:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1697,
														"src": "6082:8:13"
													},
													"referencedDeclaration": 1697,
													"src": "6082:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1697",
														"typeString": "enum MathUpgradeable.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6038:62:13"
									},
									"returnParameters": {
										"id": 1918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1917,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "6124:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6124:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6123:9:13"
									},
									"scope": 2556,
									"src": "6023:299:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2059,
										"nodeType": "Block",
										"src": "6598:1585:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1956,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1951,
														"src": "6612:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1957,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6617:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6612:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1962,
												"nodeType": "IfStatement",
												"src": "6608:45:13",
												"trueBody": {
													"id": 1961,
													"nodeType": "Block",
													"src": "6620:33:13",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1959,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6641:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1955,
															"id": 1960,
															"nodeType": "Return",
															"src": "6634:8:13"
														}
													]
												}
											},
											{
												"assignments": [
													1964
												],
												"declarations": [
													{
														"constant": false,
														"id": 1964,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7340:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2059,
														"src": "7332:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1963,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7332:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1973,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1965,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7349:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1970,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1967,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1951,
																			"src": "7360:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1966,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2228,
																			2264
																		],
																		"referencedDeclaration": 2228,
																		"src": "7355:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1968,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7355:7:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1969,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7366:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7355:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1971,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7354:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7349:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7332:36:13"
											},
											{
												"id": 2058,
												"nodeType": "UncheckedBlock",
												"src": "7769:408:13",
												"statements": [
													{
														"expression": {
															"id": 1983,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1974,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1964,
																"src": "7793:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1982,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1979,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1975,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1964,
																				"src": "7803:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1978,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1976,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1951,
																					"src": "7812:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1977,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1964,
																					"src": "7816:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7812:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7803:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1980,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7802:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1981,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7827:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7802:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7793:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1984,
														"nodeType": "ExpressionStatement",
														"src": "7793:35:13"
													},
													{
														"expression": {
															"id": 1994,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1985,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1964,
																"src": "7842:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1993,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1990,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1986,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1964,
																				"src": "7852:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1989,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1987,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1951,
																					"src": "7861:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1988,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1964,
																					"src": "7865:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7861:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7852:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1991,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7851:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1992,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7876:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7851:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7842:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1995,
														"nodeType": "ExpressionStatement",
														"src": "7842:35:13"
													},
													{
														"expression": {
															"id": 2005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1996,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1964,
																"src": "7891:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2004,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2001,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1997,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1964,
																				"src": "7901:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2000,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1998,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1951,
																					"src": "7910:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1999,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1964,
																					"src": "7914:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7910:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7901:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2002,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7900:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2003,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7925:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7900:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7891:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2006,
														"nodeType": "ExpressionStatement",
														"src": "7891:35:13"
													},
													{
														"expression": {
															"id": 2016,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2007,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1964,
																"src": "7940:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2015,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2012,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2008,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1964,
																				"src": "7950:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2011,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2009,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1951,
																					"src": "7959:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2010,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1964,
																					"src": "7963:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7959:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7950:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2013,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7949:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2014,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7974:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7949:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7940:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2017,
														"nodeType": "ExpressionStatement",
														"src": "7940:35:13"
													},
													{
														"expression": {
															"id": 2027,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2018,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1964,
																"src": "7989:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2026,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2023,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2019,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1964,
																				"src": "7999:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2022,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2020,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1951,
																					"src": "8008:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2021,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1964,
																					"src": "8012:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8008:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7999:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2024,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7998:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2025,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8023:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7998:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7989:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2028,
														"nodeType": "ExpressionStatement",
														"src": "7989:35:13"
													},
													{
														"expression": {
															"id": 2038,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2029,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1964,
																"src": "8038:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2037,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2034,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2030,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1964,
																				"src": "8048:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2033,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2031,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1951,
																					"src": "8057:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2032,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1964,
																					"src": "8061:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8057:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8048:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2035,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8047:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8072:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8047:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8038:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2039,
														"nodeType": "ExpressionStatement",
														"src": "8038:35:13"
													},
													{
														"expression": {
															"id": 2049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2040,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1964,
																"src": "8087:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2048,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2045,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2041,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1964,
																				"src": "8097:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2044,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2042,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1951,
																					"src": "8106:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2043,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1964,
																					"src": "8110:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8106:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8097:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2046,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8096:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2047,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8121:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8096:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8087:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2050,
														"nodeType": "ExpressionStatement",
														"src": "8087:35:13"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2052,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1964,
																	"src": "8147:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2053,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1951,
																		"src": "8155:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2054,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1964,
																		"src": "8159:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8155:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2051,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1733,
																"src": "8143:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2056,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8143:23:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1955,
														"id": 2057,
														"nodeType": "Return",
														"src": "8136:30:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1949,
										"nodeType": "StructuredDocumentation",
										"src": "6328:208:13",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2060,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6550:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1951,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6563:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "6555:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6555:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6554:11:13"
									},
									"returnParameters": {
										"id": 1955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1954,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "6589:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6589:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6588:9:13"
									},
									"scope": 2556,
									"src": "6541:1642:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2095,
										"nodeType": "Block",
										"src": "8359:161:13",
										"statements": [
											{
												"id": 2094,
												"nodeType": "UncheckedBlock",
												"src": "8369:145:13",
												"statements": [
													{
														"assignments": [
															2072
														],
														"declarations": [
															{
																"constant": false,
																"id": 2072,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8401:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 2094,
																"src": "8393:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2071,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8393:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2076,
														"initialValue": {
															"arguments": [
																{
																	"id": 2074,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2063,
																	"src": "8415:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2073,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2060,
																	2096
																],
																"referencedDeclaration": 2060,
																"src": "8410:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8410:7:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8393:24:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2092,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2077,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2072,
																"src": "8438:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2087,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1697",
																					"typeString": "enum MathUpgradeable.Rounding"
																				},
																				"id": 2081,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2078,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2066,
																					"src": "8448:8:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1697",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2079,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1697,
																						"src": "8460:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1697_$",
																							"typeString": "type(enum MathUpgradeable.Rounding)"
																						}
																					},
																					"id": 2080,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8469:2:13",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1695,
																					"src": "8460:11:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1697",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"src": "8448:23:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2086,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2084,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2082,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2072,
																						"src": "8475:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2083,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2072,
																						"src": "8484:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8475:15:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2085,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2063,
																					"src": "8493:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8475:19:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8448:46:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2089,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8501:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2090,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8448:54:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2088,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8497:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2091,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8447:56:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8438:65:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2070,
														"id": 2093,
														"nodeType": "Return",
														"src": "8431:72:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2061,
										"nodeType": "StructuredDocumentation",
										"src": "8189:89:13",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2096,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8292:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2063,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8305:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2096,
												"src": "8297:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8297:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2066,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8317:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2096,
												"src": "8308:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1697",
													"typeString": "enum MathUpgradeable.Rounding"
												},
												"typeName": {
													"id": 2065,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2064,
														"name": "Rounding",
														"nameLocations": [
															"8308:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1697,
														"src": "8308:8:13"
													},
													"referencedDeclaration": 1697,
													"src": "8308:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1697",
														"typeString": "enum MathUpgradeable.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8296:30:13"
									},
									"returnParameters": {
										"id": 2070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2069,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2096,
												"src": "8350:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8350:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8349:9:13"
									},
									"scope": 2556,
									"src": "8283:237:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2227,
										"nodeType": "Block",
										"src": "8705:922:13",
										"statements": [
											{
												"assignments": [
													2105
												],
												"declarations": [
													{
														"constant": false,
														"id": 2105,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8723:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2227,
														"src": "8715:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2104,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8715:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2107,
												"initialValue": {
													"hexValue": "30",
													"id": 2106,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8732:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8715:18:13"
											},
											{
												"id": 2224,
												"nodeType": "UncheckedBlock",
												"src": "8743:855:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2108,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2099,
																	"src": "8771:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2109,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8780:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8771:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2111,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8786:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8771:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2122,
														"nodeType": "IfStatement",
														"src": "8767:99:13",
														"trueBody": {
															"id": 2121,
															"nodeType": "Block",
															"src": "8789:77:13",
															"statements": [
																{
																	"expression": {
																		"id": 2115,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2113,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2099,
																			"src": "8807:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8817:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8807:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2116,
																	"nodeType": "ExpressionStatement",
																	"src": "8807:13:13"
																},
																{
																	"expression": {
																		"id": 2119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2117,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2105,
																			"src": "8838:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2118,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8848:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8838:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2120,
																	"nodeType": "ExpressionStatement",
																	"src": "8838:13:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2123,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2099,
																	"src": "8883:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8892:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8883:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2126,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8897:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8883:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2137,
														"nodeType": "IfStatement",
														"src": "8879:96:13",
														"trueBody": {
															"id": 2136,
															"nodeType": "Block",
															"src": "8900:75:13",
															"statements": [
																{
																	"expression": {
																		"id": 2130,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2128,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2099,
																			"src": "8918:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2129,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8928:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8918:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2131,
																	"nodeType": "ExpressionStatement",
																	"src": "8918:12:13"
																},
																{
																	"expression": {
																		"id": 2134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2132,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2105,
																			"src": "8948:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2133,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8958:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8948:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2135,
																	"nodeType": "ExpressionStatement",
																	"src": "8948:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2140,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2138,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2099,
																	"src": "8992:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9001:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8992:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2141,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9006:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8992:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2152,
														"nodeType": "IfStatement",
														"src": "8988:96:13",
														"trueBody": {
															"id": 2151,
															"nodeType": "Block",
															"src": "9009:75:13",
															"statements": [
																{
																	"expression": {
																		"id": 2145,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2143,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2099,
																			"src": "9027:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2144,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9037:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9027:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2146,
																	"nodeType": "ExpressionStatement",
																	"src": "9027:12:13"
																},
																{
																	"expression": {
																		"id": 2149,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2147,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2105,
																			"src": "9057:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2148,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9067:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9057:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2150,
																	"nodeType": "ExpressionStatement",
																	"src": "9057:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2153,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2099,
																	"src": "9101:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2154,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9110:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "9101:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2156,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9115:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9101:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2167,
														"nodeType": "IfStatement",
														"src": "9097:96:13",
														"trueBody": {
															"id": 2166,
															"nodeType": "Block",
															"src": "9118:75:13",
															"statements": [
																{
																	"expression": {
																		"id": 2160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2158,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2099,
																			"src": "9136:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2159,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9146:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9136:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2161,
																	"nodeType": "ExpressionStatement",
																	"src": "9136:12:13"
																},
																{
																	"expression": {
																		"id": 2164,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2162,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2105,
																			"src": "9166:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2163,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9176:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9166:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2165,
																	"nodeType": "ExpressionStatement",
																	"src": "9166:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2168,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2099,
																	"src": "9210:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2169,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9219:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "9210:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2171,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9223:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9210:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2182,
														"nodeType": "IfStatement",
														"src": "9206:93:13",
														"trueBody": {
															"id": 2181,
															"nodeType": "Block",
															"src": "9226:73:13",
															"statements": [
																{
																	"expression": {
																		"id": 2175,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2173,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2099,
																			"src": "9244:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2174,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9254:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9244:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2176,
																	"nodeType": "ExpressionStatement",
																	"src": "9244:11:13"
																},
																{
																	"expression": {
																		"id": 2179,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2177,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2105,
																			"src": "9273:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2178,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9283:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9273:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2180,
																	"nodeType": "ExpressionStatement",
																	"src": "9273:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2183,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2099,
																	"src": "9316:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9325:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9316:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2186,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9329:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9316:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2197,
														"nodeType": "IfStatement",
														"src": "9312:93:13",
														"trueBody": {
															"id": 2196,
															"nodeType": "Block",
															"src": "9332:73:13",
															"statements": [
																{
																	"expression": {
																		"id": 2190,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2188,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2099,
																			"src": "9350:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2189,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9360:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9350:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2191,
																	"nodeType": "ExpressionStatement",
																	"src": "9350:11:13"
																},
																{
																	"expression": {
																		"id": 2194,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2192,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2105,
																			"src": "9379:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2193,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9389:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9379:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2195,
																	"nodeType": "ExpressionStatement",
																	"src": "9379:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2200,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2198,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2099,
																	"src": "9422:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2199,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9431:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9422:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2201,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9435:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9422:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2212,
														"nodeType": "IfStatement",
														"src": "9418:93:13",
														"trueBody": {
															"id": 2211,
															"nodeType": "Block",
															"src": "9438:73:13",
															"statements": [
																{
																	"expression": {
																		"id": 2205,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2203,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2099,
																			"src": "9456:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2204,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9466:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9456:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2206,
																	"nodeType": "ExpressionStatement",
																	"src": "9456:11:13"
																},
																{
																	"expression": {
																		"id": 2209,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2207,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2105,
																			"src": "9485:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2208,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9495:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9485:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2210,
																	"nodeType": "ExpressionStatement",
																	"src": "9485:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2215,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2213,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2099,
																	"src": "9528:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2214,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9537:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9528:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2216,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9541:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9528:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2223,
														"nodeType": "IfStatement",
														"src": "9524:64:13",
														"trueBody": {
															"id": 2222,
															"nodeType": "Block",
															"src": "9544:44:13",
															"statements": [
																{
																	"expression": {
																		"id": 2220,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2218,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2105,
																			"src": "9562:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2219,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9572:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9562:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2221,
																	"nodeType": "ExpressionStatement",
																	"src": "9562:11:13"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2225,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2105,
													"src": "9614:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2103,
												"id": 2226,
												"nodeType": "Return",
												"src": "9607:13:13"
											}
										]
									},
									"documentation": {
										"id": 2097,
										"nodeType": "StructuredDocumentation",
										"src": "8526:113:13",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8653:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2099,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8666:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2228,
												"src": "8658:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2098,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8658:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8657:15:13"
									},
									"returnParameters": {
										"id": 2103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2228,
												"src": "8696:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8696:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8695:9:13"
									},
									"scope": 2556,
									"src": "8644:983:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2263,
										"nodeType": "Block",
										"src": "9860:165:13",
										"statements": [
											{
												"id": 2262,
												"nodeType": "UncheckedBlock",
												"src": "9870:149:13",
												"statements": [
													{
														"assignments": [
															2240
														],
														"declarations": [
															{
																"constant": false,
																"id": 2240,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9902:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 2262,
																"src": "9894:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2239,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9894:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2244,
														"initialValue": {
															"arguments": [
																{
																	"id": 2242,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2231,
																	"src": "9916:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2241,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2228,
																	2264
																],
																"referencedDeclaration": 2228,
																"src": "9911:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9911:11:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9894:28:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2245,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2240,
																"src": "9943:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2255,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1697",
																					"typeString": "enum MathUpgradeable.Rounding"
																				},
																				"id": 2249,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2246,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2234,
																					"src": "9953:8:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1697",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2247,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1697,
																						"src": "9965:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1697_$",
																							"typeString": "type(enum MathUpgradeable.Rounding)"
																						}
																					},
																					"id": 2248,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9974:2:13",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1695,
																					"src": "9965:11:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1697",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"src": "9953:23:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2254,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2252,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2250,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9980:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2251,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2240,
																						"src": "9985:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9980:11:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2253,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2231,
																					"src": "9994:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9980:19:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9953:46:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2257,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10006:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2258,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9953:54:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2256,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10002:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2259,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9952:56:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9943:65:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2238,
														"id": 2261,
														"nodeType": "Return",
														"src": "9936:72:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2229,
										"nodeType": "StructuredDocumentation",
										"src": "9633:142:13",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9789:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2231,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9802:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "9794:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9794:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2234,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9818:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "9809:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1697",
													"typeString": "enum MathUpgradeable.Rounding"
												},
												"typeName": {
													"id": 2233,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2232,
														"name": "Rounding",
														"nameLocations": [
															"9809:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1697,
														"src": "9809:8:13"
													},
													"referencedDeclaration": 1697,
													"src": "9809:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1697",
														"typeString": "enum MathUpgradeable.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9793:34:13"
									},
									"returnParameters": {
										"id": 2238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "9851:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9851:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9850:9:13"
									},
									"scope": 2556,
									"src": "9780:245:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2392,
										"nodeType": "Block",
										"src": "10212:854:13",
										"statements": [
											{
												"assignments": [
													2273
												],
												"declarations": [
													{
														"constant": false,
														"id": 2273,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10230:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2392,
														"src": "10222:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2272,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10222:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2275,
												"initialValue": {
													"hexValue": "30",
													"id": 2274,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10239:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10222:18:13"
											},
											{
												"id": 2389,
												"nodeType": "UncheckedBlock",
												"src": "10250:787:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2276,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2267,
																"src": "10278:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2279,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10287:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10293:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10287:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10278:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2292,
														"nodeType": "IfStatement",
														"src": "10274:103:13",
														"trueBody": {
															"id": 2291,
															"nodeType": "Block",
															"src": "10297:80:13",
															"statements": [
																{
																	"expression": {
																		"id": 2285,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2281,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2267,
																			"src": "10315:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2284,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2282,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10324:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2283,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10330:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10324:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10315:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2286,
																	"nodeType": "ExpressionStatement",
																	"src": "10315:17:13"
																},
																{
																	"expression": {
																		"id": 2289,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2287,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2273,
																			"src": "10350:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2288,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10360:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10350:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2290,
																	"nodeType": "ExpressionStatement",
																	"src": "10350:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2293,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2267,
																"src": "10394:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2296,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10403:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10409:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10403:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10394:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2309,
														"nodeType": "IfStatement",
														"src": "10390:103:13",
														"trueBody": {
															"id": 2308,
															"nodeType": "Block",
															"src": "10413:80:13",
															"statements": [
																{
																	"expression": {
																		"id": 2302,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2298,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2267,
																			"src": "10431:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2301,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2299,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10440:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2300,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10446:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10440:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10431:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2303,
																	"nodeType": "ExpressionStatement",
																	"src": "10431:17:13"
																},
																{
																	"expression": {
																		"id": 2306,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2304,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2273,
																			"src": "10466:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2305,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10476:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10466:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2307,
																	"nodeType": "ExpressionStatement",
																	"src": "10466:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2310,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2267,
																"src": "10510:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2313,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2311,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10519:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10525:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10519:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10510:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2326,
														"nodeType": "IfStatement",
														"src": "10506:103:13",
														"trueBody": {
															"id": 2325,
															"nodeType": "Block",
															"src": "10529:80:13",
															"statements": [
																{
																	"expression": {
																		"id": 2319,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2315,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2267,
																			"src": "10547:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2318,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2316,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10556:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2317,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10562:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10556:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10547:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2320,
																	"nodeType": "ExpressionStatement",
																	"src": "10547:17:13"
																},
																{
																	"expression": {
																		"id": 2323,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2321,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2273,
																			"src": "10582:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2322,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10592:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10582:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2324,
																	"nodeType": "ExpressionStatement",
																	"src": "10582:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2327,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2267,
																"src": "10626:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2330,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10635:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10641:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10635:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10626:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2343,
														"nodeType": "IfStatement",
														"src": "10622:100:13",
														"trueBody": {
															"id": 2342,
															"nodeType": "Block",
															"src": "10644:78:13",
															"statements": [
																{
																	"expression": {
																		"id": 2336,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2332,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2267,
																			"src": "10662:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2335,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2333,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10671:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2334,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10677:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10671:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10662:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2337,
																	"nodeType": "ExpressionStatement",
																	"src": "10662:16:13"
																},
																{
																	"expression": {
																		"id": 2340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2338,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2273,
																			"src": "10696:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2339,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10706:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10696:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2341,
																	"nodeType": "ExpressionStatement",
																	"src": "10696:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2344,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2267,
																"src": "10739:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10748:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10754:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10748:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10739:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2360,
														"nodeType": "IfStatement",
														"src": "10735:100:13",
														"trueBody": {
															"id": 2359,
															"nodeType": "Block",
															"src": "10757:78:13",
															"statements": [
																{
																	"expression": {
																		"id": 2353,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2349,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2267,
																			"src": "10775:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2350,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10784:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2351,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10790:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10784:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10775:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2354,
																	"nodeType": "ExpressionStatement",
																	"src": "10775:16:13"
																},
																{
																	"expression": {
																		"id": 2357,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2355,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2273,
																			"src": "10809:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2356,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10819:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10809:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2358,
																	"nodeType": "ExpressionStatement",
																	"src": "10809:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2361,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2267,
																"src": "10852:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2364,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10861:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10867:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10861:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10852:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2377,
														"nodeType": "IfStatement",
														"src": "10848:100:13",
														"trueBody": {
															"id": 2376,
															"nodeType": "Block",
															"src": "10870:78:13",
															"statements": [
																{
																	"expression": {
																		"id": 2370,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2366,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2267,
																			"src": "10888:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2369,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2367,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10897:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10903:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10897:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10888:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2371,
																	"nodeType": "ExpressionStatement",
																	"src": "10888:16:13"
																},
																{
																	"expression": {
																		"id": 2374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2372,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2273,
																			"src": "10922:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2373,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10932:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10922:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2375,
																	"nodeType": "ExpressionStatement",
																	"src": "10922:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2378,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2267,
																"src": "10965:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2381,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10974:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2380,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10980:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10974:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10965:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2388,
														"nodeType": "IfStatement",
														"src": "10961:66:13",
														"trueBody": {
															"id": 2387,
															"nodeType": "Block",
															"src": "10983:44:13",
															"statements": [
																{
																	"expression": {
																		"id": 2385,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2383,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2273,
																			"src": "11001:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2384,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11011:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11001:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2386,
																	"nodeType": "ExpressionStatement",
																	"src": "11001:11:13"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2390,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2273,
													"src": "11053:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2271,
												"id": 2391,
												"nodeType": "Return",
												"src": "11046:13:13"
											}
										]
									},
									"documentation": {
										"id": 2265,
										"nodeType": "StructuredDocumentation",
										"src": "10031:114:13",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10159:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2267,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10173:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2393,
												"src": "10165:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10165:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10164:15:13"
									},
									"returnParameters": {
										"id": 2271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2393,
												"src": "10203:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10203:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10202:9:13"
									},
									"scope": 2556,
									"src": "10150:916:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2428,
										"nodeType": "Block",
										"src": "11301:167:13",
										"statements": [
											{
												"id": 2427,
												"nodeType": "UncheckedBlock",
												"src": "11311:151:13",
												"statements": [
													{
														"assignments": [
															2405
														],
														"declarations": [
															{
																"constant": false,
																"id": 2405,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11343:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 2427,
																"src": "11335:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2404,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11335:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2409,
														"initialValue": {
															"arguments": [
																{
																	"id": 2407,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2396,
																	"src": "11358:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2406,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2393,
																	2429
																],
																"referencedDeclaration": 2393,
																"src": "11352:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11352:12:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11335:29:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2410,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2405,
																"src": "11385:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2420,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1697",
																					"typeString": "enum MathUpgradeable.Rounding"
																				},
																				"id": 2414,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2411,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2399,
																					"src": "11395:8:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1697",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2412,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1697,
																						"src": "11407:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1697_$",
																							"typeString": "type(enum MathUpgradeable.Rounding)"
																						}
																					},
																					"id": 2413,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11416:2:13",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1695,
																					"src": "11407:11:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1697",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"src": "11395:23:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2419,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2417,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2415,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11422:2:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2416,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2405,
																						"src": "11428:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11422:12:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2418,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2396,
																					"src": "11437:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11422:20:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11395:47:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2422,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11449:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2423,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11395:55:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2421,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11445:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2424,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11394:57:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11385:66:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2403,
														"id": 2426,
														"nodeType": "Return",
														"src": "11378:73:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2394,
										"nodeType": "StructuredDocumentation",
										"src": "11072:143:13",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2429,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "11229:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2396,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11243:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "11235:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11235:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2399,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11259:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "11250:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1697",
													"typeString": "enum MathUpgradeable.Rounding"
												},
												"typeName": {
													"id": 2398,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2397,
														"name": "Rounding",
														"nameLocations": [
															"11250:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1697,
														"src": "11250:8:13"
													},
													"referencedDeclaration": 1697,
													"src": "11250:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1697",
														"typeString": "enum MathUpgradeable.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11234:34:13"
									},
									"returnParameters": {
										"id": 2403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2402,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "11292:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11292:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11291:9:13"
									},
									"scope": 2556,
									"src": "11220:248:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2515,
										"nodeType": "Block",
										"src": "11782:600:13",
										"statements": [
											{
												"assignments": [
													2438
												],
												"declarations": [
													{
														"constant": false,
														"id": 2438,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11800:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2515,
														"src": "11792:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2437,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11792:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2440,
												"initialValue": {
													"hexValue": "30",
													"id": 2439,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11809:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11792:18:13"
											},
											{
												"id": 2512,
												"nodeType": "UncheckedBlock",
												"src": "11820:533:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2441,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2432,
																	"src": "11848:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11857:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11848:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2444,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11863:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11848:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2455,
														"nodeType": "IfStatement",
														"src": "11844:98:13",
														"trueBody": {
															"id": 2454,
															"nodeType": "Block",
															"src": "11866:76:13",
															"statements": [
																{
																	"expression": {
																		"id": 2448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2446,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2432,
																			"src": "11884:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2447,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11894:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11884:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2449,
																	"nodeType": "ExpressionStatement",
																	"src": "11884:13:13"
																},
																{
																	"expression": {
																		"id": 2452,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2450,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2438,
																			"src": "11915:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2451,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11925:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11915:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2453,
																	"nodeType": "ExpressionStatement",
																	"src": "11915:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2458,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2456,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2432,
																	"src": "11959:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2457,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11968:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11959:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2459,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11973:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11959:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2470,
														"nodeType": "IfStatement",
														"src": "11955:95:13",
														"trueBody": {
															"id": 2469,
															"nodeType": "Block",
															"src": "11976:74:13",
															"statements": [
																{
																	"expression": {
																		"id": 2463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2461,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2432,
																			"src": "11994:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2462,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12004:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11994:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2464,
																	"nodeType": "ExpressionStatement",
																	"src": "11994:12:13"
																},
																{
																	"expression": {
																		"id": 2467,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2465,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2438,
																			"src": "12024:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2466,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12034:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12024:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2468,
																	"nodeType": "ExpressionStatement",
																	"src": "12024:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2473,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2471,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2432,
																	"src": "12067:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12076:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12067:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2474,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12081:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12067:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2485,
														"nodeType": "IfStatement",
														"src": "12063:95:13",
														"trueBody": {
															"id": 2484,
															"nodeType": "Block",
															"src": "12084:74:13",
															"statements": [
																{
																	"expression": {
																		"id": 2478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2476,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2432,
																			"src": "12102:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2477,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12112:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12102:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2479,
																	"nodeType": "ExpressionStatement",
																	"src": "12102:12:13"
																},
																{
																	"expression": {
																		"id": 2482,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2480,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2438,
																			"src": "12132:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2481,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12142:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12132:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2483,
																	"nodeType": "ExpressionStatement",
																	"src": "12132:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2488,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2486,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2432,
																	"src": "12175:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12184:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12175:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2489,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12189:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12175:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2500,
														"nodeType": "IfStatement",
														"src": "12171:95:13",
														"trueBody": {
															"id": 2499,
															"nodeType": "Block",
															"src": "12192:74:13",
															"statements": [
																{
																	"expression": {
																		"id": 2493,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2491,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2432,
																			"src": "12210:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2492,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12220:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12210:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2494,
																	"nodeType": "ExpressionStatement",
																	"src": "12210:12:13"
																},
																{
																	"expression": {
																		"id": 2497,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2495,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2438,
																			"src": "12240:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2496,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12250:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12240:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2498,
																	"nodeType": "ExpressionStatement",
																	"src": "12240:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2501,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2432,
																	"src": "12283:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12292:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12283:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2504,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12296:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12283:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2511,
														"nodeType": "IfStatement",
														"src": "12279:64:13",
														"trueBody": {
															"id": 2510,
															"nodeType": "Block",
															"src": "12299:44:13",
															"statements": [
																{
																	"expression": {
																		"id": 2508,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2506,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2438,
																			"src": "12317:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12327:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12317:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2509,
																	"nodeType": "ExpressionStatement",
																	"src": "12317:11:13"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2513,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2438,
													"src": "12369:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2436,
												"id": 2514,
												"nodeType": "Return",
												"src": "12362:13:13"
											}
										]
									},
									"documentation": {
										"id": 2430,
										"nodeType": "StructuredDocumentation",
										"src": "11474:240:13",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11728:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2432,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11743:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2516,
												"src": "11735:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11735:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11734:15:13"
									},
									"returnParameters": {
										"id": 2436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2435,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2516,
												"src": "11773:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11773:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11772:9:13"
									},
									"scope": 2556,
									"src": "11719:663:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2554,
										"nodeType": "Block",
										"src": "12619:174:13",
										"statements": [
											{
												"id": 2553,
												"nodeType": "UncheckedBlock",
												"src": "12629:158:13",
												"statements": [
													{
														"assignments": [
															2528
														],
														"declarations": [
															{
																"constant": false,
																"id": 2528,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12661:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 2553,
																"src": "12653:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2527,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12653:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2532,
														"initialValue": {
															"arguments": [
																{
																	"id": 2530,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2519,
																	"src": "12677:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2529,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2516,
																	2555
																],
																"referencedDeclaration": 2516,
																"src": "12670:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12670:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12653:30:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2533,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2528,
																"src": "12704:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2546,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1697",
																					"typeString": "enum MathUpgradeable.Rounding"
																				},
																				"id": 2537,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2534,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2522,
																					"src": "12714:8:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1697",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2535,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1697,
																						"src": "12726:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1697_$",
																							"typeString": "type(enum MathUpgradeable.Rounding)"
																						}
																					},
																					"id": 2536,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12735:2:13",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1695,
																					"src": "12726:11:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1697",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"src": "12714:23:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2545,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2543,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2538,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12741:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2541,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2539,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2528,
																									"src": "12747:6:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2540,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12757:1:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "12747:11:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2542,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12746:13:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12741:18:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2544,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2519,
																					"src": "12762:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12741:26:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12714:53:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2548,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12774:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12714:61:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2547,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2550,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12713:63:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12704:72:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2526,
														"id": 2552,
														"nodeType": "Return",
														"src": "12697:79:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2517,
										"nodeType": "StructuredDocumentation",
										"src": "12388:144:13",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12546:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2519,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12561:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2555,
												"src": "12553:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12553:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2522,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12577:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2555,
												"src": "12568:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1697",
													"typeString": "enum MathUpgradeable.Rounding"
												},
												"typeName": {
													"id": 2521,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2520,
														"name": "Rounding",
														"nameLocations": [
															"12568:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1697,
														"src": "12568:8:13"
													},
													"referencedDeclaration": 1697,
													"src": "12568:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1697",
														"typeString": "enum MathUpgradeable.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12552:34:13"
									},
									"returnParameters": {
										"id": 2526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2555,
												"src": "12610:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12610:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12609:9:13"
									},
									"scope": 2556,
									"src": "12537:256:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2557,
							"src": "202:12593:13",
							"usedErrors": []
						}
					],
					"src": "103:12693:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
					"exportedSymbols": {
						"SignedMathUpgradeable": [
							2661
						]
					},
					"id": 2662,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2558,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMathUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2559,
								"nodeType": "StructuredDocumentation",
								"src": "134:80:14",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2661,
							"linearizedBaseContracts": [
								2661
							],
							"name": "SignedMathUpgradeable",
							"nameLocation": "223:21:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2576,
										"nodeType": "Block",
										"src": "386:37:14",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2571,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2569,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2562,
															"src": "403:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2570,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2564,
															"src": "407:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "403:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2573,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2564,
														"src": "415:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "403:13:14",
													"trueExpression": {
														"id": 2572,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2562,
														"src": "411:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2568,
												"id": 2575,
												"nodeType": "Return",
												"src": "396:20:14"
											}
										]
									},
									"documentation": {
										"id": 2560,
										"nodeType": "StructuredDocumentation",
										"src": "251:66:14",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "331:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2562,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "342:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2577,
												"src": "335:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2561,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2564,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "352:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2577,
												"src": "345:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2563,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "345:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "334:20:14"
									},
									"returnParameters": {
										"id": 2568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2567,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2577,
												"src": "378:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2566,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "378:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "377:8:14"
									},
									"scope": 2661,
									"src": "322:101:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2594,
										"nodeType": "Block",
										"src": "565:37:14",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2589,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2587,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2580,
															"src": "582:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2588,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2582,
															"src": "586:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "582:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2591,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2582,
														"src": "594:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "582:13:14",
													"trueExpression": {
														"id": 2590,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2580,
														"src": "590:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2586,
												"id": 2593,
												"nodeType": "Return",
												"src": "575:20:14"
											}
										]
									},
									"documentation": {
										"id": 2578,
										"nodeType": "StructuredDocumentation",
										"src": "429:67:14",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "510:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2580,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "521:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2595,
												"src": "514:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2579,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2582,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "531:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2595,
												"src": "524:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2581,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "524:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "513:20:14"
									},
									"returnParameters": {
										"id": 2586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2585,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2595,
												"src": "557:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2584,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "557:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:8:14"
									},
									"scope": 2661,
									"src": "501:101:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2638,
										"nodeType": "Block",
										"src": "807:162:14",
										"statements": [
											{
												"assignments": [
													2606
												],
												"declarations": [
													{
														"constant": false,
														"id": 2606,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "876:1:14",
														"nodeType": "VariableDeclaration",
														"scope": 2638,
														"src": "869:8:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2605,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "869:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2619,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2609,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2607,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2598,
																	"src": "881:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2608,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2600,
																	"src": "885:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "881:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2610,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2616,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2613,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2611,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2598,
																				"src": "892:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2612,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2600,
																				"src": "896:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "892:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2614,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "891:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2615,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "902:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "891:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2617,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "890:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "880:24:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "869:35:14"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2620,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2606,
														"src": "921:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2634,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2628,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2625,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2606,
																						"src": "941:1:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2624,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "933:7:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2623,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "933:7:14",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2626,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "933:10:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 2627,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "947:3:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "933:17:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2622,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "926:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2621,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "926:6:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2629,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "926:25:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2632,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2630,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2598,
																				"src": "955:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2631,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2600,
																				"src": "959:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "955:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2633,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "954:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "926:35:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2635,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "925:37:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "921:41:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2604,
												"id": 2637,
												"nodeType": "Return",
												"src": "914:48:14"
											}
										]
									},
									"documentation": {
										"id": 2596,
										"nodeType": "StructuredDocumentation",
										"src": "608:126:14",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 2639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "748:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2598,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "763:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2639,
												"src": "756:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2597,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2600,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "773:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2639,
												"src": "766:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2599,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "766:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "755:20:14"
									},
									"returnParameters": {
										"id": 2604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2603,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2639,
												"src": "799:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2602,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "799:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "798:8:14"
									},
									"scope": 2661,
									"src": "739:230:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2659,
										"nodeType": "Block",
										"src": "1113:158:14",
										"statements": [
											{
												"id": 2658,
												"nodeType": "UncheckedBlock",
												"src": "1123:142:14",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2649,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2642,
																			"src": "1238:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2650,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1243:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1238:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 2654,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1251:2:14",
																		"subExpression": {
																			"id": 2653,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2642,
																			"src": "1252:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 2655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1238:15:14",
																	"trueExpression": {
																		"id": 2652,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2642,
																		"src": "1247:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2648,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1230:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2647,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1230:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 2656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1230:24:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2646,
														"id": 2657,
														"nodeType": "Return",
														"src": "1223:31:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2640,
										"nodeType": "StructuredDocumentation",
										"src": "975:78:14",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 2660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1067:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2642,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1078:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2660,
												"src": "1071:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2641,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1071:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1070:10:14"
									},
									"returnParameters": {
										"id": 2646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2645,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2660,
												"src": "1104:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:9:14"
									},
									"scope": 2661,
									"src": "1058:213:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2662,
							"src": "215:1058:14",
							"usedErrors": []
						}
					],
					"src": "109:1165:14"
				},
				"id": 14
			},
			"erc3643/registry/implementation/IdentityRegistry.sol": {
				"ast": {
					"absolutePath": "erc3643/registry/implementation/IdentityRegistry.sol",
					"exportedSymbols": {
						"AccessControlUpgradeable": [
							659
						],
						"AddressUpgradeable": [
							1363
						],
						"ContextUpgradeable": [
							1405
						],
						"ERC165Upgradeable": [
							1678
						],
						"IAccessControlUpgradeable": [
							732
						],
						"IClaimIssuer": [
							59
						],
						"IClaimTopicsRegistry": [
							3331
						],
						"IERC165Upgradeable": [
							1690
						],
						"IERC734": [
							206
						],
						"IERC735": [
							314
						],
						"IIdentity": [
							323
						],
						"IIdentityRegistry": [
							3484
						],
						"IIdentityRegistryStorage": [
							3586
						],
						"IRStorage": [
							3695
						],
						"ITrustedIssuersRegistry": [
							3676
						],
						"IdentityRegistry": [
							3304
						],
						"Initializable": [
							1033
						],
						"MathUpgradeable": [
							2556
						],
						"OwnableUpgradeable": [
							864
						],
						"SignedMathUpgradeable": [
							2661
						],
						"StringsUpgradeable": [
							1634
						]
					},
					"id": 3305,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2663,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "38:23:15"
						},
						{
							"absolutePath": "@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
							"file": "@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
							"id": 2664,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3305,
							"sourceUnit": 60,
							"src": "63:67:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@onchain-id/solidity/contracts/interface/IIdentity.sol",
							"file": "@onchain-id/solidity/contracts/interface/IIdentity.sol",
							"id": 2665,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3305,
							"sourceUnit": 324,
							"src": "131:64:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "erc3643/registry/interface/IClaimTopicsRegistry.sol",
							"file": "../interface/IClaimTopicsRegistry.sol",
							"id": 2666,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3305,
							"sourceUnit": 3332,
							"src": "197:47:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "erc3643/registry/interface/ITrustedIssuersRegistry.sol",
							"file": "../interface/ITrustedIssuersRegistry.sol",
							"id": 2667,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3305,
							"sourceUnit": 3677,
							"src": "245:50:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "erc3643/registry/interface/IIdentityRegistry.sol",
							"file": "../interface/IIdentityRegistry.sol",
							"id": 2668,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3305,
							"sourceUnit": 3485,
							"src": "296:44:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 2669,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3305,
							"sourceUnit": 865,
							"src": "341:75:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
							"id": 2670,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3305,
							"sourceUnit": 660,
							"src": "417:81:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "erc3643/registry/interface/IIdentityRegistryStorage.sol",
							"file": "../interface/IIdentityRegistryStorage.sol",
							"id": 2671,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3305,
							"sourceUnit": 3587,
							"src": "499:51:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "erc3643/registry/storage/IRStorage.sol",
							"file": "../storage/IRStorage.sol",
							"id": 2672,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3305,
							"sourceUnit": 3696,
							"src": "551:34:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2673,
										"name": "IIdentityRegistry",
										"nameLocations": [
											"620:17:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3484,
										"src": "620:17:15"
									},
									"id": 2674,
									"nodeType": "InheritanceSpecifier",
									"src": "620:17:15"
								},
								{
									"baseName": {
										"id": 2675,
										"name": "AccessControlUpgradeable",
										"nameLocations": [
											"643:24:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 659,
										"src": "643:24:15"
									},
									"id": 2676,
									"nodeType": "InheritanceSpecifier",
									"src": "643:24:15"
								},
								{
									"baseName": {
										"id": 2677,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"673:18:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 864,
										"src": "673:18:15"
									},
									"id": 2678,
									"nodeType": "InheritanceSpecifier",
									"src": "673:18:15"
								},
								{
									"baseName": {
										"id": 2679,
										"name": "IRStorage",
										"nameLocations": [
											"697:9:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3695,
										"src": "697:9:15"
									},
									"id": 2680,
									"nodeType": "InheritanceSpecifier",
									"src": "697:9:15"
								}
							],
							"canonicalName": "IdentityRegistry",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3304,
							"linearizedBaseContracts": [
								3304,
								3695,
								864,
								659,
								1678,
								1690,
								732,
								1405,
								1033,
								3484
							],
							"name": "IdentityRegistry",
							"nameLocation": "596:16:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "22459e18",
									"id": 2683,
									"mutability": "constant",
									"name": "AGENT_ROLE",
									"nameLocation": "737:10:15",
									"nodeType": "VariableDeclaration",
									"scope": 3304,
									"src": "713:111:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2681,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "713:7:15",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307863616235613062666530623739643263346231633265303235393966613034346431313562373531316639363539333037636234323736393530393637373039",
										"id": 2682,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "758:66:15",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_91688104184975485665605621293953084602104354180736674220400715645603821287177_by_1",
											"typeString": "int_const 9168...(69 digits omitted)...7177"
										},
										"value": "0xcab5a0bfe0b79d2c4b1c2e02599fa044d115b7511f9659307cb4276950967709"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e58378bb",
									"id": 2686,
									"mutability": "constant",
									"name": "OWNER_ROLE",
									"nameLocation": "855:10:15",
									"nodeType": "VariableDeclaration",
									"scope": 3304,
									"src": "831:111:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2684,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "831:7:15",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862313935343664666630316538353666623366303130633236376137623163363033363363663861343636346532316363383963323632323436323032313465",
										"id": 2685,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "876:66:15",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_80323123571490017829807956183959927157758783243307277648765580262250913997134_by_1",
											"typeString": "int_const 8032...(69 digits omitted)...7134"
										},
										"value": "0xb19546dff01e856fb3f010c267a7b1c60363cf8a4664e21cc89c26224620214e"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 2754,
										"nodeType": "Block",
										"src": "1108:692:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2710,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 2703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2698,
																		"name": "_trustedIssuersRegistry",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2688,
																		"src": "1139:23:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2701,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1174:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2700,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1166:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2699,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1166:7:15",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1166:10:15",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "1139:37:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 2709,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2704,
																		"name": "_claimTopicsRegistry",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2690,
																		"src": "1196:20:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2707,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1228:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2706,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1220:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2705,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1220:7:15",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2708,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1220:10:15",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "1196:34:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "1139:91:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2716,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2711,
																	"name": "_identityStorage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2692,
																	"src": "1250:16:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 2714,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1278:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 2713,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1270:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2712,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1270:7:15",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2715,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1270:10:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1250:30:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1139:141:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
															"id": 2718,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1294:33:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															},
															"value": "invalid argument - zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															}
														],
														"id": 2697,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1118:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1118:219:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2720,
												"nodeType": "ExpressionStatement",
												"src": "1118:219:15"
											},
											{
												"expression": {
													"id": 2725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2721,
														"name": "_tokenTopicsRegistry",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3684,
														"src": "1347:20:15",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IClaimTopicsRegistry_$3331",
															"typeString": "contract IClaimTopicsRegistry"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2723,
																"name": "_claimTopicsRegistry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2690,
																"src": "1391:20:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2722,
															"name": "IClaimTopicsRegistry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3331,
															"src": "1370:20:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IClaimTopicsRegistry_$3331_$",
																"typeString": "type(contract IClaimTopicsRegistry)"
															}
														},
														"id": 2724,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1370:42:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IClaimTopicsRegistry_$3331",
															"typeString": "contract IClaimTopicsRegistry"
														}
													},
													"src": "1347:65:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimTopicsRegistry_$3331",
														"typeString": "contract IClaimTopicsRegistry"
													}
												},
												"id": 2726,
												"nodeType": "ExpressionStatement",
												"src": "1347:65:15"
											},
											{
												"expression": {
													"id": 2731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2727,
														"name": "_tokenIssuersRegistry",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3687,
														"src": "1422:21:15",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ITrustedIssuersRegistry_$3676",
															"typeString": "contract ITrustedIssuersRegistry"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2729,
																"name": "_trustedIssuersRegistry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2688,
																"src": "1483:23:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2728,
															"name": "ITrustedIssuersRegistry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3676,
															"src": "1446:23:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ITrustedIssuersRegistry_$3676_$",
																"typeString": "type(contract ITrustedIssuersRegistry)"
															}
														},
														"id": 2730,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1446:70:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ITrustedIssuersRegistry_$3676",
															"typeString": "contract ITrustedIssuersRegistry"
														}
													},
													"src": "1422:94:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ITrustedIssuersRegistry_$3676",
														"typeString": "contract ITrustedIssuersRegistry"
													}
												},
												"id": 2732,
												"nodeType": "ExpressionStatement",
												"src": "1422:94:15"
											},
											{
												"expression": {
													"id": 2737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2733,
														"name": "_tokenIdentityStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3690,
														"src": "1526:21:15",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IIdentityRegistryStorage_$3586",
															"typeString": "contract IIdentityRegistryStorage"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2735,
																"name": "_identityStorage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2692,
																"src": "1575:16:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2734,
															"name": "IIdentityRegistryStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3586,
															"src": "1550:24:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IIdentityRegistryStorage_$3586_$",
																"typeString": "type(contract IIdentityRegistryStorage)"
															}
														},
														"id": 2736,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1550:42:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IIdentityRegistryStorage_$3586",
															"typeString": "contract IIdentityRegistryStorage"
														}
													},
													"src": "1526:66:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentityRegistryStorage_$3586",
														"typeString": "contract IIdentityRegistryStorage"
													}
												},
												"id": 2738,
												"nodeType": "ExpressionStatement",
												"src": "1526:66:15"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2740,
															"name": "_claimTopicsRegistry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2690,
															"src": "1630:20:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2739,
														"name": "ClaimTopicsRegistrySet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3342,
														"src": "1607:22:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1607:44:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2742,
												"nodeType": "EmitStatement",
												"src": "1602:49:15"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2744,
															"name": "_trustedIssuersRegistry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2688,
															"src": "1692:23:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2743,
														"name": "TrustedIssuersRegistrySet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3350,
														"src": "1666:25:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1666:50:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2746,
												"nodeType": "EmitStatement",
												"src": "1661:55:15"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2748,
															"name": "_identityStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2692,
															"src": "1750:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2747,
														"name": "IdentityStorageSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3346,
														"src": "1731:18:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1731:36:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2750,
												"nodeType": "EmitStatement",
												"src": "1726:41:15"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2751,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 759,
														"src": "1777:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1777:16:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2753,
												"nodeType": "ExpressionStatement",
												"src": "1777:16:15"
											}
										]
									},
									"functionSelector": "184b9559",
									"id": 2755,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2695,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2694,
												"name": "initializer",
												"nameLocations": [
													"1096:11:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 935,
												"src": "1096:11:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "1096:11:15"
										}
									],
									"name": "init",
									"nameLocation": "963:4:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2688,
												"mutability": "mutable",
												"name": "_trustedIssuersRegistry",
												"nameLocation": "985:23:15",
												"nodeType": "VariableDeclaration",
												"scope": 2755,
												"src": "977:31:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2687,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "977:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2690,
												"mutability": "mutable",
												"name": "_claimTopicsRegistry",
												"nameLocation": "1026:20:15",
												"nodeType": "VariableDeclaration",
												"scope": 2755,
												"src": "1018:28:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2689,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2692,
												"mutability": "mutable",
												"name": "_identityStorage",
												"nameLocation": "1064:16:15",
												"nodeType": "VariableDeclaration",
												"scope": 2755,
												"src": "1056:24:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1056:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "967:119:15"
									},
									"returnParameters": {
										"id": 2696,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1108:0:15"
									},
									"scope": 3304,
									"src": "954:846:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										3436
									],
									"body": {
										"id": 2795,
										"nodeType": "Block",
										"src": "2060:159:15",
										"statements": [
											{
												"body": {
													"id": 2793,
													"nodeType": "Block",
													"src": "2122:91:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 2782,
																			"name": "_userAddresses",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2759,
																			"src": "2153:14:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 2784,
																		"indexExpression": {
																			"id": 2783,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2771,
																			"src": "2168:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2153:17:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 2785,
																			"name": "_identities",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2763,
																			"src": "2172:11:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_contract$_IIdentity_$323_$dyn_calldata_ptr",
																				"typeString": "contract IIdentity[] calldata"
																			}
																		},
																		"id": 2787,
																		"indexExpression": {
																			"id": 2786,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2771,
																			"src": "2184:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2172:14:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IIdentity_$323",
																			"typeString": "contract IIdentity"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 2788,
																			"name": "_countries",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2766,
																			"src": "2188:10:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint16_$dyn_calldata_ptr",
																				"typeString": "uint16[] calldata"
																			}
																		},
																		"id": 2790,
																		"indexExpression": {
																			"id": 2789,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2771,
																			"src": "2199:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2188:13:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_contract$_IIdentity_$323",
																			"typeString": "contract IIdentity"
																		},
																		{
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	],
																	"id": 2781,
																	"name": "registerIdentity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3287,
																	"src": "2136:16:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_contract$_IIdentity_$323_$_t_uint16_$returns$__$",
																		"typeString": "function (address,contract IIdentity,uint16)"
																	}
																},
																"id": 2791,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2136:66:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2792,
															"nodeType": "ExpressionStatement",
															"src": "2136:66:15"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2774,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2771,
														"src": "2090:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2775,
															"name": "_userAddresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2759,
															"src": "2094:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 2776,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2109:6:15",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2094:21:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2090:25:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2794,
												"initializationExpression": {
													"assignments": [
														2771
													],
													"declarations": [
														{
															"constant": false,
															"id": 2771,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2083:1:15",
															"nodeType": "VariableDeclaration",
															"scope": 2794,
															"src": "2075:9:15",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2770,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2075:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2773,
													"initialValue": {
														"hexValue": "30",
														"id": 2772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2087:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2075:13:15"
												},
												"loopExpression": {
													"expression": {
														"id": 2779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2117:3:15",
														"subExpression": {
															"id": 2778,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2771,
															"src": "2117:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2780,
													"nodeType": "ExpressionStatement",
													"src": "2117:3:15"
												},
												"nodeType": "ForStatement",
												"src": "2070:143:15"
											}
										]
									},
									"documentation": {
										"id": 2756,
										"nodeType": "StructuredDocumentation",
										"src": "1806:71:15",
										"text": "  @dev See {IIdentityRegistry-batchRegisterIdentity}."
									},
									"functionSelector": "653dc9f1",
									"id": 2796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "batchRegisterIdentity",
									"nameLocation": "1891:21:15",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2768,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2051:8:15"
									},
									"parameters": {
										"id": 2767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2759,
												"mutability": "mutable",
												"name": "_userAddresses",
												"nameLocation": "1941:14:15",
												"nodeType": "VariableDeclaration",
												"scope": 2796,
												"src": "1922:33:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2757,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1922:7:15",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2758,
													"nodeType": "ArrayTypeName",
													"src": "1922:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2763,
												"mutability": "mutable",
												"name": "_identities",
												"nameLocation": "1986:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 2796,
												"src": "1965:32:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IIdentity_$323_$dyn_calldata_ptr",
													"typeString": "contract IIdentity[]"
												},
												"typeName": {
													"baseType": {
														"id": 2761,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2760,
															"name": "IIdentity",
															"nameLocations": [
																"1965:9:15"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 323,
															"src": "1965:9:15"
														},
														"referencedDeclaration": 323,
														"src": "1965:9:15",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IIdentity_$323",
															"typeString": "contract IIdentity"
														}
													},
													"id": 2762,
													"nodeType": "ArrayTypeName",
													"src": "1965:11:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IIdentity_$323_$dyn_storage_ptr",
														"typeString": "contract IIdentity[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2766,
												"mutability": "mutable",
												"name": "_countries",
												"nameLocation": "2025:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 2796,
												"src": "2007:28:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint16_$dyn_calldata_ptr",
													"typeString": "uint16[]"
												},
												"typeName": {
													"baseType": {
														"id": 2764,
														"name": "uint16",
														"nodeType": "ElementaryTypeName",
														"src": "2007:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"id": 2765,
													"nodeType": "ArrayTypeName",
													"src": "2007:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint16_$dyn_storage_ptr",
														"typeString": "uint16[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1912:129:15"
									},
									"returnParameters": {
										"id": 2769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2060:0:15"
									},
									"scope": 3304,
									"src": "1882:337:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										3423
									],
									"body": {
										"id": 2828,
										"nodeType": "Block",
										"src": "2428:194:15",
										"statements": [
											{
												"assignments": [
													2811
												],
												"declarations": [
													{
														"constant": false,
														"id": 2811,
														"mutability": "mutable",
														"name": "oldIdentity",
														"nameLocation": "2448:11:15",
														"nodeType": "VariableDeclaration",
														"scope": 2828,
														"src": "2438:21:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IIdentity_$323",
															"typeString": "contract IIdentity"
														},
														"typeName": {
															"id": 2810,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2809,
																"name": "IIdentity",
																"nameLocations": [
																	"2438:9:15"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 323,
																"src": "2438:9:15"
															},
															"referencedDeclaration": 323,
															"src": "2438:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IIdentity_$323",
																"typeString": "contract IIdentity"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2815,
												"initialValue": {
													"arguments": [
														{
															"id": 2813,
															"name": "_userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2799,
															"src": "2471:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2812,
														"name": "identity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3303,
														"src": "2462:8:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_contract$_IIdentity_$323_$",
															"typeString": "function (address) view returns (contract IIdentity)"
														}
													},
													"id": 2814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2462:22:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$323",
														"typeString": "contract IIdentity"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2438:46:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2819,
															"name": "_userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2799,
															"src": "2537:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2820,
															"name": "_identity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2802,
															"src": "2551:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IIdentity_$323",
																"typeString": "contract IIdentity"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_contract$_IIdentity_$323",
																"typeString": "contract IIdentity"
															}
														],
														"expression": {
															"id": 2816,
															"name": "_tokenIdentityStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3690,
															"src": "2494:21:15",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IIdentityRegistryStorage_$3586",
																"typeString": "contract IIdentityRegistryStorage"
															}
														},
														"id": 2818,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2516:20:15",
														"memberName": "modifyStoredIdentity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3554,
														"src": "2494:42:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_IIdentity_$323_$returns$__$",
															"typeString": "function (address,contract IIdentity) external"
														}
													},
													"id": 2821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2494:67:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2822,
												"nodeType": "ExpressionStatement",
												"src": "2494:67:15"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2824,
															"name": "oldIdentity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2811,
															"src": "2592:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IIdentity_$323",
																"typeString": "contract IIdentity"
															}
														},
														{
															"id": 2825,
															"name": "_identity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2802,
															"src": "2605:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IIdentity_$323",
																"typeString": "contract IIdentity"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IIdentity_$323",
																"typeString": "contract IIdentity"
															},
															{
																"typeIdentifier": "t_contract$_IIdentity_$323",
																"typeString": "contract IIdentity"
															}
														],
														"id": 2823,
														"name": "IdentityUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3372,
														"src": "2576:15:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_contract$_IIdentity_$323_$_t_contract$_IIdentity_$323_$returns$__$",
															"typeString": "function (contract IIdentity,contract IIdentity)"
														}
													},
													"id": 2826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2576:39:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2827,
												"nodeType": "EmitStatement",
												"src": "2571:44:15"
											}
										]
									},
									"documentation": {
										"id": 2797,
										"nodeType": "StructuredDocumentation",
										"src": "2225:64:15",
										"text": "  @dev See {IIdentityRegistry-updateIdentity}."
									},
									"functionSelector": "8e098ca1",
									"id": 2829,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2806,
													"name": "AGENT_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2683,
													"src": "2412:10:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2807,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2805,
												"name": "onlyRole",
												"nameLocations": [
													"2403:8:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 377,
												"src": "2403:8:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "2403:20:15"
										}
									],
									"name": "updateIdentity",
									"nameLocation": "2303:14:15",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2804,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2386:8:15"
									},
									"parameters": {
										"id": 2803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2799,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "2326:12:15",
												"nodeType": "VariableDeclaration",
												"scope": 2829,
												"src": "2318:20:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2318:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2802,
												"mutability": "mutable",
												"name": "_identity",
												"nameLocation": "2350:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 2829,
												"src": "2340:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$323",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 2801,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2800,
														"name": "IIdentity",
														"nameLocations": [
															"2340:9:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "2340:9:15"
													},
													"referencedDeclaration": 323,
													"src": "2340:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$323",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2317:43:15"
									},
									"returnParameters": {
										"id": 2808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2428:0:15"
									},
									"scope": 3304,
									"src": "2294:328:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										3415
									],
									"body": {
										"id": 2853,
										"nodeType": "Block",
										"src": "2825:177:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2844,
															"name": "_userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2832,
															"src": "2898:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2845,
															"name": "_country",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2834,
															"src": "2924:8:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														],
														"expression": {
															"id": 2841,
															"name": "_tokenIdentityStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3690,
															"src": "2835:21:15",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IIdentityRegistryStorage_$3586",
																"typeString": "contract IIdentityRegistryStorage"
															}
														},
														"id": 2843,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2857:27:15",
														"memberName": "modifyStoredInvestorCountry",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3546,
														"src": "2835:49:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint16_$returns$__$",
															"typeString": "function (address,uint16) external"
														}
													},
													"id": 2846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2835:107:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2847,
												"nodeType": "ExpressionStatement",
												"src": "2835:107:15"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2849,
															"name": "_userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2832,
															"src": "2972:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2850,
															"name": "_country",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2834,
															"src": "2986:8:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														],
														"id": 2848,
														"name": "CountryUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3378,
														"src": "2957:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint16_$returns$__$",
															"typeString": "function (address,uint16)"
														}
													},
													"id": 2851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2957:38:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2852,
												"nodeType": "EmitStatement",
												"src": "2952:43:15"
											}
										]
									},
									"documentation": {
										"id": 2830,
										"nodeType": "StructuredDocumentation",
										"src": "2628:63:15",
										"text": "  @dev See {IIdentityRegistry-updateCountry}."
									},
									"functionSelector": "3b239a7f",
									"id": 2854,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2838,
													"name": "AGENT_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2683,
													"src": "2809:10:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2839,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2837,
												"name": "onlyRole",
												"nameLocations": [
													"2800:8:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 377,
												"src": "2800:8:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "2800:20:15"
										}
									],
									"name": "updateCountry",
									"nameLocation": "2705:13:15",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2836,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2783:8:15"
									},
									"parameters": {
										"id": 2835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2832,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "2727:12:15",
												"nodeType": "VariableDeclaration",
												"scope": 2854,
												"src": "2719:20:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2831,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2834,
												"mutability": "mutable",
												"name": "_country",
												"nameLocation": "2748:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2854,
												"src": "2741:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2833,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2741:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2718:39:15"
									},
									"returnParameters": {
										"id": 2840,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2825:0:15"
									},
									"scope": 3304,
									"src": "2696:306:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										3393
									],
									"body": {
										"id": 2882,
										"nodeType": "Block",
										"src": "3190:191:15",
										"statements": [
											{
												"assignments": [
													2866
												],
												"declarations": [
													{
														"constant": false,
														"id": 2866,
														"mutability": "mutable",
														"name": "oldIdentity",
														"nameLocation": "3210:11:15",
														"nodeType": "VariableDeclaration",
														"scope": 2882,
														"src": "3200:21:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IIdentity_$323",
															"typeString": "contract IIdentity"
														},
														"typeName": {
															"id": 2865,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2864,
																"name": "IIdentity",
																"nameLocations": [
																	"3200:9:15"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 323,
																"src": "3200:9:15"
															},
															"referencedDeclaration": 323,
															"src": "3200:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IIdentity_$323",
																"typeString": "contract IIdentity"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2870,
												"initialValue": {
													"arguments": [
														{
															"id": 2868,
															"name": "_userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2857,
															"src": "3233:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2867,
														"name": "identity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3303,
														"src": "3224:8:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_contract$_IIdentity_$323_$",
															"typeString": "function (address) view returns (contract IIdentity)"
														}
													},
													"id": 2869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3224:22:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$323",
														"typeString": "contract IIdentity"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3200:46:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2874,
															"name": "_userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2857,
															"src": "3304:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2871,
															"name": "_tokenIdentityStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3690,
															"src": "3256:21:15",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IIdentityRegistryStorage_$3586",
																"typeString": "contract IIdentityRegistryStorage"
															}
														},
														"id": 2873,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3278:25:15",
														"memberName": "removeIdentityFromStorage",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3539,
														"src": "3256:47:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address) external"
														}
													},
													"id": 2875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3256:61:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2876,
												"nodeType": "ExpressionStatement",
												"src": "3256:61:15"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2878,
															"name": "_userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2857,
															"src": "3348:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2879,
															"name": "oldIdentity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2866,
															"src": "3362:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IIdentity_$323",
																"typeString": "contract IIdentity"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_contract$_IIdentity_$323",
																"typeString": "contract IIdentity"
															}
														],
														"id": 2877,
														"name": "IdentityRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3364,
														"src": "3332:15:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_contract$_IIdentity_$323_$returns$__$",
															"typeString": "function (address,contract IIdentity)"
														}
													},
													"id": 2880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3332:42:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2881,
												"nodeType": "EmitStatement",
												"src": "3327:47:15"
											}
										]
									},
									"documentation": {
										"id": 2855,
										"nodeType": "StructuredDocumentation",
										"src": "3008:64:15",
										"text": "  @dev See {IIdentityRegistry-deleteIdentity}."
									},
									"functionSelector": "a8d29d1d",
									"id": 2883,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2861,
													"name": "AGENT_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2683,
													"src": "3174:10:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2862,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2860,
												"name": "onlyRole",
												"nameLocations": [
													"3165:8:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 377,
												"src": "3165:8:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "3165:20:15"
										}
									],
									"name": "deleteIdentity",
									"nameLocation": "3086:14:15",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2859,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3148:8:15"
									},
									"parameters": {
										"id": 2858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2857,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "3109:12:15",
												"nodeType": "VariableDeclaration",
												"scope": 2883,
												"src": "3101:20:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3101:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3100:22:15"
									},
									"returnParameters": {
										"id": 2863,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3190:0:15"
									},
									"scope": 3304,
									"src": "3077:304:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										3398
									],
									"body": {
										"id": 2903,
										"nodeType": "Block",
										"src": "3605:172:15",
										"statements": [
											{
												"expression": {
													"id": 2897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2893,
														"name": "_tokenIdentityStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3690,
														"src": "3615:21:15",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IIdentityRegistryStorage_$3586",
															"typeString": "contract IIdentityRegistryStorage"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2895,
																"name": "_identityRegistryStorage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2886,
																"src": "3677:24:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2894,
															"name": "IIdentityRegistryStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3586,
															"src": "3639:24:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IIdentityRegistryStorage_$3586_$",
																"typeString": "type(contract IIdentityRegistryStorage)"
															}
														},
														"id": 2896,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3639:72:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IIdentityRegistryStorage_$3586",
															"typeString": "contract IIdentityRegistryStorage"
														}
													},
													"src": "3615:96:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentityRegistryStorage_$3586",
														"typeString": "contract IIdentityRegistryStorage"
													}
												},
												"id": 2898,
												"nodeType": "ExpressionStatement",
												"src": "3615:96:15"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2900,
															"name": "_identityRegistryStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2886,
															"src": "3745:24:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2899,
														"name": "IdentityStorageSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3346,
														"src": "3726:18:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3726:44:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2902,
												"nodeType": "EmitStatement",
												"src": "3721:49:15"
											}
										]
									},
									"documentation": {
										"id": 2884,
										"nodeType": "StructuredDocumentation",
										"src": "3387:76:15",
										"text": "  @dev See {IIdentityRegistry-setIdentityRegistryStorage}."
									},
									"functionSelector": "26d941ae",
									"id": 2904,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2890,
													"name": "OWNER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2686,
													"src": "3589:10:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2891,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2889,
												"name": "onlyRole",
												"nameLocations": [
													"3580:8:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 377,
												"src": "3580:8:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "3580:20:15"
										}
									],
									"name": "setIdentityRegistryStorage",
									"nameLocation": "3477:26:15",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2888,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3563:8:15"
									},
									"parameters": {
										"id": 2887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2886,
												"mutability": "mutable",
												"name": "_identityRegistryStorage",
												"nameLocation": "3512:24:15",
												"nodeType": "VariableDeclaration",
												"scope": 2904,
												"src": "3504:32:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2885,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3504:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3503:34:15"
									},
									"returnParameters": {
										"id": 2892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3605:0:15"
									},
									"scope": 3304,
									"src": "3468:309:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										3403
									],
									"body": {
										"id": 2924,
										"nodeType": "Block",
										"src": "3989:141:15",
										"statements": [
											{
												"expression": {
													"id": 2918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2914,
														"name": "_tokenTopicsRegistry",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3684,
														"src": "3999:20:15",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IClaimTopicsRegistry_$3331",
															"typeString": "contract IClaimTopicsRegistry"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2916,
																"name": "_claimTopicsRegistry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2907,
																"src": "4043:20:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2915,
															"name": "IClaimTopicsRegistry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3331,
															"src": "4022:20:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IClaimTopicsRegistry_$3331_$",
																"typeString": "type(contract IClaimTopicsRegistry)"
															}
														},
														"id": 2917,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4022:42:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IClaimTopicsRegistry_$3331",
															"typeString": "contract IClaimTopicsRegistry"
														}
													},
													"src": "3999:65:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimTopicsRegistry_$3331",
														"typeString": "contract IClaimTopicsRegistry"
													}
												},
												"id": 2919,
												"nodeType": "ExpressionStatement",
												"src": "3999:65:15"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2921,
															"name": "_claimTopicsRegistry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2907,
															"src": "4102:20:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2920,
														"name": "ClaimTopicsRegistrySet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3342,
														"src": "4079:22:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4079:44:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2923,
												"nodeType": "EmitStatement",
												"src": "4074:49:15"
											}
										]
									},
									"documentation": {
										"id": 2905,
										"nodeType": "StructuredDocumentation",
										"src": "3783:72:15",
										"text": "  @dev See {IIdentityRegistry-setClaimTopicsRegistry}."
									},
									"functionSelector": "670af6a9",
									"id": 2925,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2911,
													"name": "OWNER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2686,
													"src": "3973:10:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2912,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2910,
												"name": "onlyRole",
												"nameLocations": [
													"3964:8:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 377,
												"src": "3964:8:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "3964:20:15"
										}
									],
									"name": "setClaimTopicsRegistry",
									"nameLocation": "3869:22:15",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2909,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3947:8:15"
									},
									"parameters": {
										"id": 2908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2907,
												"mutability": "mutable",
												"name": "_claimTopicsRegistry",
												"nameLocation": "3900:20:15",
												"nodeType": "VariableDeclaration",
												"scope": 2925,
												"src": "3892:28:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2906,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3891:30:15"
									},
									"returnParameters": {
										"id": 2913,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3989:0:15"
									},
									"scope": 3304,
									"src": "3860:270:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										3408
									],
									"body": {
										"id": 2945,
										"nodeType": "Block",
										"src": "4351:176:15",
										"statements": [
											{
												"expression": {
													"id": 2939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2935,
														"name": "_tokenIssuersRegistry",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3687,
														"src": "4361:21:15",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ITrustedIssuersRegistry_$3676",
															"typeString": "contract ITrustedIssuersRegistry"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2937,
																"name": "_trustedIssuersRegistry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2928,
																"src": "4422:23:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2936,
															"name": "ITrustedIssuersRegistry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3676,
															"src": "4385:23:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ITrustedIssuersRegistry_$3676_$",
																"typeString": "type(contract ITrustedIssuersRegistry)"
															}
														},
														"id": 2938,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4385:70:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ITrustedIssuersRegistry_$3676",
															"typeString": "contract ITrustedIssuersRegistry"
														}
													},
													"src": "4361:94:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ITrustedIssuersRegistry_$3676",
														"typeString": "contract ITrustedIssuersRegistry"
													}
												},
												"id": 2940,
												"nodeType": "ExpressionStatement",
												"src": "4361:94:15"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2942,
															"name": "_trustedIssuersRegistry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2928,
															"src": "4496:23:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2941,
														"name": "TrustedIssuersRegistrySet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3350,
														"src": "4470:25:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4470:50:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2944,
												"nodeType": "EmitStatement",
												"src": "4465:55:15"
											}
										]
									},
									"documentation": {
										"id": 2926,
										"nodeType": "StructuredDocumentation",
										"src": "4136:75:15",
										"text": "  @dev See {IIdentityRegistry-setTrustedIssuersRegistry}."
									},
									"functionSelector": "e744d789",
									"id": 2946,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2932,
													"name": "OWNER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2686,
													"src": "4335:10:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2933,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2931,
												"name": "onlyRole",
												"nameLocations": [
													"4326:8:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 377,
												"src": "4326:8:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "4326:20:15"
										}
									],
									"name": "setTrustedIssuersRegistry",
									"nameLocation": "4225:25:15",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2930,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4309:8:15"
									},
									"parameters": {
										"id": 2929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2928,
												"mutability": "mutable",
												"name": "_trustedIssuersRegistry",
												"nameLocation": "4259:23:15",
												"nodeType": "VariableDeclaration",
												"scope": 2946,
												"src": "4251:31:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4251:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4250:33:15"
									},
									"returnParameters": {
										"id": 2934,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4351:0:15"
									},
									"scope": 3304,
									"src": "4216:311:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										3450
									],
									"body": {
										"id": 3182,
										"nodeType": "Block",
										"src": "4763:2444:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2958,
																		"name": "_userAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2949,
																		"src": "4794:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2957,
																	"name": "identity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3303,
																	"src": "4785:8:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_contract$_IIdentity_$323_$",
																		"typeString": "function (address) view returns (contract IIdentity)"
																	}
																},
																"id": 2959,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4785:22:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IIdentity_$323",
																	"typeString": "contract IIdentity"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IIdentity_$323",
																	"typeString": "contract IIdentity"
																}
															],
															"id": 2956,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4777:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2955,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4777:7:15",
																"typeDescriptions": {}
															}
														},
														"id": 2960,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4777:31:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2963,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4820:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2962,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4812:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2961,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4812:7:15",
																"typeDescriptions": {}
															}
														},
														"id": 2964,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4812:10:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4777:45:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2969,
												"nodeType": "IfStatement",
												"src": "4773:88:15",
												"trueBody": {
													"id": 2968,
													"nodeType": "Block",
													"src": "4824:37:15",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 2966,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4845:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 2954,
															"id": 2967,
															"nodeType": "Return",
															"src": "4838:12:15"
														}
													]
												}
											},
											{
												"assignments": [
													2974
												],
												"declarations": [
													{
														"constant": false,
														"id": 2974,
														"mutability": "mutable",
														"name": "requiredClaimTopics",
														"nameLocation": "4887:19:15",
														"nodeType": "VariableDeclaration",
														"scope": 3182,
														"src": "4870:36:15",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 2972,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4870:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2973,
															"nodeType": "ArrayTypeName",
															"src": "4870:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2978,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2975,
															"name": "_tokenTopicsRegistry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3684,
															"src": "4909:20:15",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IClaimTopicsRegistry_$3331",
																"typeString": "contract IClaimTopicsRegistry"
															}
														},
														"id": 2976,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4943:14:15",
														"memberName": "getClaimTopics",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3330,
														"src": "4909:48:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function () view external returns (uint256[] memory)"
														}
													},
													"id": 2977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4909:50:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4870:89:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2979,
															"name": "requiredClaimTopics",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2974,
															"src": "4973:19:15",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 2980,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4993:6:15",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4973:26:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2981,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5003:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4973:31:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2986,
												"nodeType": "IfStatement",
												"src": "4969:73:15",
												"trueBody": {
													"id": 2985,
													"nodeType": "Block",
													"src": "5006:36:15",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 2983,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5027:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 2954,
															"id": 2984,
															"nodeType": "Return",
															"src": "5020:11:15"
														}
													]
												}
											},
											{
												"assignments": [
													2988
												],
												"declarations": [
													{
														"constant": false,
														"id": 2988,
														"mutability": "mutable",
														"name": "foundClaimTopic",
														"nameLocation": "5060:15:15",
														"nodeType": "VariableDeclaration",
														"scope": 3182,
														"src": "5052:23:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2987,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5052:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2989,
												"nodeType": "VariableDeclarationStatement",
												"src": "5052:23:15"
											},
											{
												"assignments": [
													2991
												],
												"declarations": [
													{
														"constant": false,
														"id": 2991,
														"mutability": "mutable",
														"name": "scheme",
														"nameLocation": "5093:6:15",
														"nodeType": "VariableDeclaration",
														"scope": 3182,
														"src": "5085:14:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2990,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5085:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2992,
												"nodeType": "VariableDeclarationStatement",
												"src": "5085:14:15"
											},
											{
												"assignments": [
													2994
												],
												"declarations": [
													{
														"constant": false,
														"id": 2994,
														"mutability": "mutable",
														"name": "issuer",
														"nameLocation": "5117:6:15",
														"nodeType": "VariableDeclaration",
														"scope": 3182,
														"src": "5109:14:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2993,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5109:7:15",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2995,
												"nodeType": "VariableDeclarationStatement",
												"src": "5109:14:15"
											},
											{
												"assignments": [
													2997
												],
												"declarations": [
													{
														"constant": false,
														"id": 2997,
														"mutability": "mutable",
														"name": "sig",
														"nameLocation": "5146:3:15",
														"nodeType": "VariableDeclaration",
														"scope": 3182,
														"src": "5133:16:15",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2996,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5133:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2998,
												"nodeType": "VariableDeclarationStatement",
												"src": "5133:16:15"
											},
											{
												"assignments": [
													3000
												],
												"declarations": [
													{
														"constant": false,
														"id": 3000,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "5172:4:15",
														"nodeType": "VariableDeclaration",
														"scope": 3182,
														"src": "5159:17:15",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2999,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5159:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3001,
												"nodeType": "VariableDeclarationStatement",
												"src": "5159:17:15"
											},
											{
												"assignments": [
													3003
												],
												"declarations": [
													{
														"constant": false,
														"id": 3003,
														"mutability": "mutable",
														"name": "claimTopic",
														"nameLocation": "5194:10:15",
														"nodeType": "VariableDeclaration",
														"scope": 3182,
														"src": "5186:18:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3002,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5186:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3004,
												"nodeType": "VariableDeclarationStatement",
												"src": "5186:18:15"
											},
											{
												"body": {
													"id": 3178,
													"nodeType": "Block",
													"src": "5336:1844:15",
													"statements": [
														{
															"assignments": [
																3020
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3020,
																	"mutability": "mutable",
																	"name": "trustedIssuers",
																	"nameLocation": "5372:14:15",
																	"nodeType": "VariableDeclaration",
																	"scope": 3178,
																	"src": "5350:36:15",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$59_$dyn_memory_ptr",
																		"typeString": "contract IClaimIssuer[]"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 3018,
																			"nodeType": "UserDefinedTypeName",
																			"pathNode": {
																				"id": 3017,
																				"name": "IClaimIssuer",
																				"nameLocations": [
																					"5350:12:15"
																				],
																				"nodeType": "IdentifierPath",
																				"referencedDeclaration": 59,
																				"src": "5350:12:15"
																			},
																			"referencedDeclaration": 59,
																			"src": "5350:12:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																				"typeString": "contract IClaimIssuer"
																			}
																		},
																		"id": 3019,
																		"nodeType": "ArrayTypeName",
																		"src": "5350:14:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_ptr",
																			"typeString": "contract IClaimIssuer[]"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3027,
															"initialValue": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 3023,
																			"name": "requiredClaimTopics",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2974,
																			"src": "5480:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 3025,
																		"indexExpression": {
																			"id": 3024,
																			"name": "claimTopic",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3003,
																			"src": "5500:10:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5480:31:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 3021,
																		"name": "_tokenIssuersRegistry",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3687,
																		"src": "5389:21:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ITrustedIssuersRegistry_$3676",
																			"typeString": "contract ITrustedIssuersRegistry"
																		}
																	},
																	"id": 3022,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5428:30:15",
																	"memberName": "getTrustedIssuersForClaimTopic",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3650,
																	"src": "5389:69:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_array$_t_contract$_IClaimIssuer_$59_$dyn_memory_ptr_$",
																		"typeString": "function (uint256) view external returns (contract IClaimIssuer[] memory)"
																	}
																},
																"id": 3026,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5389:140:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$59_$dyn_memory_ptr",
																	"typeString": "contract IClaimIssuer[] memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5350:179:15"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3031,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 3028,
																		"name": "trustedIssuers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3020,
																		"src": "5548:14:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$59_$dyn_memory_ptr",
																			"typeString": "contract IClaimIssuer[] memory"
																		}
																	},
																	"id": 3029,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5563:6:15",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "5548:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 3030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5573:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5548:26:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3035,
															"nodeType": "IfStatement",
															"src": "5544:77:15",
															"trueBody": {
																"id": 3034,
																"nodeType": "Block",
																"src": "5576:45:15",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "66616c7365",
																			"id": 3032,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5601:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "false"
																		},
																		"functionReturnParameters": 2954,
																		"id": 3033,
																		"nodeType": "Return",
																		"src": "5594:12:15"
																	}
																]
															}
														},
														{
															"assignments": [
																3040
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3040,
																	"mutability": "mutable",
																	"name": "claimIds",
																	"nameLocation": "5652:8:15",
																	"nodeType": "VariableDeclaration",
																	"scope": 3178,
																	"src": "5635:25:15",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																		"typeString": "bytes32[]"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 3038,
																			"name": "bytes32",
																			"nodeType": "ElementaryTypeName",
																			"src": "5635:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 3039,
																		"nodeType": "ArrayTypeName",
																		"src": "5635:9:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																			"typeString": "bytes32[]"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3047,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 3044,
																			"name": "trustedIssuers",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3020,
																			"src": "5677:14:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$59_$dyn_memory_ptr",
																				"typeString": "contract IClaimIssuer[] memory"
																			}
																		},
																		"id": 3045,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5692:6:15",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5677:21:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3043,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "NewExpression",
																	"src": "5663:13:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
																		"typeString": "function (uint256) pure returns (bytes32[] memory)"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 3041,
																			"name": "bytes32",
																			"nodeType": "ElementaryTypeName",
																			"src": "5667:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 3042,
																		"nodeType": "ArrayTypeName",
																		"src": "5667:9:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																			"typeString": "bytes32[]"
																		}
																	}
																},
																"id": 3046,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5663:36:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																	"typeString": "bytes32[] memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5635:64:15"
														},
														{
															"body": {
																"id": 3075,
																"nodeType": "Block",
																"src": "5765:228:15",
																"statements": [
																	{
																		"expression": {
																			"id": 3073,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 3059,
																					"name": "claimIds",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3040,
																					"src": "5783:8:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																						"typeString": "bytes32[] memory"
																					}
																				},
																				"id": 3061,
																				"indexExpression": {
																					"id": 3060,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3049,
																					"src": "5792:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "5783:11:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"baseExpression": {
																									"id": 3065,
																									"name": "trustedIssuers",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3020,
																									"src": "5864:14:15",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$59_$dyn_memory_ptr",
																										"typeString": "contract IClaimIssuer[] memory"
																									}
																								},
																								"id": 3067,
																								"indexExpression": {
																									"id": 3066,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3049,
																									"src": "5879:1:15",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "5864:17:15",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																									"typeString": "contract IClaimIssuer"
																								}
																							},
																							{
																								"baseExpression": {
																									"id": 3068,
																									"name": "requiredClaimTopics",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2974,
																									"src": "5907:19:15",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																										"typeString": "uint256[] memory"
																									}
																								},
																								"id": 3070,
																								"indexExpression": {
																									"id": 3069,
																									"name": "claimTopic",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3003,
																									"src": "5927:10:15",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "5907:31:15",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																									"typeString": "contract IClaimIssuer"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"id": 3063,
																								"name": "abi",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967295,
																								"src": "5828:3:15",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_abi",
																									"typeString": "abi"
																								}
																							},
																							"id": 3064,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "5832:6:15",
																							"memberName": "encode",
																							"nodeType": "MemberAccess",
																							"src": "5828:10:15",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																								"typeString": "function () pure returns (bytes memory)"
																							}
																						},
																						"id": 3071,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5828:132:15",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					],
																					"id": 3062,
																					"name": "keccak256",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967288,
																					"src": "5797:9:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																						"typeString": "function (bytes memory) pure returns (bytes32)"
																					}
																				},
																				"id": 3072,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5797:181:15",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "5783:195:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 3074,
																		"nodeType": "ExpressionStatement",
																		"src": "5783:195:15"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3055,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3052,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3049,
																	"src": "5733:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 3053,
																		"name": "trustedIssuers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3020,
																		"src": "5737:14:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$59_$dyn_memory_ptr",
																			"typeString": "contract IClaimIssuer[] memory"
																		}
																	},
																	"id": 3054,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5752:6:15",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "5737:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5733:25:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3076,
															"initializationExpression": {
																"assignments": [
																	3049
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 3049,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "5726:1:15",
																		"nodeType": "VariableDeclaration",
																		"scope": 3076,
																		"src": "5718:9:15",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 3048,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "5718:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 3051,
																"initialValue": {
																	"hexValue": "30",
																	"id": 3050,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5730:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "5718:13:15"
															},
															"loopExpression": {
																"expression": {
																	"id": 3057,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "5760:3:15",
																	"subExpression": {
																		"id": 3056,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3049,
																		"src": "5760:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 3058,
																"nodeType": "ExpressionStatement",
																"src": "5760:3:15"
															},
															"nodeType": "ForStatement",
															"src": "5713:280:15"
														},
														{
															"body": {
																"id": 3176,
																"nodeType": "Block",
																"src": "6053:1117:15",
																"statements": [
																	{
																		"expression": {
																			"id": 3102,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"components": [
																					{
																						"id": 3088,
																						"name": "foundClaimTopic",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2988,
																						"src": "6072:15:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"id": 3089,
																						"name": "scheme",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2991,
																						"src": "6089:6:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"id": 3090,
																						"name": "issuer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2994,
																						"src": "6097:6:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"id": 3091,
																						"name": "sig",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2997,
																						"src": "6105:3:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					},
																					{
																						"id": 3092,
																						"name": "data",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3000,
																						"src": "6110:4:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					},
																					null
																				],
																				"id": 3093,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "TupleExpression",
																				"src": "6071:46:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$__$",
																					"typeString": "tuple(uint256,uint256,address,bytes memory,bytes memory,)"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"baseExpression": {
																							"id": 3098,
																							"name": "claimIds",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3040,
																							"src": "6190:8:15",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																								"typeString": "bytes32[] memory"
																							}
																						},
																						"id": 3100,
																						"indexExpression": {
																							"id": 3099,
																							"name": "j",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3078,
																							"src": "6199:1:15",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "6190:11:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					],
																					"expression": {
																						"arguments": [
																							{
																								"id": 3095,
																								"name": "_userAddress",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2949,
																								"src": "6150:12:15",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"id": 3094,
																							"name": "identity",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3303,
																							"src": "6120:8:15",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_contract$_IIdentity_$323_$",
																								"typeString": "function (address) view returns (contract IIdentity)"
																							}
																						},
																						"id": 3096,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "6120:60:15",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IIdentity_$323",
																							"typeString": "contract IIdentity"
																						}
																					},
																					"id": 3097,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "6181:8:15",
																					"memberName": "getClaim",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 304,
																					"src": "6120:69:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_uint256_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$",
																						"typeString": "function (bytes32) view external returns (uint256,uint256,address,bytes memory,bytes memory,string memory)"
																					}
																				},
																				"id": 3101,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6120:82:15",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$",
																					"typeString": "tuple(uint256,uint256,address,bytes memory,bytes memory,string memory)"
																				}
																			},
																			"src": "6071:131:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 3103,
																		"nodeType": "ExpressionStatement",
																		"src": "6071:131:15"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3108,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3104,
																				"name": "foundClaimTopic",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2988,
																				"src": "6225:15:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"baseExpression": {
																					"id": 3105,
																					"name": "requiredClaimTopics",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2974,
																					"src": "6244:19:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 3107,
																				"indexExpression": {
																					"id": 3106,
																					"name": "claimTopic",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3003,
																					"src": "6264:10:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "6244:31:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6225:50:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3170,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3164,
																					"name": "j",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3078,
																					"src": "7075:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 3168,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"expression": {
																									"id": 3165,
																									"name": "claimIds",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3040,
																									"src": "7081:8:15",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																										"typeString": "bytes32[] memory"
																									}
																								},
																								"id": 3166,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "7090:6:15",
																								"memberName": "length",
																								"nodeType": "MemberAccess",
																								"src": "7081:15:15",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"hexValue": "31",
																								"id": 3167,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "7099:1:15",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"src": "7081:19:15",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 3169,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "7080:21:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7075:26:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"id": 3174,
																			"nodeType": "IfStatement",
																			"src": "7071:85:15",
																			"trueBody": {
																				"id": 3173,
																				"nodeType": "Block",
																				"src": "7103:53:15",
																				"statements": [
																					{
																						"expression": {
																							"hexValue": "66616c7365",
																							"id": 3171,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "bool",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "7132:5:15",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							"value": "false"
																						},
																						"functionReturnParameters": 2954,
																						"id": 3172,
																						"nodeType": "Return",
																						"src": "7125:12:15"
																					}
																				]
																			}
																		},
																		"id": 3175,
																		"nodeType": "IfStatement",
																		"src": "6221:935:15",
																		"trueBody": {
																			"id": 3163,
																			"nodeType": "Block",
																			"src": "6277:788:15",
																			"statements": [
																				{
																					"clauses": [
																						{
																							"block": {
																								"id": 3147,
																								"nodeType": "Block",
																								"src": "6612:279:15",
																								"statements": [
																									{
																										"condition": {
																											"id": 3125,
																											"name": "_validity",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 3123,
																											"src": "6642:9:15",
																											"typeDescriptions": {
																												"typeIdentifier": "t_bool",
																												"typeString": "bool"
																											}
																										},
																										"id": 3132,
																										"nodeType": "IfStatement",
																										"src": "6638:91:15",
																										"trueBody": {
																											"id": 3131,
																											"nodeType": "Block",
																											"src": "6653:76:15",
																											"statements": [
																												{
																													"expression": {
																														"id": 3129,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"lValueRequested": false,
																														"leftHandSide": {
																															"id": 3126,
																															"name": "j",
																															"nodeType": "Identifier",
																															"overloadedDeclarations": [],
																															"referencedDeclaration": 3078,
																															"src": "6683:1:15",
																															"typeDescriptions": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															}
																														},
																														"nodeType": "Assignment",
																														"operator": "=",
																														"rightHandSide": {
																															"expression": {
																																"id": 3127,
																																"name": "claimIds",
																																"nodeType": "Identifier",
																																"overloadedDeclarations": [],
																																"referencedDeclaration": 3040,
																																"src": "6687:8:15",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																																	"typeString": "bytes32[] memory"
																																}
																															},
																															"id": 3128,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"memberLocation": "6696:6:15",
																															"memberName": "length",
																															"nodeType": "MemberAccess",
																															"src": "6687:15:15",
																															"typeDescriptions": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															}
																														},
																														"src": "6683:19:15",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"id": 3130,
																													"nodeType": "ExpressionStatement",
																													"src": "6683:19:15"
																												}
																											]
																										}
																									},
																									{
																										"condition": {
																											"commonType": {
																												"typeIdentifier": "t_bool",
																												"typeString": "bool"
																											},
																											"id": 3142,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"leftExpression": {
																												"id": 3134,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"nodeType": "UnaryOperation",
																												"operator": "!",
																												"prefix": true,
																												"src": "6758:10:15",
																												"subExpression": {
																													"id": 3133,
																													"name": "_validity",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 3123,
																													"src": "6759:9:15",
																													"typeDescriptions": {
																														"typeIdentifier": "t_bool",
																														"typeString": "bool"
																													}
																												},
																												"typeDescriptions": {
																													"typeIdentifier": "t_bool",
																													"typeString": "bool"
																												}
																											},
																											"nodeType": "BinaryOperation",
																											"operator": "&&",
																											"rightExpression": {
																												"commonType": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												},
																												"id": 3141,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"leftExpression": {
																													"id": 3135,
																													"name": "j",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 3078,
																													"src": "6772:1:15",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"nodeType": "BinaryOperation",
																												"operator": "==",
																												"rightExpression": {
																													"components": [
																														{
																															"commonType": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															},
																															"id": 3139,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"leftExpression": {
																																"expression": {
																																	"id": 3136,
																																	"name": "claimIds",
																																	"nodeType": "Identifier",
																																	"overloadedDeclarations": [],
																																	"referencedDeclaration": 3040,
																																	"src": "6778:8:15",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																																		"typeString": "bytes32[] memory"
																																	}
																																},
																																"id": 3137,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": false,
																																"lValueRequested": false,
																																"memberLocation": "6787:6:15",
																																"memberName": "length",
																																"nodeType": "MemberAccess",
																																"src": "6778:15:15",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															},
																															"nodeType": "BinaryOperation",
																															"operator": "-",
																															"rightExpression": {
																																"hexValue": "31",
																																"id": 3138,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": true,
																																"kind": "number",
																																"lValueRequested": false,
																																"nodeType": "Literal",
																																"src": "6796:1:15",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_rational_1_by_1",
																																	"typeString": "int_const 1"
																																},
																																"value": "1"
																															},
																															"src": "6778:19:15",
																															"typeDescriptions": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															}
																														}
																													],
																													"id": 3140,
																													"isConstant": false,
																													"isInlineArray": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"nodeType": "TupleExpression",
																													"src": "6777:21:15",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"src": "6772:26:15",
																												"typeDescriptions": {
																													"typeIdentifier": "t_bool",
																													"typeString": "bool"
																												}
																											},
																											"src": "6758:40:15",
																											"typeDescriptions": {
																												"typeIdentifier": "t_bool",
																												"typeString": "bool"
																											}
																										},
																										"id": 3146,
																										"nodeType": "IfStatement",
																										"src": "6754:115:15",
																										"trueBody": {
																											"id": 3145,
																											"nodeType": "Block",
																											"src": "6800:69:15",
																											"statements": [
																												{
																													"expression": {
																														"hexValue": "66616c7365",
																														"id": 3143,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": true,
																														"kind": "bool",
																														"lValueRequested": false,
																														"nodeType": "Literal",
																														"src": "6837:5:15",
																														"typeDescriptions": {
																															"typeIdentifier": "t_bool",
																															"typeString": "bool"
																														},
																														"value": "false"
																													},
																													"functionReturnParameters": 2954,
																													"id": 3144,
																													"nodeType": "Return",
																													"src": "6830:12:15"
																												}
																											]
																										}
																									}
																								]
																							},
																							"errorName": "",
																							"id": 3148,
																							"nodeType": "TryCatchClause",
																							"parameters": {
																								"id": 3124,
																								"nodeType": "ParameterList",
																								"parameters": [
																									{
																										"constant": false,
																										"id": 3123,
																										"mutability": "mutable",
																										"name": "_validity",
																										"nameLocation": "6601:9:15",
																										"nodeType": "VariableDeclaration",
																										"scope": 3148,
																										"src": "6596:14:15",
																										"stateVariable": false,
																										"storageLocation": "default",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bool",
																											"typeString": "bool"
																										},
																										"typeName": {
																											"id": 3122,
																											"name": "bool",
																											"nodeType": "ElementaryTypeName",
																											"src": "6596:4:15",
																											"typeDescriptions": {
																												"typeIdentifier": "t_bool",
																												"typeString": "bool"
																											}
																										},
																										"visibility": "internal"
																									}
																								],
																								"src": "6595:16:15"
																							},
																							"src": "6587:304:15"
																						},
																						{
																							"block": {
																								"id": 3160,
																								"nodeType": "Block",
																								"src": "6898:149:15",
																								"statements": [
																									{
																										"condition": {
																											"commonType": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											},
																											"id": 3155,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"leftExpression": {
																												"id": 3149,
																												"name": "j",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 3078,
																												"src": "6928:1:15",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"nodeType": "BinaryOperation",
																											"operator": "==",
																											"rightExpression": {
																												"components": [
																													{
																														"commonType": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														},
																														"id": 3153,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"lValueRequested": false,
																														"leftExpression": {
																															"expression": {
																																"id": 3150,
																																"name": "claimIds",
																																"nodeType": "Identifier",
																																"overloadedDeclarations": [],
																																"referencedDeclaration": 3040,
																																"src": "6934:8:15",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																																	"typeString": "bytes32[] memory"
																																}
																															},
																															"id": 3151,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"memberLocation": "6943:6:15",
																															"memberName": "length",
																															"nodeType": "MemberAccess",
																															"src": "6934:15:15",
																															"typeDescriptions": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															}
																														},
																														"nodeType": "BinaryOperation",
																														"operator": "-",
																														"rightExpression": {
																															"hexValue": "31",
																															"id": 3152,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": true,
																															"kind": "number",
																															"lValueRequested": false,
																															"nodeType": "Literal",
																															"src": "6952:1:15",
																															"typeDescriptions": {
																																"typeIdentifier": "t_rational_1_by_1",
																																"typeString": "int_const 1"
																															},
																															"value": "1"
																														},
																														"src": "6934:19:15",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													}
																												],
																												"id": 3154,
																												"isConstant": false,
																												"isInlineArray": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"nodeType": "TupleExpression",
																												"src": "6933:21:15",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"src": "6928:26:15",
																											"typeDescriptions": {
																												"typeIdentifier": "t_bool",
																												"typeString": "bool"
																											}
																										},
																										"id": 3159,
																										"nodeType": "IfStatement",
																										"src": "6924:101:15",
																										"trueBody": {
																											"id": 3158,
																											"nodeType": "Block",
																											"src": "6956:69:15",
																											"statements": [
																												{
																													"expression": {
																														"hexValue": "66616c7365",
																														"id": 3156,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": true,
																														"kind": "bool",
																														"lValueRequested": false,
																														"nodeType": "Literal",
																														"src": "6993:5:15",
																														"typeDescriptions": {
																															"typeIdentifier": "t_bool",
																															"typeString": "bool"
																														},
																														"value": "false"
																													},
																													"functionReturnParameters": 2954,
																													"id": 3157,
																													"nodeType": "Return",
																													"src": "6986:12:15"
																												}
																											]
																										}
																									}
																								]
																							},
																							"errorName": "",
																							"id": 3161,
																							"nodeType": "TryCatchClause",
																							"src": "6892:155:15"
																						}
																					],
																					"externalCall": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 3114,
																										"name": "_userAddress",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2949,
																										"src": "6399:12:15",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 3113,
																									"name": "identity",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3303,
																									"src": "6390:8:15",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_contract$_IIdentity_$323_$",
																										"typeString": "function (address) view returns (contract IIdentity)"
																									}
																								},
																								"id": 3115,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "6390:22:15",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_IIdentity_$323",
																									"typeString": "contract IIdentity"
																								}
																							},
																							{
																								"baseExpression": {
																									"id": 3116,
																									"name": "requiredClaimTopics",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2974,
																									"src": "6442:19:15",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																										"typeString": "uint256[] memory"
																									}
																								},
																								"id": 3118,
																								"indexExpression": {
																									"id": 3117,
																									"name": "claimTopic",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3003,
																									"src": "6462:10:15",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "6442:31:15",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 3119,
																								"name": "sig",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2997,
																								"src": "6503:3:15",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							},
																							{
																								"id": 3120,
																								"name": "data",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3000,
																								"src": "6536:4:15",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_IIdentity_$323",
																									"typeString": "contract IIdentity"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								},
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							],
																							"expression": {
																								"arguments": [
																									{
																										"id": 3110,
																										"name": "issuer",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2994,
																										"src": "6340:6:15",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 3109,
																									"name": "IClaimIssuer",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 59,
																									"src": "6327:12:15",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_contract$_IClaimIssuer_$59_$",
																										"typeString": "type(contract IClaimIssuer)"
																									}
																								},
																								"id": 3111,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "6327:20:15",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																									"typeString": "contract IClaimIssuer"
																								}
																							},
																							"id": 3112,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "6348:12:15",
																							"memberName": "isClaimValid",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 48,
																							"src": "6327:33:15",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_external_view$_t_contract$_IIdentity_$323_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																								"typeString": "function (contract IIdentity,uint256,bytes memory,bytes memory) view external returns (bool)"
																							}
																						},
																						"id": 3121,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "6327:239:15",
																						"tryCall": true,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 3162,
																					"nodeType": "TryStatement",
																					"src": "6299:748:15"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3084,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3081,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3078,
																	"src": "6027:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 3082,
																		"name": "claimIds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3040,
																		"src": "6031:8:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																			"typeString": "bytes32[] memory"
																		}
																	},
																	"id": 3083,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6040:6:15",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "6031:15:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6027:19:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3177,
															"initializationExpression": {
																"assignments": [
																	3078
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 3078,
																		"mutability": "mutable",
																		"name": "j",
																		"nameLocation": "6020:1:15",
																		"nodeType": "VariableDeclaration",
																		"scope": 3177,
																		"src": "6012:9:15",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 3077,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "6012:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 3080,
																"initialValue": {
																	"hexValue": "30",
																	"id": 3079,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6024:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "6012:13:15"
															},
															"loopExpression": {
																"expression": {
																	"id": 3086,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "6048:3:15",
																	"subExpression": {
																		"id": 3085,
																		"name": "j",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3078,
																		"src": "6048:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 3087,
																"nodeType": "ExpressionStatement",
																"src": "6048:3:15"
															},
															"nodeType": "ForStatement",
															"src": "6007:1163:15"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3009,
														"name": "claimTopic",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3003,
														"src": "5260:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 3010,
															"name": "requiredClaimTopics",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2974,
															"src": "5273:19:15",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 3011,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5293:6:15",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5273:26:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5260:39:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3179,
												"initializationExpression": {
													"expression": {
														"id": 3007,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 3005,
															"name": "claimTopic",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3003,
															"src": "5232:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"hexValue": "30",
															"id": 3006,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5245:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5232:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3008,
													"nodeType": "ExpressionStatement",
													"src": "5232:14:15"
												},
												"loopExpression": {
													"expression": {
														"id": 3014,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "5313:12:15",
														"subExpression": {
															"id": 3013,
															"name": "claimTopic",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3003,
															"src": "5313:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3015,
													"nodeType": "ExpressionStatement",
													"src": "5313:12:15"
												},
												"nodeType": "ForStatement",
												"src": "5214:1966:15"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 3180,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7196:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2954,
												"id": 3181,
												"nodeType": "Return",
												"src": "7189:11:15"
											}
										]
									},
									"documentation": {
										"id": 2947,
										"nodeType": "StructuredDocumentation",
										"src": "4533:60:15",
										"text": "  @dev See {IIdentityRegistry-isVerified}."
									},
									"functionSelector": "b9209e33",
									"id": 3183,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isVerified",
									"nameLocation": "4656:10:15",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2951,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4727:8:15"
									},
									"parameters": {
										"id": 2950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2949,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "4675:12:15",
												"nodeType": "VariableDeclaration",
												"scope": 3183,
												"src": "4667:20:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2948,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4667:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4666:22:15"
									},
									"returnParameters": {
										"id": 2954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2953,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3183,
												"src": "4753:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2952,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4753:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4752:6:15"
									},
									"scope": 3304,
									"src": "4647:2560:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										3465
									],
									"body": {
										"id": 3197,
										"nodeType": "Block",
										"src": "7406:81:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3194,
															"name": "_userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3186,
															"src": "7467:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 3192,
															"name": "_tokenIdentityStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3690,
															"src": "7423:21:15",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IIdentityRegistryStorage_$3586",
																"typeString": "contract IIdentityRegistryStorage"
															}
														},
														"id": 3193,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7445:21:15",
														"memberName": "storedInvestorCountry",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3585,
														"src": "7423:43:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint16_$",
															"typeString": "function (address) view external returns (uint16)"
														}
													},
													"id": 3195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7423:57:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 3191,
												"id": 3196,
												"nodeType": "Return",
												"src": "7416:64:15"
											}
										]
									},
									"documentation": {
										"id": 3184,
										"nodeType": "StructuredDocumentation",
										"src": "7213:65:15",
										"text": "  @dev See {IIdentityRegistry-investorCountry}."
									},
									"functionSelector": "7e42683b",
									"id": 3198,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "investorCountry",
									"nameLocation": "7292:15:15",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3188,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7368:8:15"
									},
									"parameters": {
										"id": 3187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3186,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "7316:12:15",
												"nodeType": "VariableDeclaration",
												"scope": 3198,
												"src": "7308:20:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7308:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7307:22:15"
									},
									"returnParameters": {
										"id": 3191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3198,
												"src": "7394:6:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3189,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "7394:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7393:8:15"
									},
									"scope": 3304,
									"src": "7283:204:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										3477
									],
									"body": {
										"id": 3208,
										"nodeType": "Block",
										"src": "7683:45:15",
										"statements": [
											{
												"expression": {
													"id": 3206,
													"name": "_tokenIssuersRegistry",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3687,
													"src": "7700:21:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ITrustedIssuersRegistry_$3676",
														"typeString": "contract ITrustedIssuersRegistry"
													}
												},
												"functionReturnParameters": 3205,
												"id": 3207,
												"nodeType": "Return",
												"src": "7693:28:15"
											}
										]
									},
									"documentation": {
										"id": 3199,
										"nodeType": "StructuredDocumentation",
										"src": "7493:65:15",
										"text": "  @dev See {IIdentityRegistry-issuersRegistry}."
									},
									"functionSelector": "b4f3fcb7",
									"id": 3209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "issuersRegistry",
									"nameLocation": "7572:15:15",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3201,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7628:8:15"
									},
									"parameters": {
										"id": 3200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7587:2:15"
									},
									"returnParameters": {
										"id": 3205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3209,
												"src": "7654:23:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ITrustedIssuersRegistry_$3676",
													"typeString": "contract ITrustedIssuersRegistry"
												},
												"typeName": {
													"id": 3203,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3202,
														"name": "ITrustedIssuersRegistry",
														"nameLocations": [
															"7654:23:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3676,
														"src": "7654:23:15"
													},
													"referencedDeclaration": 3676,
													"src": "7654:23:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ITrustedIssuersRegistry_$3676",
														"typeString": "contract ITrustedIssuersRegistry"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7653:25:15"
									},
									"scope": 3304,
									"src": "7563:165:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										3483
									],
									"body": {
										"id": 3219,
										"nodeType": "Block",
										"src": "7919:44:15",
										"statements": [
											{
												"expression": {
													"id": 3217,
													"name": "_tokenTopicsRegistry",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3684,
													"src": "7936:20:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimTopicsRegistry_$3331",
														"typeString": "contract IClaimTopicsRegistry"
													}
												},
												"functionReturnParameters": 3216,
												"id": 3218,
												"nodeType": "Return",
												"src": "7929:27:15"
											}
										]
									},
									"documentation": {
										"id": 3210,
										"nodeType": "StructuredDocumentation",
										"src": "7734:64:15",
										"text": "  @dev See {IIdentityRegistry-topicsRegistry}."
									},
									"functionSelector": "3b3e12f4",
									"id": 3220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "topicsRegistry",
									"nameLocation": "7812:14:15",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3212,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7867:8:15"
									},
									"parameters": {
										"id": 3211,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7826:2:15"
									},
									"returnParameters": {
										"id": 3216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3215,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3220,
												"src": "7893:20:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimTopicsRegistry_$3331",
													"typeString": "contract IClaimTopicsRegistry"
												},
												"typeName": {
													"id": 3214,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3213,
														"name": "IClaimTopicsRegistry",
														"nameLocations": [
															"7893:20:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3331,
														"src": "7893:20:15"
													},
													"referencedDeclaration": 3331,
													"src": "7893:20:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimTopicsRegistry_$3331",
														"typeString": "contract IClaimTopicsRegistry"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7892:22:15"
									},
									"scope": 3304,
									"src": "7803:160:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										3471
									],
									"body": {
										"id": 3230,
										"nodeType": "Block",
										"src": "8160:45:15",
										"statements": [
											{
												"expression": {
													"id": 3228,
													"name": "_tokenIdentityStorage",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3690,
													"src": "8177:21:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentityRegistryStorage_$3586",
														"typeString": "contract IIdentityRegistryStorage"
													}
												},
												"functionReturnParameters": 3227,
												"id": 3229,
												"nodeType": "Return",
												"src": "8170:28:15"
											}
										]
									},
									"documentation": {
										"id": 3221,
										"nodeType": "StructuredDocumentation",
										"src": "7969:65:15",
										"text": "  @dev See {IIdentityRegistry-identityStorage}."
									},
									"functionSelector": "f11abfd8",
									"id": 3231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "identityStorage",
									"nameLocation": "8048:15:15",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3223,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8104:8:15"
									},
									"parameters": {
										"id": 3222,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8063:2:15"
									},
									"returnParameters": {
										"id": 3227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3231,
												"src": "8130:24:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentityRegistryStorage_$3586",
													"typeString": "contract IIdentityRegistryStorage"
												},
												"typeName": {
													"id": 3225,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3224,
														"name": "IIdentityRegistryStorage",
														"nameLocations": [
															"8130:24:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3586,
														"src": "8130:24:15"
													},
													"referencedDeclaration": 3586,
													"src": "8130:24:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentityRegistryStorage_$3586",
														"typeString": "contract IIdentityRegistryStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8129:26:15"
									},
									"scope": 3304,
									"src": "8039:166:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										3443
									],
									"body": {
										"id": 3257,
										"nodeType": "Block",
										"src": "8388:125:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 3243,
																		"name": "_userAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3234,
																		"src": "8419:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3242,
																	"name": "identity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3303,
																	"src": "8410:8:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_contract$_IIdentity_$323_$",
																		"typeString": "function (address) view returns (contract IIdentity)"
																	}
																},
																"id": 3244,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8410:22:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IIdentity_$323",
																	"typeString": "contract IIdentity"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IIdentity_$323",
																	"typeString": "contract IIdentity"
																}
															],
															"id": 3241,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8402:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3240,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8402:7:15",
																"typeDescriptions": {}
															}
														},
														"id": 3245,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8402:31:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8445:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8437:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3246,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8437:7:15",
																"typeDescriptions": {}
															}
														},
														"id": 3249,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8437:10:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8402:45:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3254,
												"nodeType": "IfStatement",
												"src": "8398:88:15",
												"trueBody": {
													"id": 3253,
													"nodeType": "Block",
													"src": "8449:37:15",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 3251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8470:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 3239,
															"id": 3252,
															"nodeType": "Return",
															"src": "8463:12:15"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 3255,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8502:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 3239,
												"id": 3256,
												"nodeType": "Return",
												"src": "8495:11:15"
											}
										]
									},
									"documentation": {
										"id": 3232,
										"nodeType": "StructuredDocumentation",
										"src": "8211:58:15",
										"text": "  @dev See {IIdentityRegistry-contains}."
									},
									"functionSelector": "5dbe47e8",
									"id": 3258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "8283:8:15",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3236,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8352:8:15"
									},
									"parameters": {
										"id": 3235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3234,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "8300:12:15",
												"nodeType": "VariableDeclaration",
												"scope": 3258,
												"src": "8292:20:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8292:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8291:22:15"
									},
									"returnParameters": {
										"id": 3239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3238,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3258,
												"src": "8378:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3237,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8378:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8377:6:15"
									},
									"scope": 3304,
									"src": "8274:239:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										3388
									],
									"body": {
										"id": 3286,
										"nodeType": "Block",
										"src": "8743:198:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3276,
															"name": "_userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3261,
															"src": "8809:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3277,
															"name": "_identity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3264,
															"src": "8835:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IIdentity_$323",
																"typeString": "contract IIdentity"
															}
														},
														{
															"id": 3278,
															"name": "_country",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3266,
															"src": "8858:8:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_contract$_IIdentity_$323",
																"typeString": "contract IIdentity"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														],
														"expression": {
															"id": 3273,
															"name": "_tokenIdentityStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3690,
															"src": "8753:21:15",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IIdentityRegistryStorage_$3586",
																"typeString": "contract IIdentityRegistryStorage"
															}
														},
														"id": 3275,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8775:20:15",
														"memberName": "addIdentityToStorage",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3534,
														"src": "8753:42:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_IIdentity_$323_$_t_uint16_$returns$__$",
															"typeString": "function (address,contract IIdentity,uint16) external"
														}
													},
													"id": 3279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8753:123:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3280,
												"nodeType": "ExpressionStatement",
												"src": "8753:123:15"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3282,
															"name": "_userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3261,
															"src": "8910:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3283,
															"name": "_identity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3264,
															"src": "8924:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IIdentity_$323",
																"typeString": "contract IIdentity"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_contract$_IIdentity_$323",
																"typeString": "contract IIdentity"
															}
														],
														"id": 3281,
														"name": "IdentityRegistered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3357,
														"src": "8891:18:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_contract$_IIdentity_$323_$returns$__$",
															"typeString": "function (address,contract IIdentity)"
														}
													},
													"id": 3284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8891:43:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3285,
												"nodeType": "EmitStatement",
												"src": "8886:48:15"
											}
										]
									},
									"documentation": {
										"id": 3259,
										"nodeType": "StructuredDocumentation",
										"src": "8519:66:15",
										"text": "  @dev See {IIdentityRegistry-registerIdentity}."
									},
									"functionSelector": "454a03e0",
									"id": 3287,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3270,
													"name": "AGENT_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2683,
													"src": "8731:10:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3271,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3269,
												"name": "onlyRole",
												"nameLocations": [
													"8722:8:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 377,
												"src": "8722:8:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "8722:20:15"
										}
									],
									"name": "registerIdentity",
									"nameLocation": "8599:16:15",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3268,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8713:8:15"
									},
									"parameters": {
										"id": 3267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3261,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "8633:12:15",
												"nodeType": "VariableDeclaration",
												"scope": 3287,
												"src": "8625:20:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8625:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3264,
												"mutability": "mutable",
												"name": "_identity",
												"nameLocation": "8665:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 3287,
												"src": "8655:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$323",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 3263,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3262,
														"name": "IIdentity",
														"nameLocations": [
															"8655:9:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "8655:9:15"
													},
													"referencedDeclaration": 323,
													"src": "8655:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$323",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3266,
												"mutability": "mutable",
												"name": "_country",
												"nameLocation": "8691:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 3287,
												"src": "8684:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3265,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "8684:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8615:90:15"
									},
									"returnParameters": {
										"id": 3272,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8743:0:15"
									},
									"scope": 3304,
									"src": "8590:351:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										3458
									],
									"body": {
										"id": 3302,
										"nodeType": "Block",
										"src": "9127:74:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3299,
															"name": "_userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3290,
															"src": "9181:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 3297,
															"name": "_tokenIdentityStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3690,
															"src": "9144:21:15",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IIdentityRegistryStorage_$3586",
																"typeString": "contract IIdentityRegistryStorage"
															}
														},
														"id": 3298,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9166:14:15",
														"memberName": "storedIdentity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3578,
														"src": "9144:36:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_contract$_IIdentity_$323_$",
															"typeString": "function (address) view external returns (contract IIdentity)"
														}
													},
													"id": 3300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9144:50:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$323",
														"typeString": "contract IIdentity"
													}
												},
												"functionReturnParameters": 3296,
												"id": 3301,
												"nodeType": "Return",
												"src": "9137:57:15"
											}
										]
									},
									"documentation": {
										"id": 3288,
										"nodeType": "StructuredDocumentation",
										"src": "8947:58:15",
										"text": "  @dev See {IIdentityRegistry-identity}."
									},
									"functionSelector": "f0eb5e54",
									"id": 3303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "identity",
									"nameLocation": "9019:8:15",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3292,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9086:8:15"
									},
									"parameters": {
										"id": 3291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3290,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "9036:12:15",
												"nodeType": "VariableDeclaration",
												"scope": 3303,
												"src": "9028:20:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9028:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9027:22:15"
									},
									"returnParameters": {
										"id": 3296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3303,
												"src": "9112:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$323",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 3294,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3293,
														"name": "IIdentity",
														"nameLocations": [
															"9112:9:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "9112:9:15"
													},
													"referencedDeclaration": 323,
													"src": "9112:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$323",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9111:11:15"
									},
									"scope": 3304,
									"src": "9010:191:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3305,
							"src": "587:8616:15",
							"usedErrors": []
						}
					],
					"src": "38:9166:15"
				},
				"id": 15
			},
			"erc3643/registry/interface/IClaimTopicsRegistry.sol": {
				"ast": {
					"absolutePath": "erc3643/registry/interface/IClaimTopicsRegistry.sol",
					"exportedSymbols": {
						"IClaimTopicsRegistry": [
							3331
						]
					},
					"id": 3332,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3306,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IClaimTopicsRegistry",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 3331,
							"linearizedBaseContracts": [
								3331
							],
							"name": "IClaimTopicsRegistry",
							"nameLocation": "72:20:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "01c928b7f7ade2949e92366aa9454dbef3a416b731cf6ec786ba9595bbd814d6",
									"id": 3310,
									"name": "ClaimTopicAdded",
									"nameLocation": "105:15:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3308,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimTopic",
												"nameLocation": "137:10:16",
												"nodeType": "VariableDeclaration",
												"scope": 3310,
												"src": "121:26:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "121:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "120:28:16"
									},
									"src": "99:50:16"
								},
								{
									"anonymous": false,
									"eventSelector": "0b1381093c776453c1bbe54fd68be1b235c65db61d099cb50d194b2991e0eec5",
									"id": 3314,
									"name": "ClaimTopicRemoved",
									"nameLocation": "161:17:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3312,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimTopic",
												"nameLocation": "195:10:16",
												"nodeType": "VariableDeclaration",
												"scope": 3314,
												"src": "179:26:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "179:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "178:28:16"
									},
									"src": "155:52:16"
								},
								{
									"functionSelector": "c7b22551",
									"id": 3319,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addClaimTopic",
									"nameLocation": "222:13:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3316,
												"mutability": "mutable",
												"name": "_claimTopic",
												"nameLocation": "244:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 3319,
												"src": "236:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "236:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "235:21:16"
									},
									"returnParameters": {
										"id": 3318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "265:0:16"
									},
									"scope": 3331,
									"src": "213:53:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "08297846",
									"id": 3324,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeClaimTopic",
									"nameLocation": "281:16:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3321,
												"mutability": "mutable",
												"name": "_claimTopic",
												"nameLocation": "306:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 3324,
												"src": "298:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "298:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "297:21:16"
									},
									"returnParameters": {
										"id": 3323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "327:0:16"
									},
									"scope": 3331,
									"src": "272:56:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "df09d604",
									"id": 3330,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getClaimTopics",
									"nameLocation": "343:14:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "357:2:16"
									},
									"returnParameters": {
										"id": 3329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3330,
												"src": "383:16:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3326,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "383:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3327,
													"nodeType": "ArrayTypeName",
													"src": "383:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "382:18:16"
									},
									"scope": 3331,
									"src": "334:67:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3332,
							"src": "62:341:16",
							"usedErrors": []
						}
					],
					"src": "37:367:16"
				},
				"id": 16
			},
			"erc3643/registry/interface/IIdentityRegistry.sol": {
				"ast": {
					"absolutePath": "erc3643/registry/interface/IIdentityRegistry.sol",
					"exportedSymbols": {
						"IClaimIssuer": [
							59
						],
						"IClaimTopicsRegistry": [
							3331
						],
						"IERC734": [
							206
						],
						"IERC735": [
							314
						],
						"IIdentity": [
							323
						],
						"IIdentityRegistry": [
							3484
						],
						"IIdentityRegistryStorage": [
							3586
						],
						"ITrustedIssuersRegistry": [
							3676
						]
					},
					"id": 3485,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3333,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:17"
						},
						{
							"absolutePath": "erc3643/registry/interface/ITrustedIssuersRegistry.sol",
							"file": "./ITrustedIssuersRegistry.sol",
							"id": 3334,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3485,
							"sourceUnit": 3677,
							"src": "62:39:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "erc3643/registry/interface/IClaimTopicsRegistry.sol",
							"file": "./IClaimTopicsRegistry.sol",
							"id": 3335,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3485,
							"sourceUnit": 3332,
							"src": "102:36:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "erc3643/registry/interface/IIdentityRegistryStorage.sol",
							"file": "./IIdentityRegistryStorage.sol",
							"id": 3336,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3485,
							"sourceUnit": 3587,
							"src": "139:40:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
							"file": "@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
							"id": 3337,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3485,
							"sourceUnit": 60,
							"src": "181:67:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@onchain-id/solidity/contracts/interface/IIdentity.sol",
							"file": "@onchain-id/solidity/contracts/interface/IIdentity.sol",
							"id": 3338,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3485,
							"sourceUnit": 324,
							"src": "249:64:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IIdentityRegistry",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 3484,
							"linearizedBaseContracts": [
								3484
							],
							"name": "IIdentityRegistry",
							"nameLocation": "325:17:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "7170bf15b246e880b2369cd7c67d057760d8a35149e8c64dde91efa22bcc76d0",
									"id": 3342,
									"name": "ClaimTopicsRegistrySet",
									"nameLocation": "355:22:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3340,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimTopicsRegistry",
												"nameLocation": "394:19:17",
												"nodeType": "VariableDeclaration",
												"scope": 3342,
												"src": "378:35:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "378:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "377:37:17"
									},
									"src": "349:66:17"
								},
								{
									"anonymous": false,
									"eventSelector": "2fa8b95c1db7afe99e3398f3792f008135cedc1fa26b0bb2ecd2352cd166d53c",
									"id": 3346,
									"name": "IdentityStorageSet",
									"nameLocation": "427:18:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3344,
												"indexed": true,
												"mutability": "mutable",
												"name": "identityStorage",
												"nameLocation": "462:15:17",
												"nodeType": "VariableDeclaration",
												"scope": 3346,
												"src": "446:31:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "445:33:17"
									},
									"src": "421:58:17"
								},
								{
									"anonymous": false,
									"eventSelector": "1b98cb79e6f73020175fe87333f1b91ad6a881519c0afe30340c2599b2b4bde0",
									"id": 3350,
									"name": "TrustedIssuersRegistrySet",
									"nameLocation": "491:25:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3348,
												"indexed": true,
												"mutability": "mutable",
												"name": "trustedIssuersRegistry",
												"nameLocation": "533:22:17",
												"nodeType": "VariableDeclaration",
												"scope": 3350,
												"src": "517:38:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "517:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "516:40:17"
									},
									"src": "485:72:17"
								},
								{
									"anonymous": false,
									"eventSelector": "6ae73635c50d24a45af6fbd5e016ac4bed179addbc8bf24e04ff0fcc6d33af19",
									"id": 3357,
									"name": "IdentityRegistered",
									"nameLocation": "569:18:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3352,
												"indexed": true,
												"mutability": "mutable",
												"name": "investorAddress",
												"nameLocation": "613:15:17",
												"nodeType": "VariableDeclaration",
												"scope": 3357,
												"src": "597:31:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "597:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3355,
												"indexed": true,
												"mutability": "mutable",
												"name": "identity",
												"nameLocation": "656:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 3357,
												"src": "638:26:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$323",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 3354,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3353,
														"name": "IIdentity",
														"nameLocations": [
															"638:9:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "638:9:17"
													},
													"referencedDeclaration": 323,
													"src": "638:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$323",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "587:83:17"
									},
									"src": "563:108:17"
								},
								{
									"anonymous": false,
									"eventSelector": "59d6590e225b81befe259af056324092801080acbb7feab310eb34678871f327",
									"id": 3364,
									"name": "IdentityRemoved",
									"nameLocation": "683:15:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3359,
												"indexed": true,
												"mutability": "mutable",
												"name": "investorAddress",
												"nameLocation": "724:15:17",
												"nodeType": "VariableDeclaration",
												"scope": 3364,
												"src": "708:31:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3362,
												"indexed": true,
												"mutability": "mutable",
												"name": "identity",
												"nameLocation": "767:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 3364,
												"src": "749:26:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$323",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 3361,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3360,
														"name": "IIdentity",
														"nameLocations": [
															"749:9:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "749:9:17"
													},
													"referencedDeclaration": 323,
													"src": "749:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$323",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "698:83:17"
									},
									"src": "677:105:17"
								},
								{
									"anonymous": false,
									"eventSelector": "e98082932c8056a0f514da9104e4a66bc2cbaef102ad59d90c4b24220ebf6010",
									"id": 3372,
									"name": "IdentityUpdated",
									"nameLocation": "794:15:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3367,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldIdentity",
												"nameLocation": "837:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 3372,
												"src": "819:29:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$323",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 3366,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3365,
														"name": "IIdentity",
														"nameLocations": [
															"819:9:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "819:9:17"
													},
													"referencedDeclaration": 323,
													"src": "819:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$323",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3370,
												"indexed": true,
												"mutability": "mutable",
												"name": "newIdentity",
												"nameLocation": "876:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 3372,
												"src": "858:29:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$323",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 3369,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3368,
														"name": "IIdentity",
														"nameLocations": [
															"858:9:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "858:9:17"
													},
													"referencedDeclaration": 323,
													"src": "858:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$323",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "809:84:17"
									},
									"src": "788:106:17"
								},
								{
									"anonymous": false,
									"eventSelector": "04ed3b726495c2dca1ff1215d9ca54e1a4030abb5e82b0f6ce55702416cee853",
									"id": 3378,
									"name": "CountryUpdated",
									"nameLocation": "906:14:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3374,
												"indexed": true,
												"mutability": "mutable",
												"name": "investorAddress",
												"nameLocation": "946:15:17",
												"nodeType": "VariableDeclaration",
												"scope": 3378,
												"src": "930:31:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3376,
												"indexed": true,
												"mutability": "mutable",
												"name": "country",
												"nameLocation": "986:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 3378,
												"src": "971:22:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3375,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "971:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "920:79:17"
									},
									"src": "900:100:17"
								},
								{
									"functionSelector": "454a03e0",
									"id": 3388,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registerIdentity",
									"nameLocation": "1015:16:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3380,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "1049:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 3388,
												"src": "1041:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1041:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3383,
												"mutability": "mutable",
												"name": "_identity",
												"nameLocation": "1081:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 3388,
												"src": "1071:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$323",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 3382,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3381,
														"name": "IIdentity",
														"nameLocations": [
															"1071:9:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "1071:9:17"
													},
													"referencedDeclaration": 323,
													"src": "1071:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$323",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3385,
												"mutability": "mutable",
												"name": "_country",
												"nameLocation": "1107:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 3388,
												"src": "1100:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3384,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1100:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1031:90:17"
									},
									"returnParameters": {
										"id": 3387,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1130:0:17"
									},
									"scope": 3484,
									"src": "1006:125:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a8d29d1d",
									"id": 3393,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deleteIdentity",
									"nameLocation": "1146:14:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3390,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "1169:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 3393,
												"src": "1161:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1161:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1160:22:17"
									},
									"returnParameters": {
										"id": 3392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1191:0:17"
									},
									"scope": 3484,
									"src": "1137:55:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "26d941ae",
									"id": 3398,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setIdentityRegistryStorage",
									"nameLocation": "1207:26:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3395,
												"mutability": "mutable",
												"name": "_identityRegistryStorage",
												"nameLocation": "1242:24:17",
												"nodeType": "VariableDeclaration",
												"scope": 3398,
												"src": "1234:32:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1233:34:17"
									},
									"returnParameters": {
										"id": 3397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1284:0:17"
									},
									"scope": 3484,
									"src": "1198:87:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "670af6a9",
									"id": 3403,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setClaimTopicsRegistry",
									"nameLocation": "1300:22:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3400,
												"mutability": "mutable",
												"name": "_claimTopicsRegistry",
												"nameLocation": "1331:20:17",
												"nodeType": "VariableDeclaration",
												"scope": 3403,
												"src": "1323:28:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1322:30:17"
									},
									"returnParameters": {
										"id": 3402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:17"
									},
									"scope": 3484,
									"src": "1291:71:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e744d789",
									"id": 3408,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setTrustedIssuersRegistry",
									"nameLocation": "1377:25:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3405,
												"mutability": "mutable",
												"name": "_trustedIssuersRegistry",
												"nameLocation": "1411:23:17",
												"nodeType": "VariableDeclaration",
												"scope": 3408,
												"src": "1403:31:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1403:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1402:33:17"
									},
									"returnParameters": {
										"id": 3407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1452:0:17"
									},
									"scope": 3484,
									"src": "1368:85:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3b239a7f",
									"id": 3415,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateCountry",
									"nameLocation": "1468:13:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3410,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "1490:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 3415,
												"src": "1482:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1482:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3412,
												"mutability": "mutable",
												"name": "_country",
												"nameLocation": "1511:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 3415,
												"src": "1504:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3411,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1504:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1481:39:17"
									},
									"returnParameters": {
										"id": 3414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1529:0:17"
									},
									"scope": 3484,
									"src": "1459:71:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8e098ca1",
									"id": 3423,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateIdentity",
									"nameLocation": "1545:14:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3417,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "1568:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 3423,
												"src": "1560:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3420,
												"mutability": "mutable",
												"name": "_identity",
												"nameLocation": "1592:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 3423,
												"src": "1582:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$323",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 3419,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3418,
														"name": "IIdentity",
														"nameLocations": [
															"1582:9:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "1582:9:17"
													},
													"referencedDeclaration": 323,
													"src": "1582:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$323",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1559:43:17"
									},
									"returnParameters": {
										"id": 3422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1611:0:17"
									},
									"scope": 3484,
									"src": "1536:76:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "653dc9f1",
									"id": 3436,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "batchRegisterIdentity",
									"nameLocation": "1627:21:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3426,
												"mutability": "mutable",
												"name": "_userAddresses",
												"nameLocation": "1677:14:17",
												"nodeType": "VariableDeclaration",
												"scope": 3436,
												"src": "1658:33:17",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 3424,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1658:7:17",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 3425,
													"nodeType": "ArrayTypeName",
													"src": "1658:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3430,
												"mutability": "mutable",
												"name": "_identities",
												"nameLocation": "1722:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 3436,
												"src": "1701:32:17",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IIdentity_$323_$dyn_calldata_ptr",
													"typeString": "contract IIdentity[]"
												},
												"typeName": {
													"baseType": {
														"id": 3428,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3427,
															"name": "IIdentity",
															"nameLocations": [
																"1701:9:17"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 323,
															"src": "1701:9:17"
														},
														"referencedDeclaration": 323,
														"src": "1701:9:17",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IIdentity_$323",
															"typeString": "contract IIdentity"
														}
													},
													"id": 3429,
													"nodeType": "ArrayTypeName",
													"src": "1701:11:17",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IIdentity_$323_$dyn_storage_ptr",
														"typeString": "contract IIdentity[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3433,
												"mutability": "mutable",
												"name": "_countries",
												"nameLocation": "1761:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 3436,
												"src": "1743:28:17",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint16_$dyn_calldata_ptr",
													"typeString": "uint16[]"
												},
												"typeName": {
													"baseType": {
														"id": 3431,
														"name": "uint16",
														"nodeType": "ElementaryTypeName",
														"src": "1743:6:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"id": 3432,
													"nodeType": "ArrayTypeName",
													"src": "1743:8:17",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint16_$dyn_storage_ptr",
														"typeString": "uint16[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1648:129:17"
									},
									"returnParameters": {
										"id": 3435,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1786:0:17"
									},
									"scope": 3484,
									"src": "1618:169:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5dbe47e8",
									"id": 3443,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "1802:8:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3438,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "1819:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 3443,
												"src": "1811:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1811:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1810:22:17"
									},
									"returnParameters": {
										"id": 3442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3443,
												"src": "1856:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3440,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1856:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1855:6:17"
									},
									"scope": 3484,
									"src": "1793:69:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b9209e33",
									"id": 3450,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isVerified",
									"nameLocation": "1877:10:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3445,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "1896:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 3450,
												"src": "1888:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1888:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1887:22:17"
									},
									"returnParameters": {
										"id": 3449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3450,
												"src": "1933:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3447,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1933:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1932:6:17"
									},
									"scope": 3484,
									"src": "1868:71:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f0eb5e54",
									"id": 3458,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "identity",
									"nameLocation": "1954:8:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3452,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "1971:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 3458,
												"src": "1963:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1963:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1962:22:17"
									},
									"returnParameters": {
										"id": 3457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3456,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3458,
												"src": "2008:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$323",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 3455,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3454,
														"name": "IIdentity",
														"nameLocations": [
															"2008:9:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "2008:9:17"
													},
													"referencedDeclaration": 323,
													"src": "2008:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$323",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2007:11:17"
									},
									"scope": 3484,
									"src": "1945:74:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7e42683b",
									"id": 3465,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "investorCountry",
									"nameLocation": "2034:15:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3460,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "2058:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 3465,
												"src": "2050:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2050:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2049:22:17"
									},
									"returnParameters": {
										"id": 3464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3465,
												"src": "2119:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3462,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:8:17"
									},
									"scope": 3484,
									"src": "2025:102:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f11abfd8",
									"id": 3471,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "identityStorage",
									"nameLocation": "2142:15:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3466,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2157:2:17"
									},
									"returnParameters": {
										"id": 3470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3469,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3471,
												"src": "2183:24:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentityRegistryStorage_$3586",
													"typeString": "contract IIdentityRegistryStorage"
												},
												"typeName": {
													"id": 3468,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3467,
														"name": "IIdentityRegistryStorage",
														"nameLocations": [
															"2183:24:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3586,
														"src": "2183:24:17"
													},
													"referencedDeclaration": 3586,
													"src": "2183:24:17",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentityRegistryStorage_$3586",
														"typeString": "contract IIdentityRegistryStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:26:17"
									},
									"scope": 3484,
									"src": "2133:76:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b4f3fcb7",
									"id": 3477,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "issuersRegistry",
									"nameLocation": "2224:15:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2239:2:17"
									},
									"returnParameters": {
										"id": 3476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3477,
												"src": "2265:23:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ITrustedIssuersRegistry_$3676",
													"typeString": "contract ITrustedIssuersRegistry"
												},
												"typeName": {
													"id": 3474,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3473,
														"name": "ITrustedIssuersRegistry",
														"nameLocations": [
															"2265:23:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3676,
														"src": "2265:23:17"
													},
													"referencedDeclaration": 3676,
													"src": "2265:23:17",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ITrustedIssuersRegistry_$3676",
														"typeString": "contract ITrustedIssuersRegistry"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2264:25:17"
									},
									"scope": 3484,
									"src": "2215:75:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3b3e12f4",
									"id": 3483,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "topicsRegistry",
									"nameLocation": "2305:14:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:17"
									},
									"returnParameters": {
										"id": 3482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3481,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3483,
												"src": "2345:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimTopicsRegistry_$3331",
													"typeString": "contract IClaimTopicsRegistry"
												},
												"typeName": {
													"id": 3480,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3479,
														"name": "IClaimTopicsRegistry",
														"nameLocations": [
															"2345:20:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3331,
														"src": "2345:20:17"
													},
													"referencedDeclaration": 3331,
													"src": "2345:20:17",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimTopicsRegistry_$3331",
														"typeString": "contract IClaimTopicsRegistry"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2344:22:17"
									},
									"scope": 3484,
									"src": "2296:71:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3485,
							"src": "315:2054:17",
							"usedErrors": []
						}
					],
					"src": "37:2333:17"
				},
				"id": 17
			},
			"erc3643/registry/interface/IIdentityRegistryStorage.sol": {
				"ast": {
					"absolutePath": "erc3643/registry/interface/IIdentityRegistryStorage.sol",
					"exportedSymbols": {
						"IERC734": [
							206
						],
						"IERC735": [
							314
						],
						"IIdentity": [
							323
						],
						"IIdentityRegistryStorage": [
							3586
						]
					},
					"id": 3587,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3486,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:18"
						},
						{
							"absolutePath": "@onchain-id/solidity/contracts/interface/IIdentity.sol",
							"file": "@onchain-id/solidity/contracts/interface/IIdentity.sol",
							"id": 3487,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3587,
							"sourceUnit": 324,
							"src": "62:64:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IIdentityRegistryStorage",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 3586,
							"linearizedBaseContracts": [
								3586
							],
							"name": "IIdentityRegistryStorage",
							"nameLocation": "138:24:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "0030dea7e9c9afaa2e3c9810f2fc9b5181f1bad74ca5a8db85f746a33585e747",
									"id": 3494,
									"name": "IdentityStored",
									"nameLocation": "175:14:18",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3489,
												"indexed": true,
												"mutability": "mutable",
												"name": "investorAddress",
												"nameLocation": "215:15:18",
												"nodeType": "VariableDeclaration",
												"scope": 3494,
												"src": "199:31:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "199:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3492,
												"indexed": true,
												"mutability": "mutable",
												"name": "identity",
												"nameLocation": "258:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 3494,
												"src": "240:26:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$323",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 3491,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3490,
														"name": "IIdentity",
														"nameLocations": [
															"240:9:18"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "240:9:18"
													},
													"referencedDeclaration": 323,
													"src": "240:9:18",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$323",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "189:83:18"
									},
									"src": "169:104:18"
								},
								{
									"anonymous": false,
									"eventSelector": "ca6a4c3370b859312246e7f086284076e557997e10d856b716c23ab67067790b",
									"id": 3501,
									"name": "IdentityUnstored",
									"nameLocation": "285:16:18",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3496,
												"indexed": true,
												"mutability": "mutable",
												"name": "investorAddress",
												"nameLocation": "327:15:18",
												"nodeType": "VariableDeclaration",
												"scope": 3501,
												"src": "311:31:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "311:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3499,
												"indexed": true,
												"mutability": "mutable",
												"name": "identity",
												"nameLocation": "370:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 3501,
												"src": "352:26:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$323",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 3498,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3497,
														"name": "IIdentity",
														"nameLocations": [
															"352:9:18"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "352:9:18"
													},
													"referencedDeclaration": 323,
													"src": "352:9:18",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$323",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "301:83:18"
									},
									"src": "279:106:18"
								},
								{
									"anonymous": false,
									"eventSelector": "556ce885dfcea52155c773f1ed2e58781c51945c13030ab8f793c61f51d1b808",
									"id": 3509,
									"name": "IdentityModified",
									"nameLocation": "397:16:18",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3504,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldIdentity",
												"nameLocation": "441:11:18",
												"nodeType": "VariableDeclaration",
												"scope": 3509,
												"src": "423:29:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$323",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 3503,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3502,
														"name": "IIdentity",
														"nameLocations": [
															"423:9:18"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "423:9:18"
													},
													"referencedDeclaration": 323,
													"src": "423:9:18",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$323",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3507,
												"indexed": true,
												"mutability": "mutable",
												"name": "newIdentity",
												"nameLocation": "480:11:18",
												"nodeType": "VariableDeclaration",
												"scope": 3509,
												"src": "462:29:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$323",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 3506,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3505,
														"name": "IIdentity",
														"nameLocations": [
															"462:9:18"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "462:9:18"
													},
													"referencedDeclaration": 323,
													"src": "462:9:18",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$323",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "413:84:18"
									},
									"src": "391:107:18"
								},
								{
									"anonymous": false,
									"eventSelector": "20965fcdc6eed7ae398065b40ece4e732ba667992ca819fc54e80e9f2047c4cf",
									"id": 3515,
									"name": "CountryModified",
									"nameLocation": "510:15:18",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3511,
												"indexed": true,
												"mutability": "mutable",
												"name": "investorAddress",
												"nameLocation": "551:15:18",
												"nodeType": "VariableDeclaration",
												"scope": 3515,
												"src": "535:31:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "535:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3513,
												"indexed": true,
												"mutability": "mutable",
												"name": "country",
												"nameLocation": "591:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 3515,
												"src": "576:22:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3512,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "576:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "525:79:18"
									},
									"src": "504:101:18"
								},
								{
									"anonymous": false,
									"eventSelector": "500c250171aa20e861b680f93502547b9d436eda7d4c537fc360db6e0c6eedfb",
									"id": 3519,
									"name": "IdentityRegistryBound",
									"nameLocation": "617:21:18",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3517,
												"indexed": true,
												"mutability": "mutable",
												"name": "identityRegistry",
												"nameLocation": "655:16:18",
												"nodeType": "VariableDeclaration",
												"scope": 3519,
												"src": "639:32:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "639:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "638:34:18"
									},
									"src": "611:62:18"
								},
								{
									"anonymous": false,
									"eventSelector": "51f353eb5801583fdf2706e43c045b62fdf6b1566820b349390616363ecf72c9",
									"id": 3523,
									"name": "IdentityRegistryUnbound",
									"nameLocation": "685:23:18",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3521,
												"indexed": true,
												"mutability": "mutable",
												"name": "identityRegistry",
												"nameLocation": "725:16:18",
												"nodeType": "VariableDeclaration",
												"scope": 3523,
												"src": "709:32:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:34:18"
									},
									"src": "679:64:18"
								},
								{
									"documentation": {
										"id": 3524,
										"nodeType": "StructuredDocumentation",
										"src": "749:14:18",
										"text": "functions"
									},
									"functionSelector": "a53410dd",
									"id": 3534,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addIdentityToStorage",
									"nameLocation": "777:20:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3526,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "815:12:18",
												"nodeType": "VariableDeclaration",
												"scope": 3534,
												"src": "807:20:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "807:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3529,
												"mutability": "mutable",
												"name": "_identity",
												"nameLocation": "847:9:18",
												"nodeType": "VariableDeclaration",
												"scope": 3534,
												"src": "837:19:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$323",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 3528,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3527,
														"name": "IIdentity",
														"nameLocations": [
															"837:9:18"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "837:9:18"
													},
													"referencedDeclaration": 323,
													"src": "837:9:18",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$323",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3531,
												"mutability": "mutable",
												"name": "_country",
												"nameLocation": "873:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 3534,
												"src": "866:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3530,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "866:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "797:90:18"
									},
									"returnParameters": {
										"id": 3533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "896:0:18"
									},
									"scope": 3586,
									"src": "768:129:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "cf191bcd",
									"id": 3539,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeIdentityFromStorage",
									"nameLocation": "912:25:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3536,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "946:12:18",
												"nodeType": "VariableDeclaration",
												"scope": 3539,
												"src": "938:20:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "938:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "937:22:18"
									},
									"returnParameters": {
										"id": 3538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "968:0:18"
									},
									"scope": 3586,
									"src": "903:66:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9f3418d5",
									"id": 3546,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "modifyStoredInvestorCountry",
									"nameLocation": "984:27:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3541,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "1020:12:18",
												"nodeType": "VariableDeclaration",
												"scope": 3546,
												"src": "1012:20:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1012:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3543,
												"mutability": "mutable",
												"name": "_country",
												"nameLocation": "1041:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 3546,
												"src": "1034:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3542,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1034:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1011:39:18"
									},
									"returnParameters": {
										"id": 3545,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1067:0:18"
									},
									"scope": 3586,
									"src": "975:93:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e805cf86",
									"id": 3554,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "modifyStoredIdentity",
									"nameLocation": "1083:20:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3548,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "1112:12:18",
												"nodeType": "VariableDeclaration",
												"scope": 3554,
												"src": "1104:20:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3551,
												"mutability": "mutable",
												"name": "_identity",
												"nameLocation": "1136:9:18",
												"nodeType": "VariableDeclaration",
												"scope": 3554,
												"src": "1126:19:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$323",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 3550,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3549,
														"name": "IIdentity",
														"nameLocations": [
															"1126:9:18"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "1126:9:18"
													},
													"referencedDeclaration": 323,
													"src": "1126:9:18",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$323",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:43:18"
									},
									"returnParameters": {
										"id": 3553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1163:0:18"
									},
									"scope": 3586,
									"src": "1074:90:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "690a49f9",
									"id": 3559,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "bindIdentityRegistry",
									"nameLocation": "1179:20:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3556,
												"mutability": "mutable",
												"name": "_identityRegistry",
												"nameLocation": "1208:17:18",
												"nodeType": "VariableDeclaration",
												"scope": 3559,
												"src": "1200:25:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1200:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1199:27:18"
									},
									"returnParameters": {
										"id": 3558,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1235:0:18"
									},
									"scope": 3586,
									"src": "1170:66:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "97a012f7",
									"id": 3564,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unbindIdentityRegistry",
									"nameLocation": "1251:22:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3561,
												"mutability": "mutable",
												"name": "_identityRegistry",
												"nameLocation": "1282:17:18",
												"nodeType": "VariableDeclaration",
												"scope": 3564,
												"src": "1274:25:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1273:27:18"
									},
									"returnParameters": {
										"id": 3563,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1309:0:18"
									},
									"scope": 3586,
									"src": "1242:68:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bf9eb959",
									"id": 3570,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "linkedIdentityRegistries",
									"nameLocation": "1325:24:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1349:2:18"
									},
									"returnParameters": {
										"id": 3569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3568,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3570,
												"src": "1399:16:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 3566,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1399:7:18",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 3567,
													"nodeType": "ArrayTypeName",
													"src": "1399:9:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1398:18:18"
									},
									"scope": 3586,
									"src": "1316:101:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7988d3a5",
									"id": 3578,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "storedIdentity",
									"nameLocation": "1432:14:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3572,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "1455:12:18",
												"nodeType": "VariableDeclaration",
												"scope": 3578,
												"src": "1447:20:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1447:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1446:22:18"
									},
									"returnParameters": {
										"id": 3577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3576,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3578,
												"src": "1516:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$323",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 3575,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3574,
														"name": "IIdentity",
														"nameLocations": [
															"1516:9:18"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "1516:9:18"
													},
													"referencedDeclaration": 323,
													"src": "1516:9:18",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$323",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1515:11:18"
									},
									"scope": 3586,
									"src": "1423:104:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "727e13bc",
									"id": 3585,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "storedInvestorCountry",
									"nameLocation": "1542:21:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3580,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "1572:12:18",
												"nodeType": "VariableDeclaration",
												"scope": 3585,
												"src": "1564:20:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1564:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1563:22:18"
									},
									"returnParameters": {
										"id": 3584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3583,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3585,
												"src": "1633:6:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3582,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1633:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1632:8:18"
									},
									"scope": 3586,
									"src": "1533:108:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3587,
							"src": "128:1515:18",
							"usedErrors": []
						}
					],
					"src": "37:1607:18"
				},
				"id": 18
			},
			"erc3643/registry/interface/ITrustedIssuersRegistry.sol": {
				"ast": {
					"absolutePath": "erc3643/registry/interface/ITrustedIssuersRegistry.sol",
					"exportedSymbols": {
						"IClaimIssuer": [
							59
						],
						"IERC734": [
							206
						],
						"IERC735": [
							314
						],
						"IIdentity": [
							323
						],
						"ITrustedIssuersRegistry": [
							3676
						]
					},
					"id": 3677,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3588,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:19"
						},
						{
							"absolutePath": "@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
							"file": "@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
							"id": 3589,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3677,
							"sourceUnit": 60,
							"src": "62:67:19",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ITrustedIssuersRegistry",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 3676,
							"linearizedBaseContracts": [
								3676
							],
							"name": "ITrustedIssuersRegistry",
							"nameLocation": "141:23:19",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "fedc33fd34859594822c0ff6f3f4f9fc279cc6d5cae53068f706a088e4500872",
									"id": 3597,
									"name": "TrustedIssuerAdded",
									"nameLocation": "177:18:19",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3592,
												"indexed": true,
												"mutability": "mutable",
												"name": "trustedIssuer",
												"nameLocation": "226:13:19",
												"nodeType": "VariableDeclaration",
												"scope": 3597,
												"src": "205:34:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$59",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 3591,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3590,
														"name": "IClaimIssuer",
														"nameLocations": [
															"205:12:19"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 59,
														"src": "205:12:19"
													},
													"referencedDeclaration": 59,
													"src": "205:12:19",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$59",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3595,
												"indexed": false,
												"mutability": "mutable",
												"name": "claimTopics",
												"nameLocation": "259:11:19",
												"nodeType": "VariableDeclaration",
												"scope": 3597,
												"src": "249:21:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3593,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "249:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3594,
													"nodeType": "ArrayTypeName",
													"src": "249:9:19",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "195:81:19"
									},
									"src": "171:106:19"
								},
								{
									"anonymous": false,
									"eventSelector": "2214ded40113cc3fb63fc206cafee88270b0a903dac7245d54efdde30ebb0321",
									"id": 3602,
									"name": "TrustedIssuerRemoved",
									"nameLocation": "289:20:19",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3600,
												"indexed": true,
												"mutability": "mutable",
												"name": "trustedIssuer",
												"nameLocation": "331:13:19",
												"nodeType": "VariableDeclaration",
												"scope": 3602,
												"src": "310:34:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$59",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 3599,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3598,
														"name": "IClaimIssuer",
														"nameLocations": [
															"310:12:19"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 59,
														"src": "310:12:19"
													},
													"referencedDeclaration": 59,
													"src": "310:12:19",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$59",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "309:36:19"
									},
									"src": "283:63:19"
								},
								{
									"anonymous": false,
									"eventSelector": "ec753cfc52044f61676f18a11e500093a9f2b1cd5e4942bc476f2b0438159bcf",
									"id": 3610,
									"name": "ClaimTopicsUpdated",
									"nameLocation": "358:18:19",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3605,
												"indexed": true,
												"mutability": "mutable",
												"name": "trustedIssuer",
												"nameLocation": "407:13:19",
												"nodeType": "VariableDeclaration",
												"scope": 3610,
												"src": "386:34:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$59",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 3604,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3603,
														"name": "IClaimIssuer",
														"nameLocations": [
															"386:12:19"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 59,
														"src": "386:12:19"
													},
													"referencedDeclaration": 59,
													"src": "386:12:19",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$59",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3608,
												"indexed": false,
												"mutability": "mutable",
												"name": "claimTopics",
												"nameLocation": "440:11:19",
												"nodeType": "VariableDeclaration",
												"scope": 3610,
												"src": "430:21:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3606,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "430:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3607,
													"nodeType": "ArrayTypeName",
													"src": "430:9:19",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "376:81:19"
									},
									"src": "352:106:19"
								},
								{
									"functionSelector": "9f63ea98",
									"id": 3619,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addTrustedIssuer",
									"nameLocation": "473:16:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3613,
												"mutability": "mutable",
												"name": "_trustedIssuer",
												"nameLocation": "512:14:19",
												"nodeType": "VariableDeclaration",
												"scope": 3619,
												"src": "499:27:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$59",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 3612,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3611,
														"name": "IClaimIssuer",
														"nameLocations": [
															"499:12:19"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 59,
														"src": "499:12:19"
													},
													"referencedDeclaration": 59,
													"src": "499:12:19",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$59",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3616,
												"mutability": "mutable",
												"name": "_claimTopics",
												"nameLocation": "555:12:19",
												"nodeType": "VariableDeclaration",
												"scope": 3619,
												"src": "536:31:19",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3614,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "536:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3615,
													"nodeType": "ArrayTypeName",
													"src": "536:9:19",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "489:84:19"
									},
									"returnParameters": {
										"id": 3618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "582:0:19"
									},
									"scope": 3676,
									"src": "464:119:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b93d28eb",
									"id": 3625,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeTrustedIssuer",
									"nameLocation": "598:19:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3622,
												"mutability": "mutable",
												"name": "_trustedIssuer",
												"nameLocation": "631:14:19",
												"nodeType": "VariableDeclaration",
												"scope": 3625,
												"src": "618:27:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$59",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 3621,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3620,
														"name": "IClaimIssuer",
														"nameLocations": [
															"618:12:19"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 59,
														"src": "618:12:19"
													},
													"referencedDeclaration": 59,
													"src": "618:12:19",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$59",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "617:29:19"
									},
									"returnParameters": {
										"id": 3624,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "655:0:19"
									},
									"scope": 3676,
									"src": "589:67:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "04bc7e84",
									"id": 3634,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateIssuerClaimTopics",
									"nameLocation": "671:23:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3628,
												"mutability": "mutable",
												"name": "_trustedIssuer",
												"nameLocation": "717:14:19",
												"nodeType": "VariableDeclaration",
												"scope": 3634,
												"src": "704:27:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$59",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 3627,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3626,
														"name": "IClaimIssuer",
														"nameLocations": [
															"704:12:19"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 59,
														"src": "704:12:19"
													},
													"referencedDeclaration": 59,
													"src": "704:12:19",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$59",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3631,
												"mutability": "mutable",
												"name": "_claimTopics",
												"nameLocation": "760:12:19",
												"nodeType": "VariableDeclaration",
												"scope": 3634,
												"src": "741:31:19",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3629,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "741:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3630,
													"nodeType": "ArrayTypeName",
													"src": "741:9:19",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "694:84:19"
									},
									"returnParameters": {
										"id": 3633,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "787:0:19"
									},
									"scope": 3676,
									"src": "662:126:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d9dd24c5",
									"id": 3641,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTrustedIssuers",
									"nameLocation": "803:17:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3635,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "820:2:19"
									},
									"returnParameters": {
										"id": 3640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3639,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3641,
												"src": "846:21:19",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$59_$dyn_memory_ptr",
													"typeString": "contract IClaimIssuer[]"
												},
												"typeName": {
													"baseType": {
														"id": 3637,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3636,
															"name": "IClaimIssuer",
															"nameLocations": [
																"846:12:19"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 59,
															"src": "846:12:19"
														},
														"referencedDeclaration": 59,
														"src": "846:12:19",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IClaimIssuer_$59",
															"typeString": "contract IClaimIssuer"
														}
													},
													"id": 3638,
													"nodeType": "ArrayTypeName",
													"src": "846:14:19",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_ptr",
														"typeString": "contract IClaimIssuer[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "845:23:19"
									},
									"scope": 3676,
									"src": "794:75:19",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "52c111d1",
									"id": 3650,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTrustedIssuersForClaimTopic",
									"nameLocation": "884:30:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3643,
												"mutability": "mutable",
												"name": "claimTopic",
												"nameLocation": "923:10:19",
												"nodeType": "VariableDeclaration",
												"scope": 3650,
												"src": "915:18:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "914:20:19"
									},
									"returnParameters": {
										"id": 3649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3650,
												"src": "982:21:19",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$59_$dyn_memory_ptr",
													"typeString": "contract IClaimIssuer[]"
												},
												"typeName": {
													"baseType": {
														"id": 3646,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3645,
															"name": "IClaimIssuer",
															"nameLocations": [
																"982:12:19"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 59,
															"src": "982:12:19"
														},
														"referencedDeclaration": 59,
														"src": "982:12:19",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IClaimIssuer_$59",
															"typeString": "contract IClaimIssuer"
														}
													},
													"id": 3647,
													"nodeType": "ArrayTypeName",
													"src": "982:14:19",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_ptr",
														"typeString": "contract IClaimIssuer[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "981:23:19"
									},
									"scope": 3676,
									"src": "875:130:19",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ef2ed1a4",
									"id": 3657,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isTrustedIssuer",
									"nameLocation": "1020:15:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3652,
												"mutability": "mutable",
												"name": "_issuer",
												"nameLocation": "1044:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 3657,
												"src": "1036:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3651,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1036:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1035:17:19"
									},
									"returnParameters": {
										"id": 3656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3655,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3657,
												"src": "1076:4:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3654,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1076:4:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1075:6:19"
									},
									"scope": 3676,
									"src": "1011:71:19",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c28fb278",
									"id": 3666,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTrustedIssuerClaimTopics",
									"nameLocation": "1097:27:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3660,
												"mutability": "mutable",
												"name": "_trustedIssuer",
												"nameLocation": "1138:14:19",
												"nodeType": "VariableDeclaration",
												"scope": 3666,
												"src": "1125:27:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$59",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 3659,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3658,
														"name": "IClaimIssuer",
														"nameLocations": [
															"1125:12:19"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 59,
														"src": "1125:12:19"
													},
													"referencedDeclaration": 59,
													"src": "1125:12:19",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$59",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1124:29:19"
									},
									"returnParameters": {
										"id": 3665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3664,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3666,
												"src": "1201:16:19",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3662,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1201:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3663,
													"nodeType": "ArrayTypeName",
													"src": "1201:9:19",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1200:18:19"
									},
									"scope": 3676,
									"src": "1088:131:19",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "34a89987",
									"id": 3675,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasClaimTopic",
									"nameLocation": "1234:13:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3668,
												"mutability": "mutable",
												"name": "_issuer",
												"nameLocation": "1256:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 3675,
												"src": "1248:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1248:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3670,
												"mutability": "mutable",
												"name": "_claimTopic",
												"nameLocation": "1273:11:19",
												"nodeType": "VariableDeclaration",
												"scope": 3675,
												"src": "1265:19:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1265:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1247:38:19"
									},
									"returnParameters": {
										"id": 3674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3673,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3675,
												"src": "1333:4:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3672,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1333:4:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1332:6:19"
									},
									"scope": 3676,
									"src": "1225:114:19",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3677,
							"src": "131:1210:19",
							"usedErrors": []
						}
					],
					"src": "37:1305:19"
				},
				"id": 19
			},
			"erc3643/registry/storage/IRStorage.sol": {
				"ast": {
					"absolutePath": "erc3643/registry/storage/IRStorage.sol",
					"exportedSymbols": {
						"IClaimIssuer": [
							59
						],
						"IClaimTopicsRegistry": [
							3331
						],
						"IERC734": [
							206
						],
						"IERC735": [
							314
						],
						"IIdentity": [
							323
						],
						"IIdentityRegistryStorage": [
							3586
						],
						"IRStorage": [
							3695
						],
						"ITrustedIssuersRegistry": [
							3676
						]
					},
					"id": 3696,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3678,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:20"
						},
						{
							"absolutePath": "erc3643/registry/interface/IClaimTopicsRegistry.sol",
							"file": "../interface/IClaimTopicsRegistry.sol",
							"id": 3679,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3696,
							"sourceUnit": 3332,
							"src": "62:47:20",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "erc3643/registry/interface/ITrustedIssuersRegistry.sol",
							"file": "../interface/ITrustedIssuersRegistry.sol",
							"id": 3680,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3696,
							"sourceUnit": 3677,
							"src": "110:50:20",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "erc3643/registry/interface/IIdentityRegistryStorage.sol",
							"file": "../interface/IIdentityRegistryStorage.sol",
							"id": 3681,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3696,
							"sourceUnit": 3587,
							"src": "161:51:20",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IRStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3695,
							"linearizedBaseContracts": [
								3695
							],
							"name": "IRStorage",
							"nameLocation": "223:9:20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3684,
									"mutability": "mutable",
									"name": "_tokenTopicsRegistry",
									"nameLocation": "320:20:20",
									"nodeType": "VariableDeclaration",
									"scope": 3695,
									"src": "290:50:20",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IClaimTopicsRegistry_$3331",
										"typeString": "contract IClaimTopicsRegistry"
									},
									"typeName": {
										"id": 3683,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3682,
											"name": "IClaimTopicsRegistry",
											"nameLocations": [
												"290:20:20"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 3331,
											"src": "290:20:20"
										},
										"referencedDeclaration": 3331,
										"src": "290:20:20",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IClaimTopicsRegistry_$3331",
											"typeString": "contract IClaimTopicsRegistry"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 3687,
									"mutability": "mutable",
									"name": "_tokenIssuersRegistry",
									"nameLocation": "434:21:20",
									"nodeType": "VariableDeclaration",
									"scope": 3695,
									"src": "401:54:20",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ITrustedIssuersRegistry_$3676",
										"typeString": "contract ITrustedIssuersRegistry"
									},
									"typeName": {
										"id": 3686,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3685,
											"name": "ITrustedIssuersRegistry",
											"nameLocations": [
												"401:23:20"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 3676,
											"src": "401:23:20"
										},
										"referencedDeclaration": 3676,
										"src": "401:23:20",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ITrustedIssuersRegistry_$3676",
											"typeString": "contract ITrustedIssuersRegistry"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 3690,
									"mutability": "mutable",
									"name": "_tokenIdentityStorage",
									"nameLocation": "551:21:20",
									"nodeType": "VariableDeclaration",
									"scope": 3695,
									"src": "517:55:20",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IIdentityRegistryStorage_$3586",
										"typeString": "contract IIdentityRegistryStorage"
									},
									"typeName": {
										"id": 3689,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3688,
											"name": "IIdentityRegistryStorage",
											"nameLocations": [
												"517:24:20"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 3586,
											"src": "517:24:20"
										},
										"referencedDeclaration": 3586,
										"src": "517:24:20",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IIdentityRegistryStorage_$3586",
											"typeString": "contract IIdentityRegistryStorage"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 3694,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "604:5:20",
									"nodeType": "VariableDeclaration",
									"scope": 3695,
									"src": "584:25:20",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 3691,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "584:7:20",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 3693,
										"length": {
											"hexValue": "3439",
											"id": 3692,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "592:2:20",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "584:11:20",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 3696,
							"src": "214:398:20",
							"usedErrors": []
						}
					],
					"src": "37:576:20"
				},
				"id": 20
			}
		}
	}
}